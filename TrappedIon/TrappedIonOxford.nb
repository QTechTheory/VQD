(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    316200,       6403]
NotebookOptionsPosition[    261696,       5437]
NotebookOutlinePosition[    308269,       6298]
CellTagsIndexPosition[    308226,       6295]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Trapped-Ions Oxford/Hub  virtual device", "Title",
 CellChangeTimes->{{3.866179584565133*^9, 3.866179602585011*^9}, {
  3.866740794334939*^9, 
  3.8667408151039267`*^9}},ExpressionUUID->"a51a1c00-1c1e-4809-99a7-\
9b45151e9214"],

Cell[CellGroupData[{

Cell["VQD setup", "Section",
 CellChangeTimes->{{3.895564711188003*^9, 
  3.895564736046365*^9}},ExpressionUUID->"4b33baa5-b934-4d77-847a-\
55ee63f4b597"],

Cell["Set the main directory as the current directory", "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.8528844215679693`*^9, 3.8528844367050333`*^9}, {3.895561738644601*^9, 
  3.895561955745701*^9}, {3.895565197806723*^9, 3.895565201167206*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"c34d2386-44e3-4d12-8bcd-6e0adf0c59d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.872921462633623*^9, {3.895561958967956*^9, 3.895561969776804*^9}, {
   3.895564630836348*^9, 3.895564635452001*^9}, {3.895565208327444*^9, 
   3.89556521021968*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"4fb6ff86-df9c-4786-aab4-c5b29d03d1f8"],

Cell[TextData[{
 "Load the QuESTLink package",
 StyleBox["\nOne may also use the off-line questlink.m file, change it to the \
location of the local file",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.895555062959041*^9, 3.895555112315363*^9}, {3.8955551881974287`*^9, 
  3.895555260300796*^9}, {3.895555597085835*^9, 3.895555664673655*^9}, {
  3.895560998697385*^9, 3.895561075198522*^9}, {3.8955620885151787`*^9, 
  3.895562088990657*^9}, {3.8955621274003143`*^9, 3.8955621439683104`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"c91ba40d-3b6c-42cd-bdae-10c38124ceab"],

Cell[BoxData[
 RowBox[{"Import", "[", "\"\<https://qtechtheory.org/questlink.m\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.82497505062926*^9, 3.8249750506297073`*^9}, 
   3.824994043627574*^9, 3.825001607792643*^9, {3.825001692867886*^9, 
   3.825001693910748*^9}, 3.825005541672139*^9, {3.8257703632332573`*^9, 
   3.8257703928999557`*^9}, {3.8257705549908867`*^9, 
   3.8257705572226887`*^9}, {3.827395402084569*^9, 3.827395414565299*^9}, 
   3.8273959879208593`*^9, {3.8273960394479303`*^9, 3.8273960853619223`*^9}, {
   3.8273961168062162`*^9, 3.827396123715522*^9}, {3.827396318549856*^9, 
   3.827396412632536*^9}, {3.8274045827011538`*^9, 3.82740458379325*^9}, {
   3.8278173564819393`*^9, 3.827817361228321*^9}, {3.830976734134877*^9, 
   3.8309767494625072`*^9}, {3.834480282684927*^9, 3.834480283538302*^9}, {
   3.834480426528635*^9, 3.834480438344689*^9}, {3.840643429673587*^9, 
   3.84064343214264*^9}, {3.840644090065632*^9, 3.840644110294639*^9}, {
   3.841376639126837*^9, 3.841376652890356*^9}, {3.852805051225027*^9, 
   3.852805051940732*^9}, 3.852866941489101*^9, 3.863433244574464*^9, {
   3.863444417946168*^9, 3.8634444207524557`*^9}, {3.863758485466724*^9, 
   3.8637585009226294`*^9}, {3.863763334072833*^9, 3.8637633356047773`*^9}, {
   3.875107822325452*^9, 3.8751078327815647`*^9}, {3.8833829933758574`*^9, 
   3.883382993547421*^9}, {3.8955550552579536`*^9, 3.8955550607116213`*^9}, {
   3.895555251924384*^9, 3.895555252843107*^9}, 3.895560933223365*^9, {
   3.895562150271586*^9, 3.895562151551223*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"df0ec05c-7c65-422e-9507-d63ba1cb5d39"],

Cell[TextData[{
 "This will download a binary file  ",
 StyleBox["quest_link ",
  FontWeight->"Bold"],
 "from the repo; some error will show if the system tries to override the \
file\n\nUse ",
 StyleBox["CreateLocalQuESTEnv[quest_link_file] ",
  FontWeight->"Bold"],
 "to use the existing binary"
}], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.895555062959041*^9, 3.895555112315363*^9}, {3.8955551881974287`*^9, 
  3.895555260300796*^9}, {3.895555597085835*^9, 3.895555664673655*^9}, {
  3.895560998697385*^9, 3.895561075198522*^9}, {3.895562094495385*^9, 
  3.895562099994422*^9}, {3.8955621743068743`*^9, 3.89556218382623*^9}, {
  3.895562229085458*^9, 3.895562229999806*^9}, {3.8955623057350197`*^9, 
  3.895562353406741*^9}, {3.8955652259848747`*^9, 3.8955652439751587`*^9}, {
  3.897374998974423*^9, 3.897375104232131*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"3be974ff-97ec-439c-88c3-d918af5f3738"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateDownloadedQuESTEnv", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.895562380629335*^9, 3.8955623806299543`*^9}, {
  3.8955642461170387`*^9, 3.895564576316752*^9}, {3.8955654013994617`*^9, 
  3.8955654071519136`*^9}, {3.8955668835199842`*^9, 3.895566963802331*^9}, {
  3.895567025375177*^9, 3.895567027172988*^9}, {3.897374936726169*^9, 
  3.8973749435219097`*^9}, {3.897374996068986*^9, 3.8973749967993937`*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"a336264b-c730-4bb1-9161-b5ea1fbe3880"],

Cell[TextData[{
 "Load the ",
 StyleBox["VQD",
  FontWeight->"Bold"],
 " package; must be loaded after QuESTlink is loaded"
}], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.8406416900502462`*^9, 3.840641698118609*^9}, {3.840641813367085*^9, 
  3.840641822804656*^9}, {3.853839759327433*^9, 3.853839762140107*^9}, {
  3.86344845184791*^9, 3.863448455324099*^9}, {3.8637680860803547`*^9, 
  3.863768086918572*^9}, {3.895562384490183*^9, 3.895562387907646*^9}, {
  3.895562552053419*^9, 3.8955625677886047`*^9}, {3.895565295097423*^9, 
  3.895565315981283*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"5f37c9ba-3582-4916-b8a6-b00b0ad21432"],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../vqd.wl\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.840641143565943*^9, 3.840641172251192*^9}, {
   3.852799583306651*^9, 3.85279959973236*^9}, 3.8626416092550993`*^9, {
   3.8634335183180933`*^9, 3.863433525482596*^9}, {3.863433568660131*^9, 
   3.863433569874107*^9}, {3.863433692497489*^9, 3.863433694465293*^9}, {
   3.863445057138888*^9, 3.86344507880478*^9}, {3.863445347209435*^9, 
   3.8634453507921267`*^9}, {3.863445650432852*^9, 3.863445652815689*^9}, {
   3.863445897019453*^9, 3.8634458974688377`*^9}, {3.86344607759472*^9, 
   3.863446078099331*^9}, {3.863446143635272*^9, 3.863446143966124*^9}, {
   3.863446177367778*^9, 3.86344617796842*^9}, {3.8634467623389387`*^9, 
   3.863446816486045*^9}, {3.863446923713131*^9, 3.863446924990855*^9}, {
   3.863447604132453*^9, 3.8634476320572042`*^9}, {3.863448157317191*^9, 
   3.863448185412036*^9}, {3.86344848550739*^9, 3.863448486307929*^9}, {
   3.863730635263914*^9, 3.863730645543404*^9}, {3.863730806825498*^9, 
   3.863730825085904*^9}, {3.864798306500605*^9, 3.864798308030095*^9}, {
   3.864808339041327*^9, 3.864808339281568*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"fbda1cba-5510-430b-ae7f-72219c40e12c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set the default configuration of the virtual ion traps", "Section",
 CellChangeTimes->{{3.8955646672228727`*^9, 3.8955647020722857`*^9}, {
  3.895565504944984*^9, 
  3.895565506547858*^9}},ExpressionUUID->"6507264a-34a1-4c23-92d3-\
885063f7d4ab"],

Cell[TextData[{
 StyleBox["frequency unit: ",
  FontSlant->"Italic"],
 StyleBox["M",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["Hz",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["\ntime unit:",
  FontSlant->"Italic"],
 StyleBox[" \[Mu]s",
  FontWeight->"Bold",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
   3.8406416900502462`*^9, 3.840641698118609*^9}, {3.840641813367085*^9, 
   3.840641822804656*^9}, {3.853839759327433*^9, 3.853839762140107*^9}, {
   3.86344845184791*^9, 3.863448455324099*^9}, {3.8637680860803547`*^9, 
   3.863768086918572*^9}, {3.884321633494584*^9, 3.8843216654912567`*^9}, 
   3.8843217068262587`*^9, {3.884322736344953*^9, 3.884322736949984*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"01bbf5b7-efb5-4735-b44c-900b069c1b48"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TrappedIonOxford", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "the", " ", "name", " ", "of", " ", "trap", " ", "nodes", " ", "name", 
      " ", "together", " ", "and", " ", "the", " ", "number", " ", "of", " ", 
      "ions", " ", "on", " ", "each", " ", "node"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Nodes", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "4"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "4"}]}], "|>"}]}], "\[IndentingNewLine]",
      ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"the", " ", "T1", " ", "time"}], ",", " ", 
       RowBox[{"exponential", " ", "decay"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"T1", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         RowBox[{"3", "*", 
          SuperscriptBox["10", "9"]}]}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"3", "*", 
          SuperscriptBox["10", "9"]}]}]}], "    ", "|>"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"the", " ", "T2", "*", " ", "time"}], ",", " ", 
       RowBox[{"Gaussian", " ", "decay"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"T2s", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         SuperscriptBox["10", "5"]}], ",", "  ", 
        RowBox[{"\"\<Bob\>\"", "->", 
         SuperscriptBox["10", "5"]}]}], "   ", "|>"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Duration", " ", "for", " ", "moving", " ", 
        RowBox[{"operations", ":", " ", "Split"}]}], ",", " ", "Combine", ",",
        " ", 
       RowBox[{"and", " ", "physical", " ", "swap"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"DurMove", "->", "\[IndentingNewLine]", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", " ", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"Shutl", "->", "25"}], ",", " ", 
           RowBox[{"Splz", "->", "50"}], ",", " ", 
           RowBox[{"Comb", "->", "50"}], ",", " ", 
           RowBox[{"SWAPLoc", "->", "10"}]}], " ", "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"Shutl", "->", "25"}], ",", " ", 
           RowBox[{"Splz", "->", "50"}], ",", " ", 
           RowBox[{"Comb", "->", "50"}], ",", " ", 
           RowBox[{"SWAPLoc", "->", "10"}]}], " ", "|>"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "fidelity", " ", "and", " ", "duration", " ", "of", " ", 
        "initialisation", " ", "on", " ", "each", " ", "qubit"}], ";", " ", 
       RowBox[{
       "the", " ", "initialisation", " ", "is", " ", "done", " ", 
        "simultaneously", " ", "on", " ", "all", " ", "ions"}]}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"FidInit", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.9999"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.9998"}]}], "|>"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"DurInit", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "20"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "20"}]}], "|>"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"readout", " ", "duration"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"DurRead", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "50"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "50"}]}], "|>"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Symmetric", " ", "bit"}], "-", 
       RowBox[{"flip", " ", "eror", " ", "during", " ", "readout"}]}], "  ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ProbBFRead", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}]}], "|>"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"Fidelity", " ", "of", " ", "single", " ", "x"}], "-", " ", 
        RowBox[{"and", " ", "y"}], "-", " ", "rotations"}], ";", " ", 
       RowBox[{"z", "-", 
        RowBox[{"rotation", " ", "is", " ", "instaneous", " ", 
         RowBox[{"(", 
          RowBox[{"noiseless", ",", " ", "virtual"}], ")"}]}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"FidSingleXY", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.99999"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.99999"}]}], "|>"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"fraction", " ", "of", " ", 
       RowBox[{"depolarising", ":", 
        RowBox[{
         RowBox[{"dephasing", " ", "noise", " ", "of", " ", "the", " ", "x"}],
          "-", " ", 
         RowBox[{"and", " ", "y"}], "-", " ", "rotations"}]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"EFSingleXY", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}]}], "|>"}]}], "\[IndentingNewLine]",
      ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Rabi", " ", "frequency", " ", "on", " ", "single", " ", "rotations"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"RabiFreq", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "10"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "10"}]}], " ", "|>"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Frequency", " ", "of", " ", "CZ", " ", "operation"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FreqCZ", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.1"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "0.1"}]}], "|>"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Fidelity", " ", "of", " ", "CZ", " ", "operation"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FidCZ", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.999"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.999"}]}], "|>"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"fraction", " ", "of", " ", "two"}], "-", 
       RowBox[{"qubit", " ", 
        RowBox[{"depolarising", ":", 
         RowBox[{
         "dephasing", " ", "error", " ", "after", " ", "entanglement", " ", 
          "distillation"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"EFCZ", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "0.9"}], "}"}]}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "|>"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "rate", " ", "of", " ", "heralded", " ", "remote", " ", "entanglement", 
       " ", "generation"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FreqEnt", "->", "0.1"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "fidelity", " ", "of", " ", "the", " ", "raw", " ", "bell", " ", 
       "pair"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FidEnt", "->", "0.95"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "fraction", " ", "of", " ", "noise", " ", "on", " ", "the", " ", 
        "obtained", " ", "raw", " ", "bell", " ", "pair"}], ",", " ", 
       RowBox[{"2", "-", 
        RowBox[{"qubit", " ", 
         RowBox[{"depolarising", ":", "dephasing"}]}]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"EFEnt", "->", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.9"}], "}"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Switch", " ", 
       RowBox[{"on", "/", "off"}], " ", "the", " ", "standard", " ", 
       "passive", " ", 
       RowBox[{"noise", ":", " ", 
        RowBox[{"decays", " ", "T1", " ", "and", " ", "T2", "*"}]}]}], "  ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"StdPassiveNoise", "->", "True"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866741525798813*^9, 3.8667415268823643`*^9}, {
   3.866741663432423*^9, 3.866741665522397*^9}, {3.866741745552545*^9, 
   3.86674175266329*^9}, {3.8667951940122232`*^9, 3.866795264671464*^9}, {
   3.86679558066088*^9, 3.866795620210507*^9}, {3.866795751852192*^9, 
   3.866795773983354*^9}, {3.866795889141552*^9, 3.866795931399184*^9}, 
   3.8667960054150743`*^9, {3.866796238217458*^9, 3.866796387720312*^9}, {
   3.866797546811494*^9, 3.8667975863855867`*^9}, {3.866797868437003*^9, 
   3.866797925147974*^9}, {3.866804302073353*^9, 3.8668043033454514`*^9}, {
   3.8668049823176613`*^9, 3.866804997766453*^9}, {3.8668054954071693`*^9, 
   3.866805501412159*^9}, {3.8672267922453127`*^9, 3.867226826078993*^9}, {
   3.86722755102808*^9, 3.867227619738082*^9}, {3.8672276764652348`*^9, 
   3.8672277171831093`*^9}, {3.8672278717818413`*^9, 3.867227877110051*^9}, {
   3.867228493899407*^9, 3.8672285328403187`*^9}, {3.867229396481929*^9, 
   3.8672293983037024`*^9}, 3.867235278678097*^9, {3.867235796126501*^9, 
   3.867235845448059*^9}, {3.867237137950498*^9, 3.8672371695811872`*^9}, {
   3.8672372036357193`*^9, 3.8672372235594378`*^9}, {3.867237623562272*^9, 
   3.867237643629908*^9}, {3.867237899531828*^9, 3.8672379111048193`*^9}, {
   3.8672385761871433`*^9, 3.867238580773076*^9}, {3.869213991025598*^9, 
   3.86921401005344*^9}, 3.869214111626649*^9, {3.86921415472738*^9, 
   3.869214186857623*^9}, {3.869214724170225*^9, 3.869214766542733*^9}, {
   3.869214798607539*^9, 3.8692147991185513`*^9}, {3.869214956910564*^9, 
   3.869215003816546*^9}, {3.869215064473733*^9, 3.869215079623447*^9}, {
   3.869215257338026*^9, 3.8692153217380466`*^9}, {3.869215369674582*^9, 
   3.8692153707769003`*^9}, {3.869218551089553*^9, 3.869218554105139*^9}, {
   3.873536137487809*^9, 3.873536157113378*^9}, {3.8737218269830513`*^9, 
   3.8737218942167397`*^9}, {3.873722023539997*^9, 3.873722078245874*^9}, {
   3.873722151005465*^9, 3.873722184832581*^9}, {3.873722262394095*^9, 
   3.873722299789385*^9}, {3.873727405456362*^9, 3.873727407667687*^9}, {
   3.873795067207028*^9, 3.873795083012207*^9}, 3.873801728693125*^9, {
   3.873803376445282*^9, 3.873803605099039*^9}, {3.873803936299101*^9, 
   3.873803985392705*^9}, {3.8738054296210938`*^9, 3.873805434739148*^9}, {
   3.8738081749509373`*^9, 3.873808189643832*^9}, {3.873808260543518*^9, 
   3.873808299197383*^9}, {3.8738086232761803`*^9, 3.8738086258360643`*^9}, {
   3.873809740474554*^9, 3.873809746170124*^9}, {3.873827989551094*^9, 
   3.873828046626005*^9}, {3.8738280918401623`*^9, 3.873828092823846*^9}, {
   3.873828868270315*^9, 3.873828878840913*^9}, {3.8738743930632133`*^9, 
   3.873874395974115*^9}, {3.8738744915832233`*^9, 3.873874499108654*^9}, {
   3.8738745608100157`*^9, 3.87387456531114*^9}, {3.873875747308943*^9, 
   3.873875786891082*^9}, {3.8738758454165497`*^9, 3.873875870793645*^9}, {
   3.873875905255966*^9, 3.873875913996315*^9}, {3.873875969049201*^9, 
   3.873875986036682*^9}, {3.873876056189313*^9, 3.873876103462187*^9}, {
   3.8738761385663*^9, 3.8738761771993837`*^9}, {3.873876472224475*^9, 
   3.873876487654408*^9}, {3.873883365596745*^9, 3.873883367431622*^9}, {
   3.873883431528206*^9, 3.873883433521964*^9}, {3.873883474136989*^9, 
   3.873883478808856*^9}, {3.8756901249387693`*^9, 3.8756901563944197`*^9}, {
   3.8756912977568398`*^9, 3.87569130899468*^9}, {3.875695695076517*^9, 
   3.8756957807834473`*^9}, {3.875697315448535*^9, 3.875697317226529*^9}, {
   3.8756990026610813`*^9, 3.875699006062674*^9}, {3.875783909784436*^9, 
   3.875783932509903*^9}, {3.8757839702434196`*^9, 3.875783991926955*^9}, {
   3.87578436190112*^9, 3.875784380902054*^9}, {3.87578443900996*^9, 
   3.8757844773945208`*^9}, {3.875784937308525*^9, 3.8757849415846767`*^9}, {
   3.875784987199074*^9, 3.875784988288704*^9}, {3.875810550708597*^9, 
   3.875810552776515*^9}, {3.8758197920102873`*^9, 3.875819792412874*^9}, 
   3.875821671365123*^9, {3.8762074814071903`*^9, 3.876207483622019*^9}, {
   3.876207525319086*^9, 3.876207527076189*^9}, {3.8769095900478888`*^9, 
   3.8769095943411417`*^9}, {3.876909653906137*^9, 3.876909655907584*^9}, {
   3.880187546317218*^9, 3.880187569387553*^9}, {3.8836353092981243`*^9, 
   3.883635318989584*^9}, {3.883643515674913*^9, 3.88364353193294*^9}, {
   3.883643742881509*^9, 3.883643762183663*^9}, {3.8836438359438868`*^9, 
   3.8836438363100348`*^9}, {3.883643883398198*^9, 3.8836438956169167`*^9}, {
   3.883644265128314*^9, 3.8836442664241734`*^9}, 3.883644561668241*^9, {
   3.88364577387563*^9, 3.883645779511386*^9}, {3.883648458100438*^9, 
   3.883648463754395*^9}, {3.883649022834107*^9, 3.883649025912264*^9}, {
   3.883649138391301*^9, 3.883649204038764*^9}, {3.883649241829829*^9, 
   3.883649244178939*^9}, {3.883649357764249*^9, 3.883649367223763*^9}, {
   3.883649516843505*^9, 3.8836495191985207`*^9}, {3.883649559382502*^9, 
   3.883649602092461*^9}, {3.883649647615107*^9, 3.8836496615221777`*^9}, {
   3.883734777484333*^9, 3.883734777735754*^9}, {3.884014878594007*^9, 
   3.884014925781691*^9}, {3.884023823178306*^9, 3.8840238256397867`*^9}, {
   3.884024774332857*^9, 3.8840247859359217`*^9}, {3.8840257321870203`*^9, 
   3.8840257357595453`*^9}, {3.8842513640567408`*^9, 
   3.8842513854108763`*^9}, {3.8948809172360353`*^9, 3.894880918645903*^9}, {
   3.8949635289967737`*^9, 3.894963532926544*^9}, 3.894965641175787*^9, {
   3.8949658885414343`*^9, 3.894965889040092*^9}, {3.894965972874528*^9, 
   3.89496597469978*^9}, {3.895562584140646*^9, 3.895562775204207*^9}, {
   3.895562845019167*^9, 3.895562966077805*^9}, {3.895563047110268*^9, 
   3.895563088523695*^9}, {3.895563120639615*^9, 3.895563249727819*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"786b6905-0c83-4785-9309-62848193302e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elementary guide", "Section",
 CellChangeTimes->{{3.8955656603988857`*^9, 
  3.895565664855155*^9}},ExpressionUUID->"ee76f947-9d17-462b-a234-\
af4aca63054c"],

Cell[CellGroupData[{

Cell["Native gates", "Subsection",
 CellChangeTimes->{{3.895565668363599*^9, 
  3.895565672293972*^9}},ExpressionUUID->"bcac4c86-b1e1-4542-b4fc-\
7ae6239c3320"],

Cell[TextData[{
 StyleBox["Operators ",
  FontWeight->"Bold"],
 "\n",
 StyleBox["Initialisation and readout\n",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["Init", 
    RowBox[{"1", ",", "2", ",", "...", ",", "n"}]], TraditionalForm]],
  ExpressionUUID->"1d09064b-73a1-41da-b8f5-29bfdc8451dd"],
 "[node],  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Read", "q"], "[", "node", "]"}], TraditionalForm]],
  ExpressionUUID->"26a73222-1524-41dc-ae57-279f1797effa"],
 "\n\n",
 StyleBox["Single-qubit gates",
  FontSlant->"Italic"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Rx", "q"], "[", 
    RowBox[{"node", ",", "\[Theta]"}], "]"}], TraditionalForm]],
  ExpressionUUID->"1db64c5f-090c-48ec-a6e8-d4fa995044d0"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Ry", "q"], "[", 
    RowBox[{"node", ",", "\[Theta]"}], "]"}], TraditionalForm]],
  ExpressionUUID->"acad095c-9f40-4645-a4c4-5c00814aad30"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Rz", "q"], "[", 
    RowBox[{"node", ",", "\[Theta]"}], "]"}], TraditionalForm]],
  ExpressionUUID->"00f4c98c-9aee-4aee-be37-2c4fcc2ccbc9"],
 " \n\n",
 StyleBox["Two-qubit gates",
  FontSlant->"Italic"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["CZ", 
     RowBox[{"q1", ",", "q2"}]], "[", "node", "]"}], TraditionalForm]],
  ExpressionUUID->"300da055-2d4d-425a-9aa0-e20ad156cc5a"],
 "\n\n",
 StyleBox["Remote gates (create a remote Bell-pair)",
  FontSlant->"Italic"],
 "\nEnt[node1, node2]\n\n",
 StyleBox["Physical moves/shuttling",
  FontSlant->"Italic"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["SWAPLoc", 
     RowBox[{"q1", ",", "q2"}]], "[", "node", "]"}], TraditionalForm]],
  ExpressionUUID->"11ee6e8b-13b7-4f51-9da4-7f708fdd49d5"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Splz", 
     RowBox[{"q1", ",", "q2"}]], "[", 
    RowBox[{"node", ",", "zone_destination"}], "]"}], TraditionalForm]],
  ExpressionUUID->"e63a851d-9931-4bb8-9b61-8a9a985167ab"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["Comb", 
      RowBox[{"q1", ",", "q2"}]], "[", "node", "]"}], ","}], 
   TraditionalForm]],ExpressionUUID->"9d8ce3a4-b2bf-411d-8598-bf8974d855d7"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Comb", 
     RowBox[{"q1", ",", "q2"}]], "[", 
    RowBox[{"node", ",", "zone_destination"}], "]"}], TraditionalForm]],
  ExpressionUUID->"0d25bf03-7554-403e-9c84-b08d8ede164b"],
 "\n\n",
 StyleBox["others: doing nothing\n",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["Wait", "q"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6012f22d-795c-4751-a607-11111760e16d"],
 "[duration]\n\n",
 StyleBox["Zone and allowed operations",
  FontWeight->"Bold"],
 "\n",
 StyleBox["Zone 1",
  FontWeight->"Bold"],
 " : Shutl, Init, Read, Splz, Comb, SWAPLoc\n",
 StyleBox["Zone 2",
  FontWeight->"Bold"],
 " : Shutl, Init, Read, Splz, Comb, SWAPLoc, Rx, Ry, Rz, CZ\n",
 StyleBox["Zone 3",
  FontWeight->"Bold"],
 " : Shutl, Init, Read, Splz, Comb, SWAPLoc, Rx, Ry, Rz, CZ\n",
 StyleBox["Zone 4",
  FontWeight->"Bold"],
 " : Shutl, Ent"
}], "Text",
 CellChangeTimes->{{3.8692122673836203`*^9, 3.869212288716358*^9}, {
   3.8732900821348667`*^9, 3.8732900892281*^9}, {3.873535234627952*^9, 
   3.8735352993376503`*^9}, 3.8735355903892736`*^9, {3.873535838903427*^9, 
   3.873535867433639*^9}, {3.873535943640603*^9, 3.873536051939383*^9}, {
   3.8737213853909492`*^9, 3.873721409511063*^9}, {3.873721675411847*^9, 
   3.87372167652286*^9}, {3.873721784879632*^9, 3.8737218004244747`*^9}, {
   3.873886462615952*^9, 3.8738864754993267`*^9}, {3.8835477479780693`*^9, 
   3.883547778908753*^9}, 3.883558706803985*^9, 3.883733935859179*^9, {
   3.895561124018421*^9, 3.8955612424709682`*^9}, {3.895561370610491*^9, 
   3.895561375643483*^9}, {3.895565715481627*^9, 3.895565773718214*^9}, {
   3.895566093199087*^9, 3.8955661878383408`*^9}, {3.895566337576305*^9, 
   3.895566360670906*^9}, {3.895566426697022*^9, 
   3.895566492900166*^9}},ExpressionUUID->"5f86b73e-5906-4bd6-a372-\
9b5e7579b57a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic operations to create remote entangled pair", "Subsection",
 CellChangeTimes->{{3.895561275579878*^9, 3.895561300230424*^9}, {
  3.895565637708406*^9, 
  3.895565641311281*^9}},ExpressionUUID->"df7f5adc-fabd-4e2d-8267-\
3eddc4da25ee"],

Cell[CellGroupData[{

Cell["Convenient modules", "Subsubsection",
 CellChangeTimes->{{3.895561306367607*^9, 
  3.895561309244854*^9}},ExpressionUUID->"cceafc11-93f6-4531-b5ac-\
663f410eb088"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Transformation", " ", "to", " ", "the", " ", "Bell", " ", "basis", " ", 
    "for", " ", "plotting"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"mat2BellBasis", "[", "m_", "]"}], ":=", 
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", 
           RowBox[{"\[Sqrt]", "2"}]}], ")"}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], "}"}]}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"pinv", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", 
           RowBox[{"\[Sqrt]", "2"}]}], ")"}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]}], "}"}]}]}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"pinv", ".", "m", ".", "p"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8768885261541557`*^9, 3.8768885341943502`*^9}, {
  3.876888628227262*^9, 3.876888662182872*^9}, {3.8768886950472527`*^9, 
  3.8768886965816507`*^9}, {3.876889328642879*^9, 3.876889345422171*^9}, {
  3.876889439950932*^9, 3.8768895176394978`*^9}, {3.8837370150048923`*^9, 
  3.883737020901533*^9}, {3.8837394106095457`*^9, 3.883739491942389*^9}, {
  3.884085051725586*^9, 3.8840850592290993`*^9}, {3.895561323535149*^9, 
  3.8955613299464197`*^9}, {3.895566206407439*^9, 3.89556620712302*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"03e5b243-f124-4461-8871-1233f93d5b42"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "options"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"chartbell", "[", 
      RowBox[{"label_", ":", "\"\<\>\""}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
       RowBox[{"BarSpacing", "\[Rule]", "0.1`"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "height", "}"}], ",", 
          RowBox[{"getcolor", "[", "height", "]"}]}], "]"}]}], ",", 
       RowBox[{"ChartElementFunction", "->", "\"\<Cube\>\""}], ",", 
       RowBox[{"ChartStyle", "->", 
        RowBox[{"EdgeForm", "[", "Thick", "]"}]}], ",", 
       RowBox[{"PlotTheme", "->", "\"\<Business\>\""}], ",", 
       RowBox[{"Ticks", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "\"\<\[CapitalPhi]+\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "\"\<\[CapitalPhi]-\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "\"\<\[CapitalPsi]+\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "\"\<\[CapitalPsi]-\>\""}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "\"\<\[CapitalPhi]+\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "\"\<\[CapitalPhi]-\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "\"\<\[CapitalPsi]+\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "\"\<\[CapitalPsi]-\>\""}], "}"}]}], "}"}], 
          ",", "Automatic"}], "}"}]}], ",", 
       RowBox[{"TicksStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", "14", ",", 
          RowBox[{"FontFamily", "->", "\"\<FreeSerif\>\""}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Epilog", "->", 
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"label", ",", "16", ",", "Bold", ",", 
            RowBox[{"FontFamily", "->", "\"\<Serif\>\""}]}], "]"}], ",", 
          RowBox[{"ImageScaled", "[", 
           RowBox[{"{", 
            RowBox[{".3", ",", ".9"}], "}"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "4.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "4.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LabelingFunction", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"Rotate", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Which", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"#", ">=", "0.5"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"NumberForm", "[", 
                   RowBox[{"#", ",", "5"}], "]"}], ",", "13", ",", 
                  RowBox[{"GrayLevel", "[", "0.82", "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"#", ">=", "0.001"}], ")"}], "&&", 
                 RowBox[{"(", 
                  RowBox[{"#", "<", "0.5"}], ")"}]}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"NumberForm", "[", 
                   RowBox[{"#", ",", "2"}], "]"}], ",", "10", ",", "Black"}], 
                 "]"}], ",", "\[IndentingNewLine]", "True", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"ScientificForm", "[", 
                   RowBox[{"#", ",", "2"}], "]"}], ",", "10", ",", "Black"}], 
                 "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]",
               ",", 
              RowBox[{"90", " ", "Degree"}]}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#1", ">=", "0.5"}], ",", "Center", ",", "Above"}], 
             "]"}]}], "]"}], "&"}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ViewAngle", "->", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FaceGrids", "->", "None"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0.6"}], "}"}]}], ",", 
       RowBox[{"Axes", "->", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "False"}], "}"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getcolor", "[", "height_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"height", "<=", "0.5"}], ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<IslandColors\>\"", "]"}], "[", 
        RowBox[{"1", "+", 
         RowBox[{"0.1", 
          RowBox[{"Log10", "@", "height"}]}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<RedBlueTones\>\"", "]"}], "[", 
        "height", "]"}]}], "]"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.876979560148282*^9, 3.876979727614102*^9}, {
   3.8769798068659153`*^9, 3.876979817516808*^9}, {3.8769798483459187`*^9, 
   3.876979861337391*^9}, {3.8769799765825357`*^9, 3.876980001171527*^9}, {
   3.876980035011529*^9, 3.8769802117504387`*^9}, {3.8769803173959923`*^9, 
   3.876980318549447*^9}, 3.876980354229821*^9, {3.876980392044441*^9, 
   3.876980392983427*^9}, {3.876981492300438*^9, 3.8769815209319773`*^9}, {
   3.876981553843145*^9, 3.876981555267664*^9}, {3.876981589466167*^9, 
   3.876981605261683*^9}, {3.87698199053374*^9, 3.876982108670127*^9}, {
   3.876982149405799*^9, 3.8769821943371058`*^9}, {3.876982227121867*^9, 
   3.876982324306407*^9}, {3.8769824123752327`*^9, 3.876982421030588*^9}, {
   3.876982642167547*^9, 3.876982898600312*^9}, {3.876983161410459*^9, 
   3.8769831871263247`*^9}, {3.8769832308550367`*^9, 3.876983244353763*^9}, {
   3.87698350263104*^9, 3.876983505027169*^9}, {3.876985229541142*^9, 
   3.8769852804139957`*^9}, {3.876985347020067*^9, 3.876985380525435*^9}, {
   3.876985422745286*^9, 3.8769854332777233`*^9}, {3.876986579906888*^9, 
   3.876986638004673*^9}, {3.876990648931119*^9, 3.876990658587611*^9}, {
   3.876990710602832*^9, 3.8769910973573303`*^9}, {3.876991147003462*^9, 
   3.8769911477804117`*^9}, {3.876991204480769*^9, 3.876991221131629*^9}, {
   3.8769912522462606`*^9, 3.876991253022316*^9}, {3.876991298027089*^9, 
   3.876991343572694*^9}, {3.876991388601252*^9, 3.8769913904147463`*^9}, 
   3.876991424523377*^9, {3.876991493567006*^9, 3.876991496836388*^9}, {
   3.876991650148239*^9, 3.876991701376438*^9}, {3.8769917788643723`*^9, 
   3.876991826752802*^9}, {3.876991868817513*^9, 3.8769918720622997`*^9}, {
   3.87699190455686*^9, 3.876991975185678*^9}, {3.8769920070529423`*^9, 
   3.876992034767621*^9}, {3.8769920756831627`*^9, 3.876992237092181*^9}, {
   3.876992326800829*^9, 3.876992362209342*^9}, {3.876992426570319*^9, 
   3.8769926748499603`*^9}, 3.876992708671*^9, {3.8769929596081667`*^9, 
   3.8769930276467123`*^9}, {3.8769931279324903`*^9, 3.876993148431003*^9}, {
   3.876993198352371*^9, 3.876993198911695*^9}, 3.876993321541947*^9, 
   3.8769933796337833`*^9, {3.8769934313006077`*^9, 3.876993431760426*^9}, {
   3.8769935025002604`*^9, 3.876993523725471*^9}, {3.876993583904016*^9, 
   3.876993660896109*^9}, {3.876993716002076*^9, 3.876993716091022*^9}, {
   3.876999921051279*^9, 3.8769999835741653`*^9}, {3.877000135451353*^9, 
   3.8770001367177134`*^9}, {3.8770002434122553`*^9, 
   3.8770002789390078`*^9}, {3.87700037136974*^9, 3.877000392989847*^9}, {
   3.877000520125592*^9, 3.877000536276731*^9}, {3.8770007286724777`*^9, 
   3.877000902662283*^9}, {3.8770009398885813`*^9, 3.87700094028021*^9}, {
   3.877000975545061*^9, 3.8770009875300007`*^9}, {3.877001018450697*^9, 
   3.877001139307369*^9}, {3.877001265602689*^9, 3.877001397036653*^9}, {
   3.87700145352922*^9, 3.877001480443802*^9}, {3.8770021755486383`*^9, 
   3.877002246436224*^9}, {3.877002322475328*^9, 3.8770023317738867`*^9}, {
   3.87700238386043*^9, 3.8770025975733347`*^9}, {3.877002651321547*^9, 
   3.877002651531856*^9}, {3.877002726050808*^9, 3.877002830436611*^9}, {
   3.877002961346847*^9, 3.877002963693899*^9}, {3.877003051266088*^9, 
   3.877003051639925*^9}, {3.877003308813829*^9, 3.87700330913456*^9}, {
   3.882433582294565*^9, 3.882433589058144*^9}, {3.8836354787933197`*^9, 
   3.883635539718422*^9}, {3.883635576179627*^9, 3.883635657808833*^9}, 
   3.883635701936564*^9, {3.883635741051195*^9, 3.8836357744559383`*^9}, {
   3.8836358470634327`*^9, 3.883636136997737*^9}, {3.8836362825177107`*^9, 
   3.8836362893571157`*^9}, {3.8836363247713327`*^9, 3.883636365011752*^9}, 
   3.883636396527158*^9, {3.883838507783781*^9, 3.8838385079349413`*^9}, {
   3.883838539725791*^9, 3.883838540524043*^9}, {3.88407260099117*^9, 
   3.8840726466794443`*^9}, 3.884072704849024*^9, {3.884072789009433*^9, 
   3.8840727894958887`*^9}, {3.8840733379600267`*^9, 
   3.8840733397226067`*^9}, {3.8840945978286037`*^9, 3.884094601267701*^9}, {
   3.8840946380775146`*^9, 3.884094641620801*^9}, {3.884094674859715*^9, 
   3.884094685118129*^9}, {3.884094718577693*^9, 3.8840947242847433`*^9}, {
   3.884094776267663*^9, 3.884094833483856*^9}, {3.884097065117519*^9, 
   3.884097065357122*^9}, {3.884261031209105*^9, 3.884261031486607*^9}, {
   3.884261739601471*^9, 3.884261739834772*^9}, {3.8842617878574038`*^9, 
   3.884261787987755*^9}, {3.8842623141704483`*^9, 3.8842623155317173`*^9}, {
   3.884262358366569*^9, 3.884262369452229*^9}, {3.884262494118169*^9, 
   3.884262497539809*^9}, {3.88426264526369*^9, 3.884262648529092*^9}, {
   3.884263294954376*^9, 3.884263569533229*^9}, {3.89555595322753*^9, 
   3.895555963350122*^9}, {3.895561317204116*^9, 3.8955613354508266`*^9}, {
   3.8955662087409487`*^9, 3.8955662127611113`*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"f60c26c3-9869-49be-9a0e-e82ee5d8c8a5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ion shuttling, visualising ions", "Subsection",
 CellChangeTimes->{{3.8955613480609083`*^9, 3.8955613563133*^9}, {
  3.8973782961550007`*^9, 3.897378297878878*^9}, {3.8973783316422863`*^9, 
  3.8973783403307*^9}},ExpressionUUID->"0d09c75c-4336-4627-9372-bcfc748516ee"],

Cell[TextData[{
 "Shuttle the ions around and perform an entanglement : initial and final \
configuration is shown.\n\nThis will show the total scheduling, noise \
operation, and the final form in the simulation.\nSet the",
 StyleBox[" MapQubits->False",
  FontWeight->"Bold"],
 " and",
 StyleBox[" ReplaceAliases->True",
  FontWeight->"Bold"],
 " if you intended to do the density matrix simulation.\n",
 StyleBox["InsertCircuitNoise[] ",
  FontWeight->"Bold"],
 "will update the state of ",
 StyleBox["dev",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.895556051785534*^9, 3.895556084033701*^9}, {
  3.895556170703742*^9, 3.895556201605975*^9}, {3.895556442049294*^9, 
  3.8955564561516037`*^9}, {3.897376995088361*^9, 3.897376995312149*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"6fa19595-4692-4ad3-90b8-49f16d63a9af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dev", "=", 
   RowBox[{"TrappedIonOxford", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.894385392078011*^9, 3.894385395653379*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"e0e61e79-6b77-4564-adaf-086a02d5c273"],

Cell[BoxData[
 RowBox[{"dev", "[", "ShowNodes", "]"}]], "Input",
 CellChangeTimes->{{3.894385398272482*^9, 3.894385414046989*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"9021932c-26db-41f0-bdf1-498d426c4af5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"circ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Init", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}]], "[", "\"\<Alice\>\"", 
      "]"}], ",", 
     RowBox[{
      SubscriptBox["Splz", 
       RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
     RowBox[{
      SubscriptBox["Splz", 
       RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
     RowBox[{
      SubscriptBox["Shutl", 
       RowBox[{"4", ",", "3"}]], "[", 
      RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Shutl", 
       RowBox[{"4", ",", "3"}]], "[", 
      RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Splz", 
       RowBox[{"3", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
     RowBox[{
      SubscriptBox["Splz", 
       RowBox[{"3", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
     RowBox[{
      SubscriptBox["Shutl", "4"], "[", 
      RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Shutl", "4"], "[", 
      RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ent", 
       RowBox[{"4", ",", "4"}]], "[", 
      RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzl1IU3EABfD5mRlTChRGo1SGBDZxe0nMwe6aQxnbw7AIHLobbUkgbnvp
OmYPirAGbYlmJMXMZtmgFSE5UNcEpZVgy2Kic5UwxeEuac4JFqP/uQ+HH4fz
cipvdOuMuTweT0QCfa0jsqKNFEVPSuRw9N0XJaxPCFoge/OWhtsf82houCzu
gcknSRu8PubQ1xDls/c5xyeyRvhJ/bYHRlae9UJ/evoB5DcNB+H3+dEQnIwe
hWH1yyxnn7O/S0xUKDxmGLvXNghFV/ReeKF9YR5u6e4uwmHluW+Qbnqzy+0q
dh+q1KFj6LXsZeHcnrWglthd8rwYmk7Kz0D6b0MC1hXatuHno1Yf84v8GOL7
4Y9S4Xk78ZrPw1nnvhMb/0365tk4lJRfMh/ksVSIMTCw0+S2w8B6VS9kvv5z
Qn9H1AVfnLA9glOdfzjbw45V+GrodAo2xCuepomuMdlrKBUm3kN7+Oo0zKQy
ISiwRsJQf6ApOSTumwYoKMpWq2Bw6acGXpzJ0cEkXcw50rjTvJXPUuLlj2oY
eKgt2ybajyOc5lMWCUwNRKXwNmOhoDY+qIBGZWCltpClPliCa/A/31gzLw==

  "],
 CellLabel->
  "In[358]:=",ExpressionUUID->"39334818-453d-4215-b01f-6ad2ed45ee64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"circ2", "=", 
   RowBox[{"CircTrappedIons", "[", 
    RowBox[{"circ", ",", "dev", ",", 
     RowBox[{"MapQubits", "->", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisycirc", "=", 
   RowBox[{"InsertCircuitNoise", "[", 
    RowBox[{"circ2", ",", "dev", ",", " ", 
     RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dev", "[", "ShowNodes", "]"}]}], "Input",
 CellChangeTimes->{{3.894385791238966*^9, 3.894385832766262*^9}, {
  3.895556098422262*^9, 3.895556101135045*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"71410c7e-f05e-4826-825b-04095afafaf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"the", " ", "actual", " ", "circuit"}], "+", 
    RowBox[{
    "noise", " ", "that", " ", "is", " ", "run", " ", "on", " ", "the", " ", 
     "simulation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"DrawCircuit", "[", 
   RowBox[{"noisycirc", ",", "8"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8735365427377977`*^9, 3.873536635876189*^9}, {
   3.873539396712269*^9, 3.873539403859277*^9}, {3.875697389882848*^9, 
   3.8756973979789343`*^9}, {3.87569943733666*^9, 3.875699442348497*^9}, {
   3.875784066537302*^9, 3.875784074430694*^9}, {3.8757842173800793`*^9, 
   3.875784233763261*^9}, {3.8757843318838377`*^9, 3.875784355751664*^9}, {
   3.875784760266287*^9, 3.875784765461773*^9}, {3.875784957365838*^9, 
   3.875784998855071*^9}, {3.875790969089532*^9, 3.8757909796434193`*^9}, {
   3.8758184889942837`*^9, 3.8758184926305323`*^9}, 3.8837347098342876`*^9, 
   3.894110794363722*^9, 3.89488257736831*^9, 3.894882608746228*^9, 
   3.8955561358924913`*^9, {3.89555646689579*^9, 3.895556478825173*^9}, {
   3.895556510432971*^9, 3.895556524942173*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"d6f1e258-c049-4570-8952-bb2893609008"],

Cell["\<\
Check the arrangement of the circuit in the total density matrix. Here is \
completely serial within a node.
It does not update the device state, thus we cannot check the final position \
of ions.
The first half (from below) belongs to Alice and another half belongs to Bob\
\>", "Text",
 CellChangeTimes->{{3.8735358044989357`*^9, 3.8735358152137203`*^9}, {
   3.8735362827709*^9, 3.8735363463458776`*^9}, {3.873536412650112*^9, 
   3.873536440021015*^9}, 3.895556188483624*^9, {3.8955662522017384`*^9, 
   3.8955662748742647`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"7dae8c7a-ebe8-4914-93d1-8e3024725605"],

Cell[BoxData[
 RowBox[{"DrawCircuit", "@", 
  RowBox[{"CircTrappedIons", "[", 
   RowBox[{"circ", ",", "dev", ",", 
    RowBox[{"MapQubits", "->", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8735356166506577`*^9, 3.8735356294032717`*^9}, {
   3.8735357581820583`*^9, 3.8735357592668552`*^9}, {3.87353625886707*^9, 
   3.873536259191338*^9}, {3.875697326741803*^9, 3.8756973294968157`*^9}, {
   3.8756994329139137`*^9, 3.875699433317068*^9}, 3.875784055766596*^9, {
   3.884081687243329*^9, 3.884081697548759*^9}, 3.894110786811555*^9, {
   3.8948827476793423`*^9, 3.894882774534812*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"797106b3-7c71-46e2-9680-68c6566ce39f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The final density matrix", "Subsection",
 CellChangeTimes->{{3.897378308257226*^9, 
  3.897378313513856*^9}},ExpressionUUID->"de617550-7cfc-4867-811d-\
50d008ec072f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{"CreateDensityQureg", "[", "8", "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[364]:=",ExpressionUUID->"0e5d8bf2-f763-4d13-a0a8-6241d4c6798d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ApplyCircuit", "[", 
   RowBox[{"\[Rho]", ",", 
    RowBox[{"ExtractCircuit", "@", "noisycirc"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDensityMatrix", "[", 
  RowBox[{
   RowBox[{"mat2BellBasis", "@", 
    RowBox[{"PartialTrace", "[", 
     RowBox[{
     "\[Rho]", ",", "0", ",", "1", ",", "2", ",", "4", ",", "5", ",", "6"}], 
     "]"}]}], ",", 
   RowBox[{"Sequence", "@@", 
    RowBox[{"chartbell", "[", "\"\<\>\"", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.873541681637575*^9, 3.873541751424814*^9}, {
   3.8757841205386143`*^9, 3.8757841294918327`*^9}, {3.8757842467170897`*^9, 
   3.875784337040402*^9}, {3.875784825198759*^9, 3.875784841719986*^9}, 
   3.875784875955913*^9, {3.875785077800418*^9, 3.875785105591632*^9}, {
   3.875821981083705*^9, 3.875821983105031*^9}, {3.883497350493561*^9, 
   3.883497396711956*^9}, {3.883736787115781*^9, 3.883736848601947*^9}, {
   3.884193207703971*^9, 3.884193290550873*^9}, {3.884193325691534*^9, 
   3.884193400978759*^9}, {3.884272868230268*^9, 3.884272871822279*^9}, {
   3.894965672666727*^9, 3.8949656778515778`*^9}, 3.895555907175069*^9},
 CellLabel->
  "In[366]:=",ExpressionUUID->"b16782ff-ea3f-4153-83cb-c675797578e7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Paper supplement: entanglement distillation strategies
(https://arxiv.org/abs/2306.07342)\
\>", "Chapter",
 CellChangeTimes->{{3.8955565755419188`*^9, 3.895556579150084*^9}, {
  3.8973770145576487`*^9, 
  3.8973770351024942`*^9}},ExpressionUUID->"4d518824-3f83-4b77-a8e8-\
2e70512d2626"],

Cell[TextData[{
 "A 4-ions entanglement distillation on each node for up to 3 rounds \
comprises sequences of phase-flip (0) and bit-flip (1)\n\n",
 StyleBox["0 = phase-flip noise distillation\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQncTNUbx7Pve9lly5ItOwnJUiLZI0KFaJOkUEqLQiKtSrSqkC0lKpEt
kqKyhPpnjZItpGznP7+ruc69M3Pn3jvnzsw79/f9fJ7/P+8799wz88477/ee
+5znKX3rPR1uS3/BBRfclzXwPx1uGXLVoEG3DOuYN/CPzgPuu73fgL59rh0w
uG+/voPq35oh8MXd6S64YH3g8RkD/y0IIYQQQgghdlmV6AkQQgghhBCShlid
6AkQQgghhBCShqA/E0IIIYQQYh/6MyGEEEIIIfahPxNCCCGEEGIf+jMhhBBC
CCH2oT8TQgghhBBiH/ozIYQQQggh9qE/E0IIIYQQYh/6MyGEEEIIIfahPxNC
CCGEEGIf+nMa5IknnhCXXnopg+FZzJo1K9Fvc0IIISRZoT+nQe644w5xwQUX
MBiexeTJkxP9NieEEEKSFfpzGoT+zPA6/OrPCxcuFDlz5mQwlMayZcsS/dYm
hKiF/pwGkf25XLlyYtSoUQxGzJEjRw7f+/PHH3+c8GsXRurF4sWLE/3WJoSo
hf6cBpH9+eqrr070dEiKcOGFF+rvK/ozg6Eu6M+EpBz05zQI/Zl4Af051J/f
eecdMXXqVAbDUeD3h/5MSEpDf06D0J+JF9CfQ/359OnTiZ4SSYP89ddf9GdC
Uhv6cxqE/ky8gP5MfyZqoD8TkvLQn9Mg9GfiBfRn+jNRA/2ZkJSH/pwGoT8T
L6A/05+JGujPhKQ89Oc0CP2ZeAH9mf5M1EB/JiTloT+nQejPxAvoz/Rnogb6
MyEpD/05DUJ/Jl5Af6Y/EzXQnwlJeejPaRD6M/EC+jP9maiB/kxIykN/ToPQ
n4kX0J/pz0QN9GdCUh76cxqE/ky8gP5MfyZqoD8TkvLQn9Mg9OfE8u2334q1
a9e6imT2Mfoz/Zmogf5MSMpDf06D0J8Tx759+wx/F51Evnz5xNmzZxP9FCJC
f6Y/EzXQnwlJeejPaRD6c2zAgfPmzau/hkuXLrV97Pz58137c7NmzRzN88Yb
b9SP7d27t9On6Rj6M/2ZqIH+TEjKQ39Og8TDn7/++mvRvHlzW9G5c2fx4IMP
innz5ol///3Xk/mopHv37vrr17JlS0fHbtiwQbz66quiVatW+hijRo3SvibH
008/rX//mmuu0b7mxNPB1q1bRcaMGbUx0qdPL1atWuXoeKfQn+nPKli/fr2Y
MWOGFitXrkzYPP744w99HrNmzRJnzpyJ27npz4SkPPTnNEg8/Fn2PydRsGBB
8cILLyRtnsKKFStEunTptLni/9esWeNqnI4dO2pj5MyZM+zf5S+++EJ/Td54
4w3X8+3Ro4c+Tt26dT19XenP8fPn7du3i19++cUy9u7dK/7++29Pzu8V8Mai
RYvqr9/06dMTNpeTJ0+KUqVK6XOZMmVK3M5NfyYk5aE/p0Hi4c9y7oCb6Nq1
a1Ku3TVp0kSf4/XXX+96nNKlS2tjNGrUKOz3x44dq5/n+++/d32ebdu26WvQ
CKyjeQX9OT7+fPToUe1+gt3fpfz582v3MF555RXNy5KZgQMH6vOuUqVKXNd8
w4HXLDifAgUKiD///DMu56U/E5Ly0J/TIPHw5woVKhg+/5Gjcdttt4VEp06d
RJEiRcL+3X/qqac8mZtbFixYYJjfd99952qcQ4cO6WvYAwYMCPuYbt26ad/P
mjWrtg4WC7169dLnXKlSJc+chP4cH3/GPRC316VY28X7OBlBvlGmTJn0uc6Z
MyfRU9J+94LXuoj7778/LuelPxOS8tCf0yBe+zM+++X1sQwZMojjx49HfDwc
A+s8mTNnNvzNyJUrlzh27Jjy+bnlyiuv1Od2xRVXuB7HTm7GpZdequdcxApy
0eXXde7cuTGPGQ76c3z8+fnnn4/p3g4c9aOPPlI+r1iR71nVrFkzaXK4Xnvt
NX1euJ7dtWuX5+ekPxOS8tCf0yBe+/Py5csNn/1Y87RDOC/AnsJkADWb5Xm9
9dZbrseKlpuBawZcc+D7/fv3j2XaOpdddpl+zsaNGysZ0wz9OT7+fPPNNxvO
gTVRc51w7BXFOjPu4ZQrVy7k9wr7DI4cOaJ8bm7ZuHGj4Zp75syZiZ6SDtag
ixUrps/trrvu8vyc9GdCUh76cxrEa39+7rnnDJ/9qFdhB9TewJqzfOyYMWOU
z88Nffv2NaxBxZJHGi03Q74/j7obKjDv5/zxxx+VjCtDf46PP8vXQnbc6p9/
/tHfc3Lgnk+ycOutt+rzKly4cMw5S6p5+OGH9fllz57d8zxo+jMhKQ/9OQ3i
tT/L+baIZ555xvax9evXNxw7dOjQiI/FOvfnn3+uh5u8XtwjRj5FcIxly5aF
PObEiROGes/t2rVzfB6ZihUrWuZmyOvw33zzTUznCvLrr7/qOdfRXle30J+9
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
hyXyo1DnxNxTZe/evY6eG/q5BI9HHrWTvcOoVSjPK1puijnf2s3731wDG31q
vID7B1Mf+rPvST1/Rk+UzJlt+TP6bmNdWKU7Iy6/cbyYXOUa7b+bd3pK+/8H
G/Y6f+7A3xkBv3S590u1P8OVzetjTmtoTJo0yTBG2bJlHc8jUm4mAp9VbjH/
zcQ6VqzAYYLjoUYvcn5RYwz7xNCHrXTp0oZzqsi7lvuu4Zyq67yp8uft27cH
fgUzu3JnXI843ROmEi/82ZybZK4vE42+ffsajrebc4DfYXO/HawRy3kayNOS
v489zE5o166d4Xj87N0eG83dUbNGfvz333/vaK7AvLfVaR90u9CfUx/6s+9J
PX8GWO9Ln16cDTjM95XqijmXNNB89uk6ncSwRreI/s3v1mo3N+4yVrk7I8bX
aq958luVm2v1owdc1V9U7/GS2HpxxXO9vKP0p42Gan9Grob8WY9cDqegF7C5
T/OPP/7oaAyzJwQDbhrLmrG5z7CbOrVm4M/wTayhhauBgXVDrMPCc3FO7ImM
1BfGDhhP3mtVt27dGGYfHpX9U8z59HYDPQkSiRf+3LJlS8OYb6M/kwPmzZtn
OB73iuz0OjfXnkF+GO7zyBw6dMjQ/w/XL076g5vrSdvZFxlE3ieK93Y0kBsQ
fDx+n5z2asL1hPweRx0/r6A/pz70Z9+Tmv4MAn8HA38sxOkzZ0XfZ+ZrXnvP
Vf3EtR2e8MSZ5RjS6FbDOvc/GTKJm1sOEhPnOcvTiIRqf0bNIfmzHu7jhnr1
6hnGiZbPaAa1b80+Bf90W7NZpnz58krdE+tWdvJQ5R5Vo9Dr0iWoCSi/LrGs
x0dCpT/D71DbwIk7w2eQr55IvPBncy1nJ34KsL/AXJs9Wp1kc13lSy65JOL6
7ujRow2PRS6WXcz9A+3uz0X9dvm41q1bRz2mYMGC+uPt9Pk2g96j8jmd5pg5
gf6c+tCffU/q+rPEmX9PiYeuuVOcSp9B632CtWcv/Rn51PPL1DE49LFM2cSB
1cnpz+a9RW77NKB/gjwO9oE5wZxHglC1P17uFQUnd3KfORbg/iqei7yWiLU3
Ff2czaj0ZwCHgBfZcWesLTrNvfUC1f68a9cuw3jIN3ZzL8Wc63D33XdHfCz2
rcqPRT0Tq3sfqGtRokQJR34uI+8vsFt7AePL54PvW4E5Bu/lIEqiz6tDnnnm
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
PxzTudMI9GcL6M+EqIP+TAhJFZLJn1FfPGfOnIbP16xZs2rrwm6hP0eF/mwB
/ZkQddCfCSGpQjL582uvvRa2jv/EiRNdj0l/jgr92QL6MyHqoD8TQlKFZPLn
Bg0ahPXnunXruh6T/hwV+rMF9GdC1EF/JoSkCsniz5s3b7bsJev2c9aJPyPf
eurUqXp8//33rs6ZxqA/W0B/JkQd9GdCSKqQLP48ZMgQw+fq7bffbvj3fffd
52pcJ/7sU+jPFtCfCVEH/ZkQkiq8+OKL+mdZiRIlEjKHU6dOiaJFi+rzKFiw
oDhx4oQoXLiw4WsnT550PDb9OSr0Zwvoz4SoI5n9+d9//xWvvvoqg+FZvPPO
O4l+mxOFTJkyRf8sK1CgQELmMG/ePMNn6qBBg7Sv4//lr8+dO9fx2In05zNn
zogDBw5oeSH4b5WgJslff/2lYij6swX0Z0LUkcz+jM9UqxxCBiPWKFSoUKLf
5kQhM2fO1H+2GTNmdLXGGyvt27c3vMfWr1+vfR2frfLX27Zt63hsJ/68e/du
MXDgQD0WLFjg6Fx//PGHmDBhgrjuuuvERRddZJg7XtuKFSuKHj16aNegqNVn
F7g3rjH69OkjSpUqJTJlyqSPi/p+NWvWFA899JD49ddfHc33P+jPFtCfCVEH
/Znh56A/pxbr1q0z/Hyxjy+e/PnnnyJLliz6+atUqWL4/mWXXaZ/Dw7622+/
ORo/HvU3kGsybNiwkNrVVpErVy6xdu3aqGN/+eWXmh/bGROvI/LIkQ/jAPqz
BfRnQtSRlvw5f/78mu8wGLFE7ty56c8pyt9//y0yZ86s/3yRoxNPxo0bZ/jM
euaZZwzfHz9+vOH7Y8eOdTS+1/68f/9+0ahRI1fXop9//rnl2JMmTdKuGZyO
i/Vv/FxtQn+24MzZs+LkqTMhcfrM2URPjZA0R1ry56VLlyZ6SiQFgFPRn1OX
pk2b6j/fZs2axfXc1apVs1xf/v333w35ChUqVHA0vpf+jByMSpUqhfgrXk/k
lWMtH+vriE2bNol3331X9O7dW8szj+bPr7/+esi4tWvX1px6w4YNWl418kVW
rVolBg8eLLJnz2547G233Wb3JaI/E0LiAv2Z+A36c2oj1+BArF4dH6Vas2aN
4bytWrUK+7jWrVu7np+X/ty9e3fD43PkyCFmz54ddU7Y5w0PDuZ5m4Efyz6M
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
PHS6A/fofY/YenUjkd2ory13Rptz3QBtDXp/xuVicYNeEf15yRNvi+z1u8VT
D+aIQ5lR9iYmQVwgISScIPsz8jbL/f/hD3+wfC7208nnxqvbi7oF8vHI4WEV
rP1i/U4/t2XLlhH3BK5bt84wBtaPE6Fq1apaP6jDEomVK1eGxkokTiQSqNug
941rgmPHjinrO538GXl2kS8BMUGofYfnTa6FHqvh3gFqX3Tq1EnLDYzXM9J9
hkjg3oOcIzFeQ/7HWNCfiSKi+zPqXN11lxAtWghRrZoQGRkRffWT0hVF04EL
tTVou84crSEmek+5SmFj3XrDFPHeZddEX59GHpAkrc9FSNAJsj/XqFHD0H+k
eOJIyN6ox0nEq1edm5trOMdObmPZJRGjHc0tzGvUVvZtRQN+pK9ljx07NuIx
d+V9F+lj2ckvawXUUpMfC3LyqSLV/Rl7RJcuXSr69u0rSpcubdlhrbby5ctr
15Y5OTkxr1vwWYFj4/VXvXr1uI+J/kwUEd2fcY8smqdK7ee8zz203GtbKfNn
zaGHrBC9e80UN/WYobWBXaeKvj3vjjyPSnmuvXAhbiR5+NQRQuwQVH9GDlY5
TwXW4jBeLLDWN3/+/LDz1q5dG3c8+LX8WFq3bm1pnojTkM+LVX/3+uuvNxwL
J3GKnF8ENREigRrb+jFYH0ctB9zPV8Hq1asNjwW5bFWRiv6MGhuoBYl8J+bc
4262IkWKiO7du2u1OiLVqcfnh76HNFq777774j4++jNRRHR/zvu7t+LPaMhN
1y/PbVX6M9rEdreLO1uPEA0G/VF0uPFBMWDOC+KHlq0vjo192MgPzX2DhCQ1
8EHkWEAOfNSZwvck6j6rykOWKG76886dOw19Y28eXMDckNMY69L333+/FuMs
nwNnhItZRa4VhpjiSD4ic/LkScOewcsuuyym4+NevH4s1o7PJVAXFq6G9wRa
tLzO8MeiRYuGxkS+hUTGlJHrsqBZqWtjlVTyZ7zeuE4pU6ZMTEfFPRDEFN1+
++1aHBJytSDWGTUjDx06pN1PQF+Ie0b8M36HmtG4HhwxYoRo0aKF9p6MNQbi
QrBnwJzn/L333jPsjzW3Tz/9NO7jpD8TRUT3Z9QvyfuOy/twFKfadhBba7YS
f67dSSxofKOY3nKoGNPhDtG/2/+Jjnlei9waqt0Z7ctLyorPSpXXYjbw/z2H
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
P2HhY0U=
     "], {{0, 116.16}, {172.8, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{300, 300}],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
     MetaInformation -> <|
      "Comments" -> <|"Software" -> "www.inkscape.org"|>|>],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{255.7000000000001, Automatic},
   ImageSizeRaw->{172.8, 116.16},
   PlotRange->{{0, 172.8}, {0, 116.16}}]], "Input",ExpressionUUID->
  "321eef86-a649-47c5-b105-951d5475c4a5"],
 StyleBox["\n\n1 = bit-flip noise distillation\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQn8FVMbx7Up2pAi2VOWNi2UhKypJFooVLIUiiQSUglpkZRUSCLJEr3I
mrK2KqGytPhX2hdt2pfn/f9u5nZm7tx7Z+bOuXOX3/fzeV5v/3vnzLnbzHfO
POc5p93WqUm7vIcddliXQrn/06Ttw5c+8EDbR5oelfuP5vd1ubv9fXfeUf++
B+9sf+cDtW7Ll/vHV/Mcdtia3Ofnz/3/QgghhBBCCEkVpgbdAUIIIYQQQkiY
6UF3gBBCCCGEEBKGfk4IIYQQQkjqQD8nhBBCCCEkdaCfE0IIIYQQkjrQzwkh
hBBCCEkd6OeEEEIIIYSkDvRzQgghhJAUY/ny5bJy5cqgu0GCgX5OCCGEEJJi
tG7dWooWLSqjRo0Kuisk+dDPCSGEEEJSiIULF0q+fPkEy7wjevToEXSXSHKh
nxNCCCGEpBAYM8+bN2/YzxEjR44MulskedDPk8Evv4h8+KHIrl1B94QQQggh
acDkyZPlqKOOCvt5kSJFQjnpJCugn+vmpZck9yJYcn9cIo0aBd0bQgghhKQJ
U6ZMMeW53HrrrUF3iSQH+rlOnn9eJE+eg26OKFgw6B4RkhVs2bJFxo0bF8rZ
7NChg/Tq1UsmTJgg27dvD7prhBDiChzDDD8vmOsRa9euDbpLRD/0c6/gHlPv
3gfzVuzo2/eQlxtRokRy+0hIlrF582Z58MEHpVChQqa8TfX+cPfu3WXbtm1B
d5UQQhyxbNky0xg667lkBfRzL+zfL1K+/CHvfuYZ8+PDhkW6OeKMM4LpLyFZ
wOLFi+Wss86y9XJrVKhQIfR8QghJB+rUqRM+frVs2TLo7hD90M+9MGVKpHs/
99yhx9eulb3lykc+5/zzg+szIRnMhg0bci9/z3Dk5kaceuqpsmbNmqC7Tggh
cXn00UfDx65KlSoF3R2iH/q5F9q1i3Rv5Jlj3DyXv9dtlZZ3vyjLipWS/Wr+
eb16AXeckMykRYsWrtzciMaNGwfddUIIicuYMWPCx60jjjgi6O4Q/dDPLRw4
ILJn7/7oT9iz52AeuV3+Sq6LrxkxSureP0bOufUlqXnT87LmyKMOPZ7rECp/
rdok3/3CWkmEJMKvv/6a+9PL48nPEVOnTg36JRBCSEw+/fRT03Fr9+7dQXeJ
6CVr/Xzn7r0yP2e9bbR48n8y+P0f5ZclayMeWzpqnMnJMUZu/P9NZc+U+rcN
Cbm5ETvzHx5+fGOr20Jt/PLuZzKs0wC5rPObMnvh6tDf9uPCgBDimscee8yz
myM6duwY9EsghJCYfPfdd6bj1j///BN0l4hestbP5+R6serRTuPDsrXCvn3g
sDxyZbM+8l75OjL/2FPkgpbPmZ5btdVQk8uPqNxAzm31oiw8+oTQtu+Wv0jO
v3lw6Ln5CxUJjQEyUifOPPPMwPvAiB+1a9dOyM/PPvvswF8DI35cfPHFgfeB
kZqxb9++oJVCO99//73puLVx48agu0T0krV+PuO3lbb+XfOmQXJ/3fYh5x5Y
vYnpsWq5vr2tQKGwb88tVTb094ptRkiNm4dEtHXJjf1Nft7/vGYyvEoD09/+
PPpE6Vn7Frnr8COlXe6/EXfmRvP/Im8C3sFILMqXLx94Hxjxw2nNlmhRqlSp
wF8DI36o9SsYDDX27t0btFJoh36edWStny9fu8XWz5cULx12Z4xzq4/dfXkH
k1s/VbNFzLH2Wrmuvy9P3tBY+YMX3yFtru4ie/Pms89djxIFUuDYl61BP0+P
qF69ekLbly1bNvDXwIgf9HNGtKCfkwwka/187779Uum2l0MO3fD63nJzg67S
8bJ7ZM5xZ5j8+NLmfcO+/X2ZCuG/78mbXy66cUDcfJincx1+abFS0ve85tLh
8ntcuTli/Pj3Q+seMpIfEydODLwPjPjRqlWrhM7t11xzTeCvgRE/MD8u6D4w
UjMOZMH8Lfp51pF9fr5qlUiDBiKlSzsay37swjZh167X9Cl5v9yFMr/EKdLt
orauc9eRH/NTqbLO/TxPnqDfLUJSng8++CAhP3/ttdeCfgmEEBIT+nnWkX1+
3qmTq/Hrfuc19zSPNFag7iLG7TE2f1XTp0PR5Ob+8vKQ8bJmzjyRebkxe7bI
nDlBv1uEpDx79uxxvTaREWXKlJHt27cH/RIIISQm9POsI/v8vEcPR16OdYVm
HV8+oiaLHzGyUr1QrgvG4xGPjvxatvy7K+h3hpC0BblIqOPgxs3xfIy9E0JI
qkM/zzqyz8937DiY31KihKxtdbu8ULWx9K51k9x36V3Sqv6Dcs31vaROi2el
wq0jfPdyROXWw0JzRv845kRZf0QxWXnUcbJv5aqg3xVC0p4+ffq48vOnn346
6C4TQogj6OdZR/b5OcBc799/D/3fzkMnafHwWIFa6abx+nPPFdm8Odj3hJAM
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
+jkhiUE/p58T/6GfZy7z5s0zfbZLlixJeh9mz55t6sONN94Y+vs333xj+jt8
3S1B+DnG+X///XeZMmVK6Dz0zjvvyMSJE2XhwoWhGluJsGrVqtA5aMKECfL2
22/L5MmT5a+//nLTBP3cA32i+PlnM5P3e6Gfk3SGfk4/J/5DP89c4HvqZwsn
TjbWunGo4wLguchrMf5euHBh2bp1q6u23fp51apVpUKFCqG48847Xe1r7ty5
0rp1aznuuONM+1SjaNGi0qhRIxkzZozj39G2bdukT58+ob7lyZPHtt1y5cpJ
r169Qs+NA/3cA/RzQhKDfk4/J/7jl59j7t2QIUMYGgKe7ZWjjz46/Nm+8MIL
ntvxAr5L6v5LlSole/fuDT/eo0cP03fv1VdfddV+Muq3bN68OTTmH82dowV8
Oh7vvfeeHH/88Y7bxHPj5AHRzz1APyckMejn9HPiP375+axZs1z5C8N5eMnN
NoCHGu1gbDeZjBs3zvQ6HnjgAdPjyN1QvbdOnTqu2tft5zk5OXLOOefYfiYl
S5aUSpUqSfXq1UP3AfLly2d6vGfPnjHbHjBggK3z43qmcuXKoXZLly4d8Tjy
92Mc++nnHqCfE5IY9HP6OfEf+nnqRyJ+/uyzz4bbKVCgQFLnUKIGrPo6fv75
54jnXHjhhabnILfbKTr9fPv27SH/VtvPnz+/3H333fLLL79EPP/ff/+VSZMm
hfqEPJdYfv7WW29FfMY33XST/Pjjj6F1VlUwh6BJkyYRDr9s2TK7punnHnj6
TXs//3wW/ZwQJ9DP6efEf3T5eZkyZeTkk09meIgTTzzRNz9fuXJlyMuNtuCP
yQCurI4pV6xY0fZ5L7/8sum1duvWzfE+dPq5te2jjjoqVK/SCf/8808oX90O
jMnD31Xnx1zQeDz++OOm/jRt2tTuafRzD9DPCUkM+jn9nPiPLj9PJGc624Hf
+eXnoE2bNuG2sF7n//73P596Gp0nnnjC9BoGDhxo+7wtW7aY1itCjrWaox4L
XX6OsWn1mgbv2VdffeWoT/G45557TH1GbXgnYD6tej8C1z6LF0fU/6Ofe4B+
Tkhi0M/p58R/6Oeph99+jjH0YsWKhdtDDvPIkSMjcin8Ai5ZtmxZ0xjx6tWr
oz6/RYsWpteLeoVO0OXnDz30kKndW2+91VF/4oHPVb0WQV0Wp9ciYOrUqaZ+
oe6LBfq5Bwa+O0NqdRgdEZN/yklaH+jnJJ2hn9PPif/Qz1MPv/0coFaIdT4i
1g36+OOPfeixGdQGV/fTsGHDmM/HscxB7kYEuvz83HPPNbU7Z84cR/2Jxwcf
fGBq10mNFxVc9xx77LGx3lf6eZpCPyfpDP2cfk78h36eeujwc2AdFzbi8ssv
d117PBatWrUytY81fGKBdX3UWiU41jtZ61SHn2NtU+SzGM9DTUi/uP/++039
9ZIzc9FFF4W3P+WUU6wP08/TFPo5SWfo5/Rz4j/089RDh5//+eefcswxx5ja
RY41HNfPmi7WfPLixYvLjh074m734IMPmvrmJC9bh59jXqfaZv369eP2wylX
X321qW2skfTwww+bAg7frl27qAEnN7bHPFML9PM0hX5O0hn6Of08SH766Sdp
3ry5p3B7HzuZ0M9TD7/9fNeuXXL22Web2kTNPpv5hQkzYsQI037glE6YP3++
abto9V5UdPg5xrTVNjG31i/OP/982/sXiYQlf51+nqbQz0k6Qz+nnycK5p2h
djCifPnyjsb1DPr37+/5HNqxY0fH+8HnjPVJjH46qb2WCPTz1MNvP8c8QrW9
Tp06hXKZdVCrVi3TvlCv5KWXXnIUJUqUMG2LeuCx0OHnqG2jtol6535x5pln
+u7nu3fvVndBP09T6OeJ89FHH4XcEJHMdR7igbURrOuXOQ0cszC+4pbp06eH
3wuMLeqGfp4cP2/cuHHo3BUrcPzAuDDuxb7xxhuyfv16LX3xE7g41vkz3j+s
2+IGrH2I7Y844ojQ9vi94d/WOO6448L7wP/H39w69rBhw8JtoN4ccgZ0QT9P
Pfz0c3zv1TmFtWvX1la35Y8//vDVPeEssdDh59a5rbfccovn98NKtWrVTG2P
GTMmfA71GpbPkn7ugX+27ZS/122JiB27nNfWSZRk+Dmu5XBsiRd+zkVJFh9+
+GH4/cNaBXgdqYLVK90EjhleUOeiYw4N5tXohH6u38+XL1/u6TtUsGBBueOO
O7R/BxJBrceMuWhYH9ALZ511VqgN3Ku2Y8iQIeH9zJw509M+cBxV80zdrNni
Fvp56uGnn8MB1bZmzJjhY0/NWHPIE414ues6/Bxrg6pt+ulKaEtte+HChb61
/R/0cw88OeYH2/rnX/74V9L6kAw/V89N8QLjTxUqVAjNkUBdz1TGOvb29NNP
B90lE7gPiLkll1xySbiP8CXr3JPOnTubvBx/w1rDXsD90fPOOy/c3r333uvz
qzJDP9fv5+o1qJc47bTTQo6famB8X63/jOOUF7Zt2xau7XDXXXfZPqdt27ah
x1Hz2U3+jBV1XUWM2a9YscJzW7Ggn6cefvq5Wlscx2tdIA8a93r89HPEuHHj
ou5Th5/jN66uTYSxOL/uN+CYofZXQ+4a/dwD2eLnqOPv9XeI++pOaioFAXzc
6GfJkiVDv+FURHUDu/Ps7Nmzw6/j+eefT3h/yPcx2sM+cX9TF/Rz/X7es2dP
0z5wDWdXQ+CGG26Qc845x/Z3XL16dW33z72ijuth3XmvDor1vY12kC9rB2pK
43HkkCcCPu9TTz01vL949/q9Qj9PPfz085NOOincjs55yhMmTDD1uWbNmr60
gzUzo6Gr/jn6rraL84IfoAa92u7NN9/sS7sK9HMPZIuf45yUyLUytk+1e+To
j1qXasCAAUF3KSrGugrR3EAdk/Orpq46J/3GG2/0pU076Of6/bxRo0amfbz2
2msxnz9t2jTTOoG6Px8v4PdbpEgRXxxl8ODB4Xbs5q5hHocx9ubHmoPquABy
iNasWZNwm1bo56mHX36OeQvqmkSffPKJzz09xLXXXmvqs9d7VMjtUueJ4n7V
smXLbJ+ry8979+5tardZs2aeXouVjRs3huevINCfnJwcX9r+D/q5B55843tb
P580O3P8HMd19b4QjgtYm2zSpEkR8frrr4fGerHOsPXcrjtPwi2PP/54uG+o
p+A1bxW/Q+SRJhqjRo2ybR/HNeP4E80NMBfd+Gw2b97s6XVYUcc70O6vv/7q
S7tW6Of6/Rxjy+o+fv7557jb/PXXX6ZzjqZxIc/069cv3C/k1CUyr9u4Pxjt
/hSc3dgXXD5RsCa6ekxFDr3f0M9TD7/8/Pfffze1o+v+Jq4b1e8pfh+JXEsi
51XtN3zZDl1+jny4woULm9rGfCs/QO0ctV2sN2SpwZII9HMPZIOfW4/PyEWN
x7x580z1DoxxItQjSQXg4uq1PH5bXvn2228jrkW8RL169Wzbd+IGRu0r1Jbz
C+Qdql7nx7ihHfRzvX6+du3aiN8h9umE1q1bm7atWrWqr33zCuZI4Dhk9OvS
Sy9NqD0jdwX/tQM5L8a+kAvjB/i9G23id4a1Fv2Efp48kL+JMdR4+OXn1s8E
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
eGrHuhaQWw9GDUOrHyAv3uk64LFQ81dRsyMInN5PUGvp+LlupxOsdfKMNfP8
RIefA3gE5t9Fy0dHngXW2PRSt9pP/PZz6zoqiYwtY8xcbQv1j9xgreXkZ72k
t99+29S22/x4r6j3FXAPzAvWMQId69bSz+1B/qa19orb77VX6OfEI3HrKxo8
P35WUv0cNRmt6xaFYtAgne+HIzLRz63jjljvzwtwObUdOLEbMFZndSq/6o9Z
5+u7mf+abNSaM37kBrhBzfPFnLmVK1f6vg9dfm6AvAVc16D2O34fmGeMNWr9
rJWRCH77Oe6xYK1QIxL5zPC7UNvC9ZpTkIOirpGEMeJ9Po6poK3TTz893D7u
tyUDXNMZ+3S7toOBeg2FWiE65pbQzyNZt26dnHnmmabX46Quol/Qz4lH7P0c
a7O9+CImXYlMnBj6045de+Xax95Nips3uba7LD6qtH3+e66XBk2m+Tl+57gH
bQRqY+3ymEuE+U9qW4gVK1Y43h61NNRjEGqiJzIfSwVrsJQoUSLcdufOnX1p
VwfwtSD6iVxczBsw9o01inSg289THR31W1IBdZ4u7mHomOeh1nnHXG8v82Dd
gLkNWEsZ+8N6O17mP+IYq67/pGvsln5uZsuWLRHrC+OY5tc5xQn0c+IRs59v
2CBSxVx7fOcd7eTTmYul9+vfS72u45Li59+XqWDv5uXKYYAmoLfqEI9nmJ+n
Emr9CC/rgMfjkUceCbcPV8d8tlSkS5cuvt8/cMLE3Otx1a+83keJB/088/z8
888/N70m1CnUAd47rCNj7MdYp1QXar7OII/3b9V8NczdxViBDujnh8B1FM6N
6utAHqefa005gX5OPGL28xEjIpx4WbFSUrvlc0nNbfn49JqRbv7wwxjcC+ht
MkM/14O1hoyOdYRQw1Edx/J6vtUJchOMusuYz+RH7r1T1LU4Ud9RF/TzzPJz
jFOqeSfIl9P5vVXz0FFX0s09Ojeo+Xq4l+clVwdzY43xd4TXNZqcQD8/CD4n
6zwIrGer67ooFvRz4hGzn2Odjrx5I9wY8zRRT6Vqq6FJ8XPUPf/9mJPM/Tjy
SBx8AnqbzNDP/Qdrgp566qnh14S1C3Fc08ETTzwR3g9yebah3n+KgPPKVVdd
Fe4fcuaThTr+iXmUOuvG0M8zx89xD8paNz0Zr+eyyy4L76+DhrzHN954I7xW
Aer9eK3FiVxno5/Vq1f3ZV2laNDPD87Bv/POO039R916XeeTeNDPiUci888n
TRKpXNk2v2RlkRLS9eLbQnM3dTt6rZsGyS8lTzP3oWBBkR9+COBtMkM/9xcc
T9u0aRN+PcirQE1wXWAMRb0W6N+/v7Z9uQX36o1+Yc3OZOZJoua9se/27dtr
3Rf9PH39HGsQYd4ocqH69esXclf1tSRrzuaCBQvkiiuuCAV+K7jG9wvUxDbW
sMFcTq/1/zGPB+sbGf1MpHa6E+jn5hxGBO7rBNl/+jnxiP38UFzfo/ZTmTK2
nv7GOZcn5N5Yz+jJWi2lQZPeoX+jrnr/85rJ+1WulI0XXybfD31T+oydKq0f
eVN+PL58eL/76l4qEtB6iirdX/3G9nV9+wv93C0Yu7777ruTfn5/7733wvvD
nK+tW7dq32c8evXqFe5TlSpVkjreo+adI6fGr3rV0aCfp6efIz9M7bc1atSo
4asnBwHy7IwaNJijksi6aMkm2/186NChpn7j/qjb+v1+Qz8nHoldXxG5Wk8+
GZHzsubIozy7OWqz7PuvvQOH5ZGZx58ZWUcRtWP+499/tsjmOpfKmrOryJsf
TJf9SRxPjAb93DtTpkwJ1QtENGzY0FRPBYF5X8nKt8Z5GG6I0FFD0A1qfeXy
5cuHakYkE6y9brwXs2fP1r4/+nl6+rnV/9SoV69eYDkEfoH7dsb6vUcddZS2
+dG6yGY/Hzt2bDgfCYF5Rj/99FPQ3aKfE6/Er3+OWlIXXWTy59crXOHZz0dW
qmdfm0UN61qR6MOWLZreAvfQz72DdUmjnd+xDlHQYx1BMHjw4PB7gHXEdc11
SyXo5+np51ibB/kCCNSUxpy7u+66S7788sugu5YwyNnBXFPD7XDNmm5kq5/j
+6ceU/A5fvvtt0F3KwT9nHjE0fpEi+ctkaUlDua6jM5184ptouefx3oMMf/Y
U+L7ebNmml92Yjw20t7Pv/tledL6kK5+XrNmzQgvR755/fr1JScnJ+juJZ0R
I0aE17o87bTTZNmy5F3jBQn9PD39PFOB+xQuXDj0WeC/qeJ2bslGP58xY0b4
s0OgLu/48eOD7lYY+jnxSFw///7X5VKj/Si5vPkz8sQFN8d07wE1msqufAVk
0VEnSMPrn7Cd87kvj5Irc9JJOFFH+jnG61MY+rl3evbsKQ8//LB069YtVLvs
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
5zY8MGySPPvODJm7aI3c98KXUum2l8P9b97oUZOP/3bMSXLgsIPzQBcfVVou
ubG/ec2iYscden6jRqH2N82cIx+17SqX3v+GbNq2M+BXSwghhJBU48MPP5SB
AwfKnj3pX5eauIZ+bsObk+Yd7G/byP6PqniVyc+bX/OoPFmrpfye6+l1Wjwb
8fyNhYqGn7uvVWt59eM5Mu+4sqF/b6hZRyQnJ+iXSwghhJAU4sCBA1K5cuVc
VThMateuLWvXrg26SyS50M8t7MlZKuNbPySfnVpDPihX29T3CreOkNWFjw77
9rJipcKPVWn9YsRrxfP3KfXP36t6dageoykn5phjRHr1EunbNzIGDxbZtCno
t4QQQgghSeTdd98NubkRFStWlC1btgTdLZI8tPk5crbt/Pymp/6na5cJs2//
AfnlrBphd/63QKFQDrnR92aNHjO59fAqDWxfo934OcbYG17/hOzMVyBq7rpt
/PFH0G8LIYQQQpLI3Llz5dxzzzU5+vXXXx90t0jyyG4/37pVZNEikWnTRD76
SL7s8LhMPeEckx+3ubpLuO/vlb8o/Pf9efLINdf3iuvnd155n8w57gwZVuUa
ua7x4+7cPDd2/UY/J4QQQrKN7du3yxVXXGFy9AkTUjsHgfhG9vn5hg2S+4UX
KVjQkR+PqHxojPy8mwfL4GqN5YcyFeTROm3iurldvJvr+Kaai/FiyZJg3y9C
CCGEBMLmzZvlxBNPDPt59erVg+4SSQ7Z5+f9+rkav8Z8UC8eHi+Qm47/Vmwz
QmrdNEjq3TlMhr8+WdbnrBT55x+RjRsPuvnevcG+X4SkGTt27JDhw4fLZZdd
Jscff7wUKFBATjjhBGnYsKGMGjVKdu/eHb8RQghJEV5//XXTGPqPP/4YdJeI
frLPz8eOdeTlyBtHrsvFNw7w3c1fqNpI+p5/g1zZrI88eFNPeePLebJjFz2c
kET58ssv5eSTTzady6xRtmxZmTJlStBdJYQQR2BMoUSJEuFjWC/UlCCZjkY/
35Kafg66dhUpXlx2dHtMRja4QzrXbRfKM7/2up5yUa6PV2ozXMuYuRHrjige
qgPz7zElRYoVE5k9O+h3hJC0Z8yYMZI/f/6Ybm4ExtQxJkUIIelAy5Ytw8ev
K6+8MujuEP1kp5+Dv/8O/WfC9wu1urhdfFi2lnm8vlQpkT//DPgNISR9mTp1
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
Cf2cEJIp0M8T548//pDZs2eH4qeffgq6O/Ggn6ch48ePlzZt2jAYGRPz5s3z
/XdCPyeEZAr088S5+OKLw+/fEUccEXR34kE/T0MeeeQR0++UwUj3+Pzzz33/
naS6n69du5bB0Bokc0i2n0+YMEGOPvpox3HKKadIjRo15M4775SxY8fKv//+
q7V/XqCfH+SP5Rts/fxO+nnC0M8ZmRbZ5ud79uwJ/D1nZH7s3Lkz6K868Ylk
+/k777yT0HevaNGi0q9fv9CxLlWgnx+Efq4P1c9x3Xr99dczGGkVjRs3Nh3L
6ecMhv9BP88c0s3Pjahbt65s27ZNa1+dQj8/yJKVm+Sqh8ZFxCOvfK1rl1mD
6uc1a9YMujuEuGbXrl2mYzj9nMHwP+jnmUPQfn722WfLSy+9ZBvDhw+X7t27
S7169aRAgQIR38N27dpp7atT6OdEN/Rzku7Qz81+/txzz8n06dMZjIRi8ODB
9PMMJWg/v/LKKx1tt2TJEqlVq5Zp27x584ZqpwQN/Zzohn5O0h36udnPP/30
06C7RDKAL774gn6eoViPZ6nq52DTpk1SqlQp0/Z9+vTR2Ftn0M+JbujnJN2h
n9PPif/QzzMX1OxWP9sVK1Zo3V8ifg46d+5s2r5Vq1aaeuoc+jnRDf2cpDv0
c/o58R/6eeaycOFC02f766+/at1fon7+8ssvm7Zv2LChq+1Xr14tL7zwgjRo
0EBOP/10KVKkiBQsWFBOPPFEufDCC6VXr16u182I5ucHDhyQb7/9Vtq2bSsV
K1YM1d0oVKhQaL/NmjWT999/X/bt2+dqXz5AP09D6Ock3aGf08+J/9DPMxd8
lvny5Qt/tu+9957W/SXq58OGDTNt36JFC0fb7d69O+TehQsXjphnag3ktd9y
yy2yatUqR23b+TnOC7gGiLcv5NT/9ttvrt6DBNHm5//u3CPTFqyIiN+Wrte1
y6yBfk7SHfo5/Zz4j19+Pn/+fKlQoQJDQ8yZM8fz51u+fPnwZ/vAAw94bscJ
ifr57bffbtq+d+/ecbfBmkZXX311XFe2BtZGcjL/1Orn//zzj5QtW9bxfkqU
KKH9voWCNj+Hh9vVP2//HM9DiUI/J+kO/Zx+TvzHLz+fNWuWa0diOIvvvvvO
8+fbvn37cDtnnHFGKC9DF4n4+aJFi+TII480bR/Pa/Fa7Nz8iiuukDfeeCN0
XYPrxo8++khuvfVWyZ8/v+l5pUuXlvXrY4//qn6O/BV1HY4LLrggtB/sIycn
J1Qv56GHHooYx8d+knQuoZ+nIfRzku7Qz+nnxH/o56kfifj5xIkTTW19/PHH
ntuKhxc/379/f8ifTzrpJNO2LVu2jLvtkCFDTNsgl+fVV1+N+vyZM2dKyZIl
Tdtg7btYqH6uRo8ePUJ9twPXGshDV5/funXruK/HB+jnaQj9nKQ79HP6OfEf
XX7erVs3efrppxke4vHHH/fNzzFHUXXFs846S3bs2OG5vVhY/bxMmTKhdYbs
4o477pD69evLcccdF+G+mBe6ffv2mPvC99Tq2lgTIh4zZsyIGEfHdzcadn6O
OaHx+PPPP0P5MMY2efLkkd9//z3udglCP09D6Ock3aGf08+J/+jyc6fz70gk
yHH2y8/BqFGjTO01b948dDzxG6ufuwnkjqBfGEt3koODvBJ1+2rVqkUdz7bS
sWNH07ax6jha/bx48eKOzwvW6yzd+f+i0c8XRPHzu577TNcuswb6OUl36Of0
c+I/9PPUw28/h+9ecsklpjZr164t06ZN86nHB0nEzxHIcXnsscfi5oQDuLy6
bay8FiuoO4nxbGNb1EaMdk1g9XOM+ztl5cqVpvo5mFeqGfp5GkI/J+kO/Zx+
TvyHfp56+O3nYM2aNXLqqadGOHGjRo18qy9i9fNjjjkmNFczWlSvXl2OOuqo
iD5hHdFJkybF3NfJJ59s2saJ06ugZrm6fbRaLlY/R11zN2Bc39gW1wRu++kS
+nkaQj8n6Q79nH5O/Id+nnro8HNw7733RrgwnBFj0du2bUu4fa/1WzBvE/M0
1W2R74L1f+zYunWr6blwdbcgp0VtY/z48bbPs/r5kiVLXO0Huerq9l9//bXr
vrpAm5/Pz7H387sH0c8ThX5O0h36Of08SNatWyfvvvuup/jqq6+C7n5U6Oep
hw4/t679g6hXr57Mnj3bhx4fJNH65927d4/wbrt5okuXLjU9D2uDuuXRRx81
tYG1S+2w+jnOQ4m8Jrfj7y6hn6ch9HOS7tDP6eeJgnUGcd/ciHg1IlRGjhwZ
4TdO46abbkpKH71AP089/PZz5FtjPNpoDzkln33mv1cl6ueoNXPmmWea2njp
pZcinvfLL7+YnoMa6G7p16+fqQ382w7VzwsUKOB6P/379zftx02evAfo52kI
/TxxsE4ZjpsI3edMr+AYg3uVXmLq1Kmu97d58+bwewKv0An9nH6eKM8880z4
/atUqZLjeg+gQ4cOnv382WefddXPiy66KLwt5svphH6eevjt52ruCBwT6+jo
IFE/B/i+q22g1qKV3377zfQc5LK75cknnzS18fzzz9s+T/XzvHnzujpmANTL
VPfz5ptvuu6rC1LHz5HPjxr299wDUdDVrYyAfp4YOF5izorxHn7yySdBd8kW
rA/n1SG8zBFSc+vcjBF6gX6u388xfmVdwy9aFC1aNLR2OD53nJd1X58lyvLl
y6VIkSLh/n/44Yeutp87d25oPNtYLx333tVxbiMefPDB8D4GDBgQ+tvatWtd
7QvbGG0cfvjhoVrKuqCfpx5++vnixYtDXmm01bVrVx97asYPP3/99ddNbZx4
4okRz1m9erXpOTVq1HC9ny5dupjaGD16tO3zrPktW7ZscbUfvN/q9jrXhxKt
fr7OuZ///LPkCpPkvuCD8dBDurqVESTDz3/66afQOgjxomrVqlK3bl257bbb
QveuUsmBonHXXXeF37/zzjtP6xrJXsH8HsyXR31Wo69YHwG1o6yBMRQ8jrlB
+Pfxxx8ve/fudb1P5AHCH4z9TZkyRcMrOwj9XL+fY51qr9d3p512WtT5XKkA
riPU87mX3zDGzgzHv+GGG2yfo573UTPDK6oXxFvjMBHo56mHn37+1FNPhdvB
tbfOY5offm5to3DhwhHPwViAcQ5DFCtWzPXv+ZprrnF0PrH6udt8/euuuy6h
7V0SvJ//+KPkisghN0fccouubmUEyfDzESNGeDqvFyxYMHRO07WmWaL8nHst
qI4/xKv7FDTffPNNuK/ImbXDqC2Fa6VEufPOO8P7q1y5suv7f06hn+v3c+ua
H24D12o68loTBfeG1N+w1z4uWLAg3AZyZey49NJLQ4/bjfu5ATkI6ns7fbqe
Uy/9PPXw08/VXCnkMerEDz9HnonaxgknnGD7PNRmVJ+H36ZTcJ9QXbcU41TR
jvVWPx8+fLjj/eCaAccB1XU032fU6ueVWg+X98tdKMuLlpRnazSN9HPkyBYv
bnZzxL336upWRpAMP2/fvn1C53asl4Ac71RDvc72Mk882WCNY6O/uKdhBddB
xvrGt99+e8L7W7ZsWei4Y+xz7NixCbdpB/1cv5937tzZtI8WLVrY1iPBPWhc
U+Pcaf0dY83tzSmWb6iOYXm5F24wZsyYcDvwWis4H+N+FB6/9tprE+lyCBxv
jP2h1oYO6Oeph19+ju8j8tCMdjCGphM//Lxx48amNqL5irVWJNbqdArOHeq2
Z511VtTnWv388ssvd7wf6/kEjqMZbX4+76918tDFt5u8+8Vzr5F7nlfOw7nv
VYSbI3r00NWtjCAZfo68D/W7iJyQvn37mqJnz56htXXPPfdcW0dv166dlr55
Beurqf1LNH8Dx11c5ycasfJZjbquGMu0u1bHOJzxeoYOHZrQ6zHA52a0iRx4
L7ky8aCf6/dz6xqD8WqBYZ5006ZNI37H0eZaBQFyt9Wx80TqJ2B9bqMd1Fu0
gtrIxuM41iWK9X4G7uX5Df089fDLz//++29TO15qALghUT9H7oe63mYs754z
Z47pebgudrL2D65Z1HsKiGj3woDVzzHWjvOEExo0aGDaVvf1kWj2829OrBTh
3v+7pm34OXvXrJVVJ5wa6eeDBunqVkag28/hDmr9JkS8OVHwK2OsyQj8NjGP
K1VQr+VxjZ1o3jl82O66xG1gDlo0KlSoEHoO7v/Z8eKLL4bb8Wt9Z2u9Kxyn
/YZ+rtfP8d1W5y4g/vrrr7jbwefUe7gInJdShbvvvjvcL4wlJnKPzshdwTrk
drz33nvhfbmdf2oH7nWp6ytiPrbf0M9TD7/83HpczsnJ8bejFhLxc8xdsd6P
w33ZRYsWRd2mVq1apufjPhlyV2Kh5uMjkJMfy+utfo5A7ad49whHjRpl2ga/
Y6yrpBnf/fyfbTvl9S9+lUf7vS978ua3HR//8a6H5I/lG0K5LhfdOECmlz7L
/Bybubc7d/s/hpeu6PZz63GgTJkyjrbDXGbrd9+u3mkQ4LigjrsN8uEaULef
YzzTyF1BXrgdd9xxR/hayM98IvX+iY7vGP1cr5+jRrLaPq6dnV6PquPKCFwj
pgJwTdVvE6kxpOau4LrdDnXNE4xd+kGbNm1MLuH3OZ5+nhzw+33hhRccrU/j
l59b7//a3fPxE6ufY217uxpHCNRAe+utt6RHjx6hvA+781y8e1DI31TrExhj
A3a/PZwbrfl7iCFDhsTch+rnOGcauZzIk/v9998jno/rA9RtMs7DRkRb/8hn
PPv5yg3bZMX6Q8eWpWs2S5+xU6Vau1dDeeY9at9in7uSGzvyF5RLb+gXnjPa
uv6D5ucoYxVot8eob2X95tSsUR0Euv38tddeM30XkbPtFNR9ULdFXmsqoNZF
gqf7cb7BPYUZM2YkHNHuMai5K1gvzg4cM3U4lJr3jvD7Xjz9XK+fW8+tGCt2
inpPBnHqqadGfe6XX34pDz/8cDi83sPBMUdtx+73OW7cOFO/ML7tFdSpM9rp
1auX7XOwTgoeP/bYYz3vx8pHH31keg143X5CP9cLruvwvStXrlz4XBJtLRwD
v/zcOsd448aNntpxivUYkkggP9bJ+AD8Gjkn6rao7YL5Gvfff3/o2IBaS6jx
Yt1HkyZN4u5D9XPUQ8M1lurrqL2OfaCeOvI8MTZp3Q+u55NU882zn2/atlOq
3jlSur3ytdwx4BOp0NZcp0UdE9+Z/3B566y6of//b4FC0ubqLqbndrzsHrOf
535/N23ZLouqXii9L7xFPvxBX73YdES3nycyV6NRo0ambTG+GwvUIVbnqrk9
v+OYpW4/efLkiOegBol6zx75aumA6kl29R6Qj25c/yNP3U8wZqEeJ/2+zqKf
6/VznGPU9jEm7hSsv6Nui3sp0Rg/frzpufdg/QqXoA6kWl8t2vokam48zqWJ
zFvFscJoC85sh1ETwst6htHAuJ86Ruh37hD9XA841qKmtlEryxqx6vFks58j
dwy/NTegTpl6PHASqI3gZJ6U1c8BjllO94PfK85dSSKh/JZGj74rF7R8Tqq2
Gmry7YtvHCD78uQN+/Znp9aQCreOkJEV68lNDR+OqLn4aJ02Jj//YtSH8twl
rQ79DWM/DnInswXdfq7WGUBMmDDB8bZYH0zdNt76CbinpeadoB6x0/U/0C91
/glqq9rNmVFrFCL69Onj+PUEiZq7YrfGKd474zVhvNtvqlSpEm4f4wh+jhnQ
z/X6OXJF1fbdrHN36623mrZFLadooCa4+lzcz3EDvlNYP8HYHu5qd58Z75ea
Tx/rmsEJ8XJX4KPG4926dUtoX1bq1KljcgQ/1y/OBj/HmjKYu4s8TIznGDkW
cGTU3sRjfuT6YVwHTnzfffeZ6vdZA2vYxzo2ZpOfY80OOAnmieCYFi9/PBqY
B451AqzzS62B4w3u4TnFzs8BalhZ592ogVw4jO3rqjccBW9+vm6dzL2pvfxS
8vSQh3e6tL3Jt5+u2cLk2/ddepdtLXQj+tS8MfS8rYcfKTnFj5eWuQ6/vUBB
85g65vBgjlzusU0wvqJG9+4+vy2pjU4/V9fsMMLNPBQcq9Rto63jpXLzzTeb
tkFeWTy++uorUx1AnNftaqQB65pfyClJB4zcFYzZ2IFxBuM14RrEbzp16mR6
33Cvwy/o53r9HDkZavtO6wljTLpEiRKmbePVF8c6ZcZzMe7lxjetNU0w7m+H
1U3w3UwEI3cF6wjboX53/K7TYL234cYv4pFJfg63mzlzpgwcODA0/wZuhXqf
Tl2xdOnSobwuXF8OHjw4NJ7hxK/wnnXo0MHxvl555ZWY7aWrn+OeAfruJHTV
YMVrRF4bctcxzo11EHFtjd8krsPcgvkeRp83bdpkegzfDXgFatMhhwDjY9gv
5oYnccxcxZOfv//+97I/T56wO79X/iKTb888/szwY9sKFIoYX7cG8l0OHJYn
18+PkDotng3nwjiOKPN7MhWdfo6xK+v1sFPmzZtn2hbn6pUrV8bdDuNXuJZV
XTtWrQkcs9VrCFxj4z57NNRxYOxHR71Av3GSu6LOj8Hxxm+suQux6la5hX6u
z89Rw15tG/MQnY5j4T6xui3qBsW7b2LUADUCHuEEjIOqNR6w7m209batOTeJ
1FUExnhotDrkav4L7kUgbw7r6/oB5tGprwU1KPwi3f18xYoVoXFK5Pha6w/5
Ebj2bNasWWg+T6z1YD/44IOIGmZ2gevgeO9xuvo5CZzYfp7rWzJx4sF6KrnH
R3noIdncvKV8d3IV2Z3vUG2WVYWPCbv2hS0GyurCR4cfe/PsS2O6eXhd0Ss6
ygtVG8mlzfvKaxWudOXnW652Pn8xE9Dp51iPRj0GOK3fj/M/nqtu27p1a8f7
tY5xR6s9hlxVXDMYz0OONGofRQP3OdV7ZIneF08WGKs2+hwtdwXzYfA48oN0
XN+rc+gQqHflF/RzfX6OvC+1bdQtiwccQ61daHg98gXigTX41O1Q78AJ1vsz
8NZoWO+xJXIPTK0jjbE4O5AnZ3WxWGMAbrDWx8J9fL9IRz/HsQBzALAeprVO
hs4w5gPiWsxubQnUCFTrBdkFcl/iQT8nHonu51jD04UjX9msT9i1z231ojx8
0W3ySJ1bpXLrYY78XI3zbx4sY86+TKadcLYpMOd0folT5LdjT5FVp54puyqf
ezDnJco90UxFp5+j1p96DIhVm9sAdX2tY2i4N+g0jxzgXpN6Tx7HTri4CsYF
Md9E3U+8OonWYxpya9MBjA8afY6Wu6LmGOPeL+ab+3lvAOOm6n0Kp3U2nZAM
P8f6UxgfxTo9yGdATmOqoNPPMZ9bbRvebQXX0/h94l4U5mOcfPLJpm1QH8Fu
rrUdcHh1W4xPxsM6JxQ52bHG6a21kRPxRdRHNuaTR7tHjvcH9SIqV64cqklV
v359R/cCnYBjnfpacH/PL9LJz+GX3bt3j1g3wxoYj4FHI+cE9TaQD4RrHHx2
aAOvEecgfK74G2pNIScL5wbUDbnsssts631Yz1e9e/eOuH+DdXPUPEprYA2e
eNDPiUei+3nudaNTN0dNlpo3Pe/aw+NFvaZPmeeddhojwz+aE6qxns3o9HMc
y9RjQKz13VevXh3KvStfvrxpGxxvnRy3rCBHUG1HHVeCS1hz253kW6iei4hW
Sy3VwLkI/f1/e+cCPFV13/GQQCx2qMOQiTqaikJE5SEoIuKoCRA7Jg6WGINY
NaNT7cggI6hoSnxAR9tQtZBUCQpkCKgo2qBoaH1EnVgTizX4AoPVEm1HY2cs
jprGCJ7+P0vueu757+7/3rPnvna/n5kzMcDePfu693PP+T3YH2gW2+fGsVLz
KzSHH3547DlC1VjP0s/Zmx43blyvaynv5XHHHZdJr860ZOnn1ENt5SKtBu8R
Od5JehlFELdpO1azfj8Rbk4oa6Z91e8klti+d/fNOysL5LLb90KhqIKfc39C
nexm8Sv4MPfT7MPgxyFy8li3YM/luuuuq+3zNlun516AeCPilHleauw3+62Q
u5AkZ15+Ljxp7udnN65f/u5n9zav7bOvefbzw8yjf3qkWTfiRDPj1G8Hd/NT
p19rfveZAeb0ad8xD4+bbH5y+7+oR9EfyMrP7Z4d0SA+lPwvd7j5Z9EgHyfN
td0GZ4nqykaDfWb81PUt1raSwHXAflxOfQVygWsv+XULFiyoXXda1fjyxa0D
4u5p+JKFn/N+nHnmmYk8lP0eX3cJQZZ+7vbtSzp473z3GKJ8y2gQR9wMNyc0
yW/ZXsPE66qOfb/BCLXvVWY/5/rC+bfZejnneGLP84hDY22JnIZm9RKJU2fv
zf4zNx69WV8rF/m58KT5BZ14rJkzjVm0yPz3T58yp563xCtWxXfM/dKF9drp
tXuDYcP4UeX41pSXrPycvUGf6zr5nOQ7h+gv7+YkUqvcrfdIPn7SWn9uTG2o
GNJugV4Q9vv32GOPBTluaD9nPZXatGm+tzhlUbnCWfk53uHzG44G+zY+dTTp
52Efp1lfRdYl7fsH1iDdOgoufLb2scntrDrDeq5n9msKVf+irH5ODTBiVNzv
G/s15NGwTl4UrKvTt8Pti2MPYvu2bt0aO8f01ZcoQn4uPGm94PaH8/Su3R+b
KfPW5ubmjKPO/r55bZ/94uv3xOllVMenSmTl564bpxnsafvEtDTCrg/sDs7l
afa27X7ajAfIdxaJcWthb9y4MchxQ/s5e9I+39vvFFSbNSs/p8+2fdzDDjss
1r+LQR5mVLOuUf5bkpqoLsT628do1veAtXL73yXpn8k9lP0Y6rxUHXefMFT9
pTL6+fLly3vV7MWFyTcP3Ze4HTZv3tyrf0c0V+4/ge9iVOMoaZ0i+bnwJNGG
+LPb38zVzRmjvvUD8zcTZ/aOsWmQ69RtZOXnds8OBrHo1AK1B/mirKm66z8M
Yl5CnDNYz2i0lnHyySenrlPi1n3IIg+xk8Hh7PeP2O4QhPTzt99+u9f1P+lg
z5q847zJys/d+xRyhltBjTk3dmzo0KEN61m0grwEO9+TnFwXNyeUWkpJY4vt
x3FPUXXcGCS+DyEok5/jsu7+JWP48OG12ihlZMOGDbF+efaYPXt27TWxv0TP
KnJSkyA/F5709nPWJolj7XExQ1/jJUvMhid/laubf236QrPjTz7fOB/1618v
4G0qF1n5uRtDSpxoMzhHkRvq9vdq1l8kDeSCuj1SqKOQ9HxoE/XgjAbnX5Ec
9/6mWQ+otIT0c2o6+Lh5NIjdz5us/DyquRkNah/2xfbt23vVqEjTMzhi/Pjx
9cdTm9GOHXJzQnEgasckxe4Vg6v79rLlPMLadajB2rAPgwYNqr8eckVDURY/
pw6KuxbNZ879Yqgc89CwB2THmDNf19XJx0m71yE/F57E/ZzfzdixMR/+vy9N
Nhct2ZSrn9/7xeMbuvmrAweaGSNH1q4DeQ5i0/J+zlbDzi0K6efEgtq/f/oN
9QX9tezHUIvAx6MjiMOM+mbag/VRnzUcdz+9VT2aJLAfS2xt1Qb9r31gD9p+
/0LloLp+Tg0g39+Dm8eVdkyYMCH33zB9f7Lw84MOOih2XDwrCW5ebZIaiS6t
+s2uWbMm9nfUvUuD+36lqd1qQy4Lxwo1fGKBiMG3X8sRRxzh9Voa4fo551Kf
76dbtynNuZfcYLfWFtcWXy/NA87rdqwXXr5u3bpavo1bC4GYsVb5zy7yc+FJ
/GJLbK7jxL/tv5eZ9ufX5Orn3xs3rdc8ftQzj35tXIPbGW79wDKNUH5u9+xg
uOtfzWAtxK0te9ddd3nNAa8nH7TZayUvNC1u30HibtuBPc6iP3OfwfXWB9zV
Pk6a61IrXD9vZ4zsuWdv5/G+9U5CjhB+zvXajgujhlzS9VNqndvzYR2xr7xN
F3739jHowQ1uTig17KhVnQZ619jHLjKfsF3cHs2sM4fC9fNQI6mf87lyv2E/
lhopvjW98uCVV16p95ONht1Xg7oJ7jkGJ2jVf9RGfi48ifs5115qsX4q7sa7
+n3arD/0BHPSjMW5+Dl1Yv556NGxOXzcM+YWdO3sBj+/7777YselTnRS2LO0
H8t+Q1qId3Xja6hfZe8V4Bvk0KeBtWP7mPPmzUs9NxvWBNevX1+54RuXcuCB
B9bfO2IgQtQihpB+Pnr06LYeT22Gon/HIfz8kUceiR2TWI6kEC/i9ihizTsN
9O+xHx/1AJ47d27szyNvTwMxSO3MLQ34FOsV7733XibHd/Pw6ScViiL9nJgW
O8aJwb0H92dlhe8s+Rb2nNkTduG1ufWh2JtIUndHfi486b1ZvX27MfSF+VTv
+BLW0m8ee2qttkrWjj76W8vMhmETe81hfY+zUXMhz0EfnLyfs9Ww6w2G8nP6
9ti//UY9B5tBPqf9WOotpqkXhvPNmDEjdgzqqLP25/YOT+v+bo/6kGtVnQ7X
VXs9lny+ULh+PnPmTO/fQzv9eBiTJk3K/Tfs5mKH8HPqvTXy46S4e0M+MS52
fA17Nm5OKE7j01uInpH23JrVh/EB97zllltq+eduPRvuWVh/CFX3H9yeDKyN
hML1c/IYfb6f559/fmo/d9dX8NlQea9ZwDWK3q32nFvFXfFa3Jh6eh31hfxc
eNI8mJTaQbhfA0//xf6HteXeZ33tiprn/+XJl9TqtNB79Adjvmq2HDvF7Jp4
nPnPxd8zKx78pZl100/MP42aXH/eD485dk+MfJeTRX7otGnTYr/9FStWJH4s
a2/2OivjzjvvTPxYd/0dD4zWXIixId7P/nvWCdPMzc417au3Yd6wb8D9zapV
q2r98vAErte+8bUhoTeU/b7PmjUr2LFD5ofynrXj50n60IYmi/xQN4acXi9p
cB2YnI+0+YV2v0VieO34KO71fPMXiKOzc/fINQ3BwoULm9brsAf3GPw+Q2Dn
S5BfH9KziswPffbZZ2vnV/49+69lzQMFYindOr7k2vR178jjojxnriuPP/54
n88lPxee9F3/nFjivfeO+fnunvPs6HOXebn5V75xvfn9p/vXj/XGoM+ZZUd+
NX4PcNlln0xh98dm56w5ZuehI82P7n7S/O731e7rHIIs/Nz1a861aWDdwX48
rpCEyy+/PPY4YolcNyVPx/43Y8eOTRVnQZyM/fikcYNZgZtSH+Pss89uWH86
um4zb2Iji2Lp0qVe91xJCF1f0a6HkWbgfK+//nqw15WULPzcjcN78sknU8/J
/T6mrXd/8803N32v067nu9i9bIm1aicPPSI6b3HvcOKJJ9Z8nXgw6sjz/WdN
3X4NadYtGsF6g/1dJd8mJEXXbyEuiJ4TofotZQHfczdWhVrCSWv3snZ07rnn
mh07diT69/Jz4UmyxQzy8ix/vueLx3uvnf/thG82rptoj0b7qiW+F8+b0H6O
D9u/e+JT0tYZd/uicA3q6xhurWbWXhrVomYN3K3fsHbt2sRzc2NkfPNXQ8Ea
YiN/oW+5u5ZH7bUkazRZMH369Nj9Qsi+26H7E7nxyUlHyNjfNIT2c+Jj7e8O
/+0T9+vGmVGfNA3UwWj0PpND3m4PSvd3HKLWJ/Wd5syZ0zJ/kVzB6DnJbfV1
XqDut/0abrrpJu9jNaJoPy87XEvcnmvs12aVawDyc+FJIj/f/uu3zb8OO6rm
zmsP/3ItJqWZfxOrctQ5/9j07x//wpi+/bzHxURzQvv5pk2bYr97YkTTgm+5
a5gctxluTAL1jV9++eWm/97de2e9P+n6GTVHbHfpq2dL1kR+Tu4r+wecd6N7
Ga6nxJUQfx/Nl33UkG6cBNb5cJFoDqHiCSJC+zn7KWnj0FlD84mFDkFoP3e9
j5gwH7jvtY9DXbw07xGfA/eZ7nvNWnS74Dl2nfYQv+MkNarA/j22c19w8cUX
149Dvvubb77pfaxGyM9bQ30A+3VRwz7r/VT5ufCkTz//+Uv/ZSZc9MNaTui3
Tziv5dr43034Zi12Zedef2wu/Mqc+p+fuejH5stz19ZiYt4b8EefePjBBxuz
7769/fygg3J46dUltJ+7a49p18wi3N4ozXJtcADbl7meJ6mXRi6OffzFixcn
ntvUqVPrj6OWVlFeBtRX4/6kVY9G/M12Anq35gn10u33euXKlUGPH9rPo2Oe
c845idyc/Le0e0QhCe3n9hovgzhwH6ipaOdzMtLGybgxIdSmC5UnaK/vc0+f
V/6hnXvrU38GOOfYtYLI+QmN/Lw57n4tn0XSGJV2kJ8LT/r08607/sc8vuXX
5sc/+5VZtek58/frfm7+esVj5qJ/2GSOnfXDuoMvPeq0mGN/+Jn+5txTLjPH
z15tfvO/H5j3fvuhWfL9+8zT+48wHw347J5/R41Rzq/33EPSjOmRtj1/XtCe
c1UI7efUabB/98SQ+kCvDvs4eLAbJ37//ffHrv8DBw5MfL7avHlzrJ4IsbJJ
6yi764L0nSg79vn4lFNOyfW57XwCYmyInwhJFn4ewb4NNY7cWCFidLjHo09g
0YT2c+Jh7eO1k8tILK59LPZ40nDSSSfVH8vvNWQvd9cbqVWYB9dff339OVev
Xu11jAceeCA29yy+h/LzxnBtsq8d7Em+9NJLuTy3/Fx44pdM/+CDFL02/3bk
CeanXzjSrBj1Z73WwH+573BzzF8sNQ8/E4/r2/IfvzH/vuU1Fuj21Fu34f9v
2+b7WrqG0H5+yCGHxH73vjUWiMFgz9Y+FrVJInBiuwYDnk7cehrcewl6FiYB
H7JzYMlhKjusZUbzpQ5GXhA3NHjw4Ppzsycfmiz9PILYARyIfD+uiXnHCLUi
i/zQMuDGyvmu47fCrrtBzmge2LUD7b6oabDz1MeNGxd4hnuQn/eGelj2dYne
e2n3hNpBfi488ROx7363dfz4pEk9XrbNLFr9s8DTFRDaz4kteeaZZ+qjnT3j
559/PnYsamtEENdh/51PbRLOSfYxnnvuucSPpY6evW7PebPMEI8fzTfPuu2s
D0bPyxp0FjVk8vDzMtOJfk4st11PmnwU+r+Exo21f/rpp4M/hw3Hj/Zi6IVF
jmFaWKu193PYR8wC+XmcRmtCef/W5OfCEz8/J/6hmZv3uKPJMBdaZFNfsRsg
R598t+i9Ix6xzNjxkmli7dsB96B+ZfS81IDMAvl55/k5MTX2a0pbfz0Ndi4K
eb5ZwTkj6u1OfIRvbugZZ5wR2wvzcfwkyM8/gbUbu14onx9xLnkjPxee+Pk5
8XeN3HzRosDTE42Qn/uD50bvHefusq6hs+4Y1cHgf5PG2bcLsSD2WhP9V7NA
ft5Zfo4LkacQvR5i0NP0KEgLMSbkE0TP5xuT1wryOelZEz0HdRh94L2J1s5x
ROozZYX8fA+ct/bbb7/YawhdyzIp8nPhid9JjZwc180L6MHXrcjP/SG2eujQ
ofX375prril6Sr2grgt9S6I5+ubrpgWfGjVqVNs+kgT5eef4OXnb1AqNXgue
ntV9nc3s2bPrz0nNmJCwvn3BBRfUj0+cu2+9H7uPALW3s0R+vmdt4+CDD47N
/+qrry5sPvJz4Ymfn7/wwide3q+fMTfeGHhaohXy8/agd2f0/tE3pUznObyA
3NVofqeffnpme+Eu9AeNnpc4IPJTs0J+Xk0/57u4YMECc8UVV9T8mBqgdl0M
Bn2E8oDv5/Lly+sjRD9R4DXOmjWr/nomTZrk3auez/nWW2+tz9HOx8mCbvdz
+pba8XmMv6K/YoHIz4Un/puC1EM+7TRjbr894HREEuTn7XPttdfW+pswylBv
D1wvwH1COUcSbuy5z47ek7R93dMiP6+mn9Nn0563O+jHWXV4DdHrmThxolcf
1qLoZj/nXGnvOzKITyqy1wXIz4Un4YP2RObIzzuT+fPnxz7XKnlBWuTn1fTz
u+++u6GXkyNBj6Sqc+WVV9Zf0/jx4zPdQ8qCbvVzHNyOI4rWN4rsQRYhPxee
yM8riPy88yBmIPpM2Z/t9HOv/Lyafv7oo4/WYluisXDhQrNhwwbzwQcfFD21
trnqqqvqnwd1IstULz8p3ejn7Dued955sflyb1WW9Q35ufBEfl5B5OedBbE2
0ec5ZsyYSnpBWuTn1fTzToX7jOizoMZ5XvWSQtONfn7ppZfG5jp8+HDz1ltv
FT2tOvJz4Yn8vILIzzuHG264of5ZjhgxotbzshuQn8vPy0In/Qa7zc/J2z36
6KPr8zzggAPMjh07ip5WDPm58ER+XkHk550B9Xijz/HQQw8t7TUwC+Tn8vMy
sGTJkvpnQD8E8qLt/sSNxhtvvFH0tJvSbX4O9JCiviY5EFu2bCl6Or2QnwtP
5OcVRH5efWwvYD82iz7oZUZ+Lj8vA1OnTo19DkkG8RRlpRv9HDifvPjii0VP
oyHyc+GJ/LyCyM+rzUMPPRSrGX3WWWfFcu4aDeJjOwn5ufy8DMjPG1M1Py8z
8nPhify8gsjPq82aNWtSO8GQIUOKnnZQ5Ofy8zKAd7766qupRpnzt+Xn5UN+
LjyRn1cQ+Xm1wcXIaUozJk+eXPS0gyI/l5+L8MjPy4f8XHgiP68g8nNRdeTn
8nMRHvl5+ZCfC0/k5xVEfi6qjvxcfi7CIz8vH/Jz4Yn8vILIz0XVkZ/Lz0V4
5OflQ34uPJGfVxD5uag68nP5uQiP/Lx8yM+FJ/LzCiI/F1VHfi4/F+GRn5cP
+bnwRH5eQeTnourIz+XnIjxZ+fmcOXNq1x2N9GPu3Lnyc+GD/LyCyM9F1ZGf
y89FeLLyc41wQ34uEiI/ryDyc1F15OfycxEe+Xn5h/xcJER+XkHk56LqyM/l
5yI8ofx869attWuLRvixZcsWr89Eft51yM8riPxcVB35ufxchCeUn4vy8cQT
T8Q+2507dxY9JZEt8vMKIj8XVUd+Lj8X4ZGfdy4bN26sf679+vUzu3btKnpK
Ilvk5xVEfi6qjvxcfi7CIz/vXG677bb657rPPvsUPR2RPfLzCiI/F1VHfi4/
F+GRn3cul1xySf1zPeaYY4qejsge+XkFkZ+LqiM/j/s5196VK1dqaLQ15s2b
Jz/vUEaPHl3/XC+88MKipyOyR35eQeTnourIz+N+rqGRxZCfdwYvvPBC7HO9
9957i56SyB75eQWx/Zw4tKlTp2poVGpMmTIldr2Rn2tohB/y885g+vTp9c90
8ODB5v333y96SiJ75OcVxPZzDY1OGN3m5x999JEZMmSIhkamg30qUW1WrVoV
O1fOnz+/6CmJfJCfVxD5uUanjW7zcyGEaMXu3bvN0qVLTf/+/evnyf333191
z7sH+XkFoQ7q7NmzNTQ6Zmzbtq3on5UQQpSGZcuWxdYwBgwYYB5++OGipyXy
Q34uhBBCCFEi3nnnHTNo0KCam++1117mjjvuKHpKIl/k50IIIYQQJYN6mSNH
jjRPPfVU0VMR+SM/F0IIIYQoGe+++24tl1x0JfJzIYQQQgghygN+/gsNDQ0N
DQ0NDQ0NjVKMW/8fGOV7eQ==
     "], {{0, 99.12}, {178.56, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{300, 300}],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
     MetaInformation -> <|
      "Comments" -> <|"Software" -> "www.inkscape.org"|>|>],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{251.14, Automatic},
   ImageSizeRaw->{178.56, 99.12},
   PlotRange->{{0, 178.56}, {0, 99.12}}]], "Input",ExpressionUUID->
  "269e31ca-0520-4411-8e14-d587fa513109"]
}], "Text",
 CellChangeTimes->{{3.895556607010174*^9, 3.895556668409751*^9}, {
  3.8973770486469088`*^9, 3.8973770638949823`*^9}, {3.897377209063794*^9, 
  3.8973772131274776`*^9}, {3.897377975993548*^9, 3.897378046532036*^9}},
 FontSize->18,ExpressionUUID->"05c61d37-69ab-4228-821a-8220f8441e07"],

Cell[CellGroupData[{

Cell["Modules", "Section",
 CellChangeTimes->{{3.875818684979363*^9, 3.875818696723239*^9}, {
   3.875818729119232*^9, 3.875818729561054*^9}, {3.8762080470437*^9, 
   3.8762080533448467`*^9}, {3.876213822279415*^9, 3.876213826446898*^9}, {
   3.8837383289332848`*^9, 3.883738331003879*^9}, {3.884079645705339*^9, 
   3.884079660895196*^9}, {3.884079870922406*^9, 3.8840798880285473`*^9}, 
   3.895556565648818*^9, {3.895556677082439*^9, 3.895556678665353*^9}, 
   3.897377162712368*^9},ExpressionUUID->"2346cce6-bd8a-4ae4-88e1-\
f897966b2804"],

Cell[CellGroupData[{

Cell["Distillation circuits generation", "Subsection",
 CellChangeTimes->{{3.89737836078059*^9, 
  3.8973783659653254`*^9}},ExpressionUUID->"b570e79b-ac58-45cb-9984-\
b72db9f1066c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"constructing", " ", "CNOT", " ", "from", " ", "controlled"}], 
    "-", "phase"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"cx", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["C", "0"], "[", 
        SubscriptBox["Z", "1"], "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{"\[Pi]", "/", "2"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Phase", "-", 
     RowBox[{"flip", " ", 
      RowBox[{"distillation", ":", " ", 
       RowBox[{"Alice", " ", "and", " ", "Bob"}]}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pfa", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["C", "0"], "[", 
        SubscriptBox["Z", "1"], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "\[Pi]", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pfb", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", 
        RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["C", "0"], "[", 
        SubscriptBox["Z", "1"], "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{"\[Pi]", "/", "2"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.883653975430418*^9, 3.883653985077478*^9}, {
   3.883654079944396*^9, 3.883654085269121*^9}, {3.88365415925456*^9, 
   3.88365423086073*^9}, {3.883654621752829*^9, 3.883654642255464*^9}, {
   3.883654969453896*^9, 3.883654978124701*^9}, {3.8837349450323963`*^9, 
   3.883734998802987*^9}, {3.88373504207271*^9, 3.883735065120805*^9}, 
   3.883735105132169*^9, {3.883836612826042*^9, 3.883836624257846*^9}, {
   3.883836661150372*^9, 3.8838367166955214`*^9}, {3.8838368900907993`*^9, 
   3.883836911376781*^9}, {3.883837179133024*^9, 3.88383723279764*^9}, {
   3.8838375989694777`*^9, 3.8838376062051983`*^9}, {3.88383821555481*^9, 
   3.8838382157349253`*^9}, {3.89737807066678*^9, 
   3.897378092213129*^9}},ExpressionUUID->"ac997f37-7bc1-4400-8f6f-\
8e60e3a8e708"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"heraldout", "::", "usage"}], "=", 
   "\"\<heraldout[outputs]. Check if all outputs 00 or 11 in all measurement \
outcomes.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heraldout", "[", "out_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fout", "=", 
      RowBox[{"Flatten", "@", "out"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "fout"}], ">", "1"}], ",", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Equal", "@@@", 
         RowBox[{"Partition", "[", 
          RowBox[{"fout", ",", "2"}], "]"}]}], ")"}]}], ",", "True"}], 
     "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.883835043449711*^9, 3.883835070239751*^9}, {
   3.883837383857931*^9, 3.883837410957073*^9}, {3.883837625470355*^9, 
   3.8838376323750134`*^9}, {3.883837701134677*^9, 3.8838377368957663`*^9}, {
   3.883837814318387*^9, 3.883837815347845*^9}, {3.883837877413435*^9, 
   3.8838378840300627`*^9}, 3.883838222608015*^9, {3.884080736538555*^9, 
   3.884080784645895*^9}, {3.884081593524494*^9, 3.8840815939179688`*^9}, {
   3.884082001141953*^9, 3.884082001393683*^9}, {3.88409022039701*^9, 
   3.884090239470017*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"f4deb039-2160-42a2-8905-5af66b54d369"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"distcirc", "[", 
     RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"dephasing", " ", "distillation", " ", "sequence"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "->", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["Ry", "p"], "[", 
           RowBox[{"\"\<Alice\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "p"], "[", 
           RowBox[{"\"\<Bob\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["CZ", 
            RowBox[{"p", ",", "q"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
          RowBox[{
           SubscriptBox["CZ", 
            RowBox[{"p", ",", "q"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Alice\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Rx", "p"], "[", 
           RowBox[{"\"\<Alice\>\"", ",", "\[Pi]"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Bob\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"bitflip", " ", "distillation", " ", "sequence"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"1", "->", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Alice\>\"", ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Bob\>\"", ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["CZ", 
            RowBox[{"p", ",", "q"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
          RowBox[{
           SubscriptBox["CZ", 
            RowBox[{"p", ",", "q"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Alice\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Bob\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}]}]}]}], 
     "\[IndentingNewLine]", "|>"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Distillation", " ", "on", " ", "4", " ", "ions", " ", "on", " ", "each", 
     " ", "nodes"}], ",", " ", 
    RowBox[{
    "up", " ", "to", " ", "3", " ", "rounds", " ", "of", " ", 
     "distillation"}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DistCircTrappedIons4", "::", "usage"}], "=", 
   "\"\<DistillationOnTrappedIons4[sequence]. Distillation on 4-ions of two \
nodes. Works up to 3 rounds. Sequence contains 0 (dephasing) or 1 (bit-flip). \
Qubit 4 is always the final qubit.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DistCircTrappedIons4", "[", 
    RowBox[{"sequence_", ":", 
     RowBox[{"{", "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"circ", ",", "nrounds"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nrounds", "=", 
       RowBox[{"Length", "@", "sequence"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"raw", " ", "entangled", " ", "pairs"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"circ", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["Splz", 
           RowBox[{"3", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
         RowBox[{
          SubscriptBox["Splz", 
           RowBox[{"3", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
         RowBox[{
          SubscriptBox["Shutl", "4"], "[", 
          RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Shutl", "4"], "[", 
          RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Ent", 
           RowBox[{"4", ",", "4"}]], "[", 
          RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nrounds", ">=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"circ", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"circ", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["Shutl", "4"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "4"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"3", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"3", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Ent", 
               RowBox[{"3", ",", "3"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "4"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "4"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              RowBox[{"distcirc", "[", 
               RowBox[{"4", ",", "3"}], "]"}], "[", 
              RowBox[{"sequence", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "3"], "[", "\"\<Bob\>\"", "]"}]}], 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nrounds", ">=", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"circ", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"circ", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Ent", 
               RowBox[{"3", ",", "3"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"1", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"1", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", 
               RowBox[{"1", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", 
               RowBox[{"1", ",", "2"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"2", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"2", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"2", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"2", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", 
               RowBox[{"3", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", 
               RowBox[{"2", ",", "3"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Ent", 
               RowBox[{"2", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              RowBox[{"distcirc", "[", 
               RowBox[{"3", ",", "2"}], "]"}], "[", 
              RowBox[{"sequence", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "2"], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              RowBox[{"distcirc", "[", 
               RowBox[{"4", ",", "3"}], "]"}], "[", 
              RowBox[{"sequence", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", 
               RowBox[{"1", ",", "4"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", 
               RowBox[{"1", ",", "4"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "3"], "[", "\"\<Bob\>\"", "]"}]}], "}"}]}],
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nrounds", ">=", "3"}], ",", "\[IndentingNewLine]", 
        RowBox[{"circ", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"circ", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"1", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"1", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Ent", 
               RowBox[{"2", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"3", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"3", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Ent", 
               RowBox[{"3", ",", "3"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], " ", ",", 
             
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              RowBox[{"distcirc", "[", 
               RowBox[{"2", ",", "3"}], "]"}], "[", 
              RowBox[{"sequence", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Ent", 
               RowBox[{"3", ",", "3"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "1"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "1"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "1"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "1"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"1", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"1", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "1"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "1"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "1"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "1"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"1", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"1", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "1"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "1"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "1"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "1"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Ent", 
               RowBox[{"1", ",", "1"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "1"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "1"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "1"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "1"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              RowBox[{"distcirc", "[", 
               RowBox[{"3", ",", "1"}], "]"}], "[", 
              RowBox[{"sequence", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "1"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "1"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "1"], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "1"], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              RowBox[{"distcirc", "[", 
               RowBox[{"2", ",", "3"}], "]"}], "[", 
              RowBox[{"sequence", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "3"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"4", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"4", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", 
               RowBox[{"4", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", 
               RowBox[{"4", ",", "2"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              RowBox[{"distcirc", "[", 
               RowBox[{"4", ",", "2"}], "]"}], "[", 
              RowBox[{"sequence", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"4", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "4"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "4"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "2"], "[", "\"\<Bob\>\"", "]"}]}], 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "circ"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.87620792856719*^9, 3.876208001117175*^9}, {
   3.876215274728503*^9, 3.876215286554634*^9}, 3.876368572111559*^9, {
   3.876898388264534*^9, 3.876898407945396*^9}, {3.876899123274891*^9, 
   3.876899125520397*^9}, {3.8769003621229343`*^9, 3.876900570722139*^9}, {
   3.876901507655105*^9, 3.876901521012465*^9}, {3.876901562830941*^9, 
   3.876901700810974*^9}, {3.876901737290105*^9, 3.8769017745840597`*^9}, {
   3.8769029812159567`*^9, 3.876903130938057*^9}, {3.876903182766803*^9, 
   3.876903205359367*^9}, {3.876903386401197*^9, 3.8769034017393093`*^9}, {
   3.8769034423148613`*^9, 3.876903490562669*^9}, {3.876903658540641*^9, 
   3.876903659196698*^9}, {3.8769037564198303`*^9, 3.876903930751568*^9}, {
   3.8769039762085114`*^9, 3.876904162653749*^9}, 3.8769045632535877`*^9, {
   3.876904609290498*^9, 3.8769047284197617`*^9}, {3.876904959118281*^9, 
   3.87690498909181*^9}, {3.8769050776955853`*^9, 3.8769050930437813`*^9}, {
   3.876905135976798*^9, 3.876905201046363*^9}, {3.876905321801763*^9, 
   3.87690540383673*^9}, {3.876909092402619*^9, 3.87690909686765*^9}, 
   3.876909139837875*^9, {3.8769092234075317`*^9, 3.8769092484472227`*^9}, {
   3.8769094827920513`*^9, 3.8769094873521843`*^9}, {3.876909527992535*^9, 
   3.876909535818157*^9}, {3.876909721158576*^9, 3.8769097330445547`*^9}, {
   3.8769098464751*^9, 3.876909889513278*^9}, {3.8769099697651033`*^9, 
   3.8769100162364197`*^9}, {3.876910081894308*^9, 3.8769101831960993`*^9}, {
   3.876910226926647*^9, 3.876910227842403*^9}, {3.8769103787365713`*^9, 
   3.8769103877695723`*^9}, {3.87691124626353*^9, 3.8769112687363577`*^9}, {
   3.876914671943985*^9, 3.876914686028928*^9}, {3.876914722197845*^9, 
   3.8769148241894407`*^9}, {3.87691486099616*^9, 3.876914888800036*^9}, {
   3.8769778330094833`*^9, 3.876977898499495*^9}, {3.8769779423310337`*^9, 
   3.876977985867684*^9}, {3.876978068390196*^9, 3.8769780694235086`*^9}, 
   3.876978181222357*^9, {3.876978269161131*^9, 3.876978299375598*^9}, {
   3.876978336467092*^9, 3.8769783765719643`*^9}, {3.876978489696673*^9, 
   3.876978490368764*^9}, {3.876978526087816*^9, 3.87697852987707*^9}, {
   3.876978764813871*^9, 3.876978765028966*^9}, {3.876978859817518*^9, 
   3.876979024759413*^9}, {3.876979083679274*^9, 3.876979136998642*^9}, {
   3.87698337652905*^9, 3.876983387522605*^9}, {3.87699263664384*^9, 
   3.876992637215336*^9}, {3.8770634248050547`*^9, 3.877063480349205*^9}, {
   3.8770635429910393`*^9, 3.8770635462093267`*^9}, {3.877063582230268*^9, 
   3.877063671188808*^9}, {3.877063715631505*^9, 3.877063736113052*^9}, {
   3.8770637702654953`*^9, 3.8770638286021023`*^9}, {3.8770638628875313`*^9, 
   3.877063887626519*^9}, {3.877063931227439*^9, 3.877063975718758*^9}, {
   3.877064110023369*^9, 3.877064110547914*^9}, {3.87706423121316*^9, 
   3.877064311601922*^9}, {3.877064389302431*^9, 3.877064431811108*^9}, {
   3.877064486078033*^9, 3.8770644877445374`*^9}, {3.877064697923168*^9, 
   3.87706470542083*^9}, {3.8801834338661327`*^9, 3.880183444276075*^9}, {
   3.8801835301964197`*^9, 3.880183530887624*^9}, {3.880183734820613*^9, 
   3.880183805158581*^9}, {3.8801839034183817`*^9, 3.880184114067206*^9}, {
   3.880184263414304*^9, 3.8801845286422443`*^9}, {3.880184560974984*^9, 
   3.8801845725945044`*^9}, {3.880184619016617*^9, 3.880184706152402*^9}, {
   3.880184793232697*^9, 3.8801849051561604`*^9}, {3.8801850087660513`*^9, 
   3.8801850855951014`*^9}, {3.880185122161281*^9, 3.88018514642382*^9}, {
   3.8801852458905983`*^9, 3.880185280887958*^9}, {3.8801853743207197`*^9, 
   3.880185399585359*^9}, {3.880185636093677*^9, 3.88018565352122*^9}, {
   3.880185690414103*^9, 3.880185712727826*^9}, {3.880185753280694*^9, 
   3.880185754961944*^9}, 3.880186401320457*^9, {3.880186431464942*^9, 
   3.8801864692306623`*^9}, {3.880186524003654*^9, 3.8801865286296997`*^9}, {
   3.880186571864935*^9, 3.880186672724009*^9}, {3.880186738294354*^9, 
   3.8801868514194183`*^9}, {3.880186912485648*^9, 3.880187005540408*^9}, {
   3.8801870381971693`*^9, 3.880187041191223*^9}, {3.8801871962366867`*^9, 
   3.880187239511981*^9}, {3.88018727675572*^9, 3.8801874353264227`*^9}, {
   3.880188266050478*^9, 3.8801883218493357`*^9}, {3.883649758572068*^9, 
   3.883649893830846*^9}, 3.883738383471098*^9, {3.883738856847501*^9, 
   3.883738892346155*^9}, {3.8837402866956863`*^9, 3.883740295145094*^9}, 
   3.883740988080159*^9, {3.8838124152872868`*^9, 3.88381241789563*^9}, {
   3.883812448267826*^9, 3.8838124510715437`*^9}, {3.8838131555411243`*^9, 
   3.883813164429792*^9}, {3.883813204197668*^9, 3.883813318877781*^9}, {
   3.883813373571864*^9, 3.883813408929112*^9}, {3.883813440409885*^9, 
   3.8838134735687532`*^9}, {3.8838135049297543`*^9, 3.883813596590136*^9}, {
   3.883813656680788*^9, 3.883813714245866*^9}, {3.883813846098296*^9, 
   3.883814099949994*^9}, {3.8838145567025347`*^9, 3.8838145591809673`*^9}, {
   3.883814920421926*^9, 3.883814949033518*^9}, {3.8838152117398863`*^9, 
   3.883815214577798*^9}, {3.883815278985169*^9, 3.883815304255389*^9}, {
   3.8838154177788277`*^9, 3.883815426965074*^9}, {3.883815854080496*^9, 
   3.883815862003888*^9}, 3.8838159120034447`*^9, {3.883816038743217*^9, 
   3.883816049359736*^9}, {3.8838160842810698`*^9, 3.8838161714247503`*^9}, {
   3.883816233221674*^9, 3.883816245587707*^9}, {3.883817189994882*^9, 
   3.8838172224507713`*^9}, {3.883818739760007*^9, 3.883818754891959*^9}, 
   3.883818885599372*^9, {3.8838190862593603`*^9, 3.883819090037797*^9}, {
   3.883820035363268*^9, 3.883820042524913*^9}, {3.88382009946449*^9, 
   3.883820101889892*^9}, {3.883820335229772*^9, 3.8838203440469418`*^9}, {
   3.883820375357966*^9, 3.883820378956004*^9}, 3.883820442425919*^9, {
   3.883820497979906*^9, 3.883820521772489*^9}, {3.8838205705975437`*^9, 
   3.8838205753113317`*^9}, {3.88382060879078*^9, 3.883820847609994*^9}, {
   3.883820914500456*^9, 3.8838209413473787`*^9}, {3.883821038136866*^9, 
   3.883821079910884*^9}, {3.8838211583304577`*^9, 3.883821280245207*^9}, {
   3.883821319818029*^9, 3.8838214402617903`*^9}, {3.8838215204829273`*^9, 
   3.883821523830439*^9}, {3.883821608967332*^9, 3.883821610190332*^9}, 
   3.883825472987875*^9, {3.883825526702983*^9, 3.88382568153966*^9}, {
   3.883825720770731*^9, 3.883825856745634*^9}, {3.883826006924542*^9, 
   3.883826029463317*^9}, {3.8838260932242517`*^9, 3.8838261585895853`*^9}, {
   3.883826198943248*^9, 3.883826434118349*^9}, {3.883826469215946*^9, 
   3.883826585319373*^9}, {3.88382664303329*^9, 3.883826654781797*^9}, {
   3.883826693327004*^9, 3.8838267187537947`*^9}, {3.8838267785260887`*^9, 
   3.883826810108677*^9}, {3.883827047594154*^9, 3.883827059868754*^9}, {
   3.883827165329288*^9, 3.883827166151999*^9}, {3.883827468543154*^9, 
   3.883827661258276*^9}, {3.883827692123292*^9, 3.883827696378014*^9}, {
   3.8838325552488947`*^9, 3.88383256206841*^9}, {3.8838387341427727`*^9, 
   3.8838387826240873`*^9}, {3.883839578894528*^9, 3.883839596826798*^9}, {
   3.8840136514235697`*^9, 3.884013676450835*^9}, 3.884015155121134*^9, {
   3.884015187819789*^9, 3.884015268289258*^9}, {3.8840152993472652`*^9, 
   3.884015329482113*^9}, {3.88401541766511*^9, 3.88401541858711*^9}, {
   3.884015576597616*^9, 3.8840156528179817`*^9}, {3.8840157168952703`*^9, 
   3.884015725838128*^9}, {3.884015848087672*^9, 3.884015849735177*^9}, {
   3.8840159046144876`*^9, 3.884015913898958*^9}, {3.8840162947134027`*^9, 
   3.884016330907258*^9}, {3.884018212860681*^9, 3.88401831158992*^9}, {
   3.8840226045402*^9, 3.884022863984379*^9}, {3.884023403588883*^9, 
   3.884023405955585*^9}, {3.884023437405758*^9, 3.88402343844523*^9}, {
   3.884023664772504*^9, 3.884023665874771*^9}, {3.884078916119878*^9, 
   3.8840790022806187`*^9}, {3.8840790448825083`*^9, 3.88407907413173*^9}, {
   3.88407920683447*^9, 3.884079243849283*^9}, {3.884079277083838*^9, 
   3.88407934632056*^9}, 3.884079529414043*^9, {3.884079573255114*^9, 
   3.884079642813552*^9}, {3.884079934569656*^9, 3.884080026887967*^9}, {
   3.884080356689108*^9, 3.884080504906933*^9}, 3.88408085397488*^9, {
   3.884080932032104*^9, 3.884080937919712*^9}, 3.8840811033550873`*^9, {
   3.884081385009315*^9, 3.884081448235317*^9}, {3.884081563532221*^9, 
   3.884081567737132*^9}, 3.8840817049420967`*^9, {3.884081836102024*^9, 
   3.884081841771434*^9}, {3.884082043544448*^9, 3.8840820492865143`*^9}, {
   3.884082144079009*^9, 3.8840822915463676`*^9}, {3.884082408311798*^9, 
   3.884082487359342*^9}, {3.884082565603445*^9, 3.8840826209332523`*^9}, {
   3.884082668636178*^9, 3.88408273423881*^9}, {3.884082816829908*^9, 
   3.88408290700161*^9}, {3.8840829451700277`*^9, 3.8840830372137737`*^9}, {
   3.884083088029798*^9, 3.884083089013269*^9}, {3.884083273227541*^9, 
   3.8840832872871113`*^9}, {3.884083364407957*^9, 3.884083415590907*^9}, {
   3.8840835723745413`*^9, 3.8840842113893538`*^9}, 3.884084269499523*^9, {
   3.88408493596192*^9, 3.884084936991332*^9}, {3.884084994860001*^9, 
   3.88408504360075*^9}, {3.884185308506421*^9, 3.8841853442005577`*^9}, {
   3.894389498534193*^9, 3.894389550837973*^9}, {3.894389807526718*^9, 
   3.894389831520404*^9}, {3.894389945786174*^9, 3.894390084789009*^9}, {
   3.8943901363628187`*^9, 3.894390140569495*^9}, {3.8943905457606573`*^9, 
   3.894390553849627*^9}, {3.894390623181291*^9, 3.89439067726268*^9}, {
   3.894390801790567*^9, 3.8943909371822367`*^9}, {3.894390976983129*^9, 
   3.894391003023488*^9}, {3.8943910447117662`*^9, 3.894391108126068*^9}, {
   3.894391145900565*^9, 3.894391190367807*^9}, {3.8943912211785173`*^9, 
   3.894391405915073*^9}, {3.8943914467284803`*^9, 3.894391478371379*^9}, {
   3.89439158233222*^9, 3.8943916082220182`*^9}, {3.894391703532167*^9, 
   3.894391735902006*^9}, 3.8943917755640583`*^9, {3.894391815804783*^9, 
   3.894391922453916*^9}, {3.894391961553596*^9, 3.894391988444161*^9}, {
   3.894392057815938*^9, 3.894392115602552*^9}, {3.894392145961156*^9, 
   3.894392421879208*^9}, {3.8943924645195293`*^9, 3.894392745229598*^9}, 
   3.8943951383786182`*^9, {3.895556702357575*^9, 3.895556702716022*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"87274038-e121-4cf6-9854-097f3a94bf01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trying all possible sequences and varying noise scale", "Subsection",
 CellChangeTimes->{{3.876985491179178*^9, 3.87698551374761*^9}, {
  3.876985561194066*^9, 3.876985567912353*^9}, {3.8769863863729887`*^9, 
  3.876986387563737*^9}, {3.883738649995586*^9, 3.88373867507825*^9}, {
  3.897378145824827*^9, 3.897378153831368*^9}, {3.897378396429449*^9, 
  3.8973784031880217`*^9}},ExpressionUUID->"b5ebd345-aa7c-4daf-9611-\
4bab62c48860"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TIonDist", "::", "usage"}], "=", 
   "\"\<TIonDist[\[Rho],sequence:{},device_option:{}]. Distillation \
simulation on trapped ions.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TIonDist", "[", 
   RowBox[{"\[Rho]_", ",", 
    RowBox[{"sequence_", ":", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"devoptions_", ":", 
     RowBox[{"{", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "dev", ",", "circ", ",", "noisysch", ",", "noisycirc", ",", "nions"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dev", "=", 
      RowBox[{"TrappedIonOxford", "[", 
       RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nions", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"Length", "/@", 
        RowBox[{"Flatten", "/@", 
         RowBox[{"Values", "@", 
          RowBox[{"Values", "@", 
           RowBox[{"dev", "[", "Nodes", "]"}]}]}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"circ", "=", 
      RowBox[{"DistCircTrappedIons4", "[", "sequence", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"noisysch", "=", 
      RowBox[{"InsertCircuitNoise", "[", 
       RowBox[{
        RowBox[{"CircTrappedIons", "[", 
         RowBox[{"circ", ",", "dev", ",", 
          RowBox[{"MapQubits", "->", "False"}]}], "]"}], ",", "dev", ",", 
        RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"noisycirc", "=", 
      RowBox[{"ExtractCircuit", "@", "noisysch"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"Not", "@", 
       RowBox[{"heraldout", "@", 
        RowBox[{"ApplyCircuit", "[", 
         RowBox[{"\[Rho]", ",", "noisycirc"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "noisysch"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seqlabel", "[", "l_List", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"conv", "=", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"0", "->", "\"\<ph\>\""}], ",", 
        RowBox[{"1", "->", "\"\<bf\>\""}]}], "|>"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "l"}], ">", "0"}], ",", 
      RowBox[{"StringRiffle", "[", 
       RowBox[{
        RowBox[{"conv", "/@", "l"}], ",", "\"\<,\>\""}], "]"}], ",", 
      "\"\<raw\>\""}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAmIQHdSzdsal928cS5Z9BdPfzt5aAqIbxB+A6XXxS6+C
6O/rC6+BxVf63wPRq7xDwbROcvWmq0D61dTX20B0TNS0q9eA9JMXCrdB9KUO
X07tD28cbRYHgen8uTpOIPpBCq8riPZTtgsF0Se2TQfT55x020H0HF9bML1i
3q5+EN3g+ngiiP4qFHoCbJ5pFJhe5njiMYgW4mZ8AqJrF2o1GQDpe8F6rSBa
QadYzRtIi3i2GYJoJobFISA6489OMP3n3f03ILr+tedbEJ02jf0biJ5xw+YH
iJbynv0XRL95nv0PbM6ZN7w+IHPv7uAH0YcuPlMF0TnLTNVA9N8XfMUg+mrl
LjCtUjv/B4ie4pn/H0R/Sj5w0xdIF5Ux3gLRm1Z0ZHwB+fv/nBIQfSje/ake
21tHrvDPYBoAadPyCA==
  "],
 CellLabel->
  "In[381]:=",ExpressionUUID->"d3ef4b57-c915-44e7-a2dd-e988c9b334d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]8", "=", 
   RowBox[{"CreateDensityQureg", "[", "8", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.884080520117523*^9, 3.884080529969091*^9}, {
  3.8840808828844233`*^9, 3.884080886702765*^9}, {3.884252329713835*^9, 
  3.884252332653784*^9}},
 CellLabel->
  "In[384]:=",ExpressionUUID->"d48cda91-007d-4a92-a018-55359e2beb65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plot\[Rho]8", "[", 
   RowBox[{"label_", ",", 
    RowBox[{"raster_", ":", "False"}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plot", "=", 
      RowBox[{"PlotDensityMatrix", "[", 
       RowBox[{
        RowBox[{"Chop", "@", 
         RowBox[{"mat2BellBasis", "[", 
          RowBox[{"PartialTrace", "[", 
           RowBox[{
           "\[Rho]8", ",", "0", ",", "1", ",", "2", ",", "4", ",", "5", ",", 
            "6"}], "]"}], "]"}]}], ",", 
        RowBox[{"ViewPoint", "->", 
         RowBox[{"{", 
          RowBox[{"\[Pi]", ",", 
           RowBox[{
            RowBox[{"-", "2"}], "\[Pi]"}], ",", 
           RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], ",", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"chartbell", "[", "label", "]"}]}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"raster", ",", "\[IndentingNewLine]", 
      RowBox[{"Rasterize", "[", 
       RowBox[{"plot", ",", 
        RowBox[{"RasterSize", "->", "Full"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "raster"}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.883840105600441*^9, 3.883840120331955*^9}, 
   3.884073126907152*^9, {3.884079803119749*^9, 3.8840798545223103`*^9}, {
   3.8842505757635813`*^9, 3.884250602039383*^9}, {3.884259584115641*^9, 
   3.884259592104947*^9}, {3.88426007828642*^9, 3.884260097614106*^9}, {
   3.884260133688654*^9, 3.884260134716859*^9}, {3.884261325015828*^9, 
   3.884261377370496*^9}, {3.884261419858343*^9, 3.884261462766596*^9}, {
   3.88476851647145*^9, 3.8847685936416187`*^9}, {3.884768938751589*^9, 
   3.884768964994402*^9}, {3.894392766946554*^9, 3.894392767673459*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"d7c1c783-cec8-462f-838c-0b4172fe2dec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"devoptions", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.884252497687302*^9, 3.8842525002318296`*^9}, {
   3.884260589817398*^9, 3.8842606043956423`*^9}, {3.88426080900776*^9, 
   3.8842608095091553`*^9}, {3.884260849128395*^9, 3.884260859695969*^9}, 
   3.884261045011009*^9, {3.8844252292273827`*^9, 3.8844252361916933`*^9}, {
   3.884427799152611*^9, 3.884427803959045*^9}, 3.8847684647337646`*^9},
 CellLabel->
  "In[387]:=",ExpressionUUID->"bb61045a-5708-4fa8-8e50-1a90d6b07112"],

Cell[BoxData[{
 RowBox[{"Print", "[", "\"\<Round 0-1\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"round1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"round1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"TIonDist", "[", 
           RowBox[{"\[Rho]8", ",", "#", ",", "devoptions"}], "]"}], ",", 
          RowBox[{"seqlabel", "@", "#"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"plot\[Rho]8", "[", 
       RowBox[{
        RowBox[{"seqlabel", "@", "#"}], ",", "True"}], "]"}]}], ")"}], "&"}], 
   "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.876983759899682*^9, 3.87698379497071*^9}, 
   3.876985488589458*^9, {3.876985524227214*^9, 3.876985555349738*^9}, 
   3.8769863950223417`*^9, {3.876986435955969*^9, 3.876986464965557*^9}, {
   3.8769865456430883`*^9, 3.876986545773653*^9}, {3.8770032151413603`*^9, 
   3.877003255082529*^9}, {3.88243346757747*^9, 3.8824334791260567`*^9}, {
   3.883644486989978*^9, 3.883644499083667*^9}, {3.883644606379937*^9, 
   3.883644646496933*^9}, {3.883644727628627*^9, 3.883644737742907*^9}, {
   3.8836447755040503`*^9, 3.883644778009343*^9}, {3.883644817780237*^9, 
   3.883644828396139*^9}, {3.883645491334634*^9, 3.8836454938018293`*^9}, {
   3.8836456248860617`*^9, 3.883645637821274*^9}, {3.883645690210877*^9, 
   3.883645702222929*^9}, {3.883645812784143*^9, 3.883645819130237*^9}, {
   3.883645884049765*^9, 3.883645906453459*^9}, {3.883646013708105*^9, 
   3.883646024401319*^9}, {3.883646072141158*^9, 3.883646082415362*^9}, {
   3.883646116929978*^9, 3.8836461681336184`*^9}, {3.883646223452014*^9, 
   3.883646225368339*^9}, {3.883646644317369*^9, 3.8836466487445107`*^9}, {
   3.883646903281111*^9, 3.883646905253477*^9}, {3.883647068588375*^9, 
   3.8836470707090683`*^9}, {3.883653341740408*^9, 3.883653437810686*^9}, {
   3.8837385410075893`*^9, 3.883738553468547*^9}, {3.8837387041686172`*^9, 
   3.8837387960125732`*^9}, {3.883738832292583*^9, 3.88373883266717*^9}, {
   3.883738908557166*^9, 3.883739059327589*^9}, {3.883821777363483*^9, 
   3.883821778276778*^9}, {3.883821826723984*^9, 3.883821828697918*^9}, {
   3.883821888492304*^9, 3.883822103230908*^9}, {3.883825869922744*^9, 
   3.8838259187282763`*^9}, {3.8838268239743013`*^9, 
   3.8838268656313667`*^9}, {3.883826926498542*^9, 3.883826958077415*^9}, {
   3.883827725404242*^9, 3.883827809466003*^9}, {3.8840248870129642`*^9, 
   3.884025016729622*^9}, {3.884025108445436*^9, 3.88402520098709*^9}, {
   3.8840255646256323`*^9, 3.8840255652593203`*^9}, {3.884076979251896*^9, 
   3.884076992355555*^9}, {3.884077023006154*^9, 3.884077024955639*^9}, {
   3.884077323161292*^9, 3.8840773350172977`*^9}, {3.884077377186109*^9, 
   3.884077384445868*^9}, {3.884077451694704*^9, 3.8840774633687572`*^9}, {
   3.8840797002629213`*^9, 3.8840797214912853`*^9}, {3.884080516377543*^9, 
   3.884080566178294*^9}, {3.8840809683877907`*^9, 3.884080971706333*^9}, {
   3.884081165369791*^9, 3.884081204456629*^9}, {3.884081288971588*^9, 
   3.884081315742487*^9}, {3.884081477481186*^9, 3.8840815215679693`*^9}, {
   3.884082111476204*^9, 3.8840821151609364`*^9}, {3.884082178898052*^9, 
   3.884082183178899*^9}, {3.88408304584219*^9, 3.884083046672*^9}, {
   3.884083097513237*^9, 3.884083124416521*^9}, {3.884083171169001*^9, 
   3.884083230842572*^9}, {3.884084219064098*^9, 3.884084219776917*^9}, {
   3.8840842796288977`*^9, 3.8840843008178997`*^9}, {3.8840845988067713`*^9, 
   3.884084604560667*^9}, {3.8840847092083073`*^9, 3.884084710952265*^9}, {
   3.884084804512784*^9, 3.884084843098172*^9}, {3.884085109775897*^9, 
   3.884085129078595*^9}, {3.884085177901042*^9, 3.884085203865506*^9}, {
   3.8840852877810993`*^9, 3.884085353356028*^9}, {3.8840854038826103`*^9, 
   3.884085409859557*^9}, {3.88408552824098*^9, 3.884085530729125*^9}, {
   3.884085713478037*^9, 3.8840857188309927`*^9}, {3.8841850562689342`*^9, 
   3.884185068356167*^9}, {3.8841869890758047`*^9, 3.8841869906556873`*^9}, {
   3.8841870750203238`*^9, 3.88418708072486*^9}, {3.884202516032529*^9, 
   3.8842025169519978`*^9}, {3.884238888827962*^9, 3.884238889181468*^9}, {
   3.8842523536024437`*^9, 3.8842523537904654`*^9}, {3.884252686523196*^9, 
   3.8842526893947372`*^9}, {3.884261482272582*^9, 3.884261483673614*^9}, {
   3.884425366762396*^9, 3.884425367682714*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"f0cc4e96-9a39-48b4-b95c-b540a2ea63f5"],

Cell[BoxData[{
 RowBox[{"Print", "[", "\"\<Round 2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"round2", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"round2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"TIonDist", "[", 
           RowBox[{"\[Rho]8", ",", "#", ",", "devoptions"}], "]"}], ",", 
          RowBox[{"seqlabel", "@", "#"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"plot\[Rho]8", "[", 
       RowBox[{
        RowBox[{"seqlabel", "@", "#"}], ",", "True"}], "]"}]}], ")"}], "&"}], 
   "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.884085723023406*^9, 3.8840857459568*^9}, {
  3.884186994446067*^9, 3.8841870100236053`*^9}, {3.884193912142407*^9, 
  3.8841939152531033`*^9}, {3.884202521452284*^9, 3.8842025227688932`*^9}, {
  3.884238894026556*^9, 3.884238894636732*^9}, {3.884261487566008*^9, 
  3.884261489387876*^9}, {3.884425371282292*^9, 3.8844253720285*^9}},
 CellLabel->
  "In[391]:=",ExpressionUUID->"fe995218-246c-4fee-aa17-401bf29eba72"],

Cell[BoxData[{
 RowBox[{"Print", "[", "\"\<Round 3\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"round3", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"round3", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"TIonDist", "[", 
           RowBox[{"\[Rho]8", ",", "#", ",", "devoptions"}], "]"}], ",", 
          RowBox[{"seqlabel", "@", "#"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"plot\[Rho]8", "[", 
       RowBox[{
        RowBox[{"seqlabel", "@", "#"}], ",", "True"}], "]"}]}], ")"}], "&"}], 
   "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.884085765740828*^9, 3.884085808342691*^9}, {
  3.884187029501848*^9, 3.8841870407236547`*^9}, {3.884193921274691*^9, 
  3.884193925358638*^9}, {3.884202527054818*^9, 3.884202527504093*^9}, {
  3.8842388996421556`*^9, 3.8842389000660467`*^9}, {3.8842614947564487`*^9, 
  3.884261495562191*^9}, {3.884425375777172*^9, 3.8844253766206083`*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"ebc8df5a-99d7-46cc-8e7e-18544fab8380"],

Cell[TextData[StyleBox["The best-two strategy for the virtual device",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.884261134796404*^9, 3.8842611428557177`*^9}, {
  3.884261617012134*^9, 3.884261619170156*^9}, {3.884272831064361*^9, 
  3.884272831999352*^9}, {3.884768480324443*^9, 
  3.884768481568643*^9}},ExpressionUUID->"5b88e094-8202-4d6a-b4a7-\
8863f2549d92"],

Cell[BoxData[{
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"plot1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"plot1", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"plot2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"plot3", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"Spacings", "->", "0."}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<dist_best.pdf\>\"", ",", "%"}], "]"}], "\[IndentingNewLine]",
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.88476836979751*^9, 3.884768387466543*^9}, {
   3.8847684206937847`*^9, 3.88476842814439*^9}, {3.884769025461142*^9, 
   3.884769050509899*^9}, 3.884769438962137*^9, 3.891279324905113*^9, 
   3.894876150292529*^9, {3.895556725175983*^9, 3.895556747643154*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"d23bce0c-c94e-4222-8c3c-d8d1cf4feb15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Varying", " ", "the", " ", "parameters", " ", "and", " ", "take", " ", 
     "the", " ", "best", " ", "fidelity", " ", "among", " ", "all", " ", 
     "trials", " ", "up", " ", "to", " ", "3"}], "-", 
    RowBox[{"rounds", " ", "of", " ", "distillation"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fullseq", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"varyParams", "[", 
     RowBox[{"\[Rho]_", ",", "func_", ",", "vars_", ",", 
      RowBox[{"sequences_", ":", "fullseq"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newfid", ",", "fid", ",", "bestfid", ",", "results"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"results", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"seqlabel", "@", "#"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"TIonDist", "[", 
                 RowBox[{"\[Rho]", ",", "#", ",", 
                  RowBox[{"func", "[", "fid", "]"}]}], "]"}], ";", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"mat2BellBasis", "@", 
                    RowBox[{"PartialTrace", "[", 
                    RowBox[{
                    "\[Rho]", ",", "0", ",", "1", ",", "2", ",", "4", ",", 
                    "5", ",", "6"}], "]"}]}], ")"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], "//", "Re"}]}], 
               ")"}]}], "}"}], "&"}], "/@", "sequences"}]}], ";", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"bestfid", "=", 
          RowBox[{"First", "@", 
           RowBox[{"results", "[", 
            RowBox[{"[", 
             RowBox[{"Ordering", "[", 
              RowBox[{
               RowBox[{"results", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"{", 
          RowBox[{"fid", ",", 
           RowBox[{"Sequence", "@@", "bestfid"}]}], "}"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"fid", ",", "vars"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.884433702380515*^9, 3.884433834616086*^9}, {
   3.884433882640354*^9, 3.8844339074582787`*^9}, {3.884434001598508*^9, 
   3.884434438487933*^9}, {3.88443448037461*^9, 3.884434528106463*^9}, 
   3.884435057035913*^9, {3.884435088716258*^9, 3.884435149985196*^9}, {
   3.884435855542631*^9, 3.88443587226934*^9}, {3.8844360033515873`*^9, 
   3.884436034831912*^9}, {3.8844360835608253`*^9, 3.884436098149726*^9}, {
   3.88443629007281*^9, 3.884436291373188*^9}, {3.884436634672605*^9, 
   3.8844366508212147`*^9}, {3.8844366892645197`*^9, 
   3.8844367030987177`*^9}, {3.884438101029834*^9, 3.884438125189793*^9}, {
   3.884438186030245*^9, 3.884438203948101*^9}, {3.8844382384319563`*^9, 
   3.884438252432403*^9}, {3.884439126319199*^9, 3.884439198437841*^9}, {
   3.884439846041917*^9, 3.884439854890163*^9}, {3.8845096546563673`*^9, 
   3.884509738812911*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"40a5e3e9-6aeb-4401-81fb-30579028eaec"],

Cell[BoxData[
 RowBox[{"fids", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["1.5", 
        RowBox[{"-", "#"}]]}], ")"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"6", ",", "35", ",", "0.5"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.884440987430429*^9, 3.884441069953128*^9}, {
  3.884441863640518*^9, 3.884441863827091*^9}, {3.8844423181725492`*^9, 
  3.88444231840948*^9}, {3.8844423687096357`*^9, 3.88444238514538*^9}, {
  3.8844424244235163`*^9, 3.8844425418101883`*^9}, {3.884509764192595*^9, 
  3.884509776966977*^9}, {3.884509876116819*^9, 3.884509889168647*^9}, {
  3.884516514352813*^9, 3.8845165436452427`*^9}, {3.894369141334062*^9, 
  3.894369142055457*^9}, {3.8943691975082197`*^9, 3.894369197845867*^9}},
 CellLabel->
  "In[400]:=",ExpressionUUID->"9239bfde-225f-433c-bcb1-7600c98e278a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fsxy", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"FidSingleXY", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "#"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "#"}]}], "|>"}]}], "}"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fcz", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"FidCZ", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "#"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "#"}]}], "|>"}]}], "}"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fent", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"FidEnt", "->", "#"}], "}"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fsxycz", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FidSingleXY", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "#"}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", "#"}]}], "|>"}]}], ",", 
      RowBox[{"FidCZ", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "#"}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", "#"}]}], "|>"}]}]}], "}"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fsxyent", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FidSingleXY", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "#"}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", "#"}]}], "|>"}]}], ",", 
      RowBox[{"FidEnt", "->", "#"}]}], "}"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fczent", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FidCZ", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "#"}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", "#"}]}], "|>"}]}], ",", 
      RowBox[{"FidEnt", "->", "#"}]}], "}"}], "&"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.884439682692505*^9, 3.884439683605513*^9}, {
  3.884440519290341*^9, 3.884440596908709*^9}, {3.884442946376223*^9, 
  3.884442947606924*^9}, {3.884691043151946*^9, 3.884691149285693*^9}},
 CellLabel->
  "In[401]:=",ExpressionUUID->"a6d599fc-d587-4710-b29e-3d6d554fc408"],

Cell["\<\
(* this is the actualy calculation on varying parameters on all possible \
sequences. Took quite a while.*)
ressxy = varyParams[\[Rho]8, fsxy, fids];
rescz = varyParams[\[Rho]8, fcz, fids];
resent = varyParams[\[Rho]8, fent, fids];
rsxycz = varyParams[\[Rho]8, fsxycz, fids];
rsxyent = varyParams[\[Rho]8, fsxyent, fids];
rczent = varyParams[\[Rho]8, fczent, fids];
fidvars = {\"Rx,Ry\" -> ressxy, \"CZ\" -> rescz, \"Ent\" -> resent, \
\"Rx,Ry,CZ\" -> rsxycz, \"Rx,Ry,Ent\" -> rsxyent, \"CZ,Ent\" -> rczent};\
\>", "CodeText",
 CellChangeTimes->{{3.884434446251329*^9, 3.884434463003044*^9}, 
   3.884435066944887*^9, {3.884435892113399*^9, 3.884435906731529*^9}, {
   3.8844366642554626`*^9, 3.884436665764512*^9}, {3.884436824987363*^9, 
   3.8844368290426188`*^9}, {3.8844368599716263`*^9, 3.884436909891922*^9}, {
   3.884436959932452*^9, 3.8844369825790873`*^9}, {3.8844375196903877`*^9, 
   3.8844375201954*^9}, {3.8844392100948477`*^9, 3.884439211316442*^9}, {
   3.884439315413377*^9, 3.8844393185029707`*^9}, 3.8844395888219748`*^9, {
   3.884439631820965*^9, 3.884439673280079*^9}, {3.884439721469962*^9, 
   3.884439722242716*^9}, {3.884439761136059*^9, 3.8844398150076723`*^9}, 
   3.88444433374375*^9, {3.8845097868667383`*^9, 3.884509857592202*^9}, 
   3.884509930239984*^9, 3.88452371030536*^9, {3.884691039307732*^9, 
   3.884691041861652*^9}, {3.88469115377709*^9, 3.884691233149499*^9}, 
   3.884755310096434*^9, 3.8847770388103*^9, {3.894878695817163*^9, 
   3.894878700052429*^9}, {3.897378161125832*^9, 
   3.897378194311686*^9}},ExpressionUUID->"b85a9973-7bc5-4b44-9ccd-\
a70961042840"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"load", " ", "pre"}], "-", 
     RowBox[{"run", " ", "data"}]}], ",", " ", 
    RowBox[{
    "otherwise", " ", "run", " ", "the", " ", "code", " ", "above", " ", "to",
      " ", "reproduce", " ", "the", " ", "data"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fidvars", 
    RowBox[{
    "<<", "\"\<../supplement/DistillationOnTrappedIons/fidvars.mx\>\""}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.8948786124590483`*^9, 3.8948786887013187`*^9}, {
  3.895556768009326*^9, 3.895556802983254*^9}, {3.895673056983721*^9, 
  3.895673057270666*^9}, {3.8973762099823503`*^9, 3.8973762103463507`*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"71bc1a0a-e577-47b7-9c9a-ae87bc85dd8e"],

Cell[BoxData[
 RowBox[{"fidvars", "//", "Keys"}]], "Input",
 CellChangeTimes->{{3.884779312471287*^9, 3.884779322984024*^9}},
 CellLabel->
  "In[408]:=",ExpressionUUID->"fa5e7bdc-88e3-427c-bf80-99959d759f7a"],

Cell[BoxData[
 RowBox[{"fplot1", "=", 
  RowBox[{"ListLogLogPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"5", ";;"}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Values", "[", "fidvars", "]"}]}], ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
    RowBox[{"PlotMarkers", "->", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", " ", "12"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "->", 
     RowBox[{"{", 
      RowBox[{"17", ",", 
       RowBox[{"FontFamily", "->", "\"\<Sans Serif\>\""}]}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "->", "0.6"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
    RowBox[{"FrameLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Fidelity of the operator(s) in the legend\>\"", ",", 
       "\"\<Bell pair fidelity\>\""}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "500"}], ",", 
    RowBox[{"Joined", "->", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"False", ",", 
         RowBox[{"Length", "@", "fidvars"}]}], "]"}], ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"True", ",", 
         RowBox[{"Length", "@", "fidvars"}]}], "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "->", "Dashed"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Rx,Ry\>\"", ",", "\"\<CZ\>\"", ",", "\"\<Ent\>\"", ",", 
           "\"\<Rx,Ry,CZ\>\"", ",", "\"\<Rx,Ry,Ent\>\"", ",", 
           "\"\<CZ,Ent\>\""}], "}"}], ",", 
         RowBox[{"Spacings", "->", "0."}], ",", 
         RowBox[{"LegendFunction", "->", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Framed", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FrameStyle", "->", 
               RowBox[{"(", 
                RowBox[{"Antialiasing", "->", "False"}], ")"}]}], ",", 
              RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
              RowBox[{"Background", "->", "White"}]}], "]"}], "&"}], 
           ")"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.89", ",", "0.2"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"GridLines", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "0.95", "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLinesStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Red"}], "}"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.884437407432144*^9, 3.884437408478819*^9}, {
   3.884437661634602*^9, 3.884437724515233*^9}, {3.884440212262121*^9, 
   3.884440278878039*^9}, {3.8844403232639112`*^9, 3.884440337592362*^9}, {
   3.884440391050621*^9, 3.88444041766433*^9}, {3.884440612639896*^9, 
   3.884440746636726*^9}, {3.884440939156205*^9, 3.884440958215629*^9}, {
   3.884441442741459*^9, 3.8844414640304956`*^9}, {3.8844416357450933`*^9, 
   3.884441660914229*^9}, {3.8844417531246433`*^9, 3.884441852623362*^9}, {
   3.884442306197207*^9, 3.884442308278021*^9}, {3.884444166274457*^9, 
   3.8844442000739307`*^9}, {3.884444399690482*^9, 3.884444469659536*^9}, 
   3.8844445456298656`*^9, {3.884508188543632*^9, 3.884508189101247*^9}, {
   3.884508276320068*^9, 3.8845082778642797`*^9}, {3.884508615892975*^9, 
   3.884508657588213*^9}, {3.8845087161788263`*^9, 3.884508890658443*^9}, {
   3.884508927439196*^9, 3.884509029618328*^9}, {3.8845093232391663`*^9, 
   3.88450945270551*^9}, {3.8845095198164883`*^9, 3.8845095481115847`*^9}, {
   3.8845095850401163`*^9, 3.884509585431872*^9}, 3.8845227788692617`*^9, {
   3.884523013035804*^9, 3.884523161063169*^9}, {3.884523296124238*^9, 
   3.8845233354073973`*^9}, {3.884523368005604*^9, 3.8845233737387733`*^9}, {
   3.884523537429639*^9, 3.884523665146882*^9}, {3.8846926265895348`*^9, 
   3.884692663146945*^9}, {3.88469664755029*^9, 3.884696648164784*^9}, {
   3.884696678449306*^9, 3.884696722320299*^9}, {3.884751551397209*^9, 
   3.884751735906925*^9}, 3.8847517732341967`*^9, {3.884754748345634*^9, 
   3.884754749301606*^9}, {3.8847548209884157`*^9, 3.884754882191918*^9}, {
   3.884754919702256*^9, 3.884755049225357*^9}, {3.88475507983328*^9, 
   3.884755096768564*^9}, {3.88475516257789*^9, 3.884755242921239*^9}, {
   3.8847769625439367`*^9, 3.884776963607922*^9}, {3.8847786725043983`*^9, 
   3.884778689548504*^9}, {3.884778784137938*^9, 3.884778858009326*^9}, {
   3.884779170364292*^9, 3.884779173583446*^9}, {3.89487670643356*^9, 
   3.8948767815446978`*^9}, {3.895563273818582*^9, 3.895563296098666*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"d639a4b0-d054-48ab-be36-34eeeb89e9f3"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<tions_vars.pdf\>\"", ",", "fplot1"}], "]"}], "*)"}]], "Input",\

 CellChangeTimes->{{3.884523669372581*^9, 3.8845236828844833`*^9}, 
   3.884751790007187*^9, 3.884755103012903*^9, 3.884776939817153*^9, {
   3.8847788136685057`*^9, 3.88477881567624*^9}, 3.8847788656725483`*^9, 
   3.894393091413356*^9, 3.894876157668687*^9, 3.894876746479233*^9, {
   3.895556814236793*^9, 3.895556817800377*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"9523d609-5184-43cd-a526-9a9227181714"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Timing and time profiling on each operations", "Subsection",
 CellChangeTimes->{{3.884193830102346*^9, 3.884193832885457*^9}, {
  3.884194680906012*^9, 3.884194689924513*^9}, {3.884246675633849*^9, 
  3.884246682317671*^9}},ExpressionUUID->"3f783393-ac8c-4ab4-a534-\
ae0c5bd4afff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"totaltime", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Last", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], "->", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], "/@", "round1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"Last", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], "->", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], "/@", "round2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"Last", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], "->", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], "/@", "round3"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.88419347197855*^9, 3.884193554774762*^9}, {
   3.884193691067872*^9, 3.884193883418623*^9}, {3.884193935029613*^9, 
   3.8841939760250177`*^9}, 3.884194704670659*^9, {3.894369676779674*^9, 
   3.89436967851173*^9}, {3.8955615027690783`*^9, 3.895561505123527*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"7358bde7-d760-48d2-a30e-a9d7b2f005e4"],

Cell["\<\
Plot all the total time for all possible configuration of the distillationsf \
or up to 3 rounds\
\>", "Text",
 CellChangeTimes->{{3.895561531945798*^9, 3.8955615666583557`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"97b80097-e3fc-4199-a26e-1b9a93f8c2b2"],

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{"totaltime", ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<distillation round\>\"", ",", "\"\<total time (\[Mu]s)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"ScalingFunctions", "->", "\"\<Log\>\""}], ",", 
   RowBox[{"FrameTicks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameStyle", "->", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"BaseStyle", "->", 
    RowBox[{"{", 
     RowBox[{"13", ",", 
      RowBox[{"FontFamily", "->", "\"\<Sans Serif\>\""}]}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenMarkers\>\"", ",", " ", "Small"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "->", "330"}], ",", 
   RowBox[{"AspectRatio", "->", "0.6"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<tions_totaltime.pdf\>\"", ",", "%"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.884193977961104*^9, 3.8841944013575068`*^9}, {
   3.884194463130657*^9, 3.8841945262389812`*^9}, {3.884194615203252*^9, 
   3.88419464207542*^9}, {3.884238985267003*^9, 3.884238985612734*^9}, {
   3.884265985427348*^9, 3.884265996480935*^9}, {3.8842660750602083`*^9, 
   3.884266122267807*^9}, 3.8842662094059467`*^9, {3.895556874596855*^9, 
   3.8955568764031363`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"df2979d7-6aea-44c5-b924-a9814fe7a265"],

Cell[BoxData["totaltime"], "Input",
 CellChangeTimes->{{3.884266214095786*^9, 3.8842662150457487`*^9}},
 CellLabel->
  "In[413]:=",ExpressionUUID->"b1d09550-43c2-47bd-9fe0-461e02505612"],

Cell["Create time profile on each operator", "Text",
 CellChangeTimes->{{3.895561597827038*^9, 3.895561664365715*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a5df5110-0fd0-4f59-95af-b87d1cde141d"],

Cell[BoxData[{
 RowBox[{"SetAttributes", "[", 
  RowBox[{"getTime", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getTime", "[", 
   RowBox[{"gate_", ",", "lopt_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "g", ",", "node", ",", "moves", ",", "sgate", ",", "\[Theta]", ",", 
      RowBox[{"opt", "=", 
       RowBox[{"Association", "[", "lopt", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g", ",", "node"}], "}"}], "=", 
      RowBox[{"gate", "/.", 
       RowBox[{
        RowBox[{
         SubscriptBox["gg_", "__"], "[", 
         RowBox[{"n_", ",", "___"}], "]"}], ":>", 
        RowBox[{"{", 
         RowBox[{"gg", ",", "n"}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"moves", "=", 
      RowBox[{"{", 
       RowBox[{"Splz", ",", "Comb", ",", "SWAPLoc", ",", "Shutl"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"sgate", "=", 
      RowBox[{"{", 
       RowBox[{"Rx", ",", "Ry"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"moves", ",", "g"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"opt", "[", "DurMove", "]"}], "[", "node", "]"}], "[", "g", 
        "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"sgate", ",", "g"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]", "=", 
         RowBox[{"gate", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["_", "_"], "[", 
             RowBox[{"_", ",", "t_"}], "]"}], ":>", "t"}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Abs", "[", "\[Theta]", "]"}], "/", 
         RowBox[{
          RowBox[{"opt", "[", "RabiFreq", "]"}], "[", "node", "]"}]}]}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"g", "===", "CZ"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]", "/", 
        RowBox[{
         RowBox[{"opt", "[", "FreqCZ", "]"}], "[", "node", "]"}]}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"g", "===", "Ent"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]", "/", 
        RowBox[{"opt", "[", "FreqEnt", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"g", "===", "Init"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"opt", "[", "DurInit", "]"}], "[", "node", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"g", "===", "Read"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"opt", "[", "DurRead", "]"}], "[", "node", "]"}], ",", 
       "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", "0"}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.88419573095161*^9, 3.884196047123104*^9}, {
  3.884196601747437*^9, 3.8841966117475643`*^9}, {3.8841966440505857`*^9, 
  3.884196646050846*^9}, {3.88419900963748*^9, 3.884199054213985*^9}, {
  3.884199997718644*^9, 3.884200126143897*^9}, {3.884200164953903*^9, 
  3.8842003010447807`*^9}, {3.884200362487685*^9, 3.884200383996241*^9}, {
  3.8842006191657953`*^9, 3.884200645923131*^9}, {3.884203412489668*^9, 
  3.8842034271559343`*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"5622a493-a0b4-436f-bfc2-16b8b98fbbb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeProfile", "[", 
   RowBox[{"circ_", ",", "opt_", ",", 
    RowBox[{"keys_", ":", 
     RowBox[{"{", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"time", ",", "gid", ",", "nodes", ",", "node", ",", "tkeys"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nodes", "=", 
      RowBox[{"Keys", "[", 
       RowBox[{
        RowBox[{"<|", "opt", "|>"}], "[", "Nodes", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tkeys", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "keys"}], "<", "1"}], ",", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"circ", "/.", 
          RowBox[{
           RowBox[{
            SubscriptBox["g_", "__"], "[", 
            RowBox[{"n_", ",", "___"}], "]"}], ":>", "g"}]}], "]"}], ",", 
        "keys"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"time", "=", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "->", 
          RowBox[{"AssociationThread", "[", 
           RowBox[{"tkeys", "->", "0"}], "]"}]}], "&"}], "/@", "nodes"}], 
       "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gid", ",", "node"}], "}"}], "=", 
         RowBox[{"gate", "/.", 
          RowBox[{
           RowBox[{
            SubscriptBox["g_", "__"], "[", 
            RowBox[{"n_", ",", "___"}], "]"}], ":>", 
           RowBox[{"{", 
            RowBox[{"g", ",", "n"}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"gid", "===", "Ent"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"time", "[", "#", "]"}], "[", "gid", "]"}], "+=", 
             RowBox[{"getTime", "[", 
              RowBox[{"gate", ",", "opt"}], "]"}]}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"gate", "/.", 
             RowBox[{
              RowBox[{
               SubscriptBox["Ent", "__"], "[", 
               RowBox[{"n1_", ",", "n2_"}], "]"}], ":>", 
              RowBox[{"{", 
               RowBox[{"n1", ",", "n2"}], "}"}]}]}], ")"}]}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"time", "[", "node", "]"}], "[", "gid", "]"}], "+=", 
           RowBox[{"getTime", "[", 
            RowBox[{"gate", ",", "opt"}], "]"}]}]}], "\[IndentingNewLine]", 
         "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"gate", ",", "circ"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Association", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "->", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{
           RowBox[{"time", "[", "n", "]"}], ",", "Wait"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"n", ",", "nodes"}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8841953376428957`*^9, 3.8841953462223463`*^9}, {
   3.884195684665182*^9, 3.884195728240932*^9}, {3.884200329207313*^9, 
   3.8842003324840603`*^9}, {3.884200421608254*^9, 3.884200449377894*^9}, {
   3.884200491569158*^9, 3.8842005948011093`*^9}, {3.884200940669631*^9, 
   3.884201121232777*^9}, {3.884201162909505*^9, 3.884201166202427*^9}, {
   3.884201204391123*^9, 3.884201298229692*^9}, {3.884201344765958*^9, 
   3.884201507556099*^9}, {3.884202007650378*^9, 3.884202013837904*^9}, {
   3.884202125099784*^9, 3.884202226924253*^9}, {3.884202264572123*^9, 
   3.884202392462596*^9}, {3.8842034317402067`*^9, 3.884203496334087*^9}, {
   3.884203571300365*^9, 3.8842036162036343`*^9}, {3.884238376642931*^9, 
   3.884238379451604*^9}, {3.884238418302991*^9, 3.884238437847207*^9}, {
   3.884238494255528*^9, 3.884238534821761*^9}, 3.884253005693596*^9},
 CellLabel->
  "In[416]:=",ExpressionUUID->"5d25a051-a48d-413a-91e9-9803893a2ce4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"countProfile", "[", 
   RowBox[{"circ_", ",", "opt_", ",", 
    RowBox[{"keys_", ":", 
     RowBox[{"{", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"count", ",", "gid", ",", "nodes", ",", "node", ",", "tkeys"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nodes", "=", 
      RowBox[{"Keys", "[", 
       RowBox[{
        RowBox[{"<|", "opt", "|>"}], "[", "Nodes", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tkeys", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "keys"}], "<", "1"}], ",", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"circ", "/.", 
          RowBox[{
           RowBox[{
            SubscriptBox["g_", "__"], "[", 
            RowBox[{"n_", ",", "___"}], "]"}], ":>", "g"}]}], "]"}], ",", 
        "keys"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", "=", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "->", 
          RowBox[{"AssociationThread", "[", 
           RowBox[{"tkeys", "->", "0"}], "]"}]}], "&"}], "/@", "nodes"}], 
       "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gid", ",", "node"}], "}"}], "=", 
         RowBox[{"gate", "/.", 
          RowBox[{
           RowBox[{
            SubscriptBox["g_", "__"], "[", 
            RowBox[{"n_", ",", "___"}], "]"}], ":>", 
           RowBox[{"{", 
            RowBox[{"g", ",", "n"}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"gid", "===", "Ent"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"count", "[", "#", "]"}], "[", "gid", "]"}], "+=", 
             "1"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"gate", "/.", 
             RowBox[{
              RowBox[{
               SubscriptBox["Ent", "__"], "[", 
               RowBox[{"n1_", ",", "n2_"}], "]"}], ":>", 
              RowBox[{"{", 
               RowBox[{"n1", ",", "n2"}], "}"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"count", "[", "node", "]"}], "[", "gid", "]"}], "+=", 
           "1"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"gate", ",", "circ"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Association", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"n", "->", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{
           RowBox[{"count", "[", "n", "]"}], ",", "Wait"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "nodes"}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.884252903862183*^9, 3.884252962631558*^9}, 
   3.884253002913574*^9},
 CellLabel->
  "In[417]:=",ExpressionUUID->"a1d9d6fe-4d77-465f-8d38-897f12b65ea7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timeprofileplot", "[", 
    RowBox[{"node_", ",", "data_", ",", "keys_", ",", "title_", ",", 
     RowBox[{"legend_", ":", "True"}], ",", 
     RowBox[{"opt_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "node"}], "]"}], "]"}], ",", 
     RowBox[{"ChartLabels", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Rotate", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "3"}]}], "]"}], "&"}], "/@", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", "None"}], "}"}]}], 
     ",", 
     RowBox[{"Sequence", "@@", "opt"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"ChartLayout", "->", "\"\<Percentile\>\""}], ",", 
     RowBox[{"ChartStyle", "->", "\"\<ThermometerColors\>\""}], ",", 
     RowBox[{"ImageSize", "->", "330"}], ",", 
     RowBox[{"BarSpacing", "->", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.3"}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{"12", ",", 
        RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "title"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"If", "[", 
      RowBox[{"legend", ",", 
       RowBox[{"ChartLegends", "->", 
        RowBox[{"Placed", "[", 
         RowBox[{"keys", ",", "Right"}], "]"}]}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"{", "}"}]}]}], "]"}], ",", 
     RowBox[{"AspectRatio", "->", "1"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.884200978606414*^9, 3.884200978891589*^9}, {
   3.8842017755714912`*^9, 3.8842019763162518`*^9}, {3.8842024296206703`*^9, 
   3.8842024591630573`*^9}, 3.884202562412114*^9, {3.884202610664961*^9, 
   3.884202730814192*^9}, {3.884202820537224*^9, 3.8842028650397043`*^9}, {
   3.884202957137307*^9, 3.884203033402257*^9}, {3.884203106444951*^9, 
   3.884203169614521*^9}, {3.88420330566665*^9, 3.8842033397052603`*^9}, {
   3.88423866866844*^9, 3.8842386845188293`*^9}, {3.884238728247113*^9, 
   3.884238765718355*^9}, {3.884239019085681*^9, 3.8842391281651373`*^9}, {
   3.8842393032721443`*^9, 3.884239545547587*^9}, {3.884239608936722*^9, 
   3.884239622848134*^9}, {3.8842467210634727`*^9, 3.884246914315319*^9}, {
   3.884247502911468*^9, 3.884247511974662*^9}, {3.8842531635953407`*^9, 
   3.8842531718674*^9}, {3.88425320914505*^9, 3.8842532108299847`*^9}, {
   3.88425404750469*^9, 3.884254079203536*^9}, {3.8842542028355913`*^9, 
   3.8842542298272448`*^9}, {3.8842542669490957`*^9, 
   3.8842542713616257`*^9}, {3.884254305660129*^9, 3.884254328828581*^9}, {
   3.8842543653471737`*^9, 3.884254385059705*^9}, {3.8842544168623257`*^9, 
   3.884254417288169*^9}, {3.884254547852838*^9, 3.8842545709014053`*^9}, {
   3.884254622983549*^9, 3.8842546232185926`*^9}, {3.884254682504016*^9, 
   3.884254730014736*^9}, {3.8842547675581913`*^9, 3.884254772464737*^9}, {
   3.884254861945013*^9, 3.884254872731379*^9}, {3.884255287696927*^9, 
   3.884255306381734*^9}, {3.88425537029603*^9, 3.884255394961102*^9}, {
   3.884265723991352*^9, 3.8842657899557333`*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"766981d0-25ba-4bb3-8b17-25440479f9ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"keys", "=", 
   RowBox[{"{", 
    RowBox[{
    "Splz", ",", "Comb", ",", "Shutl", ",", "SWAPLoc", ",", "Ent", ",", "CZ", 
     ",", "Ry", ",", "Rx", ",", "Read"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8842035288987007`*^9, 3.884203545316606*^9}, {
   3.884238797312797*^9, 3.884238805286482*^9}, 3.884239009487337*^9, {
   3.8842530469855137`*^9, 3.88425306049085*^9}, 3.884253095750471*^9, {
   3.884253964259162*^9, 3.884253966531497*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"680ebf8a-8cf5-4300-8287-82272cc75fdd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datatime", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"seqlabel", "[", "#", "]"}], ",", 
       RowBox[{"timeProfile", "[", 
        RowBox[{
         RowBox[{"DistCircTrappedIons4", "[", "#", "]"}], ",", 
         RowBox[{"Options", "@", "TrappedIonOxford"}], ",", "keys"}], "]"}]}],
       "}"}], "&"}], "/@", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datacount", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"seqlabel", "[", "#", "]"}], ",", 
       RowBox[{"countProfile", "[", 
        RowBox[{
         RowBox[{"DistCircTrappedIons4", "[", "#", "]"}], ",", 
         RowBox[{"Options", "@", "TrappedIonOxford"}], ",", "keys"}], "]"}]}],
       "}"}], "&"}], "/@", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"timeprofileplot", "[", 
    RowBox[{
    "\"\<Alice\>\"", ",", "datacount", ",", "keys", ",", 
     "\"\<Operation count(%)\>\"", ",", "False", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImagePadding", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"20", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"55", ",", "30"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "->", "220"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"timeprofileplot", "[", 
    RowBox[{
    "\"\<Alice\>\"", ",", "datatime", ",", "keys", ",", 
     "\"\<Time spent on operations(%)\>\"", ",", "True", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImagePadding", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"55", ",", "30"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "->", "200"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.884239131788101*^9, 3.8842391412144003`*^9}, {
   3.8842395599901323`*^9, 3.8842395606545677`*^9}, {3.8842396297242413`*^9, 
   3.884239641233392*^9}, {3.88425330224993*^9, 3.884253312455241*^9}, {
   3.884254096356619*^9, 3.8842540971468782`*^9}, {3.884254280974514*^9, 
   3.884254295389752*^9}, {3.884254738772092*^9, 3.8842547400244207`*^9}, {
   3.884254961003327*^9, 3.884255009254133*^9}, 3.884255326420559*^9, {
   3.884265801459724*^9, 3.884265801622497*^9}, {3.884266441474372*^9, 
   3.884266442367032*^9}, {3.884266571502346*^9, 3.884266624610157*^9}, {
   3.884267547449481*^9, 3.884267564644059*^9}, {3.8844255131132183`*^9, 
   3.8844255136830893`*^9}, {3.8943949966917343`*^9, 3.8943950103585787`*^9}},
 
 CellLabel->
  "In[420]:=",ExpressionUUID->"8c96a286-281a-47fc-9d53-8318ea8fb1d2"],

Cell[BoxData[{
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plot1", ",", "plot2"}], "}"}], "}"}], ",", 
   RowBox[{"Spacings", "->", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<tions_timeprofile.pdf\>\"", ",", "%"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.88425410237294*^9, 3.884254114032976*^9}, {
   3.8842550707211447`*^9, 3.884255248202712*^9}, {3.884255350656245*^9, 
   3.884255352169009*^9}, {3.884266496675157*^9, 3.884266514708044*^9}, {
   3.88442552624632*^9, 3.884425555287006*^9}, 3.894876165869726*^9, 
   3.895556886127554*^9},
 CellLabel->
  "In[424]:=",ExpressionUUID->"caefc5f7-ee4e-475c-9600-a66654fd7769"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Print the step-by-step distillation process + animation", "Section",
 CellChangeTimes->{{3.88373840369119*^9, 3.88373842780586*^9}, {
  3.884014690771544*^9, 3.884014694461878*^9}, {3.88408325686007*^9, 
  3.884083258899022*^9}},ExpressionUUID->"c3f2ea48-ae1d-4efa-8bf6-\
1368070e1557"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AnimateDistillation", "::", "usage"}], "=", 
   "\"\<AnimateDistillation[sequence, device_options]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AnimateDistillation", "[", 
   RowBox[{
    RowBox[{"sequence_", ":", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"devoptions_", ":", 
     RowBox[{"{", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dev", ",", "circ", ",", "ccirc", ",", 
      RowBox[{"show", "=", 
       RowBox[{"{", "}"}]}], ",", "format", ",", "noisy", ",", "fulltime", 
      ",", 
      RowBox[{"step", "=", "1"}], ",", "nions"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"format", "[", 
       RowBox[{"zones_", ",", "noise_", ",", "t_", ",", "s_"}], "]"}], ":=", 
      RowBox[{"Framed", "[", 
       RowBox[{"Row", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<(\>\"", "<>", 
               RowBox[{"ToString", "[", "s", "]"}], "<>", "\"\<) t=\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"t", ",", "TraditionalForm"}], "]"}], "<>", 
               "\"\<\[Mu]s\>\""}], ",", 
              RowBox[{"Rasterize", "[", 
               RowBox[{"zones", ",", 
                RowBox[{"RasterSize", "->", "500"}], ",", 
                RowBox[{"ImageSize", "->", "200"}]}], "]"}]}], "}"}], ",", 
            "Center"}], "]"}], ",", 
          RowBox[{"Pane", "[", 
           RowBox[{"noise", ",", "280"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dev", "=", 
      RowBox[{"TrappedIonOxford", "[", 
       RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"nions", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"Length", "/@", 
        RowBox[{"Flatten", "/@", 
         RowBox[{"Values", "@", 
          RowBox[{"Values", "@", 
           RowBox[{"dev", "[", "Nodes", "]"}]}]}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"circ", "=", 
      RowBox[{"DistCircTrappedIons4", "[", "sequence", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ccirc", "=", 
      RowBox[{"CircTrappedIons", "[", 
       RowBox[{"circ", ",", "dev", ",", 
        RowBox[{"MapQubits", "->", "False"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"fulltime", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"N", "@", "#"}], ",", 
          RowBox[{"FormatType", "->", "TraditionalForm"}]}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"InsertCircuitNoise", "[", 
           RowBox[{"ccirc", ",", 
            RowBox[{"TrappedIonOxford", "[", 
             RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", 
         RowBox[{
          RowBox[{"OptionValue", "[", 
           RowBox[{"TrappedIonOxford", ",", "DurInit"}], "]"}], "[", 
          "\"\<Alice\>\"", "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"show", ",", 
       RowBox[{"format", "[", 
        RowBox[{
         RowBox[{"dev", "[", "ShowNodes", "]"}], ",", 
         RowBox[{"DrawCircuit", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["Init", "#"], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "5"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["Damp", "#"], "[", "1.", "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "5"}], "]"}]}]}], "}"}], "]"}], ",", 
         "\"\<0\>\"", ",", 
         RowBox[{"step", "++"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"noisy", "=", 
         RowBox[{"InsertCircuitNoise", "[", 
          RowBox[{
           RowBox[{"ccirc", "[", 
            RowBox[{"[", "c", "]"}], "]"}], ",", "dev"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"show", ",", "\[IndentingNewLine]", 
          RowBox[{"format", "[", 
           RowBox[{
            RowBox[{"dev", "[", "ShowNodes", "]"}], ",", 
            RowBox[{"DrawCircuit", "[", 
             RowBox[{
              RowBox[{"Flatten", "@", 
               RowBox[{"noisy", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
              RowBox[{"dev", "[", "NumTotalQubits", "]"}]}], "]"}], ",", 
            RowBox[{"fulltime", "[", 
             RowBox[{"[", "c", "]"}], "]"}], ",", 
            RowBox[{"step", "++"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}],
        "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{"Length", "@", "ccirc"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "show"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8837383987963953`*^9, 3.883738401478146*^9}, {
  3.883738439977435*^9, 3.883738443439444*^9}, {3.8838142075526867`*^9, 
  3.8838142302616053`*^9}, {3.884084486895398*^9, 3.884084509819927*^9}, {
  3.884084948602293*^9, 3.884084950544751*^9}, {3.8842451878567266`*^9, 
  3.8842451893902893`*^9}, {3.884245257784618*^9, 3.884245261099375*^9}, {
  3.884245500614362*^9, 3.884245504009781*^9}, {3.884246242804329*^9, 
  3.8842462446564417`*^9}, {3.884246389236019*^9, 3.884246396622761*^9}, {
  3.895556897546755*^9, 3.8955569067668133`*^9}, {3.895560266571727*^9, 
  3.895560363248682*^9}, {3.8955604351950006`*^9, 3.895560436979712*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"2dc02453-c30c-4171-84c2-3faa7e72a7d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Print", " ", "distillation", " ", "step", " ", "by", " ", "step"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PrintDistillation", "[", 
    RowBox[{
     RowBox[{"sequence_", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"devoptions_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dev", ",", "circ", ",", "ccirc", ",", 
       RowBox[{"show", "=", 
        RowBox[{"{", "}"}]}], ",", "format", ",", "noisy", ",", "fulltime", 
       ",", 
       RowBox[{"step", "=", "0"}], ",", "nions"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"format", "[", 
        RowBox[{"zones_", ",", "c_", ",", "t_", ",", "s_"}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<(\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"s", ",", 
                RowBox[{"FormatType", "->", "TraditionalForm"}]}], "]"}], 
              "<>", "\"\<)t=\>\"", "<>", "t", "<>", "\"\<\[Mu]s\>\""}], ",", 
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"FormatType", "->", "TraditionalForm"}]}], "]"}], 
                "&"}], "/@", "c"}], "]"}]}], "}"}], ",", "Left"}], "]"}], ",", 
         RowBox[{"Rasterize", "[", 
          RowBox[{"zones", ",", 
           RowBox[{"RasterSize", "->", "Full"}], ",", 
           RowBox[{"ImageSize", "->", "150"}]}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dev", "=", 
       RowBox[{"TrappedIonOxford", "[", 
        RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nions", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"Length", "/@", 
         RowBox[{"Flatten", "/@", 
          RowBox[{"Values", "@", 
           RowBox[{"Values", "@", 
            RowBox[{"dev", "[", "Nodes", "]"}]}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"circ", "=", 
       RowBox[{"DistCircTrappedIons4", "[", "sequence", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ccirc", "=", 
       RowBox[{"CircTrappedIons", "[", 
        RowBox[{"circ", ",", "dev", ",", 
         RowBox[{"MapQubits", "->", "False"}]}], "]"}]}], ";", 
      RowBox[{"fulltime", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"N", "[", "#", "]"}], ",", 
           RowBox[{"FormatType", "->", "TraditionalForm"}]}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"InsertCircuitNoise", "[", 
            RowBox[{"ccirc", ",", 
             RowBox[{"TrappedIonOxford", "[", 
              RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"OptionValue", "[", 
            RowBox[{"TrappedIonOxford", ",", "DurInit"}], "]"}], "[", 
           "\"\<Alice\>\"", "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"show", ",", 
        RowBox[{"format", "[", 
         RowBox[{
          RowBox[{"dev", "[", "ShowNodes", "]"}], ",", 
          RowBox[{"{", "\"\<Initialisation\>\"", "}"}], ",", "\"\<0\>\"", ",", 
          RowBox[{"step", "++"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"noisy", "=", 
          RowBox[{"InsertCircuitNoise", "[", 
           RowBox[{
            RowBox[{"ccirc", "[", 
             RowBox[{"[", "c", "]"}], "]"}], ",", "dev"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"show", ",", "\[IndentingNewLine]", 
           RowBox[{"format", "[", 
            RowBox[{
             RowBox[{"dev", "[", "ShowNodes", "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", 
                 RowBox[{"ccirc", "[", 
                  RowBox[{"[", "c", "]"}], "]"}]}], "<", "1"}], ",", 
               "\"\<End\>\"", ",", 
               RowBox[{"ccirc", "[", 
                RowBox[{"[", "c", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"fulltime", "[", 
              RowBox[{"[", "c", "]"}], "]"}], ",", 
             RowBox[{"step", "++"}]}], "]"}]}], "\[IndentingNewLine]", 
          "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          RowBox[{"Length", "@", "ccirc"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "show"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.884083255260201*^9, {3.8840843891400547`*^9, 3.8840844168932247`*^9}, {
   3.884084473583014*^9, 3.8840844791168537`*^9}, {3.884084952200265*^9, 
   3.8840849545012903`*^9}, {3.8840981583650627`*^9, 3.88409816391471*^9}, {
   3.884112663043187*^9, 3.884112721965434*^9}, {3.884112767442245*^9, 
   3.884112779825338*^9}, {3.884112814098063*^9, 3.884112816655801*^9}, {
   3.8841128924379873`*^9, 3.8841129050375013`*^9}, {3.884244939309087*^9, 
   3.884245158417738*^9}, {3.8842452361550903`*^9, 3.88424523988433*^9}, {
   3.884245304299273*^9, 3.8842453839593678`*^9}, {3.8842454951618023`*^9, 
   3.884245497519697*^9}, {3.884245597908057*^9, 3.884245601291613*^9}, {
   3.8842456637135963`*^9, 3.884245664619246*^9}, {3.884245696267889*^9, 
   3.884245803151679*^9}, {3.884245909940916*^9, 3.8842459218713207`*^9}, 
   3.884246169626212*^9, {3.884246214052054*^9, 3.884246214225501*^9}, {
   3.8842462700488234`*^9, 3.884246272754129*^9}, 3.884246350981153*^9, {
   3.8842464116287727`*^9, 3.884246412694035*^9}, {3.8842464611604567`*^9, 
   3.884246517032501*^9}, {3.8842465554943666`*^9, 3.8842466414701633`*^9}, {
   3.884271711182177*^9, 3.8842717115905457`*^9}, {3.8842718277370977`*^9, 
   3.884271840553648*^9}, {3.895556920879602*^9, 3.895556924173203*^9}, {
   3.895560246322966*^9, 3.895560252542842*^9}, {3.895560690512376*^9, 
   3.895560722085918*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"83c7d16c-2505-409f-bf3e-e1247161be48"],

Cell["\<\
Use the code below to render details of the distillation steps into GIF \
animation  \
\>", "Text",
 CellChangeTimes->{{3.87706348871129*^9, 3.877063523331842*^9}, {
   3.877063624751903*^9, 3.8770636394484177`*^9}, {3.8770636844535418`*^9, 
   3.8770636847284603`*^9}, {3.877064470203786*^9, 3.8770644712416*^9}, {
   3.877064720429151*^9, 3.87706472179109*^9}, {3.880183327151959*^9, 
   3.880183328373454*^9}, {3.880183761081605*^9, 3.880183762738824*^9}, {
   3.8801839218959723`*^9, 3.880183922918253*^9}, {3.880184340087482*^9, 
   3.8801843409323273`*^9}, {3.880187617128743*^9, 3.8801876202893667`*^9}, {
   3.880188089384716*^9, 3.880188090402269*^9}, {3.883497219171834*^9, 
   3.883497264048298*^9}, {3.8837391017430143`*^9, 3.883739101743507*^9}, {
   3.8837391558741713`*^9, 3.883739156525214*^9}, {3.8837392062881613`*^9, 
   3.883739217522626*^9}, 3.88382215984439*^9, {3.883839867118671*^9, 
   3.883839867277421*^9}, {3.883841121842902*^9, 3.883841122222978*^9}, {
   3.884014221939262*^9, 3.884014242834508*^9}, {3.884084521781345*^9, 
   3.884084527440505*^9}, {3.884246309364716*^9, 3.88424632179012*^9}, 
   3.894963752783873*^9, {3.895557005774547*^9, 3.895557007597662*^9}, {
   3.895557253618062*^9, 3.895557290842434*^9}, {3.895557420428977*^9, 
   3.89555742698827*^9}, 3.895560726968339*^9, {3.8955608408027973`*^9, 
   3.895560853834944*^9}, {3.895673324716834*^9, 3.8956733514525223`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"453edd7e-2e6c-43ba-9600-7935556a2771"],

Cell["\<\
picts = AnimateDistillation[{0, 0, 0}];
Export[\"distillation.gif\", picts, AnimationRepetitions -> 1, \
\"DisplayDurations\" -> ConstantArray[1, Length@picts], RasterSize -> 600];
Import[\"distillation.gif\", \"AnimatedImage\"]
\
\>", "CodeText",
 CellChangeTimes->{{3.895560386899509*^9, 3.895560393191949*^9}, {
   3.895560729018448*^9, 3.895560730968114*^9}, {3.8955608279097843`*^9, 
   3.895560834093438*^9}, 
   3.895560884843493*^9},ExpressionUUID->"4f062133-6618-46f6-964e-\
749e76969d7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"steps", "=", 
   RowBox[{"PrintDistillation", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8840981241090603`*^9, 3.8840981390481253`*^9}, {
   3.884112386853908*^9, 3.884112389164328*^9}, {3.884112622782976*^9, 
   3.884112624204894*^9}, {3.884112730031098*^9, 3.8841127317307777`*^9}, {
   3.884245562143355*^9, 3.884245562607004*^9}, {3.884271630558909*^9, 
   3.884271631565483*^9}, 3.8943950399933367`*^9, 3.894395146135405*^9, {
   3.8955574789908047`*^9, 3.895557486867035*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"1e69bf1f-4d11-4841-8973-cbedf4861bd8"],

Cell[BoxData[
 RowBox[{"steps", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.884271633412875*^9, 3.884271635941741*^9}, 
   3.8955598148558493`*^9, {3.8955598826125507`*^9, 3.8955598857822123`*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"91c99e6e-02e8-436d-a484-ebb28c3d6da4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "uncomment", " ", "to", " ", "produce", " ", "the", " ", "steps", " ", 
    "shown", " ", "in", " ", "the", " ", "appendix"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<distillation_steps1.pdf\>\"", ",", 
      RowBox[{"TableForm", "@", 
       RowBox[{"steps", "[", 
        RowBox[{"[", 
         RowBox[{";;", "19"}], "]"}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<distillation_steps2.pdf\>\"", ",", 
      RowBox[{"TableForm", "@", 
       RowBox[{"steps", "[", 
        RowBox[{"[", 
         RowBox[{"20", ";;", "38"}], "]"}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<distillation_steps3.pdf\>\"", ",", 
      RowBox[{"TableForm", "@", 
       RowBox[{"steps", "[", 
        RowBox[{"[", 
         RowBox[{"39", ";;", "54"}], "]"}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<distillation_steps4.pdf\>\"", ",", 
      RowBox[{"TableForm", "@", 
       RowBox[{"steps", "[", 
        RowBox[{"[", 
         RowBox[{"55", ";;", "75"}], "]"}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<distillation_steps5.pdf\>\"", ",", 
      RowBox[{"TableForm", "@", 
       RowBox[{"steps", "[", 
        RowBox[{"[", 
         RowBox[{"76", ";;", "93"}], "]"}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<distillation_steps6.pdf\>\"", ",", 
      RowBox[{"TableForm", "@", 
       RowBox[{"steps", "[", 
        RowBox[{"[", 
         RowBox[{"94", ";;"}], "]"}], "]"}]}]}], "]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8841556028717833`*^9, 3.884155611991144*^9}, {
   3.884184994561389*^9, 3.884184997687602*^9}, {3.8842451748855867`*^9, 
   3.884245176422241*^9}, {3.8842461800552073`*^9, 3.884246187260393*^9}, {
   3.8842463389451113`*^9, 3.884246365068429*^9}, {3.884271644571347*^9, 
   3.8842716662751513`*^9}, {3.884271904914489*^9, 3.884271966845827*^9}, {
   3.884272019804768*^9, 3.884272063939602*^9}, {3.884272110456765*^9, 
   3.884272110701501*^9}, {3.88427226489459*^9, 3.88427229176966*^9}, 
   3.8847555044334097`*^9, {3.894395172588539*^9, 3.894395187534746*^9}, {
   3.8943952218613787`*^9, 3.894395264793414*^9}, {3.894395475193595*^9, 
   3.894395475508522*^9}, {3.894395525015252*^9, 3.894395532776243*^9}, 
   3.8946945519772673`*^9, {3.895130170765864*^9, 3.8951302655893507`*^9}, {
   3.895130452868525*^9, 3.895130453043643*^9}, {3.8951304846123037`*^9, 
   3.895130505879727*^9}, {3.895130547188085*^9, 3.895130571652936*^9}, {
   3.895130641331992*^9, 3.89513065122647*^9}, {3.895130732246525*^9, 
   3.895130759751184*^9}, {3.895130810892275*^9, 3.895130828052638*^9}, 
   3.895131125532432*^9, {3.895556940349175*^9, 3.895556955286913*^9}, {
   3.8955608961912823`*^9, 3.895560912282556*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"b7dac390-543d-424a-8cc7-15acb1e3dc15"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1719., 710.5},
WindowMargins->{{0.5, Automatic}, {Automatic, -711}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Landscape",
"PaperSize"->{1191, 842},
"PostScriptOutputFile"->"/home/cica/VQD/Doc/TrappedIonOxford.pdf",
"PrintingMargins"->7},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.9,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e52760b8-8500-448b-90cc-ef24d0d0a26e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 233, 4, 88, "Title",ExpressionUUID->"a51a1c00-1c1e-4809-99a7-9b45151e9214"],
Cell[CellGroupData[{
Cell[838, 30, 154, 3, 59, "Section",ExpressionUUID->"4b33baa5-b934-4d77-847a-55ee63f4b597"],
Cell[995, 35, 374, 5, 45, "Text",ExpressionUUID->"c34d2386-44e3-4d12-8bcd-6e0adf0c59d5"],
Cell[1372, 42, 396, 9, 26, "Input",ExpressionUUID->"4fb6ff86-df9c-4786-aab4-c5b29d03d1f8"],
Cell[1771, 53, 649, 12, 66, "Text",ExpressionUUID->"c91ba40d-3b6c-42cd-bdae-10c38124ceab"],
Cell[2423, 67, 1622, 24, 26, "Input",ExpressionUUID->"df0ec05c-7c65-422e-9507-d63ba1cb5d39"],
Cell[4048, 93, 962, 19, 87, "Text",ExpressionUUID->"3be974ff-97ec-439c-88c3-d918af5f3738"],
Cell[5013, 114, 541, 9, 26, "Input",ExpressionUUID->"a336264b-c730-4bb1-9161-b5ea1fbe3880"],
Cell[5557, 125, 689, 14, 45, "Text",ExpressionUUID->"5f37c9ba-3582-4916-b8a6-b00b0ad21432"],
Cell[6249, 141, 1226, 18, 26, "Input",ExpressionUUID->"fbda1cba-5510-430b-ae7f-72219c40e12c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7512, 164, 252, 4, 59, "Section",ExpressionUUID->"6507264a-34a1-4c23-92d3-885063f7d4ab"],
Cell[7767, 170, 857, 22, 66, "Text",ExpressionUUID->"01bbf5b7-efb5-4735-b44c-900b069c1b48"],
Cell[8627, 194, 15109, 310, 1144, "Input",ExpressionUUID->"786b6905-0c83-4785-9309-62848193302e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23773, 509, 163, 3, 59, "Section",ExpressionUUID->"ee76f947-9d17-462b-a234-af4aca63054c"],
Cell[CellGroupData[{
Cell[23961, 516, 160, 3, 48, "Subsection",ExpressionUUID->"bcac4c86-b1e1-4542-b4fc-7ae6239c3320"],
Cell[24124, 521, 4173, 126, 513, "Text",ExpressionUUID->"5f86b73e-5906-4bd6-a372-9b5e7579b57a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28334, 652, 245, 4, 48, "Subsection",ExpressionUUID->"df7f5adc-fabd-4e2d-8267-3eddc4da25ee"],
Cell[CellGroupData[{
Cell[28604, 660, 169, 3, 40, "Subsubsection",ExpressionUUID->"cceafc11-93f6-4531-b5ac-663f410eb088"],
Cell[28776, 665, 2377, 57, 111, "Input",ExpressionUUID->"03e5b243-f124-4461-8871-1233f93d5b42"],
Cell[31156, 724, 10333, 198, 338, "Input",ExpressionUUID->"f60c26c3-9869-49be-9a0e-e82ee5d8c8a5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41538, 928, 274, 3, 48, "Subsection",ExpressionUUID->"0d09c75c-4336-4627-9372-bcfc748516ee"],
Cell[41815, 933, 851, 20, 128, "Text",ExpressionUUID->"6fa19595-4692-4ad3-90b8-49f16d63a9af"],
Cell[42669, 955, 257, 6, 26, "Input",ExpressionUUID->"e0e61e79-6b77-4564-adaf-086a02d5c273"],
Cell[42929, 963, 213, 4, 26, "Input",ExpressionUUID->"9021932c-26db-41f0-bdf1-498d426c4af5"],
Cell[43145, 969, 2050, 54, 29, "Input",ExpressionUUID->"39334818-453d-4215-b01f-6ad2ed45ee64"],
Cell[45198, 1025, 675, 17, 67, "Input",ExpressionUUID->"71410c7e-f05e-4826-825b-04095afafaf7"],
Cell[45876, 1044, 1218, 22, 48, "Input",ExpressionUUID->"d6f1e258-c049-4570-8952-bb2893609008"],
Cell[47097, 1068, 639, 12, 87, "Text",ExpressionUUID->"7dae8c7a-ebe8-4914-93d1-8e3024725605"],
Cell[47739, 1082, 679, 12, 26, "Input",ExpressionUUID->"797106b3-7c71-46e2-9680-68c6566ce39f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48455, 1099, 172, 3, 48, "Subsection",ExpressionUUID->"de617550-7cfc-4867-811d-50d008ec072f"],
Cell[48630, 1104, 286, 7, 46, "Input",ExpressionUUID->"0e5d8bf2-f763-4d13-a0a8-6241d4c6798d"],
Cell[48919, 1113, 1243, 25, 46, "Input",ExpressionUUID->"b16782ff-ea3f-4153-83cb-c675797578e7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50211, 1144, 297, 7, 106, "Chapter",ExpressionUUID->"4d518824-3f83-4b77-a8e8-2e70512d2626"],
Cell[50511, 1153, 93006, 1540, 409, "Text",ExpressionUUID->"05c61d37-69ab-4228-821a-8220f8441e07"],
Cell[CellGroupData[{
Cell[143542, 2697, 543, 8, 59, "Section",ExpressionUUID->"2346cce6-bd8a-4ae4-88e1-f897966b2804"],
Cell[CellGroupData[{
Cell[144110, 2709, 181, 3, 48, "Subsection",ExpressionUUID->"b570e79b-ac58-45cb-9984-b72db9f1066c"],
Cell[144294, 2714, 2646, 71, 143, "Input",ExpressionUUID->"ac997f37-7bc1-4400-8f6f-8e60e3a8e708"],
Cell[146943, 2787, 1360, 32, 48, "Input",ExpressionUUID->"f4deb039-2160-42a2-8905-5af66b54d369"],
Cell[148306, 2821, 38054, 788, 945, "Input",ExpressionUUID->"87274038-e121-4cf6-9854-097f3a94bf01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186397, 3614, 442, 6, 48, "Subsection",ExpressionUUID->"b5ebd345-aa7c-4daf-9611-4bab62c48860"],
Cell[186842, 3622, 3138, 82, 236, "Input",ExpressionUUID->"d3ef4b57-c915-44e7-a2dd-e988c9b334d5"],
Cell[189983, 3706, 453, 10, 46, "Input",ExpressionUUID->"d48cda91-007d-4a92-a018-55359e2beb65"],
Cell[190439, 3718, 1862, 42, 125, "Input",ExpressionUUID->"d7c1c783-cec8-462f-838c-0b4172fe2dec"],
Cell[192304, 3762, 545, 10, 26, "Input",ExpressionUUID->"bb61045a-5708-4fa8-8e50-1a90d6b07112"],
Cell[192852, 3774, 4653, 78, 68, "Input",ExpressionUUID->"f0cc4e96-9a39-48b4-b95c-b540a2ea63f5"],
Cell[197508, 3854, 1416, 37, 68, "Input",ExpressionUUID->"fe995218-246c-4fee-aa17-401bf29eba72"],
Cell[198927, 3893, 1756, 45, 68, "Input",ExpressionUUID->"ebc8df5a-99d7-46cc-8e7e-18544fab8380"],
Cell[200686, 3940, 395, 7, 31, "Text",ExpressionUUID->"5b88e094-8202-4d6a-b4a7-8863f2549d92"],
Cell[201084, 3949, 1093, 28, 83, "Input",ExpressionUUID->"d23bce0c-c94e-4222-8c3c-d8d1cf4feb15"],
Cell[202180, 3979, 4529, 110, 179, "Input",ExpressionUUID->"40a5e3e9-6aeb-4401-81fb-30579028eaec"],
Cell[206712, 4091, 895, 19, 28, "Input",ExpressionUUID->"9239bfde-225f-433c-bcb1-7600c98e278a"],
Cell[207610, 4112, 2239, 70, 121, "Input",ExpressionUUID->"a6d599fc-d587-4710-b29e-3d6d554fc408"],
Cell[209852, 4184, 1618, 27, 166, "CodeText",ExpressionUUID->"b85a9973-7bc5-4b44-9ccd-a70961042840"],
Cell[211473, 4213, 791, 20, 49, "Input",ExpressionUUID->"71bc1a0a-e577-47b7-9c9a-ae87bc85dd8e"],
Cell[212267, 4235, 208, 4, 26, "Input",ExpressionUUID->"fa5e7bdc-88e3-427c-bf80-99959d759f7a"],
Cell[212478, 4241, 5113, 110, 90, "Input",ExpressionUUID->"d639a4b0-d054-48ab-be36-34eeeb89e9f3"],
Cell[217594, 4353, 552, 11, 26, "Input",ExpressionUUID->"9523d609-5184-43cd-a526-9a9227181714"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218183, 4369, 287, 4, 48, "Subsection",ExpressionUUID->"3f783393-ac8c-4ab4-a534-ae0c5bd4afff"],
Cell[218473, 4375, 1889, 52, 102, "Input",ExpressionUUID->"7358bde7-d760-48d2-a30e-a9d7b2f005e4"],
Cell[220365, 4429, 284, 6, 45, "Text",ExpressionUUID->"97b80097-e3fc-4199-a26e-1b9a93f8c2b2"],
Cell[220652, 4437, 1813, 45, 70, "Input",ExpressionUUID->"df2979d7-6aea-44c5-b924-a9814fe7a265"],
Cell[222468, 4484, 186, 3, 26, "Input",ExpressionUUID->"b1d09550-43c2-47bd-9fe0-461e02505612"],
Cell[222657, 4489, 214, 3, 45, "Text",ExpressionUUID->"a5df5110-0fd0-4f59-95af-b87d1cde141d"],
Cell[222874, 4494, 3526, 82, 506, "Input",ExpressionUUID->"5622a493-a0b4-436f-bfc2-16b8b98fbbb0"],
Cell[226403, 4578, 4201, 103, 320, "Input",ExpressionUUID->"5d25a051-a48d-413a-91e9-9803893a2ce4"],
Cell[230607, 4683, 3199, 90, 264, "Input",ExpressionUUID->"a1d9d6fe-4d77-465f-8d38-897f12b65ea7"],
Cell[233809, 4775, 3805, 82, 65, "Input",ExpressionUUID->"766981d0-25ba-4bb3-8b17-25440479f9ad"],
Cell[237617, 4859, 570, 12, 26, "Input",ExpressionUUID->"680ebf8a-8cf5-4300-8287-82272cc75fdd"],
Cell[238190, 4873, 3673, 99, 125, "Input",ExpressionUUID->"8c96a286-281a-47fc-9d53-8318ea8fb1d2"],
Cell[241866, 4974, 746, 18, 46, "Input",ExpressionUUID->"caefc5f7-ee4e-475c-9600-a66654fd7769"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[242661, 4998, 292, 4, 59, "Section",ExpressionUUID->"c3f2ea48-ae1d-4efa-8bf6-1368070e1557"],
Cell[242956, 5004, 6065, 148, 373, "Input",ExpressionUUID->"2dc02453-c30c-4171-84c2-3faa7e72a7d0"],
Cell[249024, 5154, 6533, 149, 367, "Input",ExpressionUUID->"83c7d16c-2505-409f-bf3e-e1247161be48"],
Cell[255560, 5305, 1524, 23, 45, "Text",ExpressionUUID->"453edd7e-2e6c-43ba-9600-7935556a2771"],
Cell[257087, 5330, 508, 11, 90, "CodeText",ExpressionUUID->"4f062133-6618-46f6-964e-749e76969d7a"],
Cell[257598, 5343, 676, 13, 26, "Input",ExpressionUUID->"1e69bf1f-4d11-4841-8973-cbedf4861bd8"],
Cell[258277, 5358, 286, 5, 26, "Input",ExpressionUUID->"91c99e6e-02e8-436d-a484-ebb28c3d6da4"],
Cell[258566, 5365, 3090, 67, 142, "Input",ExpressionUUID->"b7dac390-543d-424a-8cc7-15acb1e3dc15"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


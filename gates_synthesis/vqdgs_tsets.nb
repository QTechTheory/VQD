(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    391449,       7257]
NotebookOptionsPosition[    386331,       7168]
NotebookOutlinePosition[    386925,       7188]
CellTagsIndexPosition[    386882,       7185]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Gate synthesis of a virtual device by training  set  methode", "Title",
 CellChangeTimes->{{3.821094716186808*^9, 3.821094739198925*^9}, {
   3.822585196052581*^9, 3.8225851963612623`*^9}, {3.8225921906481543`*^9, 
   3.822592207731287*^9}, {3.823531937595224*^9, 3.823531937808639*^9}, {
   3.824849367362124*^9, 3.824849379611183*^9}, {3.82551898340462*^9, 
   3.8255189887818127`*^9}, {3.825660401373665*^9, 3.8256604036755867`*^9}, {
   3.8256750983955097`*^9, 3.8256751046898527`*^9}, 3.825675428202442*^9, {
   3.8659445686374693`*^9, 3.865944575153928*^9}, {3.8679092659280653`*^9, 
   3.867909268437417*^9}, {3.8679095534616547`*^9, 3.8679095882547083`*^9}, {
   3.868010612573759*^9, 3.868010621406101*^9}, {3.8680107592194633`*^9, 
   3.868010767110968*^9}, {3.868011155110327*^9, 3.8680111864150543`*^9}, 
   3.868525610831585*^9},ExpressionUUID->"7532a72a-505f-400b-ac05-\
031ad951830d"],

Cell[CellGroupData[{

Cell["Initialization related", "Subsection",
 CellChangeTimes->{{3.823532646857679*^9, 
  3.823532659295793*^9}},ExpressionUUID->"f8927233-1ac2-41e3-b00e-\
d144b3c5eba1"],

Cell[CellGroupData[{

Cell["questlink", "Subsubsection",
 CellChangeTimes->{{3.821094785133238*^9, 3.821094786333415*^9}, {
  3.821097799546958*^9, 3.821097808285853*^9}, {3.821098831266062*^9, 
  3.821098831744811*^9}, {3.821195625500657*^9, 3.8211956303394823`*^9}, {
  3.827347408261095*^9, 
  3.827347413490549*^9}},ExpressionUUID->"1e964a40-6779-4f5b-96fe-\
d4a1b68f5e00"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetEnvironment", "[", 
   RowBox[{"\"\<OMP_NUM_THREADS\>\"", "->", "\"\<8\>\""}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8582869025858183`*^9, 3.858286903164626*^9}, {
  3.86594028867924*^9, 3.8659402895800943`*^9}, {3.866059621333836*^9, 
  3.8660596226821947`*^9}, {3.866107172926758*^9, 3.866107174058259*^9}, {
  3.866107223185997*^9, 3.8661072255714817`*^9}, {3.8661106962810917`*^9, 
  3.866110696639558*^9}, {3.8661280079285383`*^9, 3.8661280081357393`*^9}, {
  3.867909678319962*^9, 3.867909678797574*^9}},
 CellLabel->
  "In[805]:=",ExpressionUUID->"7ad401c5-4a44-4d3f-9032-238544e328d2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Import", "[", "\"\<https://qtechtheory.org/questlink.m\>\"", "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateLocalQuESTEnv", "[", "\"\<quest_link_cpu\>\"", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.819803125076724*^9, 3.8198031261607533`*^9}, {
   3.819803176415811*^9, 3.8198031766531963`*^9}, {3.819894353876569*^9, 
   3.819894356732341*^9}, {3.8198943886489763`*^9, 3.819894431785378*^9}, {
   3.8198945146801443`*^9, 3.819894518596518*^9}, {3.820527172879855*^9, 
   3.8205272473315496`*^9}, 3.820655339193205*^9, {3.820655433359385*^9, 
   3.82065549058811*^9}, {3.820661747013823*^9, 3.820661748015472*^9}, {
   3.820663378793988*^9, 3.8206634767830477`*^9}, {3.821097203028792*^9, 
   3.8210972042257833`*^9}, {3.821444898465564*^9, 3.821444899367831*^9}, {
   3.821821390840189*^9, 3.821821391053975*^9}, {3.8235205222382593`*^9, 
   3.823520526123763*^9}, 3.8237856350757713`*^9, {3.823785798865507*^9, 
   3.823785848093607*^9}, {3.823785921345996*^9, 3.8237859913036327`*^9}, {
   3.8238122338980618`*^9, 3.8238122361989*^9}, {3.8275928471853943`*^9, 
   3.8275928848839893`*^9}, {3.8290767044800053`*^9, 3.829076709428789*^9}, {
   3.8291285519818907`*^9, 3.829128587812381*^9}, {3.830414784265088*^9, 
   3.830414788779163*^9}, {3.8467535024579287`*^9, 3.8467535104980297`*^9}, {
   3.846753609579941*^9, 3.846753610525757*^9}, {3.848654554777*^9, 
   3.848654565020479*^9}, {3.8486546329712973`*^9, 3.848654633769349*^9}, {
   3.848673592045994*^9, 3.8486735923243837`*^9}, {3.851708613390814*^9, 
   3.85170862344545*^9}, {3.852264597949493*^9, 3.852264598219047*^9}, {
   3.852456437422299*^9, 3.852456437680458*^9}, {3.858286873500101*^9, 
   3.8582868736623087`*^9}},
 CellLabel->
  "In[806]:=",ExpressionUUID->"84668fc4-2893-4c14-8e4b-bddb5cda67f9"],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../vqd.wl\>\"", "]"}]], "Input",
 CellLabel->
  "In[809]:=",ExpressionUUID->"e55c13b5-fd4d-4566-8b44-ed2d838e21e3"]
}, Closed]],

Cell[CellGroupData[{

Cell["default setting, preparation related", "Subsubsection",
 CellChangeTimes->{{3.816003357134898*^9, 3.816003370439657*^9}, 
   3.821195857222999*^9, {3.82120474535821*^9, 3.821204758312608*^9}, {
   3.866021206787839*^9, 
   3.866021209958315*^9}},ExpressionUUID->"364966f0-0fa9-4d5d-b8b6-\
b701b1d3988c"],

Cell[BoxData[
 RowBox[{"Clear", "[", "DefaultConfig", "]"}]], "Input",
 CellChangeTimes->{{3.821204667797929*^9, 3.821204670860772*^9}, {
  3.82121257572781*^9, 3.821212576414878*^9}},
 CellLabel->
  "In[810]:=",ExpressionUUID->"b6080252-f3cc-4bc9-8a60-70aec65a167d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DefaultConfig", "::", "usage"}], "=", 
   "\"\<DefaultConfig[virtual_device, unitary, number-of-training-states, \
ansatzspace] return default config.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefaultConfig", "[", 
   RowBox[{"vdev_", ",", "unitary_", ",", "ntrainstates_", ",", 
    RowBox[{"ansatzspace_", ":", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dtrain", ",", "nqubit"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dtrain", "=", 
      RowBox[{"PrepareTrainInit", "[", 
       RowBox[{"unitary", ",", "ntrainstates"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nqubit", "=", 
      RowBox[{"vdev", "[", "NumAccessibleQubits", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"The", " ", "virtual", " ", "device"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<device\>\"", "->", "vdev"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "qubit", " ", "indices", " ", "allowed", " ", "for", " ", 
         "ansatz", " ", "search"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<ansatzspace\>\"", "->", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", "ansatzspace", "]"}], ",", "ansatzspace", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"nqubit", "-", "1"}]}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Number", " ", "of", " ", "physical", " ", "qubit"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<nqubit\>\"", "\[Rule]", " ", "nqubit"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "use", " ", "the", " ", "fixed", " ", "ansatz", " ", "instead", " ", 
         "of", " ", "guessing"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<fixansatz\>\"", "->", "False"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Methods", " ", "to", " ", "calcualte", " ", 
         RowBox[{"gradient", ":", " ", 
          RowBox[{"NG", " ", "||", " ", "SGD"}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<grad\>\"", "\[Rule]", "\"\<NG\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Number", " ", "of", " ", 
         RowBox[{"failure", "/", "convergence"}], " ", "to", " ", "lower", 
         " ", "the", " ", "energy", " ", "in", " ", "a", " ", "cycle"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<globalconverge\>\"", "\[Rule]", " ", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Number", " ", "of", " ", "random", " ", "gates", " ", "added", " ", 
          "per", " ", 
          RowBox[{"cycle", ".", " ", "It"}], " ", "is", " ", "irrelevant", 
          " ", "if", " ", "usecorr"}], "=", "True"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<gatespercycle\>\"", " ", "\[Rule]", " ", "10"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Number", " ", "of", " ", "gates", " ", "at", " ", "the", " ", 
         "first", " ", "cycle"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<ngatesinit\>\"", "\[Rule]", 
        RowBox[{
         RowBox[{"Ceiling", "[", 
          RowBox[{"Log2", "@", "nqubit"}], "]"}], "*", "10"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Proportion", " ", "throwing", " ", "1"}], "-"}], ",", 
         RowBox[{"2", "-"}], ",", " ", 
         RowBox[{"qubit", " ", "gates"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<weightgate\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[Rule]", " ", "0.4"}], ",", 
          RowBox[{"2", "\[Rule]", "0.6"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Speedinng", " ", "up", " ", "first", " ", "or", " ", "slowing", " ", 
         "down"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<speedupfirst\>\"", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"depth", " ", "of", " ", "parameterized", " ", "swap"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<swapfabricdepth\>\"", "\[Rule]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Maximum", " ", "iteration", " ", "for", " ", "bruteforce", " ", "on",
          " ", "each", " ", "removal", " ", "of", " ", "gates"}], " ", "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"\"\<maxbfiter\>\"", "\[Rule]", "20"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Maxpimum", " ", "iteration", " ", "on", " ", "each", " ", "pruning",
           " ", "methode"}], ",", " ", 
         RowBox[{
          RowBox[{"apart", " ", "from", " ", "brute"}], "-", "force"}]}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<maxpruneiter\>\"", "->", "300"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "maximum", " ", "iteration", " ", "for", " ", "greedy", " ", 
         "search"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<maxgreediter\>\"", "\[Rule]", " ", "200"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"The", " ", "groundstates", " ", "cost"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<groundstate\>\"", "\[Rule]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "inital", " ", "training", " ", "states", " ", "U", 
         RowBox[{"(", 
          SubscriptBox["\[Rho]", "x"], ")"}], " ", "for", " ", "random", " ", 
         "x"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<initstates\>\"", "->", 
        RowBox[{"dtrain", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Gates", " ", "to", " ", "undo", " ", "the", " ", "training"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<undocirc\>\"", "->", 
        RowBox[{"dtrain", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"hamiltonian", " ", "as", " ", "sum", " ", "of", " ", "Z"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<hamiltonian\>\"", "->", 
        RowBox[{"ExpandAll", "@", 
         RowBox[{"N", "[", 
          RowBox[{
           SubscriptBox["Id", "0"], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Total", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                SubscriptBox["Z", "i"], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0", ",", 
                  RowBox[{"nqubit", "-", "1"}]}], "}"}]}], "]"}]}], ")"}], 
            "/", "nqubit"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "choice", " ", "of", " ", "ansazte", " ", "provided", " ",
          "on", " ", "each", " ", "cycle"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<greediness\>\"", "\[Rule]", "8"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Greediness", " ", "in", " ", "the", " ", "first", " ", "cycle"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<greedinessinit\>\"", "\[Rule]", "8"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Plateau", " ", "in", " ", "the", " ", "greedy", " ", "by", " ", 
          "fraction", " ", "energy", " ", "improvement"}], ",", " ", 
         RowBox[{"not", " ", "perfection"}]}], " ", "*)"}], " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<greedflat\>\"", "\[Rule]", 
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]]}], ",", "     ", "\[IndentingNewLine]", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Fixed", " ", "step", " ", "in", " ", "the", " ", "gradient", " ", 
         "direction"}], " ", "*)"}], "   ", "\[IndentingNewLine]", 
       RowBox[{"\"\<gradstep\>\"", "\[Rule]", "0.01"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Step", " ", "in", " ", "the", " ", "angles", " ", "for", " ", "the", 
         " ", "steepest", " ", "gradient", " ", "descent"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<d\[Theta]\>\"", "\[Rule]", "0.01"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Multiplications", " ", "of", " ", "gradient", " ", "step", " ", 
          "that", " ", "is", " ", "tried", " ", "out"}], ",", " ", 
         RowBox[{"natural", " ", 
          RowBox[{"gradient", ".", " ", "Set"}], " ", "it", " ", "to", " ", 
          "False", " ", "to", " ", "switch", " ", "it", " ", "off"}]}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<gradstepmultiply\>\"", "\[Rule]", "4"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Tikhonov", " ", "regularization", " ", "constant"}], ",", 
         " ", 
         RowBox[{"natural", " ", "gradient"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<\[Alpha]tikhonov\>\"", "\[Rule]", 
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Norm", " ", "of", " ", "between", " ", "two", " ", "rows", " ", "of",
          " ", "the", " ", "metric", " ", "A", " ", "that", " ", "leads", " ",
          "to", " ", "deletion"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<metignore\>\"", "\[Rule]", 
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]]}], ",", "   ", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Detect", " ", "flatness", " ", "as", " ", 
         RowBox[{"convergence", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<perfectingflat\>\"", "\[Rule]", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Error", " ", "allowed", " ", "to", " ", "increase", " ", "energy", 
         " ", "in", " ", "the", " ", "pruning"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<pruningerror\>\"", "\[Rule]", "0.1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "number", " ", "of", " ", "convergence", " ", "to", " ", 
         "stop", " ", "variational", " ", "iteration"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<iterconverge\>\"", "\[Rule]", 
        RowBox[{
         RowBox[{"IntegerPart", "[", 
          RowBox[{"Log2", "@", "nqubit"}], "]"}], "*", "10"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "new", " ", "gates", " ", "with", " ", "param", " ", "\[Theta]", " ",
           "are", " ", "initialized", " ", 
          RowBox[{"with", " ", "[", 
           RowBox[{
            RowBox[{"-", "\[Theta]initrange"}], ",", "\[Theta]initrange"}], 
           "]"}]}], "\[ReverseElement]", "\[Theta]"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<\[Theta]initrange\>\"", "\[Rule]", 
        RowBox[{"\[Pi]", "/", "4"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"target", " ", "to", " ", "the", " ", "final", " ", "cost"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<\[Epsilon]fin\>\"", "\[Rule]", 
        RowBox[{"1", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]]}]}]}], "\[IndentingNewLine]", "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8211950103840218`*^9, 3.821195350350937*^9}, {
   3.821195430941946*^9, 3.821195495254801*^9}, {3.821195665964295*^9, 
   3.821195688484304*^9}, 3.8211957302533693`*^9, {3.821195762459177*^9, 
   3.821195787705577*^9}, {3.821202920447802*^9, 3.821202964026198*^9}, {
   3.821203389221884*^9, 3.821203393215633*^9}, {3.821203505170722*^9, 
   3.8212037209583*^9}, {3.821203798285783*^9, 3.821203807606135*^9}, {
   3.821204171022504*^9, 3.821204183866083*^9}, {3.8212043132865257`*^9, 
   3.821204433127038*^9}, {3.821204464758615*^9, 3.82120450567583*^9}, {
   3.821204594572885*^9, 3.821204652277779*^9}, {3.821205201384981*^9, 
   3.821205202483624*^9}, {3.8212060814669323`*^9, 3.821206085530775*^9}, {
   3.821206305956153*^9, 3.82120634399857*^9}, {3.821209160748008*^9, 
   3.821209177257207*^9}, {3.8212093294995537`*^9, 3.821209357197115*^9}, {
   3.821212571009089*^9, 3.821212571842798*^9}, {3.821296111502529*^9, 
   3.821296232103085*^9}, {3.821296262191575*^9, 3.821296363573*^9}, {
   3.8213056800713997`*^9, 3.821305709940364*^9}, {3.8213057565895987`*^9, 
   3.821305782717598*^9}, {3.8213078290370207`*^9, 3.821307852211885*^9}, 
   3.8213573009752827`*^9, {3.821358043311694*^9, 3.821358044432482*^9}, {
   3.821393957289283*^9, 3.821394020413261*^9}, {3.821469421976788*^9, 
   3.8214694285385303`*^9}, {3.821469493194034*^9, 3.821469493909937*^9}, {
   3.821469631954115*^9, 3.821469632132214*^9}, {3.8214698081949463`*^9, 
   3.821469812394582*^9}, {3.821470026453525*^9, 3.8214700291473417`*^9}, 
   3.821543271113763*^9, {3.821543513999837*^9, 3.821543523171294*^9}, 
   3.8215439715159473`*^9, {3.821547208312127*^9, 3.821547228955799*^9}, {
   3.8218064967651176`*^9, 3.8218065506714077`*^9}, {3.821806604225258*^9, 
   3.821806669611372*^9}, {3.8218068934689007`*^9, 3.821806898831091*^9}, {
   3.821806947709703*^9, 3.8218069503013077`*^9}, {3.8218070250573072`*^9, 
   3.821807025350362*^9}, {3.82180895345061*^9, 3.821808953628635*^9}, {
   3.8218111749493856`*^9, 3.821811175731185*^9}, {3.821821422103013*^9, 
   3.821821452746963*^9}, {3.821822645798974*^9, 3.821822646125822*^9}, {
   3.821881790165495*^9, 3.821881791968143*^9}, {3.8218892245592527`*^9, 
   3.821889225281686*^9}, {3.822494884352345*^9, 3.822494884642071*^9}, 
   3.8226359129318*^9, {3.82263595707406*^9, 3.82263595830827*^9}, {
   3.8226427277294617`*^9, 3.8226427289688263`*^9}, {3.8227663001557627`*^9, 
   3.822766301177499*^9}, {3.8227718829515753`*^9, 3.822771886305024*^9}, {
   3.822771945153927*^9, 3.822771946839167*^9}, {3.8227720230074463`*^9, 
   3.8227720249504557`*^9}, 3.822831196901888*^9, {3.822831400009795*^9, 
   3.8228314023304253`*^9}, {3.822831678966896*^9, 3.822831679905594*^9}, {
   3.82283545223487*^9, 3.822835452862301*^9}, {3.822859656000103*^9, 
   3.822859707861187*^9}, {3.823439793005876*^9, 3.823439843135689*^9}, {
   3.8234401681214933`*^9, 3.823440228351264*^9}, {3.8234407710364637`*^9, 
   3.823440774494822*^9}, {3.823445688419261*^9, 3.8234456957738047`*^9}, {
   3.8234457423075237`*^9, 3.823445777954265*^9}, 3.823532289612056*^9, {
   3.823534750138419*^9, 3.823534750869836*^9}, {3.823534889182385*^9, 
   3.8235349438048553`*^9}, {3.823550672304833*^9, 3.82355092213767*^9}, {
   3.82355096999323*^9, 3.823551025791922*^9}, {3.823584809531508*^9, 
   3.823584810500189*^9}, {3.82359409625776*^9, 3.823594096899312*^9}, {
   3.823594180547901*^9, 3.8235941901306868`*^9}, {3.823601292514433*^9, 
   3.823601325145418*^9}, {3.823603038558852*^9, 3.82360306575111*^9}, {
   3.823603175606625*^9, 3.823603223993061*^9}, {3.823703350677743*^9, 
   3.823703364007555*^9}, {3.823703417262339*^9, 3.8237034430459538`*^9}, {
   3.8237051365916233`*^9, 3.8237051368087273`*^9}, {3.823705254685503*^9, 
   3.823705273226276*^9}, 3.8237053670096903`*^9, {3.8237136156389837`*^9, 
   3.8237136165906057`*^9}, {3.823716929740355*^9, 3.823716930474128*^9}, {
   3.8237169703680477`*^9, 3.823716971193219*^9}, {3.823756052450431*^9, 
   3.8237560552772923`*^9}, {3.823768533254016*^9, 3.823768598511153*^9}, {
   3.823769139991981*^9, 3.8237692576020947`*^9}, {3.823769703279076*^9, 
   3.823769703573986*^9}, {3.823770762666016*^9, 3.82377076410723*^9}, {
   3.823779887792262*^9, 3.823779888307118*^9}, {3.823780138887672*^9, 
   3.823780158861257*^9}, {3.823780206740699*^9, 3.823780208048255*^9}, 
   3.823782111991652*^9, 3.82395429049247*^9, {3.8239723911972322`*^9, 
   3.8239723913941708`*^9}, {3.8239733723228607`*^9, 3.823973372605651*^9}, {
   3.823973834546101*^9, 3.823973846353868*^9}, {3.823974045614814*^9, 
   3.823974055189604*^9}, {3.823974128100473*^9, 3.823974133300931*^9}, {
   3.8239793476525993`*^9, 3.823979348229547*^9}, {3.82397938216415*^9, 
   3.823979383614059*^9}, {3.8240206958881893`*^9, 3.824020717134119*^9}, {
   3.8240209562121572`*^9, 3.8240209831703653`*^9}, {3.8240492940378857`*^9, 
   3.824049297654853*^9}, {3.8240497456850567`*^9, 3.824049752363537*^9}, {
   3.824051279910428*^9, 3.82405131184378*^9}, {3.824052852138592*^9, 
   3.8240528611015778`*^9}, {3.824053223033325*^9, 3.8240532382843437`*^9}, {
   3.824054602680853*^9, 3.8240546035395803`*^9}, {3.8240638385595827`*^9, 
   3.8240638454708033`*^9}, {3.824065279453116*^9, 3.824065280737172*^9}, {
   3.82409118921537*^9, 3.824091189556869*^9}, {3.824091573920651*^9, 
   3.8240915741656847`*^9}, {3.824125095140192*^9, 3.8241251012456837`*^9}, 
   3.824130072264329*^9, {3.824131049770438*^9, 3.824131074135786*^9}, {
   3.824131593149633*^9, 3.824131595383919*^9}, {3.824131628021697*^9, 
   3.8241316347452173`*^9}, {3.8241316792429457`*^9, 
   3.8241316807800627`*^9}, {3.82413712925144*^9, 3.824137180088971*^9}, {
   3.824138319575501*^9, 3.8241383201579*^9}, 3.8241395500957747`*^9, {
   3.824139667886754*^9, 3.8241396685886297`*^9}, {3.824142189290392*^9, 
   3.8241421947485437`*^9}, {3.8241849064565973`*^9, 3.824184915083124*^9}, {
   3.824185815845581*^9, 3.824185825912298*^9}, {3.824185856685478*^9, 
   3.824185869223283*^9}, {3.8241869485870247`*^9, 3.824186950218775*^9}, {
   3.824195640074129*^9, 3.824195651382399*^9}, {3.824196812325418*^9, 
   3.824196812861724*^9}, {3.824197550786913*^9, 3.824197601859136*^9}, {
   3.824197772238358*^9, 3.824197772397932*^9}, {3.824200292574737*^9, 
   3.8242002934283667`*^9}, {3.824202895172578*^9, 3.824202895348465*^9}, {
   3.82420479580443*^9, 3.8242048030658693`*^9}, {3.824213219507972*^9, 
   3.824213219774549*^9}, {3.824214252099929*^9, 3.824214252658174*^9}, {
   3.824216042837442*^9, 3.824216044736319*^9}, {3.8242161245458403`*^9, 
   3.824216124724917*^9}, {3.824220550091831*^9, 3.824220572142672*^9}, {
   3.82429186995331*^9, 3.8242918700719547`*^9}, {3.824291943761018*^9, 
   3.824291948901667*^9}, {3.824292834248906*^9, 3.824292840019733*^9}, {
   3.824295269569665*^9, 3.824295282080508*^9}, {3.824296978818947*^9, 
   3.824296984568932*^9}, {3.824297039397471*^9, 3.824297072889823*^9}, {
   3.824297295954026*^9, 3.824297306229732*^9}, {3.824297450880324*^9, 
   3.824297464401432*^9}, {3.824297598101737*^9, 3.824297598501204*^9}, {
   3.824297992841387*^9, 3.824298079987135*^9}, {3.824299034915987*^9, 
   3.8242991008553*^9}, {3.824299698684299*^9, 3.824299722298293*^9}, {
   3.8242998040087833`*^9, 3.824299830305743*^9}, {3.824299921369522*^9, 
   3.824299980676434*^9}, {3.824300013651925*^9, 3.824300014626668*^9}, {
   3.82430015434828*^9, 3.8243001578494263`*^9}, {3.8243002530947866`*^9, 
   3.8243002754357452`*^9}, {3.824300772496114*^9, 3.824300773057437*^9}, {
   3.824300896625185*^9, 3.824300896788039*^9}, {3.824301337108037*^9, 
   3.824301374892742*^9}, {3.8243015856810207`*^9, 3.824301619293652*^9}, {
   3.8243016926100082`*^9, 3.824301697469431*^9}, {3.824301767409707*^9, 
   3.82430176984584*^9}, {3.824301871786395*^9, 3.824301910664502*^9}, {
   3.8243019871290703`*^9, 3.8243019891160088`*^9}, {3.824302166825658*^9, 
   3.824302169189*^9}, {3.8243023095486717`*^9, 3.8243023126033487`*^9}, {
   3.824302618198454*^9, 3.8243026200779963`*^9}, {3.8243026840510883`*^9, 
   3.824302692634973*^9}, {3.8243028145228662`*^9, 3.824302814693572*^9}, {
   3.8243029297447844`*^9, 3.8243029511172647`*^9}, {3.824303220953045*^9, 
   3.824303233957591*^9}, 3.824303323034603*^9, {3.824303483541753*^9, 
   3.824303488804241*^9}, {3.824304045397726*^9, 3.8243040638704567`*^9}, {
   3.824304138536475*^9, 3.824304164311273*^9}, {3.824304223625922*^9, 
   3.824304230261549*^9}, {3.824304263282188*^9, 3.824304271445046*^9}, {
   3.824304435027128*^9, 3.8243044454603987`*^9}, {3.824304931546842*^9, 
   3.824304933871558*^9}, {3.8243053292351923`*^9, 3.824305330856634*^9}, {
   3.824305361338915*^9, 3.824305364869566*^9}, {3.824305587402055*^9, 
   3.8243055900878*^9}, 3.824305670403624*^9, {3.824305702453067*^9, 
   3.8243057025952587`*^9}, {3.824305850620491*^9, 3.8243058649756327`*^9}, {
   3.824305918258247*^9, 3.824305984862797*^9}, {3.824306059718233*^9, 
   3.8243060605051613`*^9}, {3.8243068122854357`*^9, 3.824306828917617*^9}, {
   3.824307095131831*^9, 3.824307115448481*^9}, {3.8243071835266037`*^9, 
   3.824307197038419*^9}, {3.824307514721499*^9, 3.82430751552456*^9}, {
   3.824307927008442*^9, 3.8243079271857452`*^9}, {3.8243087486695747`*^9, 
   3.8243087522899837`*^9}, {3.8243090527062387`*^9, 3.824309058913826*^9}, {
   3.824309824806261*^9, 3.824309826766378*^9}, {3.824310011181995*^9, 
   3.824310013249536*^9}, {3.82431009553188*^9, 3.824310108938323*^9}, {
   3.8243101470415*^9, 3.824310197287382*^9}, {3.8243105887684402`*^9, 
   3.824310598663357*^9}, {3.824311037411502*^9, 3.824311048315686*^9}, {
   3.824311566587453*^9, 3.824311570196048*^9}, {3.824317474334806*^9, 
   3.824317561729545*^9}, {3.824318180634218*^9, 3.8243182238025017`*^9}, {
   3.824322244166374*^9, 3.824322271450988*^9}, {3.8243224482606153`*^9, 
   3.824322454575778*^9}, {3.824323072685689*^9, 3.824323073253592*^9}, {
   3.824323271263726*^9, 3.824323286375359*^9}, {3.82432339071871*^9, 
   3.824323435415464*^9}, {3.8243235159706507`*^9, 3.824323607899365*^9}, {
   3.824323801801243*^9, 3.824323802585102*^9}, {3.8243239030647383`*^9, 
   3.824323903225143*^9}, {3.8243243581319838`*^9, 3.824324358265316*^9}, {
   3.8243244632320023`*^9, 3.824324488894313*^9}, {3.824324790700268*^9, 
   3.824324790867475*^9}, {3.824325123081376*^9, 3.824325131870253*^9}, {
   3.824325527467545*^9, 3.8243255284437437`*^9}, {3.824391871531067*^9, 
   3.824391872453556*^9}, {3.824391913420295*^9, 3.824391937809766*^9}, {
   3.824392142332385*^9, 3.824392146025683*^9}, {3.824392549512349*^9, 
   3.8243925497664013`*^9}, {3.824450698287002*^9, 3.824450725588139*^9}, {
   3.824538313431115*^9, 3.824538313631535*^9}, {3.824539608332206*^9, 
   3.8245396282446136`*^9}, {3.82484927614927*^9, 3.824849356972815*^9}, {
   3.8248523807657127`*^9, 3.824852415036909*^9}, {3.824852462073677*^9, 
   3.824852480937911*^9}, {3.8248835021606407`*^9, 3.824883507731675*^9}, {
   3.82488375500373*^9, 3.8248837992243547`*^9}, {3.8248838454968367`*^9, 
   3.824883847970928*^9}, {3.824883970042897*^9, 3.824883970188904*^9}, {
   3.824884451533407*^9, 3.824884451652705*^9}, {3.82501790190792*^9, 
   3.825017919957704*^9}, {3.8250630763272867`*^9, 3.825063080096944*^9}, {
   3.82506331878854*^9, 3.825063344254057*^9}, {3.82506370090467*^9, 
   3.825063701024376*^9}, {3.825105878266479*^9, 3.825105879446809*^9}, {
   3.825145421640697*^9, 3.825145461197824*^9}, {3.8251673391935463`*^9, 
   3.825167341714999*^9}, {3.825268982516733*^9, 3.825268982615323*^9}, {
   3.825269990580853*^9, 3.825269990754506*^9}, {3.825274735682439*^9, 
   3.825274739306239*^9}, {3.825496021193411*^9, 3.825496105252838*^9}, 
   3.82549656683491*^9, {3.825497063346908*^9, 3.825497088222774*^9}, {
   3.825508699930352*^9, 3.8255087210290117`*^9}, {3.825524619857788*^9, 
   3.825524621282948*^9}, {3.825533823615574*^9, 3.825533995403607*^9}, {
   3.825534031587137*^9, 3.825534032495379*^9}, {3.825534086114925*^9, 
   3.825534096781209*^9}, {3.825534279922015*^9, 3.825534280118454*^9}, {
   3.825534314670027*^9, 3.825534318706846*^9}, {3.825534777389049*^9, 
   3.825534778240087*^9}, {3.825535094814331*^9, 3.8255350981137047`*^9}, {
   3.825575129616001*^9, 3.825575136262732*^9}, {3.825575202596689*^9, 
   3.825575215676532*^9}, {3.825664826086795*^9, 3.8256648292621727`*^9}, {
   3.825673942886323*^9, 3.825673981658659*^9}, 3.825675164729877*^9, {
   3.8256753349748087`*^9, 3.825675419094758*^9}, {3.8256765561558733`*^9, 
   3.825676563776988*^9}, {3.825710331836781*^9, 3.8257103364879007`*^9}, {
   3.825778732073214*^9, 3.825778747179637*^9}, 3.8261458079851513`*^9, {
   3.8261458433357563`*^9, 3.826145865938196*^9}, {3.8261990774806347`*^9, 
   3.82619909805707*^9}, {3.826264404242158*^9, 3.826264412697117*^9}, {
   3.826264754968704*^9, 3.826264758582149*^9}, {3.826722091899021*^9, 
   3.826722092666061*^9}, {3.826722195949998*^9, 3.826722196215054*^9}, {
   3.826724799706133*^9, 3.8267248000850477`*^9}, {3.8267250785020323`*^9, 
   3.826725090486352*^9}, {3.826725860242621*^9, 3.82672586054368*^9}, 
   3.827347486800027*^9, {3.827381495156506*^9, 3.82738149739715*^9}, {
   3.82738154584172*^9, 3.827381567317985*^9}, {3.827381830510538*^9, 
   3.8273818967756433`*^9}, {3.82738192781105*^9, 3.827381930611579*^9}, {
   3.827593371161367*^9, 3.8275933765331583`*^9}, {3.8275935116057568`*^9, 
   3.827593522953846*^9}, {3.827603259852337*^9, 3.8276033040136757`*^9}, {
   3.827603335990152*^9, 3.827603340491951*^9}, {3.8276034113371897`*^9, 
   3.827603419623749*^9}, {3.827603529460747*^9, 3.827603554932371*^9}, {
   3.8276036327163763`*^9, 3.827603659626487*^9}, {3.8276037123408003`*^9, 
   3.827603745767632*^9}, {3.827603834379712*^9, 3.8276038391529512`*^9}, {
   3.828109265388199*^9, 3.828109267255052*^9}, {3.82912752293539*^9, 
   3.829127523363123*^9}, {3.8291280533136673`*^9, 3.829128054836779*^9}, {
   3.830886090450905*^9, 3.830886128670158*^9}, {3.830886246938908*^9, 
   3.830886247780321*^9}, {3.830886451191285*^9, 3.830886462209943*^9}, {
   3.830886499685679*^9, 3.8308865001870327`*^9}, {3.83088664131327*^9, 
   3.830886647307147*^9}, {3.830887629207061*^9, 3.8308877126266403`*^9}, {
   3.8308878685743427`*^9, 3.830887869556499*^9}, {3.8308880332653837`*^9, 
   3.830888082669281*^9}, {3.830888135016246*^9, 3.8308881492876577`*^9}, {
   3.830888339821269*^9, 3.830888345602385*^9}, {3.831112574202404*^9, 
   3.831112578372604*^9}, {3.8412858674327507`*^9, 3.84128589388752*^9}, {
   3.84128616307227*^9, 3.841286209363861*^9}, 3.841373845980194*^9, {
   3.841374103522318*^9, 3.8413741605807953`*^9}, {3.846755248129361*^9, 
   3.846755255798182*^9}, {3.8473408888191557`*^9, 3.847340920971455*^9}, {
   3.847341936294812*^9, 3.847341939410009*^9}, 3.8473419909813137`*^9, {
   3.847342075192494*^9, 3.847342075904879*^9}, {3.847342117532089*^9, 
   3.847342118408493*^9}, {3.847342526643119*^9, 3.84734252796502*^9}, {
   3.847342735793045*^9, 3.847342747717689*^9}, {3.847343563957549*^9, 
   3.8473435755066643`*^9}, {3.8486546608094873`*^9, 3.84865467456944*^9}, {
   3.848654830800551*^9, 3.848654878430353*^9}, {3.84865648925167*^9, 
   3.8486564972773123`*^9}, {3.848656581831841*^9, 3.848656584290668*^9}, {
   3.848657188356201*^9, 3.848657204231999*^9}, {3.848657449035585*^9, 
   3.848657495318837*^9}, {3.848657758232973*^9, 3.848657760939026*^9}, {
   3.848657947070965*^9, 3.848657966534193*^9}, {3.84865803152798*^9, 
   3.8486580336108*^9}, {3.848658733346602*^9, 3.848658778858797*^9}, {
   3.848667599382185*^9, 3.848667623496611*^9}, {3.848667948980735*^9, 
   3.848667951084791*^9}, {3.848668038816136*^9, 3.84866803992295*^9}, {
   3.848668302384729*^9, 3.848668330898604*^9}, {3.8486690103940887`*^9, 
   3.8486690182548237`*^9}, {3.848669212646222*^9, 3.8486692179032593`*^9}, {
   3.848670048222785*^9, 3.848670054032876*^9}, {3.8486701066674433`*^9, 
   3.848670106999504*^9}, {3.84867038993463*^9, 3.848670403474614*^9}, {
   3.848670464987611*^9, 3.848670486942924*^9}, {3.8486714530458317`*^9, 
   3.848671465557419*^9}, {3.848671503090396*^9, 3.848671515511236*^9}, {
   3.8486716138922977`*^9, 3.848671662689086*^9}, {3.848672495089621*^9, 
   3.848672506742277*^9}, {3.8486735672327967`*^9, 3.8486735696644783`*^9}, {
   3.848675691889377*^9, 3.84867569202594*^9}, {3.848675759556814*^9, 
   3.848675763607336*^9}, {3.848730584534444*^9, 3.848730631303165*^9}, {
   3.849176116232334*^9, 3.84917611638063*^9}, {3.849176148463348*^9, 
   3.849176180373753*^9}, {3.849176244807302*^9, 3.849176247707449*^9}, {
   3.849499302497019*^9, 3.849499304888459*^9}, {3.849499348970065*^9, 
   3.849499374578512*^9}, {3.849499414038772*^9, 3.849499432796255*^9}, {
   3.849683276611616*^9, 3.849683301302802*^9}, {3.849713750304929*^9, 
   3.849713771355671*^9}, {3.849779067988266*^9, 3.8497790767943296`*^9}, {
   3.8497797957273006`*^9, 3.849779800403742*^9}, {3.849783321967682*^9, 
   3.8497833256662683`*^9}, {3.84985168147917*^9, 3.8498517164769173`*^9}, {
   3.849878492813314*^9, 3.8498785303962107`*^9}, {3.849879005505001*^9, 
   3.849879023345912*^9}, {3.850103742652802*^9, 3.8501037558362837`*^9}, {
   3.8501322437412853`*^9, 3.850132262921546*^9}, 3.85021255626087*^9, {
   3.8502175634421663`*^9, 3.850217592487651*^9}, {3.850330684652009*^9, 
   3.8503307043847*^9}, {3.85033083960515*^9, 3.85033084175235*^9}, {
   3.850330892933751*^9, 3.8503308959362507`*^9}, 3.850393829527279*^9, {
   3.851144499423983*^9, 3.851144544645945*^9}, {3.851150597826013*^9, 
   3.851150626241276*^9}, {3.851151976167972*^9, 3.85115199797086*^9}, {
   3.851152119031019*^9, 3.851152119483842*^9}, {3.851152202356576*^9, 
   3.8511522218162317`*^9}, {3.851152290569648*^9, 3.851152293466926*^9}, {
   3.851152509168696*^9, 3.851152514424732*^9}, {3.851152547140519*^9, 
   3.851152550184506*^9}, {3.851152826693725*^9, 3.851152855184884*^9}, {
   3.8511531037956257`*^9, 3.851153121210806*^9}, {3.8511535061716013`*^9, 
   3.851153508046842*^9}, {3.851153546632845*^9, 3.851153547657752*^9}, {
   3.8511545209377537`*^9, 3.851154523705419*^9}, {3.851154580343913*^9, 
   3.8511545892033367`*^9}, 3.851154750071432*^9, {3.851154896573142*^9, 
   3.851154906984426*^9}, {3.851155043640566*^9, 3.851155077766782*^9}, {
   3.8511552100734053`*^9, 3.8511552106468163`*^9}, {3.851155381969781*^9, 
   3.85115539111553*^9}, {3.851160316107266*^9, 3.8511603185731993`*^9}, {
   3.8511603572059402`*^9, 3.8511603588310423`*^9}, {3.8511604051030493`*^9, 
   3.851160417442868*^9}, {3.8522649446238813`*^9, 3.85226497357168*^9}, {
   3.852265393512566*^9, 3.85226540835565*^9}, {3.852473070630563*^9, 
   3.852473073611437*^9}, {3.855990683180708*^9, 3.8559906848529663`*^9}, {
   3.855991450139727*^9, 3.855991515813203*^9}, {3.855992694902623*^9, 
   3.855992714008851*^9}, {3.855992750517498*^9, 3.855992750913286*^9}, {
   3.855993216213958*^9, 3.8559932187141743`*^9}, {3.855993311169182*^9, 
   3.855993313560484*^9}, {3.855993847404283*^9, 3.8559938652539167`*^9}, {
   3.857627785415687*^9, 3.857627802893503*^9}, {3.85805192261535*^9, 
   3.8580519249329147`*^9}, {3.858052502892174*^9, 3.858052504081871*^9}, {
   3.858052645232559*^9, 3.858052655575653*^9}, {3.8580529674716997`*^9, 
   3.858052970585792*^9}, {3.858287271513606*^9, 3.858287321674366*^9}, {
   3.8582874224303913`*^9, 3.858287460099586*^9}, {3.858287576569613*^9, 
   3.858287577195315*^9}, {3.86594029299155*^9, 3.865940295020969*^9}, {
   3.8659410036415243`*^9, 3.8659410052350693`*^9}, {3.8659427198885937`*^9, 
   3.865942757200632*^9}, {3.865953308324527*^9, 3.865953338005186*^9}, {
   3.865953472737228*^9, 3.865953513097166*^9}, {3.865953608959978*^9, 
   3.865953612157868*^9}, {3.865955021894478*^9, 3.86595510611584*^9}, {
   3.8659553239154387`*^9, 3.865955368319491*^9}, {3.865955555058559*^9, 
   3.8659555606555634`*^9}, {3.865955595987397*^9, 3.865955656286014*^9}, {
   3.865958543245981*^9, 3.8659585505838957`*^9}, {3.8660204228629723`*^9, 
   3.866020490793715*^9}, {3.8660264056167727`*^9, 3.86602642159025*^9}, {
   3.8660271657894373`*^9, 3.866027233228014*^9}, {3.866027394710005*^9, 
   3.866027423144417*^9}, {3.866027498942477*^9, 3.866027500593204*^9}, {
   3.8660291390921*^9, 3.86602915142172*^9}, {3.866036137406459*^9, 
   3.8660361378872232`*^9}, {3.866036678672016*^9, 3.866036679044298*^9}, {
   3.866037885801309*^9, 3.866037886968502*^9}, {3.866037969351*^9, 
   3.8660379865038567`*^9}, {3.866038055360442*^9, 3.866038087480782*^9}, {
   3.866045941602297*^9, 3.86604595847021*^9}, {3.8660460068671494`*^9, 
   3.866046007671597*^9}, {3.866047258999655*^9, 3.866047268560801*^9}, {
   3.8660475191453*^9, 3.86604753065327*^9}, {3.866047759136091*^9, 
   3.866047777238688*^9}, {3.866048104217416*^9, 3.86604810432057*^9}, {
   3.866049745985433*^9, 3.8660497551856833`*^9}, {3.866054686519744*^9, 
   3.866054705128323*^9}, {3.866059546744316*^9, 3.866059599206608*^9}, {
   3.866060285520389*^9, 3.866060316028303*^9}, {3.8660603810796337`*^9, 
   3.8660603834677563`*^9}, {3.866060637271923*^9, 3.866060669967699*^9}, {
   3.866064321841267*^9, 3.866064322061973*^9}, {3.866107186246027*^9, 
   3.866107213042078*^9}, {3.866107324756014*^9, 3.866107331832447*^9}, {
   3.866107489102333*^9, 3.866107514954219*^9}, {3.866114343738016*^9, 
   3.86611437179189*^9}, {3.866114644482662*^9, 3.866114687801813*^9}, {
   3.8661247732139263`*^9, 3.866124778846081*^9}, {3.8661248089244337`*^9, 
   3.866124814642107*^9}, {3.8661250363803043`*^9, 3.866125041257757*^9}, {
   3.866125093037051*^9, 3.866125093862248*^9}, {3.866125265968351*^9, 
   3.86612528623464*^9}, 3.8661254737604723`*^9, {3.866125543186948*^9, 
   3.866125543498117*^9}, {3.8661257945201817`*^9, 3.8661258045845013`*^9}, {
   3.86612585155019*^9, 3.86612586209332*^9}, {3.8661260261447697`*^9, 
   3.866126026373562*^9}, {3.866126142230112*^9, 3.866126177563476*^9}, {
   3.866126210660323*^9, 3.8661262474819527`*^9}, {3.866127219593718*^9, 
   3.866127320995001*^9}, {3.8661273867181377`*^9, 3.8661273939412727`*^9}, {
   3.866127435008628*^9, 3.866127444796794*^9}, {3.866127510240122*^9, 
   3.866127510406477*^9}, {3.8661277901258*^9, 3.866127794621112*^9}, {
   3.8661281939303102`*^9, 3.866128195868586*^9}, {3.86613190632325*^9, 
   3.8661319472203207`*^9}, {3.8661329285773077`*^9, 3.866132948881153*^9}, {
   3.866133002236532*^9, 3.8661330126321497`*^9}, {3.866133045943672*^9, 
   3.8661330462219563`*^9}, {3.866135065816948*^9, 3.866135077839113*^9}, {
   3.8661351088138657`*^9, 3.8661351089906197`*^9}, {3.866135812459845*^9, 
   3.8661358149767303`*^9}, {3.86613724161565*^9, 3.8661372534239273`*^9}, 
   3.8661373013978577`*^9, {3.8679124188147097`*^9, 3.867912645876605*^9}, 
   3.86791647200404*^9, 3.8679167746392307`*^9, {3.86791849922892*^9, 
   3.8679186232014017`*^9}, {3.867918811607882*^9, 3.867918830884858*^9}, {
   3.8679226955388308`*^9, 3.8679226958194523`*^9}, {3.867923189562504*^9, 
   3.867923208674076*^9}, {3.8679389437758627`*^9, 3.867938988223527*^9}, {
   3.868006713281803*^9, 3.8680067137107697`*^9}, {3.86801131772806*^9, 
   3.86801132977442*^9}},ExpressionUUID->"d59efb8e-5439-4ec9-b913-\
64b1683d8faf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrepareTrainInit", "::", "usage"}], "=", 
   "\"\<PrepareTrainInit[unitary, ntrainstates], returns a set of initial \
states { {U|P>}, {P} }, where |P> random Pauli states.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrepareTrainInit", "[", 
   RowBox[{"unitary_", ",", "ntrainstates_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"paulib", ",", "nq", ",", "rpaulis", ",", "p", ",", "e", ",", 
      RowBox[{"st", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"invop", "=", 
       RowBox[{"{", "}"}]}], ",", "amps"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"paulib", "=", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<x\>\"", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}]}], "}"}]}], "}"}]}], 
        ",", 
        RowBox[{"\"\<y\>\"", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[ImaginaryI]", "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}]}], "}"}]}], "}"}]}], 
        ",", 
        RowBox[{"\"\<z\>\"", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "1", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "}"}]}], "}"}]}]}], "|>"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rpaulis", "=", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<x\>\"", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "H", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Z", ",", "H"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"\"\<y\>\"", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Z", ",", "S", ",", "H"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"S", ",", "H"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"\"\<z\>\"", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "X", "}"}]}], "}"}]}]}], "|>"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nq", "=", 
      RowBox[{"Log2", "@", 
       RowBox[{"Length", "@", "unitary"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"st", "=", 
          RowBox[{"{", "}"}]}], ";", 
         RowBox[{"invop", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RandomChoice", "@", 
              RowBox[{"Keys", "@", "paulib"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"e", "=", 
             RowBox[{"RandomChoice", "@", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"st", ",", 
              RowBox[{
               RowBox[{"paulib", "[", "p", "]"}], "[", 
               RowBox[{"[", "e", "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"invop", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"#", ",", "q"}], "]"}], "&"}], "/@", " ", 
               RowBox[{
                RowBox[{"rpaulis", "[", "p", "]"}], "[", 
                RowBox[{"[", "e", "]"}], "]"}]}]}], "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"q", ",", "0", ",", 
             RowBox[{"nq", "-", "1"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"InitStateFromAmps", "[", "]"}], " ", "receives", " ", 
           "only", " ", 
           RowBox[{"numerics", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"amps", "=", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{"N", "[", 
             RowBox[{"unitary", ".", 
              RowBox[{"Flatten", "[", 
               RowBox[{"KroneckerProduct", "@@", 
                RowBox[{"Reverse", "@", "st"}]}], "]"}]}], "]"}], "}"}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"n", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Chop", "[", 
             RowBox[{"amps", ".", 
              RowBox[{"ConjugateTranspose", "@", "amps"}]}], "]"}], ",", 
            RowBox[{"Flatten", "@", "invop"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "ntrainstates"}], "}"}]}], "]"}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.865955421567645*^9, 3.865955501365471*^9}, {
   3.86595574583556*^9, 3.8659559126147118`*^9}, {3.8659577506662197`*^9, 
   3.865957780037929*^9}, {3.865958076030921*^9, 3.8659581178518476`*^9}, {
   3.8659581916618433`*^9, 3.8659581930934753`*^9}, {3.8659582663811417`*^9, 
   3.8659583255221233`*^9}, {3.8659588195016727`*^9, 3.865958823192878*^9}, {
   3.865958878615408*^9, 3.8659589804664087`*^9}, {3.865959020261201*^9, 
   3.8659590855532293`*^9}, {3.865959117832103*^9, 3.865959163393701*^9}, {
   3.865959204907761*^9, 3.865959229099221*^9}, {3.865959281371772*^9, 
   3.86595929298081*^9}, {3.8659593378453913`*^9, 3.86595934735563*^9}, {
   3.865959452903236*^9, 3.8659595339568033`*^9}, {3.865959698947982*^9, 
   3.865959748778739*^9}, {3.865959820772822*^9, 3.865959914465609*^9}, {
   3.8659599451195593`*^9, 3.8659599495135107`*^9}, {3.865960535683836*^9, 
   3.865960568254072*^9}, {3.865960601679434*^9, 3.8659606323871317`*^9}, {
   3.865960665168592*^9, 3.865960704655558*^9}, {3.8659607972809134`*^9, 
   3.86596081925237*^9}, {3.865960857633828*^9, 3.865960883254889*^9}, {
   3.8659633776826363`*^9, 3.865963391347563*^9}, {3.8659642196428623`*^9, 
   3.865964225277595*^9}, {3.865964319501956*^9, 3.865964485963047*^9}, {
   3.865964550435128*^9, 3.865964551670877*^9}, {3.865965120489901*^9, 
   3.865965129463025*^9}, {3.865965968868402*^9, 3.8659660134146976`*^9}, 
   3.8659660791034403`*^9, {3.8659663243708153`*^9, 3.865966330154438*^9}, 
   3.865967727995788*^9, {3.865970448079586*^9, 3.8659704493740177`*^9}, {
   3.86597054780962*^9, 3.8659705726919928`*^9}, {3.865970720000861*^9, 
   3.865970721290772*^9}, {3.86597116084219*^9, 3.865971176274912*^9}, {
   3.865971256745338*^9, 3.865971261541012*^9}, {3.865971313918853*^9, 
   3.865971326131748*^9}, 3.865971367973007*^9, {3.865971779891129*^9, 
   3.865971781469009*^9}, {3.8659719017480392`*^9, 3.865971915856556*^9}, {
   3.865972026391273*^9, 3.8659720833914948`*^9}, {3.865972556070225*^9, 
   3.865972560085685*^9}, {3.86597269546838*^9, 3.865972732431711*^9}, {
   3.866019521753508*^9, 3.866019550675541*^9}, 3.866019901852899*^9, {
   3.866019964346532*^9, 3.866019993347704*^9}, {3.8660200270564747`*^9, 
   3.866020046260291*^9}, {3.8660201156672583`*^9, 3.8660201340148907`*^9}, {
   3.8660206057519693`*^9, 3.86602061128975*^9}, {3.8661319810955887`*^9, 
   3.866131982273095*^9}, {3.867922092545351*^9, 3.867922148841865*^9}, {
   3.8679222305049467`*^9, 3.867922249779172*^9}, {3.867922286061781*^9, 
   3.867922289680283*^9}, {3.867922382326499*^9, 3.867922420954768*^9}},
 CellLabel->
  "In[813]:=",ExpressionUUID->"cb6def9c-7ea8-497e-98f6-6d2d93b34f68"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Random gates generation related", "Subsection",
 CellChangeTimes->{{3.8211291780732937`*^9, 3.821129199186705*^9}, {
  3.821294812613449*^9, 
  3.82129483075172*^9}},ExpressionUUID->"7c16ba10-869f-4022-94b3-\
019cda9ad76a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"slotCount", "::", "usage"}], "=", 
  "\"\<slotCount[f]. Count the slot number in a pure function.\>\""}], "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slotCount", "[", "f_Function", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "deleteInner", "}"}], ",", 
    RowBox[{
     RowBox[{"deleteInner", "=", 
      RowBox[{"Replace", "[", 
       RowBox[{"f", ",", 
        RowBox[{"_Function", "\[RuleDelayed]", 
         RowBox[{"Sequence", "[", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "Infinity"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Cases", "[", 
        RowBox[{"deleteInner", ",", "_Slot", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "Infinity"}], "}"}], ",", 
         RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}], "]"}], "//", 
      "Length"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"slotCount", "[", "f_Subscript", "]"}], ":=", "0"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gateIdxLen", "[", "gate_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "lidx", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "gate", "]"}], "===", "Function"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lidx", "=", 
         RowBox[{"slotCount", "[", "gate", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lidx", "===", "0"}], ",", 
          RowBox[{"lidx", "=", 
           RowBox[{"Length", "@", 
            RowBox[{
            "gate", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"lidx", "=", 
        RowBox[{"Length", "@", 
         RowBox[{"GetIndicesOfGate", "[", "gate", "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "lidx"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->
  "In[815]:=",ExpressionUUID->"6e6586ba-c3b0-48cb-bee7-877edf44242b"],

Cell[BoxData["\<\"slotCount[f]. Count the slot number in a pure \
function.\"\>"], "Output",
 CellChangeTimes->{
  3.8524446559693537`*^9, 3.8524459081816473`*^9, 3.852446641218603*^9, 
   3.852453920916431*^9, 3.852455207486557*^9, 3.8524553467771997`*^9, 
   3.852455428576926*^9, 3.852456404577829*^9, 3.85245645121731*^9, 
   3.852456859028782*^9, 3.855990677849639*^9, 3.855991131240081*^9, 
   3.8559915459848423`*^9, 3.8559917206884737`*^9, {3.8559921012830667`*^9, 
   3.855992111336782*^9}, 3.855992486651135*^9, 3.855992791020316*^9, 
   3.8559932287201233`*^9, 3.855993319237214*^9, 3.855993854998109*^9, 
   3.857627814903463*^9, 3.857628413240035*^9, 3.857628872665269*^9, 
   3.857882746181821*^9, 3.858051914450776*^9, 3.858287336177608*^9, 
   3.865940306031361*^9, 3.8659424083141203`*^9, 3.865942783317932*^9, 
   3.86594311403452*^9, 3.865943412675658*^9, {3.86594393114489*^9, 
   3.865943953220434*^9}, 3.865967601095729*^9, 3.866019235307412*^9, {
   3.86603681619287*^9, 3.866036835790389*^9}, 3.866036946701355*^9, 
   3.86603713251693*^9, 3.866037250401697*^9, 3.866037425533*^9, 
   3.866037536649033*^9, 3.866040104079109*^9, 3.866045755529148*^9, 
   3.8660459229951143`*^9, 3.866046648388629*^9, 3.86604719034872*^9, 
   3.866047263410561*^9, 3.86604731820125*^9, 3.8660475575629663`*^9, {
   3.8660476313344927`*^9, 3.866047646570084*^9}, 3.866047806353167*^9, 
   3.866047920027994*^9, 3.866048023695223*^9, 3.866048115402713*^9, 
   3.866048241398149*^9, 3.866048305196677*^9, 3.8660484808502407`*^9, 
   3.8660497736428947`*^9, {3.866051959210464*^9, 3.8660519718377132`*^9}, 
   3.866052041948369*^9, 3.8660521153700333`*^9, {3.8660533197039557`*^9, 
   3.866053342005403*^9}, 3.866053403487232*^9, 3.866053446539926*^9, {
   3.866054672118411*^9, 3.8660547019312963`*^9}, 3.866055472780554*^9, 
   3.866055556942258*^9, 3.866055638214719*^9, {3.866059611655761*^9, 
   3.866059626810891*^9}, 3.8660598682700233`*^9, 3.866060156153019*^9, {
   3.866060323296604*^9, 3.8660603358039913`*^9}, {3.866107221602627*^9, 
   3.86610722892233*^9}, 3.86611070130836*^9, 3.866112527959923*^9, 
   3.8661146584627113`*^9, 3.866114698822234*^9, 3.866122578018314*^9, 
   3.866122640541017*^9, 3.866122813767107*^9, 3.86612309635542*^9, 
   3.8661232059911633`*^9, 3.866123687635766*^9, 3.8661237865985413`*^9, 
   3.866124018781518*^9, 3.866124823490457*^9, 3.866124886035701*^9, 
   3.866125120392325*^9, 3.866125294599166*^9, 3.8661255492967777`*^9, 
   3.866127686766802*^9, 3.866128016650688*^9, 3.8661281820349607`*^9, 
   3.866133732324429*^9, 3.866133829980744*^9, 3.866135003184539*^9, 
   3.866135178531255*^9, 3.866137265166453*^9, 3.8679190434188557`*^9, 
   3.867922677331727*^9},
 CellLabel->
  "Out[815]=",ExpressionUUID->"53678869-6c16-4e57-8bfd-d5bb382838cc"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RandomGate", "::", "usage"}], "=", 
   "\"\<RandomGate[conf]. Generate basic random gate given the configuration.\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomGate", "[", "conf_", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"gatepool", ",", "indices", ",", 
      RowBox[{"ngatespool", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"conf", "[", "\"\<gateset\>\"", "]"}]}]}], ",", "newgate", 
      ",", "nqgate", ",", 
      RowBox[{"trial", "=", "0"}], ",", "nidx", ",", "swapforms", ",", 
      "idxtrial"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"nqgate", "=", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"conf", "[", "\"\<weightgate\>\"", "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"conf", "[", "\"\<weightgate\>\"", "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"gatepool", "=", 
      RowBox[{"Permute", "[", 
       RowBox[{
        RowBox[{"conf", "[", "\"\<gateset\>\"", "]"}], ",", 
        RowBox[{"RandomPermutation", "[", "ngatespool", "]"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"choose", " ", "the", " ", "gate"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"newgate", "=", 
         RowBox[{"RandomChoice", "[", "gatepool", "]"}]}], ";", 
        "\[IndentingNewLine]", " ", 
        RowBox[{"nidx", "=", 
         RowBox[{"gateIdxLen", "[", "newgate", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"nidx", "\[NotEqual]", " ", "nqgate"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Continue", "[", "]"}]}], "\[IndentingNewLine]", "]"}], ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "@", "newgate"}], "===", "Function"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Function", " ", "form"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"indices", "=", 
            RowBox[{"RandomSample", "[", 
             RowBox[{
              RowBox[{"conf", "[", "\"\<ansatzspace\>\"", "]"}], ",", 
              "nqgate"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"newgate", "=", 
            RowBox[{"newgate", "@@", "indices"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Break", "[", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"++", "trial"}], ">", "100"}], ",", 
          RowBox[{
          "Return", "[", 
           "\"\<Your gateset and hardware gates dont match.\>\"", "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "newgate"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.821211053481781*^9, 3.821211057082307*^9}, {
   3.821211107461388*^9, 3.821211146278824*^9}, {3.82121119418298*^9, 
   3.821211211573235*^9}, {3.821212792581646*^9, 3.8212128017925777`*^9}, {
   3.821212842452324*^9, 3.821212845333952*^9}, {3.821222790947249*^9, 
   3.8212228255712957`*^9}, {3.8212229552129583`*^9, 
   3.8212229610452433`*^9}, {3.821223088899898*^9, 3.821223152745389*^9}, {
   3.82127657222432*^9, 3.82127658590271*^9}, {3.821294790137776*^9, 
   3.82129479311372*^9}, {3.821294846125636*^9, 3.821294876667325*^9}, {
   3.822860949638047*^9, 3.822861085973349*^9}, {3.822861240894787*^9, 
   3.822861248164556*^9}, {3.82361077023706*^9, 3.823610779717332*^9}, {
   3.823610843888846*^9, 3.8236108789414167`*^9}, {3.823610909984694*^9, 
   3.823610982176641*^9}, {3.8236110459799623`*^9, 3.823611111053121*^9}, 
   3.823614045711873*^9, {3.823615568281521*^9, 3.823615616067548*^9}, {
   3.82361594156811*^9, 3.823615943480225*^9}, {3.823615997967476*^9, 
   3.8236160233258257`*^9}, {3.823616102774231*^9, 3.823616361924815*^9}, {
   3.8273457434562683`*^9, 3.827345815618978*^9}, 3.827345847375451*^9, 
   3.827345942132071*^9, {3.82734598045263*^9, 3.827345991755144*^9}, {
   3.827346034177433*^9, 3.827346061794156*^9}, {3.827346436683916*^9, 
   3.8273464426354237`*^9}, {3.827346576458173*^9, 3.827346583446295*^9}, {
   3.827346711224354*^9, 3.827346718035988*^9}, {3.827346905082059*^9, 
   3.827346943459874*^9}, {3.827347054353827*^9, 3.827347104738797*^9}, {
   3.8338768229212646`*^9, 3.833876840008181*^9}, {3.834745550725882*^9, 
   3.8347456089072742`*^9}, {3.834745660417335*^9, 3.834745753967931*^9}, {
   3.8347458064288177`*^9, 3.834745834277896*^9}, {3.834745997071066*^9, 
   3.834746021928718*^9}, {3.834746058155314*^9, 3.834746061080752*^9}, {
   3.834746572887467*^9, 3.8347467213620977`*^9}, {3.83474691940774*^9, 
   3.8347470242351522`*^9}, {3.834747068814962*^9, 3.834747094327911*^9}, {
   3.8347472678183613`*^9, 3.834747279647365*^9}, {3.834747312956851*^9, 
   3.834747327862329*^9}, {3.834747718432692*^9, 3.834747743741581*^9}, {
   3.834747936316923*^9, 3.834748049484922*^9}, {3.834748183575695*^9, 
   3.834748332240588*^9}, {3.834748543274914*^9, 3.834748544590815*^9}, {
   3.835002028293394*^9, 3.83500205627518*^9}, 3.8350023968973923`*^9, {
   3.835002967441381*^9, 3.83500298623601*^9}, {3.835003111455964*^9, 
   3.8350032689533987`*^9}, {3.835003318481223*^9, 3.8350033194315147`*^9}, {
   3.8350046693345003`*^9, 3.835004707659972*^9}, {3.8350047633683653`*^9, 
   3.835004768924683*^9}, {3.835004843685717*^9, 3.835004845772009*^9}, {
   3.835005178995305*^9, 3.835005180430621*^9}, {3.835006246918736*^9, 
   3.835006247211801*^9}, {3.8350073651814833`*^9, 3.8350073712916603`*^9}, 
   3.8350093707852716`*^9, {3.835009849054274*^9, 3.835009875736953*^9}, {
   3.835010517627646*^9, 3.835010522509713*^9}, 3.835010663229039*^9, {
   3.8350110634427853`*^9, 3.835011079480441*^9}, {3.835014675311263*^9, 
   3.835014741614357*^9}, {3.8350153252171164`*^9, 3.835015549472519*^9}, {
   3.835015599883896*^9, 3.835015635575227*^9}, 3.8350158224530497`*^9, {
   3.8350813301878233`*^9, 3.835081332071846*^9}, {3.835082774793323*^9, 
   3.835082839037196*^9}, {3.835083164235015*^9, 3.835083555065625*^9}, {
   3.835083586488872*^9, 3.8350836497301083`*^9}, {3.835083694100637*^9, 
   3.8350836961282663`*^9}, {3.8350837323309317`*^9, 3.835083755420382*^9}, {
   3.835083787923875*^9, 3.8350838573323917`*^9}, {3.835085062910646*^9, 
   3.835085083727557*^9}, {3.835085136451303*^9, 3.835085154290332*^9}, {
   3.8350851979263563`*^9, 3.835085212457591*^9}, {3.835085243160082*^9, 
   3.835085369484853*^9}, {3.8350854129777813`*^9, 3.835085553004809*^9}, {
   3.8350855989268837`*^9, 3.835085650786237*^9}, {3.835085940027137*^9, 
   3.835085963393211*^9}, {3.835086905744803*^9, 3.83508716806411*^9}, {
   3.835087214290823*^9, 3.8350873898477716`*^9}, {3.835088511448403*^9, 
   3.8350885593169603`*^9}, {3.835088622477759*^9, 3.835088632607217*^9}, {
   3.8350886752169027`*^9, 3.835088678332713*^9}, {3.835088816912648*^9, 
   3.835088825311335*^9}, {3.835103994251163*^9, 3.835104023467353*^9}, {
   3.835104054276087*^9, 3.835104108961931*^9}, {3.835104148491415*^9, 
   3.835104194640313*^9}, {3.835104238489354*^9, 3.835104246344083*^9}, {
   3.835105712254649*^9, 3.8351057136539593`*^9}, {3.8351058174017572`*^9, 
   3.835105828714332*^9}, {3.8351262175479*^9, 3.835126254586536*^9}, {
   3.83512636032325*^9, 3.835126360710228*^9}, {3.835126469085246*^9, 
   3.8351264907420673`*^9}, {3.835126547190123*^9, 3.8351265790236263`*^9}, 
   3.8351266511773977`*^9, {3.835126689586296*^9, 3.8351266907894287`*^9}, {
   3.835127794953038*^9, 3.8351278178687477`*^9}, {3.835127861695808*^9, 
   3.835127866817526*^9}, {3.835127899529853*^9, 3.835128106750216*^9}, {
   3.8351287023333673`*^9, 3.835128812153344*^9}, {3.835128911457788*^9, 
   3.8351289240930557`*^9}, {3.835473051386921*^9, 3.835473155519843*^9}, 
   3.8354735045006943`*^9, {3.835473793205996*^9, 3.835473793706019*^9}, {
   3.835473828077209*^9, 3.835473829973194*^9}, {3.852444612281041*^9, 
   3.8524446130764227`*^9}, {3.866055412250579*^9, 3.866055424527124*^9}, {
   3.8660556218979397`*^9, 3.866055626370701*^9}, {3.866116468570733*^9, 
   3.866116490199617*^9}, {3.866116767253195*^9, 3.86611676897806*^9}, {
   3.866116969612431*^9, 3.866116973144743*^9}, {3.866122617815884*^9, 
   3.866122630096039*^9}},
 CellLabel->
  "In[825]:=",ExpressionUUID->"2dfc2f9a-60cf-4566-aa9d-8a7d6c960669"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtendAnsatz", "::", "usage"}], "=", 
   "\"\<ExtendAnsatz[idx, conf, ansatz, naddgates,args___].\nExtend ansatz by \
adding naddgates gates. There is no redundancy check here. \nArguments aren't \
changed, except the start index. Return the new ansatz candidate.\nAnsatz is \
done 50% globally spread, 25% appended at the end, and 25% appended in the \
begining.\nReturn: extended ansatz\n\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"ExtendAnsatz", ",", "HoldFirst"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtendAnsatz", "[", 
   RowBox[{
   "idx_", ",", "conf_", ",", "ansatz_", ",", "naddgates_", ",", "args___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"linit", "=", 
       RowBox[{"Length", "@", "ansatz"}]}], ",", 
      RowBox[{"ansatztmp", "=", "ansatz"}], ",", "assocgates", ",", "rloc", 
      ",", "rgate", ",", "i", ",", "method"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"method", ":", " ", 
       RowBox[{"1", "-", "global"}]}], ",", " ", 
      RowBox[{"2", "-", 
       RowBox[{"appended", " ", "end"}]}], ",", " ", 
      RowBox[{"3", "-", 
       RowBox[{"appended", " ", "begining"}]}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"method", "=", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.25", ",", "0.25"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], " ", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"method", "===", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"i", "<", "naddgates"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"globally", " ", "spread", " ", "at", " ", "random"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rloc", "=", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"Length", "@", "ansatztmp"}], "+", "1"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rgate", "=", 
           RowBox[{
            RowBox[{"RandomGate", "[", 
             RowBox[{"conf", ",", "args"}], "]"}], "/.", 
            RowBox[{"\[Theta]", "\[RuleDelayed]", 
             SubscriptBox["\[Theta]", 
              RowBox[{"idx", "++"}]]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ansatztmp", "=", 
           RowBox[{"Insert", "[", 
            RowBox[{"ansatztmp", ",", "rgate", ",", "rloc"}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "appended", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ansatztmp", "=", 
         RowBox[{"GenerateAnsatz", "[", 
          RowBox[{"naddgates", ",", "conf", ",", "ansatz", ",", "args"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ansatztmp", "=", 
         RowBox[{"ansatztmp", "/.", 
          RowBox[{"\[Theta]", "\[RuleDelayed]", 
           SubscriptBox["\[Theta]", 
            RowBox[{"idx", "++"}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "===", "2"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"append", " ", "at", " ", "the", " ", "end"}], " ", "*)"}],
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ansatztmp", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"ansatz", ",", "ansatztmp"}], "]"}]}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"append", " ", "in", " ", "the", " ", "beginning"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ansatztmp", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"ansatztmp", ",", "ansatz"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "ansatztmp"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8225103508733377`*^9, 3.82251042273604*^9}, {
   3.822510561512796*^9, 3.8225105796439867`*^9}, {3.822510699716448*^9, 
   3.822510792752338*^9}, {3.822510904385147*^9, 3.8225109231546383`*^9}, {
   3.822510964768598*^9, 3.822510971095509*^9}, {3.822511023601866*^9, 
   3.822511067580325*^9}, {3.822511138878039*^9, 3.8225111496516848`*^9}, 
   3.822511217282497*^9, {3.822511278783037*^9, 3.822511312843759*^9}, {
   3.82251135188765*^9, 3.8225113701253033`*^9}, {3.822511408188191*^9, 
   3.822511457220406*^9}, {3.822511564680543*^9, 3.8225115723476*^9}, {
   3.822511616668672*^9, 3.822511805848434*^9}, {3.822512119815372*^9, 
   3.822512159290296*^9}, {3.822512195847115*^9, 3.822512221426786*^9}, {
   3.822512257927112*^9, 3.8225122894722977`*^9}, {3.822512549826274*^9, 
   3.822512568056159*^9}, {3.822512599293363*^9, 3.822512600408626*^9}, {
   3.8225126611569147`*^9, 3.822512665525062*^9}, {3.8225128092511377`*^9, 
   3.822512869905108*^9}, {3.822515277447317*^9, 3.822515277863172*^9}, {
   3.822515890598476*^9, 3.8225159365631332`*^9}, {3.82251603038221*^9, 
   3.82251605478272*^9}, {3.82251633742994*^9, 3.822516378903781*^9}, {
   3.822780217191021*^9, 3.8227802763508987`*^9}, {3.82278030709058*^9, 
   3.8227803769479637`*^9}, {3.822780885683519*^9, 3.822780928539036*^9}, {
   3.823420433944407*^9, 3.823420507469698*^9}, {3.8234205930502872`*^9, 
   3.823420647926174*^9}, {3.823420834548324*^9, 3.823420869139626*^9}, {
   3.823420987160308*^9, 3.823421109727474*^9}, {3.8234211939818783`*^9, 
   3.823421206938301*^9}, 3.8236145669794407`*^9, {3.823614642839005*^9, 
   3.823614686459836*^9}, {3.823614788798781*^9, 3.823614789121813*^9}, {
   3.823615410651177*^9, 3.82361543265734*^9}, {3.8236154798228817`*^9, 
   3.82361548453759*^9}, {3.823615519915835*^9, 3.82361552019497*^9}, {
   3.841374188582004*^9, 3.841374193900914*^9}, 3.852444714221858*^9, {
   3.852445508458786*^9, 3.85244551483224*^9}, {3.866122664584899*^9, 
   3.866122698302174*^9}, {3.866122740558597*^9, 3.866122741095943*^9}},
 CellLabel->
  "In[827]:=",ExpressionUUID->"704ffa78-82c2-43d5-9019-b217175dda74"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenerateAnsatz", "::", "usage"}], "=", 
   "\"\<GenerateAnsatz[nqubit,ngates,conf,ansatzref:{}] generate an ansatz on \
a subspace specified in conf[`ansatzspace`].\n Suitable for extending ansatz \
by appending the new gates after the old ones.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"GenerateAnsatz", ",", "HoldRest"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GenerateAnsatz", "[", 
   RowBox[{"ngates_", ",", "conf_", ",", "ansatzref_", ",", "args___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ansatz", "=", 
       RowBox[{"{", "}"}]}], ",", "ansatzparam", ",", "gate", ",", 
      RowBox[{"indices", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"trial", "=", 
       RowBox[{"-", "1"}]}], ",", "x", ",", "y", ",", "z", ",", "testpattern",
       ",", 
      RowBox[{"assocgates", "=", 
       RowBox[{"<|", "|>"}]}], ",", "\[IndentingNewLine]", "newindices", ",", 
      "Akl", ",", 
      RowBox[{"\[Theta]vars", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"idx", "=", "0"}], ",", "j", ",", 
      RowBox[{"wmsg", "=", "\"\<\>\""}], ",", 
      RowBox[{"maxtrial", "=", 
       RowBox[{"10", "*", "ngates"}]}], ",", "restcond", ",", 
      "ansatzohneindex"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "ansatzref"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ansatzohneindex", "=", 
         RowBox[{"ansatzref", "/.", 
          RowBox[{
           SubscriptBox["\[Theta]", "_"], "\[Rule]", "\[Theta]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"GetAssocGates", "[", 
         RowBox[{"ansatzohneindex", ",", "assocgates"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "ansatz"}], "<", "ngates"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"adding", " ", "gate", " ", "one", " ", "by", " ", "one"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"ansatz", ",", 
          RowBox[{"RandomGate", "[", 
           RowBox[{"conf", ",", "args"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newindices", "=", 
         RowBox[{"GetIndicesOfGate", "[", 
          RowBox[{"Last", "@", "ansatz"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"\[Not]", 
              RowBox[{"KeyExistsQ", "[", 
               RowBox[{"assocgates", ",", "i"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"assocgates", "[", "i", "]"}], "=", 
              RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{
             RowBox[{"assocgates", "[", "i", "]"}], ",", 
             RowBox[{"Last", "@", "ansatz"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "newindices"}], "}"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "return", " ", "whatever", " ", "after", " ", "fail", " ", "to", " ",
           "find", " ", "the", " ", "good", " ", "one"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"trial", "++"}], ">", "maxtrial"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Failed to find the good ansatz with \>\"", "<>", 
             RowBox[{"ToString", "[", "ngates", "]"}], "<>", 
             "\"\< gates\>\""}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"test", " ", "pattern"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "@@", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"MatchQ", "[", 
               RowBox[{
                RowBox[{"assocgates", "[", "i", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"___", ",", "x_", ",", "x_"}], "}"}]}], "]"}], "||", 
              "\[IndentingNewLine]", 
              RowBox[{"MatchQ", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"IsOneQGate", "[", "#", "]"}], "&"}], "/@", 
                  RowBox[{"assocgates", "[", "i", "]"}]}], ")"}], ",", 
                RowBox[{"{", 
                 RowBox[{"___", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                 "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "newindices"}], "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Delete", " ", "the", " ", "last", " ", "gate"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ansatz", "=", 
            RowBox[{"Drop", "[", 
             RowBox[{"ansatz", ",", 
              RowBox[{"-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"assocgates", "[", "i", "]"}], "=", 
              RowBox[{"Drop", "[", 
               RowBox[{
                RowBox[{"assocgates", "[", "i", "]"}], ",", 
                RowBox[{"-", "1"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "newindices"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "ansatz"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.820067291162745*^9, 3.82006744151583*^9}, {
   3.820067616622252*^9, 3.820067643412346*^9}, {3.8200678702696943`*^9, 
   3.8200678719793262`*^9}, {3.820068219855094*^9, 3.820068283178565*^9}, {
   3.8212097334804163`*^9, 3.821209768326539*^9}, {3.821209898726635*^9, 
   3.821209904201894*^9}, {3.8212099634514313`*^9, 3.821210068657999*^9}, {
   3.8212101010551023`*^9, 3.821210120446919*^9}, {3.821210949075779*^9, 
   3.8212109958164377`*^9}, {3.821211167880692*^9, 3.821211176923472*^9}, {
   3.821211376045136*^9, 3.821211427865377*^9}, {3.8212114796739807`*^9, 
   3.8212114960095253`*^9}, {3.821212506978045*^9, 3.8212125176938963`*^9}, {
   3.821212687317034*^9, 3.82121270040245*^9}, {3.8212127465265627`*^9, 
   3.8212127614551888`*^9}, {3.821222839651848*^9, 3.8212228458232193`*^9}, {
   3.821223332305893*^9, 3.821223333200255*^9}, {3.821283526691218*^9, 
   3.821283535593761*^9}, {3.8212948926663637`*^9, 3.821294897913508*^9}, {
   3.821294959328724*^9, 3.8212950383664618`*^9}, {3.821428322037043*^9, 
   3.821428322165259*^9}, {3.821428389321467*^9, 3.821428428975959*^9}, {
   3.8214287223919086`*^9, 3.821428731105875*^9}, {3.821428771298444*^9, 
   3.8214287740416822`*^9}, {3.821428830790443*^9, 3.8214288317455606`*^9}, {
   3.8214290753402576`*^9, 3.821429087785557*^9}, {3.821429132198698*^9, 
   3.8214291383378553`*^9}, {3.821429231665127*^9, 3.82142929947584*^9}, {
   3.821429342548582*^9, 3.821429351690527*^9}, {3.821429406392004*^9, 
   3.821429412218886*^9}, {3.821429454034584*^9, 3.821429484476812*^9}, {
   3.821429610045368*^9, 3.821429611130475*^9}, 3.8214296482394333`*^9, {
   3.8214298027506027`*^9, 3.821429811492475*^9}, {3.821429867593882*^9, 
   3.821429903922015*^9}, {3.8214431292289553`*^9, 3.8214431424003973`*^9}, {
   3.8214431770588427`*^9, 3.821443205422512*^9}, {3.821443339885743*^9, 
   3.8214434051193533`*^9}, {3.8214434590326147`*^9, 3.821443459294072*^9}, {
   3.8225104366176233`*^9, 3.822510513127597*^9}, {3.823614759910266*^9, 
   3.823614766858691*^9}, {3.841374200985051*^9, 3.84137420562714*^9}, 
   3.852444724380651*^9, {3.85245466339469*^9, 3.852454671308839*^9}, {
   3.8661227496429377`*^9, 3.866122756918138*^9}, 3.866123057361532*^9},
 CellLabel->
  "In[830]:=",ExpressionUUID->"5f7a081a-0dab-4ea2-9bee-77fc2433ada6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Modules and delayed functions of compilations", "Subsection",
 CellChangeTimes->{{3.821294734161747*^9, 
  3.821294772872951*^9}},ExpressionUUID->"86d71386-1a3b-4b80-81b4-\
3a549c53d3cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetIndicesOfGate", "::", "usage"}], "=", 
   "\"\<GetIndicesOfGate[gate_] return indices of the corresponding qubits, \
watch for exotic gates, it might fail!\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetIndicesOfGate", "[", "gate_", "]"}], ":=", 
   RowBox[{"gate", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"_", "[", 
        RowBox[{"_", ",", 
         RowBox[{
          SubscriptBox["_", "i_"], 
          SubscriptBox["_", "j_"]}]}], "]"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["C", "i_"], "[", 
        SubscriptBox["_", "j_"], "]"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["_", "i__"], "[", 
        RowBox[{
         SubscriptBox["_", "j_"], "[", "_", "]"}], "]"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["_", "i__"], "[", "_", "]"}], "\[Rule]", 
       RowBox[{"{", "i", "}"}]}], ",", 
      RowBox[{
       SubscriptBox["_", "i__"], "\[Rule]", 
       RowBox[{"{", "i", "}"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetAssocGates", "::", "usage"}], "=", 
   "\"\<GetAssocGates[ansatz_,assocgatesref_] return association version of \
gates -- per layer. It might works only for 1 and 2-qubit gates \>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"GetAssocGates", ",", "HoldRest"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetAssocGates", "[", 
    RowBox[{"ansatz_", ",", "assocgatesref_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"indices", ",", "key", ",", "idxs"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"indices", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"GetIndicesOfGate", "[", "gate", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"key", "=", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"Sort", "@", "indices"}], ",", "\"\<-\>\""}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Not]", 
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"assocgatesref", ",", "key"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"assocgatesref", "[", "key", "]"}], "=", 
           RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "put", " ", "also", " ", "gates", " ", "in", " ", "the", " ", 
          "overlaping", " ", "cases"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"idxs", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"key", ",", "indices"}], "}"}], "//", "Flatten"}], "//", 
          "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", " ", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IntersectingQ", "[", 
             RowBox[{"idxs", ",", 
              RowBox[{"StringSplit", "[", 
               RowBox[{"k", ",", "\"\<-\>\""}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"assocgatesref", "[", "k", "]"}], ",", "gate"}], 
             "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Keys", "@", "assocgatesref"}]}], "}"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"gate", ",", "ansatz"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"temporary", " ", "solution"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IsOneQGate", "::", "usage"}], "=", 
   "\"\<IsOneQGate[gate_] tells if gate is a one-qubit rotation \>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsOneQGate", "[", "g_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["Rx", "i"], "[", "\[Theta]", "]"}], ",", 
         RowBox[{
          SubscriptBox["Ry", "i"], "[", "\[Theta]", "]"}], ",", 
         RowBox[{
          SubscriptBox["Rz", "i"], "[", "\[Theta]", "]"}]}], "}"}], "/.", 
       RowBox[{"i", "\[Rule]", 
        RowBox[{
         RowBox[{"GetIndicesOfGate", "[", "g", "]"}], "\[LeftDoubleBracket]", 
         "1", "\[RightDoubleBracket]"}]}]}], ",", "g"}], "]"}], ",", "1", ",",
     "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IsControlQubit", "::", "usage"}], "=", 
   "\"\<IsControlQubit[gate_] tells if a gate is Controlled-Rotation \
gate\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsControlQubit", "[", "g_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{"g", ",", 
      RowBox[{
       SubscriptBox["C", "_"], "[", "_", "]"}]}], "]"}], ",", "1", ",", "0"}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.821295109933714*^9, 3.821295205333378*^9}, {
   3.821295630734865*^9, 3.821295746633294*^9}, {3.826706159945641*^9, 
   3.826706170226931*^9}, {3.826706300452044*^9, 3.8267063110425863`*^9}, {
   3.826706392372262*^9, 3.826706401416502*^9}, {3.826706435269744*^9, 
   3.826706448767438*^9}, {3.826706843679255*^9, 3.826706924016656*^9}, {
   3.8267069596855583`*^9, 3.826706964370286*^9}, {3.8267072175847473`*^9, 
   3.826707366831184*^9}, {3.826707406375952*^9, 3.826707555340001*^9}, 
   3.826708857378797*^9, {3.826709836393098*^9, 3.826709883190195*^9}, {
   3.8267103279221907`*^9, 3.826710345127419*^9}, {3.826710526303787*^9, 
   3.826710543025364*^9}, {3.826710654816433*^9, 3.8267107056144543`*^9}, {
   3.826710752274165*^9, 3.826710778190982*^9}, {3.826710814445335*^9, 
   3.826710911636353*^9}},
 CellLabel->
  "In[833]:=",ExpressionUUID->"a0dd377d-8d24-4f0f-a698-b5a7b7d2df22"]
}, Closed]],

Cell[CellGroupData[{

Cell["Gradient evals and optimization", "Subsection",
 CellChangeTimes->{{3.8211291780732937`*^9, 3.821129199186705*^9}, {
  3.821220029699461*^9, 3.821220036793016*^9}, {3.822585279874415*^9, 
  3.822585280201477*^9}, {3.823592708597734*^9, 
  3.823592710742581*^9}},ExpressionUUID->"4b588684-548a-4e1e-aed2-\
19b22ae42b45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Calculate", " ", "<", 
      RowBox[{"ansatz", 
       RowBox[{"(", "\[Theta]", ")"}]}]}], "|", "hamiltonian", "|", 
     RowBox[{
      RowBox[{"ansatz", 
       RowBox[{"(", "\[Theta]", ")"}]}], ">"}]}], ";"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GradDescent", "::", "usage"}], "=", 
     "\"\<GradDescent[conf, \[Theta]vars, ansatz, \[Rho], \[Rho]work] \
Steepest-garadient descent method, invoked when \[Theta]vars has only one \
entry\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"SetAttributes", "[", 
    RowBox[{"GradDescent", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GradDescent", "[", 
     RowBox[{
     "conf_", ",", "\[Theta]vars_", ",", "ansatz_", ",", "\[Rho]_", ",", 
      "\[Rho]work_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gradList", "=", 
         RowBox[{"{", "}"}]}], ",", "baseE", ",", "\[Theta]varst", ",", 
        "newvals"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"baseE", "=", 
        RowBox[{"CostFunction", "[", 
         RowBox[{"\[Rho]", ",", "\[Rho]work", ",", 
          RowBox[{"ansatz", "/.", "\[Theta]vars"}], ",", "conf"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"gradList", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]varst", "=", "\[Theta]vars"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\[Theta]varst", "[", "k", "]"}], "+=", 
            RowBox[{"conf", "[", "\"\<d\[Theta]\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"CostFunction", "[", 
               RowBox[{"\[Rho]", ",", "\[Rho]work", ",", 
                RowBox[{"ansatz", "/.", "\[Theta]varst"}], ",", "conf"}], 
               "]"}], "-", "baseE"}], ")"}], "/", 
            RowBox[{"conf", "[", "\"\<d\[Theta]\>\"", "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Keys", "[", "\[Theta]vars", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]vars", "[", "#1", "]"}], "-=", 
           RowBox[{
            RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}], "*", "#2"}]}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Keys", "[", "\[Theta]vars", "]"}], ",", "gradList"}], 
          "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8188402257802467`*^9, 3.818840295306058*^9}, {
   3.818840347093824*^9, 3.81884040242109*^9}, {3.818857754370862*^9, 
   3.8188578740356073`*^9}, {3.81885794281238*^9, 3.8188581916459846`*^9}, {
   3.818859266806093*^9, 3.8188593292047787`*^9}, {3.818859575363727*^9, 
   3.818859577999069*^9}, {3.818863068653926*^9, 3.818863122860899*^9}, {
   3.818863519948546*^9, 3.818863542475685*^9}, {3.8188641954807167`*^9, 
   3.818864212564416*^9}, {3.8188753990131207`*^9, 3.818875399413454*^9}, {
   3.819711858857606*^9, 3.8197118627781363`*^9}, {3.8212194496169453`*^9, 
   3.821219457017105*^9}, {3.821219995889182*^9, 3.821220000171612*^9}, {
   3.821278487921351*^9, 3.8212784915761633`*^9}, {3.821283510957572*^9, 
   3.8212835122320433`*^9}, {3.821295794994623*^9, 3.821295852537937*^9}, {
   3.8224954101698914`*^9, 3.822495437121378*^9}, {3.8224955567063704`*^9, 
   3.822495558548101*^9}, 3.822495604030249*^9, {3.824298157081708*^9, 
   3.82429817652169*^9}, {3.824849816178541*^9, 3.8248498426566467`*^9}, {
   3.824849873206789*^9, 3.8248499957418756`*^9}, {3.824850610799006*^9, 
   3.824850680599347*^9}, {3.825268018116556*^9, 3.825268073589407*^9}, {
   3.8256647733502483`*^9, 3.8256647834324913`*^9}, {3.825673780204805*^9, 
   3.825673796998872*^9}, {3.8256738465176764`*^9, 3.825673921930035*^9}, {
   3.825674019218742*^9, 3.825674020743771*^9}, {3.825675051181312*^9, 
   3.825675060841704*^9}, {3.8257880592202787`*^9, 3.825788093513323*^9}, {
   3.8412818814245367`*^9, 3.841281894776073*^9}, {3.866028992183218*^9, 
   3.866029074826247*^9}, 3.8660292032789516`*^9, 3.86602939288958*^9, {
   3.8679386854902554`*^9, 3.867938713330266*^9}},
 CellLabel->
  "In[1088]:=",ExpressionUUID->"6dfc71a2-81c6-4e6f-b18f-976a203c5174"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CalcEcurVarGrad", "::", "usage"}], "=", 
   "\"\<CalcEcurVarGrad[conf,ansatz,\[Theta]vars,NG,\[Rho],\[Rho]work]. \
Return the minimum energy among different choices of gradient. \[Theta]vars \
is updated.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"CalcEcurVarGrad", ",", "HoldAll"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalcEcurVarGrad", "[", 
   RowBox[{
   "conf_", ",", "ansatz_", ",", "\[Theta]vars_", ",", "NG_", ",", "\[Rho]_", 
    ",", "\[Rho]work_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tvars", ",", "gradstep", ",", "Ebest", ",", "Enew", ",", "minidx", ",", 
      "beststep"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gradstep", "=", 
      RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"beststep", "=", "gradstep"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tvars", "=", 
      RowBox[{"Normal", "@", "\[Theta]vars"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tvars", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-=", 
      RowBox[{"gradstep", "*", "NG"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ebest", "=", 
      RowBox[{"CostFunction", "[", 
       RowBox[{"\[Rho]", ",", "\[Rho]work", ",", 
        RowBox[{"ansatz", "/.", "tvars"}], ",", "conf"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"keep", " ", "the", " ", "NG", " ", "direction"}], ",", " ", 
       RowBox[{"just", " ", "multiply"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{"NumberQ", "[", 
        RowBox[{"conf", "[", "\"\<gradstepmultiply\>\"", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{"True", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"gradstep", "*=", 
            RowBox[{"conf", "[", "\"\<gradstepmultiply\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tvars", "=", 
            RowBox[{"Normal", "@", "\[Theta]vars"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tvars", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-=", 
            RowBox[{"gradstep", "*", "NG"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Enew", "=", 
            RowBox[{"CostFunction", "[", 
             RowBox[{"\[Rho]", ",", "\[Rho]work", ",", 
              RowBox[{"ansatz", "/.", "tvars"}], ",", "conf"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Enew", "\[GreaterEqual]", "Ebest"}], ",", " ", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Ebest", "=", "Enew"}], ";", "\[IndentingNewLine]", 
           RowBox[{"beststep", "=", "gradstep"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"tvars", "=", 
      RowBox[{"Normal", "@", "\[Theta]vars"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tvars", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-=", 
      RowBox[{"beststep", "*", "NG"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]vars", "=", 
      RowBox[{"Association", "@", "tvars"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Ebest", ",", "beststep"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.822501167758786*^9, 3.8225013978198633`*^9}, {
   3.82250145397721*^9, 3.8225014562569933`*^9}, {3.8225014929321823`*^9, 
   3.822501505909144*^9}, {3.8225015649052563`*^9, 3.822501565221809*^9}, {
   3.822501981087596*^9, 3.8225019815255632`*^9}, {3.8225028862772512`*^9, 
   3.822503075703972*^9}, {3.822503111975678*^9, 3.822503241489229*^9}, {
   3.8225034008371773`*^9, 3.8225035964983253`*^9}, {3.8225053006742077`*^9, 
   3.8225053275112133`*^9}, {3.8225063361622667`*^9, 3.822506356038657*^9}, {
   3.822507168703652*^9, 3.82250721018452*^9}, {3.822507250895001*^9, 
   3.822507356166524*^9}, {3.8225858767037888`*^9, 3.822585882300541*^9}, {
   3.822586018170231*^9, 3.822586043778635*^9}, {3.822586306725877*^9, 
   3.822586311672144*^9}, 3.8225863610246572`*^9, {3.822586498971168*^9, 
   3.822586500699479*^9}, {3.822586808474917*^9, 3.8225868202718687`*^9}, 
   3.8225868541905947`*^9, {3.822587132966751*^9, 3.822587162989271*^9}, {
   3.822587200607856*^9, 3.8225872241314774`*^9}, {3.822587272094627*^9, 
   3.822587329106608*^9}, {3.822587521906859*^9, 3.822587534300653*^9}, {
   3.822588465362074*^9, 3.822588479974429*^9}, {3.8225887145117826`*^9, 
   3.82258872849284*^9}, {3.8225888329888983`*^9, 3.82258917785392*^9}, {
   3.822589320012045*^9, 3.822589320488736*^9}, {3.822589373390956*^9, 
   3.822589399346641*^9}, {3.822589571814995*^9, 3.822589579925229*^9}, {
   3.822592251636771*^9, 3.822592285809779*^9}, {3.822592488597134*^9, 
   3.822592488780192*^9}, 3.8225964230350513`*^9, {3.822596637005093*^9, 
   3.822596671322006*^9}, {3.8225967624732227`*^9, 3.822596787634377*^9}, {
   3.8225968197062197`*^9, 3.8225970519390907`*^9}, {3.8225970908308992`*^9, 
   3.822597106580166*^9}, {3.822773204011257*^9, 3.8227732041272697`*^9}, 
   3.82278625601103*^9, {3.822830956481735*^9, 3.8228309566833487`*^9}, {
   3.822835528101021*^9, 3.822835528673502*^9}, {3.822846788012587*^9, 
   3.822846788141794*^9}, {3.823532948827042*^9, 3.823533016413938*^9}, {
   3.823533054642415*^9, 3.8235331466128387`*^9}, {3.823533189117271*^9, 
   3.823533261035637*^9}, {3.823533898558715*^9, 3.823533927005526*^9}, {
   3.823534256245357*^9, 3.823534369213719*^9}, {3.8236039986984367`*^9, 
   3.823604003382687*^9}, {3.8236041163904676`*^9, 3.823604125458642*^9}, {
   3.823604184481264*^9, 3.823604234744273*^9}, {3.823604268877194*^9, 
   3.8236042740121613`*^9}, {3.823606002679968*^9, 3.8236060145727797`*^9}, {
   3.823606183642124*^9, 3.823606187525655*^9}, {3.8237800630166597`*^9, 
   3.8237801031735277`*^9}, {3.8240649541482067`*^9, 3.824064993979375*^9}, {
   3.82429843096704*^9, 3.824298436302549*^9}, {3.824300194468647*^9, 
   3.8243002035091143`*^9}, {3.8243002340292683`*^9, 3.824300234363946*^9}, {
   3.824849429690955*^9, 3.824849473457967*^9}, 3.824849514836054*^9, {
   3.824849546138092*^9, 3.824849610581976*^9}, {3.825267902953039*^9, 
   3.825267925565012*^9}, {3.825664765921049*^9, 3.8256647685518723`*^9}, {
   3.825673442801981*^9, 3.825673464429339*^9}, {3.825675068929885*^9, 
   3.825675075590418*^9}, {3.82571026988378*^9, 3.825710270099717*^9}, {
   3.825788017067041*^9, 3.8257880412347937`*^9}, {3.8261457319754457`*^9, 
   3.826145745813802*^9}, 3.8261458967818327`*^9, {3.841281900888628*^9, 
   3.8412819045409184`*^9}, {3.850212120110602*^9, 3.8502121992269278`*^9}, {
   3.850212270847938*^9, 3.850212425045512*^9}, {3.850212482346394*^9, 
   3.8502124830414553`*^9}, {3.8502125157654057`*^9, 3.850212519467476*^9}, {
   3.850212639618367*^9, 3.850212640056776*^9}, {3.850212716455119*^9, 
   3.850212716996133*^9}, {3.8502128465072107`*^9, 3.850212859827116*^9}, {
   3.8502129497707787`*^9, 3.8502129856798487`*^9}, {3.8503940542555847`*^9, 
   3.850394065336191*^9}, {3.850394268084587*^9, 3.8503943287230062`*^9}, 
   3.851144774972674*^9, 3.851144825750679*^9, {3.851144885365211*^9, 
   3.851144892216774*^9}, {3.866029105198607*^9, 3.866029109331002*^9}, {
   3.866029210550838*^9, 3.8660293833525743`*^9}, 3.866029415408813*^9, 
   3.866046306213147*^9, {3.866047891177678*^9, 3.8660478980371113`*^9}, {
   3.8660479412098007`*^9, 3.866047953203079*^9}, {3.86604804296043*^9, 
   3.866048071892324*^9}, {3.866048109206566*^9, 3.86604811124599*^9}, {
   3.867938574322967*^9, 3.867938636195612*^9}},
 CellLabel->
  "In[1091]:=",ExpressionUUID->"66614a13-c7b5-4205-9cbb-4b7567b62989"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"UpdateCost", "::", "usage"}], "=", 
   "\"\<UpdateCost[conf, ansatz, \
\[Theta]vars,\[Rho],\[Rho]work,\[Rho]\[Theta]k] update the cost function by \
gradient methode\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"UpdateCost", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UpdateCost", "[", 
   RowBox[{
   "conf_", ",", "ansatz_", ",", "\[Theta]vars_", ",", "\[Rho]_", ",", 
    "\[Rho]work_", ",", "\[Rho]\[Theta]k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "NG", ",", "Ck", ",", "tvars", ",", "Ecur", ",", "\[Theta]varst", ",", 
      "baseE", ",", "gradlist", ",", "Fkl", ",", "gradstep", ",", "d\[Theta]",
       ",", "dE", ",", "\[Rho]m"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "This", " ", "is", " ", "executed", " ", "on", " ", "a", " ", "QC"}], 
      ",", " ", 
      RowBox[{
      "fev", " ", "calculate", " ", "how", " ", "many", " ", "times", " ", 
       "QC", " ", "is", " ", "used"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gradstep", "=", 
      RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d\[Theta]", "=", 
      SuperscriptBox["10", 
       RowBox[{"-", "10"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"conf", "[", "\"\<grad\>\"", "]"}], "===", "\"\<NG\>\""}], 
        " ", "&&", " ", 
        RowBox[{
         RowBox[{"Length", "@", "\[Theta]vars"}], ">", "1"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Prepare", " ", 
         FractionBox[
          TemplateBox[{
            RowBox[{"d\[Psi]", 
              RowBox[{"(", "\[Theta]", ")"}]}]},
           "Ket"], 
          SubscriptBox["d\[Theta]", "j"]], " ", "on", " ", 
         "\[Psi]\[Theta]k"}], "  ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NG", "=", 
         RowBox[{"Mean", "@", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"InitStateFromAmps", "[", 
              RowBox[{"\[Rho]", ",", 
               RowBox[{"Re", "@", 
                RowBox[{
                 RowBox[{"conf", "[", "\"\<initstates\>\"", "]"}], "[", "i", 
                 "]"}]}], ",", 
               RowBox[{"Im", "@", 
                RowBox[{
                 RowBox[{"conf", "[", "\"\<initstates\>\"", "]"}], "[", "i", 
                 "]"}]}]}], "]"}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"U", 
               TemplateBox[{"\[Psi]"},
                "Ket"]}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"CalcQuregDerivs", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"ansatz", ",", 
                 RowBox[{
                  RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}], "[", "i", 
                  "]"}]}], "]"}], ",", "\[Rho]", ",", 
               RowBox[{"Normal", "[", "\[Theta]vars", "]"}], ",", 
               "\[Rho]\[Theta]k"}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"ApplyCircuit", "[", 
              RowBox[{"\[Rho]", ",", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"ansatz", "/.", "\[Theta]vars"}], ",", 
                 RowBox[{
                  RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}], "[", "i", 
                  "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"\[Rho]m", "=", 
              RowBox[{"GetQuregMatrix", "[", "\[Rho]", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"\[Rho]work", "=", " ", 
               RowBox[{"H", 
                RowBox[{"(", "\[Rho]", ")"}]}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"dE", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"ApplyPauliSum", "[", 
                  RowBox[{"\[Rho]k", ",", 
                   RowBox[{"conf", "[", "\"\<hamiltonian\>\"", "]"}], ",", 
                   "\[Rho]work"}], "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"GetQuregMatrix", "[", "\[Rho]k", "]"}], ".", 
                   "\[Rho]work"}], " ", "]"}]}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"\[Rho]k", ",", "\[Rho]\[Theta]k"}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"First", " ", "term", " ", 
               RowBox[{"approx", ":", " ", 
                RowBox[{"Re", "[", 
                 TemplateBox[{
                   RowBox[{
                    SubscriptBox["d", "k"], "\[Rho]"}], 
                   RowBox[{
                    SubscriptBox["d", "l"], "\[Rho]"}]},
                  "BraKet"], "]"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "\[Theta]vars"}], ">", "1"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", "  ", 
                RowBox[{
                 RowBox[{"Use", " ", "approximation", " ", "of", " ", 
                  RowBox[{"QFI", ".", " ", "Using"}], " ", "finite", " ", 
                  "difference", " ", "to", " ", "calculate", " ", 
                  SubscriptBox["d", "k"], "\[Rho]", "\[IndentingNewLine]", 
                  "    ", 
                  SubscriptBox["F", "kl"]}], "=", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"d\[Rho]", "/", 
                    SubscriptBox["d\[Theta]", "k"]}], ")"}], 
                   RowBox[{"(", 
                    RowBox[{"d\[Rho]", "/", 
                    SubscriptBox["d\[Theta]", "l"]}], ")"}]}], "]"}]}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Fkl", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Re", "@", 
                    RowBox[{"Tr", "[", 
                    RowBox[{"\[Rho]k", ".", "\[Rho]l"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Rho]k", ",", "\[Rho]\[Theta]k"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Rho]l", ",", "\[Rho]\[Theta]k"}], "}"}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"The", " ", "natural", " ", "gradient", " ", 
                  SuperscriptBox["F", 
                   RowBox[{"-", "1"}]], "g"}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"NG", "=", 
                 RowBox[{"LinearSolve", "[", 
                  RowBox[{
                   RowBox[{"Fkl", "+", 
                    RowBox[{
                    RowBox[{"conf", "[", "\"\<\[Alpha]tikhonov\>\"", "]"}], 
                    "*", 
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"Length", "@", "Fkl"}], "]"}]}]}], ",", "dE"}], 
                  "]"}]}], ";", " ", "\[IndentingNewLine]", 
                RowBox[{"NG", "=", 
                 RowBox[{"NG", "/", 
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"NG", ",", "2"}], "]"}], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "10"}]]}], "]"}]}]}], ";"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"NG", "=", "dE"}], ";"}]}], "\[IndentingNewLine]", 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "@", 
               RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}]}]}], "}"}]}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "try", " ", "with", " ", "several", " ", "choices", " ", "of", " ", 
          "steps"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Ecur", ",", "gradstep"}], "}"}], "=", 
         RowBox[{"CalcEcurVarGrad", "[", 
          RowBox[{
          "conf", ",", "ansatz", ",", "\[Theta]vars", ",", "NG", ",", 
           "\[Rho]", ",", "\[Rho]work"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"conf", "[", "\"\<grad\>\"", "]"}], "===", "\"\<SGD\>\""}], 
        " ", "||", " ", 
        RowBox[{
         RowBox[{"Length", "@", "\[Theta]vars"}], "===", "1"}]}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"GradDescent", "[", 
         RowBox[{
         "conf", ",", "\[Theta]vars", ",", "ansatz", ",", "\[Rho]", ",", 
          "\[Rho]work"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Ecur", "=", 
         RowBox[{"CostFunction", "[", 
          RowBox[{"\[Rho]", ",", "\[Rho]work", ",", 
           RowBox[{"ansatz", "/.", "\[Theta]vars"}], ",", "conf"}], "]"}]}], 
        ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "True", "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"no", " ", "update"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Ecur", "=", 
         RowBox[{"CostFunction", "[", 
          RowBox[{"\[Rho]", ",", "\[Rho]work", ",", 
           RowBox[{"ansatz", "/.", "\[Theta]vars"}], ",", "conf"}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Ecur", ",", "gradstep"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8145651229113607`*^9, 3.814565131224815*^9}, {
   3.814565197275292*^9, 3.814565237892199*^9}, {3.8145653217221603`*^9, 
   3.8145653555213957`*^9}, {3.814566486862211*^9, 3.814566587541048*^9}, {
   3.814566694886903*^9, 3.8145667045070477`*^9}, {3.814566739223289*^9, 
   3.814566740521263*^9}, {3.814566875232751*^9, 3.8145669000297527`*^9}, {
   3.814567354831608*^9, 3.814567355787154*^9}, {3.8145678453761997`*^9, 
   3.814567853790951*^9}, {3.814568396916923*^9, 3.8145684310257072`*^9}, {
   3.814568633930657*^9, 3.81456866754175*^9}, {3.814568703916349*^9, 
   3.814568725906514*^9}, {3.814568879895219*^9, 3.8145688854844713`*^9}, {
   3.814569013467224*^9, 3.814569045818192*^9}, {3.814569202617873*^9, 
   3.814569203404765*^9}, 3.8145692443799963`*^9, {3.814569307882967*^9, 
   3.814569317754715*^9}, {3.814569431040119*^9, 3.814569445073986*^9}, {
   3.814569575108128*^9, 3.814569601206812*^9}, {3.814569634914991*^9, 
   3.814569651550861*^9}, {3.814569742549768*^9, 3.814569826512186*^9}, {
   3.814569865307675*^9, 3.814569878651533*^9}, {3.814569921060718*^9, 
   3.8145699317820377`*^9}, {3.814570615780901*^9, 3.814570652186305*^9}, {
   3.8145712686645393`*^9, 3.8145713414207993`*^9}, {3.814606605982613*^9, 
   3.8146066102476883`*^9}, 3.814606878998337*^9, {3.814607779930056*^9, 
   3.814607784115923*^9}, {3.814607829704867*^9, 3.814607853166135*^9}, {
   3.814607900884932*^9, 3.8146079689116173`*^9}, 3.814618491427526*^9, {
   3.814619634842605*^9, 3.814619648689643*^9}, {3.8146197549426413`*^9, 
   3.814619767149983*^9}, {3.816418134075634*^9, 3.816418137400489*^9}, {
   3.81659229937011*^9, 3.816592327591382*^9}, {3.8165925755310698`*^9, 
   3.816592604988566*^9}, {3.81659264088864*^9, 3.8165926413573503`*^9}, 
   3.8165926835556803`*^9, 3.816592730047427*^9, {3.816601379607592*^9, 
   3.816601405238776*^9}, {3.8171425709611673`*^9, 3.8171426001423492`*^9}, {
   3.8188582389690733`*^9, 3.818858282877643*^9}, {3.8188591181528997`*^9, 
   3.818859248504154*^9}, {3.818859341784321*^9, 3.818859448627881*^9}, {
   3.818863653311886*^9, 3.8188636717969627`*^9}, {3.818864123173338*^9, 
   3.818864181477895*^9}, {3.818864217067428*^9, 3.8188642429771423`*^9}, {
   3.819570388367764*^9, 3.819570403746334*^9}, {3.819570667370081*^9, 
   3.8195706833432302`*^9}, {3.819711599927309*^9, 3.8197116049667*^9}, {
   3.81971167095063*^9, 3.819711823897573*^9}, 3.819711922033938*^9, {
   3.819797826743479*^9, 3.819797831396549*^9}, 3.819798102912348*^9, {
   3.819806922147182*^9, 3.819806927332144*^9}, {3.819806981768742*^9, 
   3.819807011114702*^9}, 3.819834785467504*^9, {3.821217971989524*^9, 
   3.821217992637686*^9}, 3.821218057394573*^9, {3.8212181089432383`*^9, 
   3.821218150624427*^9}, {3.82121827554303*^9, 3.821218291419099*^9}, {
   3.8212183706532288`*^9, 3.821218426422104*^9}, {3.821218457537121*^9, 
   3.8212185078002*^9}, {3.82121865486709*^9, 3.821218761144868*^9}, {
   3.82121880762181*^9, 3.8212188867436438`*^9}, {3.821218920009582*^9, 
   3.821218920424328*^9}, {3.821219035974807*^9, 3.8212190400664873`*^9}, {
   3.8212194713307333`*^9, 3.821219502350026*^9}, {3.8212195782372847`*^9, 
   3.8212196099922256`*^9}, {3.821219675311214*^9, 3.821219690623665*^9}, {
   3.821219721305599*^9, 3.821219745291902*^9}, {3.821219782814999*^9, 
   3.821219815911697*^9}, {3.821219962675324*^9, 3.821219987473794*^9}, {
   3.821223952481887*^9, 3.8212239625989437`*^9}, {3.821223997686069*^9, 
   3.8212240325456142`*^9}, {3.821224067624959*^9, 3.8212240741323137`*^9}, 
   3.8212244205783587`*^9, {3.821278545809437*^9, 3.821278552124793*^9}, {
   3.821283320027614*^9, 3.821283330890338*^9}, {3.821283377156844*^9, 
   3.8212833793868217`*^9}, {3.821283488048662*^9, 3.821283489623514*^9}, {
   3.82128395018368*^9, 3.821283977794917*^9}, {3.8212840405066957`*^9, 
   3.821284043130577*^9}, {3.821295860644511*^9, 3.821295923522204*^9}, {
   3.82130655721968*^9, 3.821306575052437*^9}, {3.821397369060665*^9, 
   3.8213974541194677`*^9}, {3.8213975466949387`*^9, 
   3.8213975561106586`*^9}, {3.8214422909130497`*^9, 3.8214422937993317`*^9}, 
   3.821442432846245*^9, {3.821443577458523*^9, 3.821443597570602*^9}, 
   3.8214437625916157`*^9, {3.822495296938005*^9, 3.8224954052641897`*^9}, {
   3.822495525607018*^9, 3.8224955498550386`*^9}, {3.822500880584393*^9, 
   3.822500944071538*^9}, {3.8225009925076427`*^9, 3.822500995990798*^9}, {
   3.822501122490892*^9, 3.822501179550211*^9}, {3.8225012322983427`*^9, 
   3.822501234155552*^9}, {3.822501535584119*^9, 3.8225015598279657`*^9}, {
   3.822501634981448*^9, 3.822501653875*^9}, {3.822501758721664*^9, 
   3.8225020022518587`*^9}, {3.822503094533936*^9, 3.8225031070376873`*^9}, {
   3.82250366682623*^9, 3.8225036735902653`*^9}, {3.822505342673802*^9, 
   3.822505343959243*^9}, {3.822505565050631*^9, 3.822505565934556*^9}, {
   3.8225056102299747`*^9, 3.8225056693502417`*^9}, {3.822506927401723*^9, 
   3.822506968510818*^9}, {3.822507015323913*^9, 3.822507033564126*^9}, {
   3.8225070656054983`*^9, 3.822507154978451*^9}, {3.822507484497789*^9, 
   3.822507488046324*^9}, 3.8225077766272583`*^9, {3.822508265507409*^9, 
   3.8225082733679857`*^9}, {3.822508335056993*^9, 3.822508387068571*^9}, {
   3.82250841825294*^9, 3.82250842127031*^9}, {3.822590225651207*^9, 
   3.8225902586087837`*^9}, {3.8225902933244953`*^9, 3.822590354370637*^9}, {
   3.8225904174514313`*^9, 3.8225904243698597`*^9}, {3.822767391849195*^9, 
   3.822767409274201*^9}, {3.822773275918724*^9, 3.822773289864462*^9}, {
   3.823532878598151*^9, 3.8235329361361217`*^9}, {3.823534387848805*^9, 
   3.823534431522682*^9}, {3.8236032995025063`*^9, 3.823603300117716*^9}, {
   3.8236033384110203`*^9, 3.823603354044311*^9}, {3.823603695175344*^9, 
   3.8236037017808247`*^9}, {3.8236039307108583`*^9, 3.823603933117702*^9}, {
   3.8236078102152863`*^9, 3.823607814224904*^9}, {3.8236079254920473`*^9, 
   3.823607926483111*^9}, {3.824298472413872*^9, 3.824298492629422*^9}, {
   3.824849716191134*^9, 3.824849749384798*^9}, {3.82484979691706*^9, 
   3.824849807784749*^9}, {3.824850006621173*^9, 3.824850014091011*^9}, {
   3.825106384203801*^9, 3.82510639583782*^9}, {3.825267943358492*^9, 
   3.8252679960088*^9}, {3.825498220165264*^9, 3.825498224065509*^9}, {
   3.825545480961656*^9, 3.825545481262164*^9}, {3.825575098511948*^9, 
   3.82557509885867*^9}, {3.8256647497341948`*^9, 3.8256647610024853`*^9}, {
   3.82567310095831*^9, 3.825673193425332*^9}, {3.8256735835765343`*^9, 
   3.8256735927206593`*^9}, {3.825673725546986*^9, 3.825673732186619*^9}, {
   3.825674037641699*^9, 3.8256740460676937`*^9}, {3.825675467486355*^9, 
   3.825675482368498*^9}, {3.825676040833406*^9, 3.825676046361745*^9}, {
   3.8256790844036617`*^9, 3.825679088167893*^9}, {3.825685367374589*^9, 
   3.825685370763653*^9}, {3.825685401575429*^9, 3.825685437758995*^9}, 
   3.825685568022294*^9, 3.825685702349497*^9, {3.825685768074728*^9, 
   3.82568579113529*^9}, {3.825710164175132*^9, 3.825710219031056*^9}, {
   3.825710537007016*^9, 3.825710640771845*^9}, {3.825762872454769*^9, 
   3.825762914596414*^9}, {3.8257630621905127`*^9, 3.8257630630071917`*^9}, {
   3.825763101976015*^9, 3.8257631090775642`*^9}, {3.825772347893659*^9, 
   3.8257723792407846`*^9}, {3.825772461411737*^9, 3.825772600039616*^9}, {
   3.8257729404050713`*^9, 3.825772941798464*^9}, {3.825776265992339*^9, 
   3.825776267775201*^9}, {3.8257773666787453`*^9, 3.825777369565556*^9}, {
   3.8257779497485123`*^9, 3.825777983413329*^9}, {3.825778075128171*^9, 
   3.825778101074932*^9}, {3.825787954200268*^9, 3.825787990015835*^9}, {
   3.825788137583811*^9, 3.8257881544206133`*^9}, {3.825788417239546*^9, 
   3.8257884195976057`*^9}, {3.825789625212804*^9, 3.825789630689177*^9}, {
   3.826094768766697*^9, 3.826094855740271*^9}, {3.826117119311099*^9, 
   3.826117135626417*^9}, {3.8261172585211887`*^9, 3.826117345646879*^9}, {
   3.8261173925293827`*^9, 3.826117405044087*^9}, {3.826117502243576*^9, 
   3.8261175155815763`*^9}, {3.826118309789216*^9, 3.8261183404981403`*^9}, {
   3.826118418914081*^9, 3.826118460262999*^9}, {3.8261185282955303`*^9, 
   3.826118535929057*^9}, {3.82611868372797*^9, 3.82611879674522*^9}, {
   3.826118859816153*^9, 3.826118958315939*^9}, {3.826119034511088*^9, 
   3.8261191200155687`*^9}, {3.826119497629159*^9, 3.8261196528864326`*^9}, {
   3.826119770816991*^9, 3.826119775945118*^9}, {3.826119838492045*^9, 
   3.826119841738121*^9}, {3.8261202239309063`*^9, 3.8261202310289793`*^9}, 
   3.8261222967954807`*^9, {3.82612376715513*^9, 3.826123782418157*^9}, {
   3.826123818538568*^9, 3.8261238538299913`*^9}, {3.826123988974992*^9, 
   3.8261240005998297`*^9}, {3.826124039712616*^9, 3.826124185373274*^9}, {
   3.826124228651812*^9, 3.826124240215835*^9}, {3.826124311219376*^9, 
   3.826124401482939*^9}, 3.8261265023419228`*^9, {3.826126555082096*^9, 
   3.826126555616465*^9}, {3.826126635244508*^9, 3.826126644666497*^9}, {
   3.826126760577024*^9, 3.8261267687892838`*^9}, {3.826126798954359*^9, 
   3.826126801958281*^9}, {3.8261268558893337`*^9, 3.826126873674266*^9}, {
   3.8261269314744473`*^9, 3.82612699299339*^9}, {3.826127035324594*^9, 
   3.826127035708516*^9}, 3.826128246825659*^9, {3.82612833871297*^9, 
   3.826128343806291*^9}, {3.82612838754377*^9, 3.826128548683502*^9}, {
   3.826128607694454*^9, 3.826128651938051*^9}, 3.8261286827268248`*^9, {
   3.826128720512982*^9, 3.826128728796011*^9}, 3.8261287807713346`*^9, {
   3.826129772055492*^9, 3.826129795648479*^9}, {3.826129971373317*^9, 
   3.8261299786041613`*^9}, {3.826130981873802*^9, 3.8261310051893806`*^9}, {
   3.8261310813908443`*^9, 3.82613115224474*^9}, {3.826131223085566*^9, 
   3.826131238507985*^9}, {3.826131291883041*^9, 3.8261313169783087`*^9}, {
   3.826138729818275*^9, 3.826138731804173*^9}, {3.826138811821913*^9, 
   3.8261388126321287`*^9}, {3.82613945764749*^9, 3.826139459947276*^9}, {
   3.826140501295795*^9, 3.8261405047050667`*^9}, {3.826141192295804*^9, 
   3.826141194541287*^9}, {3.826144247411593*^9, 3.826144264029414*^9}, {
   3.8261970646024837`*^9, 3.826197065384852*^9}, {3.826197819231688*^9, 
   3.826197900094102*^9}, {3.826197992637348*^9, 3.8261981121917353`*^9}, {
   3.826198194080101*^9, 3.826198201510179*^9}, {3.826198247061562*^9, 
   3.8261982859780273`*^9}, {3.826198333771929*^9, 3.826198337361631*^9}, {
   3.8261983835165358`*^9, 3.8261984150330973`*^9}, {3.8261984493111973`*^9, 
   3.826198489054117*^9}, {3.826198519861081*^9, 3.826198527742054*^9}, {
   3.82619858996329*^9, 3.8261985990745907`*^9}, {3.826200116101247*^9, 
   3.826200120852358*^9}, {3.8262011453802567`*^9, 3.826201156028687*^9}, {
   3.826201223828164*^9, 3.826201252949747*^9}, 3.8262012865883017`*^9, {
   3.8262013507888193`*^9, 3.826201351031973*^9}, {3.826201445924572*^9, 
   3.826201452059423*^9}, {3.826201596559092*^9, 3.826201601647393*^9}, {
   3.826202138185244*^9, 3.826202138583157*^9}, {3.826202410085243*^9, 
   3.826202427228778*^9}, {3.826202459834753*^9, 3.826202460062336*^9}, {
   3.8262665273364067`*^9, 3.8262666325746527`*^9}, {3.826266748233727*^9, 
   3.826266793422152*^9}, {3.826267007841344*^9, 3.826267062074677*^9}, {
   3.8262684297748747`*^9, 3.826268456257777*^9}, {3.826268536201627*^9, 
   3.826268579355805*^9}, {3.826268653393942*^9, 3.8262686731244297`*^9}, {
   3.826268940972047*^9, 3.826268985189208*^9}, {3.826269074195568*^9, 
   3.826269079403335*^9}, {3.826269122651071*^9, 3.826269187456448*^9}, {
   3.826269293123436*^9, 3.826269387434231*^9}, {3.826269429472971*^9, 
   3.826269437057564*^9}, {3.826269494150833*^9, 3.826269552576234*^9}, {
   3.826269600634962*^9, 3.826269788060586*^9}, {3.82626982956542*^9, 
   3.8262698320099993`*^9}, {3.826269953727418*^9, 3.826270064589972*^9}, {
   3.826270536468943*^9, 3.826270536845602*^9}, {3.8262705739483423`*^9, 
   3.8262705856776257`*^9}, {3.826298204581472*^9, 3.826298212429365*^9}, {
   3.826298261681683*^9, 3.82629826410887*^9}, 3.826699627911086*^9, 
   3.829727214768862*^9, {3.831534274004322*^9, 3.831534283443048*^9}, 
   3.8315345720765867`*^9, {3.8315346087904263`*^9, 3.831534624349669*^9}, {
   3.841281910262251*^9, 3.841281940676713*^9}, {3.851144913063191*^9, 
   3.851144916541436*^9}, {3.851146817759161*^9, 3.851146835501499*^9}, {
   3.851146915765171*^9, 3.851146959194072*^9}, 3.851147003951261*^9, {
   3.851147055176824*^9, 3.8511470796223497`*^9}, {3.866029410962331*^9, 
   3.866029411720501*^9}, {3.866029472055769*^9, 3.866029473053515*^9}, {
   3.866029796984007*^9, 3.866029797784131*^9}, {3.866034312311531*^9, 
   3.866034317090263*^9}, {3.866036405025721*^9, 3.866036418598482*^9}, {
   3.866036462001005*^9, 3.866036613607514*^9}, {3.866037235311431*^9, 
   3.866037243693489*^9}, {3.866037303649583*^9, 3.86603731652882*^9}, {
   3.866037363476755*^9, 3.866037377251786*^9}, {3.866046797532969*^9, 
   3.866046849580943*^9}, {3.866046884477062*^9, 3.8660469372278337`*^9}, {
   3.866046990929936*^9, 3.8660470508563747`*^9}, {3.8660470812155037`*^9, 
   3.866047109966127*^9}, {3.866047179138768*^9, 3.866047181659981*^9}, {
   3.866047405116938*^9, 3.866047429371743*^9}, {3.8660475767112913`*^9, 
   3.866047642893858*^9}, {3.8660482122004967`*^9, 3.866048214593206*^9}, 
   3.86604828303189*^9, {3.866051559690333*^9, 3.866051559888674*^9}, {
   3.866051868844481*^9, 3.866051883728648*^9}, {3.8661080918841753`*^9, 
   3.8661081361217947`*^9}, {3.866108446690349*^9, 3.866108447669281*^9}, {
   3.86611100775523*^9, 3.866111008303516*^9}, {3.866111700197386*^9, 
   3.8661117004993896`*^9}, {3.866111828450365*^9, 3.866111830252486*^9}, {
   3.866114813825768*^9, 3.8661148176382113`*^9}, {3.867927042395526*^9, 
   3.8679270803748617`*^9}, {3.86792718049839*^9, 3.867927191940565*^9}, {
   3.8679274912552223`*^9, 3.867927546702313*^9}, {3.8679276214307756`*^9, 
   3.867927627908502*^9}, {3.867927662910795*^9, 3.867927706242817*^9}, {
   3.867927741503389*^9, 3.867927793733282*^9}, {3.8679279241839027`*^9, 
   3.86792797211201*^9}, {3.8679339593534517`*^9, 3.8679339766944103`*^9}, 
   3.867934052019163*^9, {3.86793414190024*^9, 3.86793415571518*^9}, {
   3.867934187640541*^9, 3.8679341899666224`*^9}, {3.867934220360835*^9, 
   3.8679342413332644`*^9}, {3.8679343203921833`*^9, 3.867934336384686*^9}, {
   3.867934387009233*^9, 3.867934394041501*^9}, {3.8679346243001823`*^9, 
   3.8679346266980343`*^9}, {3.8679347707654*^9, 3.867934773963695*^9}, {
   3.86793691562182*^9, 3.86793693002781*^9}, 3.8679374003077307`*^9, {
   3.8679375074652853`*^9, 3.8679375763648653`*^9}, {3.8679379861492653`*^9, 
   3.867937994187999*^9}, {3.867938035912405*^9, 3.867938047047913*^9}, {
   3.867938109303733*^9, 3.867938126290497*^9}, {3.867938170689294*^9, 
   3.867938254076599*^9}, {3.867938377103297*^9, 3.8679384200421658`*^9}, {
   3.867938459007251*^9, 3.867938560699139*^9}, {3.8679386577166*^9, 
   3.867938678052882*^9}},
 CellLabel->
  "In[1094]:=",ExpressionUUID->"915d477a-b6c5-4de3-8c4a-db480cf1a6c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RelaxAnsatz", "::", "usage"}], "=", 
   "\"\<RelaxAnsatz[conf,fev,ansatz,\[Rho]vars,\[Rho]init,\[Psi]initu,\[Psi],\
\[Psi]work,\[Psi]\[Theta]k,Ecur,convergence]. \nRelax ansatz until converge: \
improvements are smaller than convergence.\n\nReturn: Elist, recorded energy \
calculation. Ecur and \[Theta]vars are updated.\n\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"RelaxAnsatz", ",", " ", "HoldAll"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RelaxAnsatz", "[", 
   RowBox[{
   "conf_", ",", "fev_", ",", "ansatz_", ",", "\[Theta]vars_", ",", "\[Rho]_",
     ",", "\[Rho]work_", ",", "\[Rho]\[Theta]k_", ",", "Ecur_", ",", 
    "gradstep_", ",", "convergence_", ",", 
    RowBox[{"maxiter_", ":", "Infinity"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Eold", ",", "\[Theta]varsold", ",", 
      RowBox[{"Elist", "=", 
       RowBox[{"{", "}"}]}], ",", "dE", ",", 
      RowBox[{"econverge", "=", "0"}], ",", 
      RowBox[{"Einit", "=", "Ecur"}], ",", 
      RowBox[{"\[Theta]varsinit", "=", "\[Theta]vars"}], ",", 
      RowBox[{"failing", "=", "0"}], ",", 
      RowBox[{"iter", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"++", "iter"}], "<", "maxiter"}], " ", "&&", " ", 
        RowBox[{
         RowBox[{"Length", "@", "\[Theta]vars"}], ">", "0"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Eold", ",", "\[Theta]varsold"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"Ecur", ",", "\[Theta]vars"}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Ecur", ",", "gradstep"}], "}"}], "=", 
         RowBox[{"UpdateCost", "[", 
          RowBox[{
          "conf", ",", "ansatz", ",", "\[Theta]vars", ",", "\[Rho]", ",", 
           "\[Rho]work", ",", "\[Rho]\[Theta]k"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"++", "fev"}], ";", "\[IndentingNewLine]", 
        RowBox[{"dE", "=", 
         RowBox[{"Ecur", "-", "Eold"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"dE", ">", "0"}], " ", "&&", " ", 
           RowBox[{"iter", ">", "1"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "revert", " ", "to", " ", "the", " ", "old", " ", "condition"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Ecur", ",", "\[Theta]vars"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"Eold", ",", "\[Theta]varsold"}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"Elist", ",", "Ecur"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dE", "<", "0"}], " ", "&&", 
           RowBox[{
            RowBox[{"Abs", "[", "dE", "]"}], "<", "convergence"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"econverge", "+=", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"econverge", "=", "0"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"econverge", ">", 
           RowBox[{"conf", "[", "\"\<iterconverge\>\"", "]"}]}], ",", " ", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Ecur", "\[GreaterEqual]", " ", "Einit"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Ecur", ",", "\[Theta]vars"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"Einit", ",", "\[Theta]varsinit"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Elist", "=", 
         RowBox[{"{", "Einit", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "Elist"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8235927410964403`*^9, 3.823592761083789*^9}, {
   3.8235931364763613`*^9, 3.823593482709688*^9}, {3.82359358324328*^9, 
   3.82359371226038*^9}, {3.823595763565378*^9, 3.823595770519547*^9}, 
   3.8235968617391872`*^9, {3.823599792259081*^9, 3.823599807577887*^9}, 
   3.823600250816772*^9, {3.8236053852240353`*^9, 3.823605400434469*^9}, {
   3.8236054700156612`*^9, 3.8236054737133827`*^9}, {3.823605955321334*^9, 
   3.8236059628790293`*^9}, 3.823606022614809*^9, 3.823606060230424*^9, {
   3.823606157398403*^9, 3.823606162161229*^9}, 3.8236062045746937`*^9, {
   3.8236076801718197`*^9, 3.823607688092615*^9}, 3.82360778378113*^9, {
   3.82360793424885*^9, 3.823607948111787*^9}, {3.82362192351435*^9, 
   3.823621923665942*^9}, {3.8236337433513613`*^9, 3.823633745463202*^9}, {
   3.823712403455068*^9, 3.8237125162962713`*^9}, {3.823712829117251*^9, 
   3.8237129622640953`*^9}, {3.823712995327037*^9, 3.823713051395349*^9}, {
   3.8237170723501863`*^9, 3.82371708849133*^9}, {3.8237187264681473`*^9, 
   3.823718754357345*^9}, {3.823769833059547*^9, 3.8237698408271303`*^9}, {
   3.824305121813753*^9, 3.82430515189592*^9}, {3.824305184524411*^9, 
   3.8243051894814577`*^9}, {3.8243114328151073`*^9, 3.82431145388627*^9}, 
   3.824311520837833*^9, {3.824311826589088*^9, 3.8243118280195637`*^9}, {
   3.824545595787467*^9, 3.824545686645562*^9}, {3.8245463872199306`*^9, 
   3.8245463973325644`*^9}, {3.824546428974061*^9, 3.824546436886327*^9}, {
   3.824546555627058*^9, 3.824546561519527*^9}, {3.8245466075516253`*^9, 
   3.824546638378248*^9}, {3.8245469114936*^9, 3.824547012229998*^9}, {
   3.8245473079425983`*^9, 3.8245473086204576`*^9}, {3.8245477346369047`*^9, 
   3.824547735323283*^9}, {3.8251064076328783`*^9, 3.8251064763260393`*^9}, {
   3.825106552993147*^9, 3.825106618419346*^9}, {3.8251069585929193`*^9, 
   3.8251069621231747`*^9}, {3.8251774901222553`*^9, 
   3.8251774931612387`*^9}, {3.825177538547682*^9, 3.825177538665023*^9}, {
   3.825495669029435*^9, 3.8254956914603653`*^9}, {3.825787917035969*^9, 
   3.8257879493457003`*^9}, {3.8261991111244183`*^9, 
   3.8261991184285517`*^9}, {3.8263018327117147`*^9, 3.826301851668845*^9}, {
   3.8263019072676573`*^9, 3.826301913751103*^9}, {3.8263019467863283`*^9, 
   3.826301967679969*^9}, {3.826302012631027*^9, 3.826302013279245*^9}, {
   3.826302072243198*^9, 3.826302072792397*^9}, {3.8498791577939367`*^9, 
   3.849879193548601*^9}, {3.851147100543641*^9, 3.8511471400218077`*^9}, {
   3.866036117832819*^9, 3.866036216186225*^9}, {3.866036306357986*^9, 
   3.866036329020638*^9}, {3.866036361657319*^9, 3.866036398797701*^9}, {
   3.866036442140272*^9, 3.866036457046999*^9}, {3.866051855028401*^9, 
   3.866051858963923*^9}, 3.866052003212921*^9, {3.867927001394717*^9, 
   3.867927033187512*^9}},ExpressionUUID->"e92c345a-290a-4a0a-a739-\
d6519efa13a4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cost functions", "Subsection",
 CellChangeTimes->{{3.866021396812622*^9, 3.8660214278528957`*^9}, 
   3.867919032446279*^9},ExpressionUUID->"cc2423f1-fc1f-476a-bb5d-\
2b3cd9e0d65f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Expected", " ", "value", " ", "of", " ", "a", " ", "Hamiltonian", " ", 
    "averaged", " ", "to", " ", "the", " ", "training", " ", "set"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"CostFunction", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CostFunction", "::", "usage"}], "=", 
     "\"\<CostFunction[\[Rho],\[Rho]work,ansatz,conf]. Return the total \
training set cost function\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CostFunction", "[", 
     RowBox[{"\[Rho]_", ",", "\[Rho]work_", ",", "ansatz_", ",", "conf_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dev", "=", 
        RowBox[{"conf", "[", "\"\<device\>\"", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Mean", "@", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"InitStateFromAmps", "[", 
           RowBox[{"\[Rho]", ",", 
            RowBox[{"Re", "@", 
             RowBox[{
              RowBox[{"conf", "[", "\"\<initstates\>\"", "]"}], "[", "i", 
              "]"}]}], ",", 
            RowBox[{"Im", "@", 
             RowBox[{
              RowBox[{"conf", "[", "\"\<initstates\>\"", "]"}], "[", "i", 
              "]"}]}]}], "]"}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"U", 
            TemplateBox[{"\[Psi]"},
             "Ket"]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ApplyCircuit", "[", 
           RowBox[{"\[Rho]", ",", 
            RowBox[{"Flatten", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ExtractCircuit", "@", 
                RowBox[{"InsertCircuitNoise", "[", 
                 RowBox[{"ansatz", ",", "dev"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}], "[", "i", 
                "]"}]}], "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"CalcExpecPauliSum", "[", 
           RowBox[{"\[Rho]", ",", 
            RowBox[{"conf", "[", "\"\<hamiltonian\>\"", "]"}], ",", 
            "\[Rho]work"}], "]"}]}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "@", 
            RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}]}]}], "}"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.825267110790401*^9, 3.825267143982016*^9}, {
   3.82526720407201*^9, 3.825267467400854*^9}, {3.825267501702174*^9, 
   3.82526756076999*^9}, {3.825496944903048*^9, 3.825497017484922*^9}, {
   3.825497146161373*^9, 3.825497348871545*^9}, {3.8254973796165*^9, 
   3.825497399324679*^9}, {3.8254974806505136`*^9, 3.825497490600483*^9}, {
   3.8254979908864927`*^9, 3.825498082450001*^9}, 3.825499029490715*^9, {
   3.825545452994638*^9, 3.825545456200333*^9}, {3.825660460013022*^9, 
   3.825660460789646*^9}, {3.825665157718223*^9, 3.825665158522024*^9}, {
   3.825665304807225*^9, 3.825665310440206*^9}, 3.825668265294799*^9, {
   3.825668337811079*^9, 3.825668352678597*^9}, {3.825670066163863*^9, 
   3.825670084399976*^9}, {3.8256702560838423`*^9, 3.825670265614257*^9}, {
   3.825673300556446*^9, 3.825673307860298*^9}, {3.8257722934121513`*^9, 
   3.825772295131913*^9}, {3.826094093102723*^9, 3.826094093366527*^9}, {
   3.826119278388644*^9, 3.8261192959062643`*^9}, {3.826119356729138*^9, 
   3.826119364011222*^9}, {3.826128514454879*^9, 3.82612851491475*^9}, {
   3.8261307804965687`*^9, 3.8261308202093163`*^9}, {3.82613092003253*^9, 
   3.826130922614195*^9}, {3.8297372286987267`*^9, 3.8297372585806503`*^9}, {
   3.829737311870933*^9, 3.829737340579496*^9}, {3.829739266861483*^9, 
   3.8297392939617043`*^9}, {3.851147187480413*^9, 3.851147280471786*^9}, {
   3.851160511438092*^9, 3.851160515543365*^9}, {3.852264620098432*^9, 
   3.852264626164201*^9}, {3.866027567230999*^9, 3.8660276326302223`*^9}, {
   3.8660276657256413`*^9, 3.86602775709483*^9}, {3.866028031786592*^9, 
   3.8660280330596027`*^9}, {3.866028238687357*^9, 3.866028464791641*^9}, {
   3.866028516480823*^9, 3.8660286009604683`*^9}, {3.8660288006943827`*^9, 
   3.866028808934939*^9}, {3.866036777931102*^9, 3.866036786401905*^9}, {
   3.8660644674189587`*^9, 3.866064467916654*^9}, {3.8679190507500687`*^9, 
   3.867919078026065*^9}, {3.867922551511105*^9, 3.867922668886303*^9}, {
   3.8679227368849297`*^9, 3.8679228061228657`*^9}, {3.8679229057987337`*^9, 
   3.867923009756374*^9}},
 CellLabel->
  "In[991]:=",ExpressionUUID->"bb86377f-dd4e-4105-aeab-1ec44a0a18ab"]
}, Closed]],

Cell[CellGroupData[{

Cell["TODO:Prunings", "Subsection",
 CellChangeTimes->{{3.8211291780732937`*^9, 3.821129199186705*^9}, {
   3.821195903481749*^9, 3.821195911170946*^9}, {3.821212480633562*^9, 
   3.8212124813518047`*^9}, 3.821215055886223*^9, {3.821293387849106*^9, 
   3.821293396700285*^9}, {3.8679269840369987`*^9, 
   3.86792698603238*^9}},ExpressionUUID->"2193745b-35cd-48e1-b811-\
90b2c4779fe8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Adjust", " ", "quantum", " ", "register", " ", "\[Rho]\[Theta]k", " ", 
    "wrt", " ", "\[Theta]vars"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "::", "usage"}], "=", 
     "\"\<AdjustQuregs\[Psi]\[Theta]k[nqubit,\[Theta]vars,\[Rho]\[Theta]k] \
adjust allocation of \[Psi]\[Theta]k according to \[Theta]vars\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"SetAttributes", "[", 
    RowBox[{"AdjustQuregs\[Rho]\[Theta]k", ",", "HoldRest"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
     RowBox[{"nqubit_", ",", "\[Theta]vars_", ",", "\[Rho]\[Theta]k_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "lendiff", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lendiff", "=", 
        RowBox[{
         RowBox[{"Length", "@", "\[Rho]\[Theta]k"}], "-", 
         RowBox[{"Length", "@", "\[Theta]vars"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"lendiff", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"release", " ", "some", " ", "quantum", " ", "memories"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"DestroyQureg", "[", 
             RowBox[{"\[Rho]\[Theta]k", "\[LeftDoubleBracket]", 
              RowBox[{"-", "q"}], "\[RightDoubleBracket]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"q", ",", "lendiff"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Rho]\[Theta]k", "=", 
           RowBox[{"\[Rho]\[Theta]k", "\[LeftDoubleBracket]", 
            RowBox[{";;", 
             RowBox[{
              RowBox[{"-", "1"}], "-", "lendiff"}]}], 
            "\[RightDoubleBracket]"}]}]}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"lendiff", " ", "<", " ", "0"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "some", " ", "quantum", " ", "memories", " ", 
           "otherwise"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Rho]\[Theta]k", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"\[Rho]\[Theta]k", ",", 
             RowBox[{"CreateDensityQuregs", "[", 
              RowBox[{"nqubit", ",", 
               RowBox[{"Abs", "[", "lendiff", "]"}]}], "]"}]}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8212760798374987`*^9, 3.821276080208611*^9}, {
   3.8212761152854*^9, 3.8212761406432743`*^9}, {3.821295755599484*^9, 
   3.821295787831954*^9}, {3.821348589988394*^9, 3.821348622553043*^9}, {
   3.82134865802839*^9, 3.8213486749839582`*^9}, {3.821444143182252*^9, 
   3.8214441859065123`*^9}, {3.867923743751894*^9, 3.867923775428877*^9}, {
   3.86792383427635*^9, 3.867923891288272*^9}, 
   3.868011210868606*^9},ExpressionUUID->"50c3a9ea-1878-48ac-a5d7-\
253fb3651fec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PruneGates", "::", "usage"}], "=", 
   "\"\<PruneGates[conf, fev, Ecur, gradstep, ansatz, \[Theta]vars, \
TotalCirc, \[Psi], \[Psi]work, \[Psi]\[Theta]k, maxcost, fullbf:False]. \n\
Prune the circuit using the 4 methods\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"PruneGates", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PruneGates", "[", 
   RowBox[{
   "conf_", ",", "fev_", ",", "Ecur_", ",", "gradstep_", ",", "ansatz_", ",", 
    "\[Theta]vars_", ",", "TotalCirc_", ",", "\[Psi]_", ",", "\[Psi]work_", 
    ",", "\[Psi]\[Theta]k_", ",", "maxcost_", ",", "fullbf_", ",", 
    "status_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slen", ",", 
      RowBox[{"dl", "=", "1"}], ",", 
      RowBox[{"elimmerge", "=", "0"}], ",", 
      RowBox[{"elimmetov", "=", "0"}], ",", 
      RowBox[{"elimbfsmall", "=", "0"}], ",", 
      RowBox[{"elimbf", "=", "0"}], ",", 
      RowBox[{"Einit", "=", "Ecur"}], ",", "total"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"status", "=", "\"\<merge gates\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"total", ":=", 
      RowBox[{"\"\< ;merged:\>\"", "<>", 
       RowBox[{"ToString", "[", "elimmerge", "]"}], "<>", "\"\<, metric:\>\"",
        "<>", 
       RowBox[{"ToString", "[", "elimmetov", "]"}], "<>", 
       "\"\<, small\[Theta]:\>\"", "<>", 
       RowBox[{"ToString", "[", "elimbfsmall", "]"}], "<>", 
       "\"\<, bffirst:\>\"", "<>", 
       RowBox[{"ToString", "[", "elimbf", "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"elimmerge", "+=", 
      RowBox[{"MergeGates", "[", 
       RowBox[{"ansatz", ",", "\[Theta]vars"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
      RowBox[{
       RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", "\[Theta]vars", ",",
        "\[Psi]\[Theta]k"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"dl", ">", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"slen", "=", 
         RowBox[{"Length", "@", "ansatz"}]}], " ", ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "only", " ", "avail", " ", "on", " ", "nat", " ", "grad", " ", 
          "methode"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"conf", "[", "\"\<grad\>\"", "]"}], "===", "\"\<NG\>\""}],
            " ", "&&", " ", 
           RowBox[{
            RowBox[{"Length", "@", "\[Theta]vars"}], ">", "1"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AdjustAngles", "[", "\[Theta]vars", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"status", "=", 
            RowBox[{"\"\<delete gates by metric\>\"", "<>", "total"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"elimmetov", "+=", 
            RowBox[{"DeleteGatesByMetric", "[", 
             RowBox[{
             "conf", ",", "fev", ",", "Ecur", ",", "gradstep", ",", "ansatz", 
              ",", "\[Theta]vars", ",", "TotalCirc", ",", "\[Psi]", ",", 
              "\[Psi]work", ",", "\[Psi]\[Theta]k", ",", "maxcost"}], "]"}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"status", "=", 
            RowBox[{"\"\<merge gates\>\"", "<>", "total"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"elimmerge", "+=", 
            RowBox[{"MergeGates", "[", 
             RowBox[{"ansatz", ",", "\[Theta]vars"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "\[Theta]vars"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AdjustAngles", "[", "\[Theta]vars", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"status", "=", 
            RowBox[{"\"\<brute-force small \[Theta]\>\"", "<>", "total"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"elimbfsmall", "+=", 
            RowBox[{"BruteForceSmall\[Theta]", "[", 
             RowBox[{
             "conf", ",", "fev", ",", "Ecur", ",", "gradstep", ",", "ansatz", 
              ",", "\[Theta]vars", ",", "TotalCirc", ",", "\[Psi]", ",", 
              "\[Psi]work", ",", "\[Psi]\[Theta]k", ",", "maxcost", ",", 
              "fullbf"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"status", "=", 
            RowBox[{"\"\<merge gates\>\"", "<>", "total"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"elimmerge", "+=", 
            RowBox[{"MergeGates", "[", 
             RowBox[{"ansatz", ",", "\[Theta]vars"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Not]", "fullbf"}], " ", "&&", " ", 
           RowBox[{
            RowBox[{"Length", "@", "\[Theta]vars"}], ">", "1"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AdjustAngles", "[", "\[Theta]vars", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"status", "=", 
            RowBox[{"\"\<quick brute-force\>\"", "<>", "total"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"elimbf", "+=", 
            RowBox[{"DeleteGateBF", "[", 
             RowBox[{
             "conf", ",", "fev", ",", "Ecur", ",", "gradstep", ",", "ansatz", 
              ",", "\[Theta]vars", ",", "TotalCirc", ",", "\[Psi]", ",", 
              "\[Psi]work", ",", "\[Psi]\[Theta]k", ",", "maxcost", ",", 
              "fullbf"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"status", "=", 
            RowBox[{"\"\<merge gates\>\"", "<>", "total"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"elimmerge", "+=", 
            RowBox[{"MergeGates", "[", 
             RowBox[{"ansatz", ",", "\[Theta]vars"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dl", "=", 
         RowBox[{"slen", "-", 
          RowBox[{"Length", "@", "ansatz"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
      RowBox[{
       RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", "\[Theta]vars", ",",
        "\[Psi]\[Theta]k"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Ecur", ">", "maxcost"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<pruning exceeds the maxcost: \>\"", ",", 
         RowBox[{"N", "@", "maxcost"}], ",", "\"\<; cost=\>\"", ",", "Ecur"}],
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "elimmerge", ",", "elimbfsmall", ",", "elimmetov", ",", " ", "elimbf"}],
       "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.821866958507078*^9, 3.821867366028901*^9}, {
   3.8218678828637657`*^9, 3.8218678888283663`*^9}, {3.821870930287362*^9, 
   3.821870944033374*^9}, 3.821871127317276*^9, {3.8224956952731752`*^9, 
   3.8224957225858507`*^9}, {3.822590439317616*^9, 3.822590445269671*^9}, {
   3.822590898845168*^9, 3.822590900497531*^9}, {3.8227758484944077`*^9, 
   3.8227758703318577`*^9}, {3.822776072124447*^9, 3.822776076400689*^9}, {
   3.822777632961391*^9, 3.822777709765242*^9}, 3.8235922793270397`*^9, {
   3.823599985929393*^9, 3.823600044474637*^9}, {3.823600839102754*^9, 
   3.82360090094571*^9}, {3.823600931592101*^9, 3.8236009360576687`*^9}, {
   3.823601011722878*^9, 3.823601017794593*^9}, {3.823606290882453*^9, 
   3.823606302571995*^9}, {3.823606760197836*^9, 3.823606761119253*^9}, {
   3.823607290806696*^9, 3.8236072944583178`*^9}, {3.8236074264751043`*^9, 
   3.8236074558531933`*^9}, {3.8236079620968103`*^9, 3.823607971512236*^9}, 
   3.8236080022597303`*^9, {3.823609059242917*^9, 3.823609083204905*^9}, {
   3.823609462209725*^9, 3.8236094704074163`*^9}, {3.823609971504673*^9, 
   3.823609972718932*^9}, {3.8236103414102793`*^9, 3.8236103427367287`*^9}, 
   3.823610385472362*^9, {3.823610610047825*^9, 3.823610611428357*^9}, {
   3.823611811506034*^9, 3.8236118208251333`*^9}, {3.82361709617749*^9, 
   3.823617100412554*^9}, {3.823617153143416*^9, 3.8236171644120092`*^9}, {
   3.8236171958688726`*^9, 3.8236172041102953`*^9}, {3.8236189201864843`*^9, 
   3.823618923084415*^9}, {3.823620110151793*^9, 3.823620127323472*^9}, {
   3.8236202095511303`*^9, 3.823620212945384*^9}, {3.8236202472274513`*^9, 
   3.823620247925028*^9}, {3.823621051171729*^9, 3.823621059664776*^9}, {
   3.823621147191905*^9, 3.823621180576344*^9}, {3.8236291611762114`*^9, 
   3.823629162365293*^9}, {3.8236299199351387`*^9, 3.8236299586395407`*^9}, {
   3.823633803756132*^9, 3.8236338065282507`*^9}, {3.8236339542192287`*^9, 
   3.823633956069682*^9}, {3.8236346757628613`*^9, 3.823634682620233*^9}, {
   3.823641178911132*^9, 3.823641184106861*^9}, {3.8236703573274393`*^9, 
   3.823670365372301*^9}, {3.8236717883841677`*^9, 3.823671816943964*^9}, {
   3.823673031675315*^9, 3.8236730661799183`*^9}, {3.823673255368863*^9, 
   3.823673259281843*^9}, {3.8236761091432133`*^9, 3.823676110932122*^9}, {
   3.8236820771127996`*^9, 3.823682080440757*^9}, {3.823682140681443*^9, 
   3.8236821461142282`*^9}, {3.823686620003998*^9, 3.823686624275858*^9}, {
   3.8236872958550043`*^9, 3.823687296976797*^9}, {3.823688074252479*^9, 
   3.823688076014595*^9}, {3.823688424531693*^9, 3.823688425622406*^9}, {
   3.823688947549406*^9, 3.82368894991759*^9}, {3.823689374362568*^9, 
   3.82368937554205*^9}, 3.8236896693595552`*^9, {3.8236897267041388`*^9, 
   3.823689727663813*^9}, {3.82369066549345*^9, 3.823690731111994*^9}, {
   3.823695807023925*^9, 3.8236958092391644`*^9}, {3.823696034762424*^9, 
   3.823696036342349*^9}, {3.823698030174838*^9, 3.823698030652543*^9}, {
   3.8236988198605213`*^9, 3.823698821296816*^9}, {3.823721826909511*^9, 
   3.8237218298994923`*^9}, {3.823722299713496*^9, 3.823722325468225*^9}, {
   3.8237224531611357`*^9, 3.823722457601986*^9}, {3.82375436594608*^9, 
   3.823754382987277*^9}, {3.823769334584931*^9, 3.823769432642294*^9}, {
   3.8239425993607397`*^9, 3.823942672816846*^9}, 3.823942726415268*^9, {
   3.823944970534753*^9, 3.823944973518611*^9}, {3.823945144255595*^9, 
   3.823945145595071*^9}, {3.823947161984149*^9, 3.8239471878970547`*^9}, {
   3.823947785783839*^9, 3.823947800052207*^9}, {3.8239478460642633`*^9, 
   3.82394785984249*^9}, {3.8239481164372797`*^9, 3.823948117719376*^9}, {
   3.823948420928385*^9, 3.823948431908855*^9}, {3.823948987066682*^9, 
   3.823949005144734*^9}, {3.823949060890376*^9, 3.82394906896036*^9}, 
   3.823949786566554*^9, {3.823952531636753*^9, 3.823952554644217*^9}, {
   3.8239527110473948`*^9, 3.8239527346184273`*^9}, {3.823952802012348*^9, 
   3.823952868641827*^9}, {3.8239535473146057`*^9, 3.823953576985722*^9}, {
   3.824209850718347*^9, 3.8242098576900387`*^9}, {3.8242100351783123`*^9, 
   3.824210066008883*^9}, {3.824220288884663*^9, 3.824220317979226*^9}, {
   3.824306365891819*^9, 3.824306372642044*^9}, {3.824306970079681*^9, 
   3.82430697857752*^9}, {3.824318122243824*^9, 3.824318125381604*^9}, {
   3.824319071607942*^9, 3.824319095661972*^9}, {3.824547832426849*^9, 
   3.824547897229863*^9}, {3.824547938278412*^9, 3.824548049639491*^9}, {
   3.8250154751973257`*^9, 3.825015479261756*^9}, {3.825273845910091*^9, 
   3.8252738946551647`*^9}, {3.825515230681651*^9, 3.8255152378407803`*^9}, {
   3.825515414038652*^9, 3.825515419039789*^9}, {3.825515936430826*^9, 
   3.8255159415029907`*^9}, {3.825516861318369*^9, 3.825516862830495*^9}, {
   3.825675502041663*^9, 3.8256755210033817`*^9}, {3.8257829782497263`*^9, 
   3.8257830636723433`*^9}, {3.825788189733644*^9, 3.825788232280842*^9}, {
   3.826202912566021*^9, 3.8262029558876257`*^9}, {3.826203005460499*^9, 
   3.82620301435483*^9}, {3.826273218344248*^9, 3.8262732238192043`*^9}, {
   3.826702345347746*^9, 3.8267023569016542`*^9}, {3.826702416175194*^9, 
   3.8267024276459703`*^9}, {3.826722244899756*^9, 3.826722269279179*^9}, {
   3.826723503500682*^9, 3.826723529964252*^9}, {3.826723677797003*^9, 
   3.826723678779928*^9}, {3.826724021271275*^9, 3.8267240377569942`*^9}, {
   3.8267260086613092`*^9, 3.826726022030188*^9}, {3.8267275253690367`*^9, 
   3.826727563102295*^9}, {3.826745562989751*^9, 3.8267456444651403`*^9}, {
   3.826746383937262*^9, 3.826746386365035*^9}, {3.836845545348722*^9, 
   3.836845558470358*^9}, {3.836845923991296*^9, 3.836845926637439*^9}, {
   3.836847098557713*^9, 3.83684710674835*^9}, {3.8369706668184023`*^9, 
   3.836970670861658*^9}, {3.836970728881482*^9, 3.836970733520679*^9}, {
   3.841284653588822*^9, 3.8412846832237177`*^9}, {3.841285160568397*^9, 
   3.841285164373246*^9}, {3.841285687988735*^9, 3.841285703256192*^9}, {
   3.841375535545082*^9, 3.841375566610365*^9}, {3.8494190183305683`*^9, 
   3.8494190208328943`*^9}, {3.851147353581225*^9, 3.851147522910508*^9}, {
   3.8511475657304897`*^9, 3.8511475742136183`*^9}, {3.8511501481106997`*^9, 
   3.851150149425749*^9}, {3.8511507430714083`*^9, 3.851150743907325*^9}, {
   3.851150870916565*^9, 3.8511508756359463`*^9}, {3.865944000124077*^9, 
   3.8659440244122343`*^9}, {3.865944322640317*^9, 3.865944337239945*^9}, {
   3.866037569037045*^9, 3.866037618505053*^9}, {3.866047234798984*^9, 
   3.866047252076551*^9}, {3.8660514464893637`*^9, 3.8660514522269793`*^9}, {
   3.866051512493051*^9, 3.866051529327324*^9}, {3.866051686406942*^9, 
   3.8660517031021833`*^9}, {3.866053304827879*^9, 3.8660533086003733`*^9}, {
   3.8660643658503838`*^9, 3.86606437514948*^9}, {3.866124984268958*^9, 
   3.866125016297014*^9}, {3.867923910890049*^9, 
   3.8679239178499107`*^9}},ExpressionUUID->"77b551ff-cdb5-48ce-93d3-\
ef660423fdb6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Merging", " ", "gates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "only", " ", "tested", " ", "for", " ", "single", " ", "rotation", " ", 
      "and", " ", "controlled"}], "-", 
     RowBox[{"rotation", " ", "so", " ", "far"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MergeGates", "::", "usage"}], "=", 
     "\"\<MergeGates[ansatz_,\[Theta]vars_] merge obvious gate in ansatz. It \
is not optimized for non-parametric gates. Works well with single rotation \
and controlled-rotations\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"SetAttributes", "[", 
    RowBox[{"MergeGates", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MergeGates", "[", 
     RowBox[{"ansatz_", ",", "\[Theta]vars_", ",", 
      RowBox[{"full_", ":", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ancol", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", 
        ",", "i", ",", "j", ",", "slen", ",", "k", ",", "l", ",", 
        RowBox[{"\[Theta]merge", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"deleted", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{"True", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"slen", "=", 
           RowBox[{"Length", "@", "ansatz"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ancol", "=", 
           RowBox[{"GetCircuitColumns", "[", "ansatz", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"simplify", " ", "non"}], "-", 
            RowBox[{"parametric", " ", "gates"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", "\[Theta]vars"}], "<", 
             RowBox[{"Length", "@", "ansatz"}]}], ",", "\[IndentingNewLine]", 
            
            RowBox[{
             RowBox[{"ancol", "=", 
              RowBox[{"ancol", "//.", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"a___", ",", 
                    RowBox[{"{", 
                    RowBox[{"b___", ",", 
                    SubscriptBox["H", "j_"], ",", "c___"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d___", ",", 
                    SubscriptBox["H", "j_"], ",", "e___"}], "}"}], ",", 
                    "f___"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "e"}], "}"}], ",", "f"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"a___", ",", 
                    RowBox[{"{", 
                    RowBox[{"b___", ",", 
                    SubscriptBox["X", "j_"], ",", "c___"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d___", ",", 
                    SubscriptBox["X", "j_"], ",", "e___"}], "}"}], ",", 
                    "f___"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "e"}], "}"}], ",", "f"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"a___", ",", 
                    RowBox[{"{", 
                    RowBox[{"b___", ",", 
                    SubscriptBox["Y", "j_"], ",", "c___"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d___", ",", 
                    SubscriptBox["Y", "j_"], ",", "e___"}], "}"}], ",", 
                    "f___"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "e"}], "}"}], ",", "f"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"a___", ",", 
                    RowBox[{"{", 
                    RowBox[{"b___", ",", 
                    SubscriptBox["Z", "j_"], ",", "c___"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d___", ",", 
                    SubscriptBox["Z", "j_"], ",", "e___"}], "}"}], ",", 
                    "f___"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "e"}], "}"}], ",", "f"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"a___", ",", 
                    RowBox[{"{", 
                    RowBox[{"b___", ",", 
                    RowBox[{
                    SubscriptBox["C", "i_"], "[", 
                    SubscriptBox["Z", "j_"], "]"}], ",", "c___"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d___", ",", 
                    RowBox[{
                    SubscriptBox["C", "i_"], "[", 
                    SubscriptBox["Z", "j_"], "]"}], ",", "e___"}], "}"}], ",",
                     "f___"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "e"}], "}"}], ",", "f"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"a___", ",", 
                    RowBox[{"{", 
                    RowBox[{"b___", ",", 
                    RowBox[{
                    SubscriptBox["C", "i_"], "[", 
                    SubscriptBox["X", "j_"], "]"}], ",", "c___"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d___", ",", 
                    RowBox[{
                    SubscriptBox["C", "i_"], "[", 
                    SubscriptBox["X", "j_"], "]"}], ",", "e___"}], "}"}], ",",
                     "f___"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "e"}], "}"}], ",", "f"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"a___", ",", 
                    RowBox[{"{", 
                    RowBox[{"b___", ",", 
                    RowBox[{
                    SubscriptBox["C", "i_"], "[", 
                    SubscriptBox["Y", "j_"], "]"}], ",", "c___"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d___", ",", 
                    RowBox[{
                    SubscriptBox["C", "i_"], "[", 
                    SubscriptBox["Y", "j_"], "]"}], ",", "e___"}], "}"}], ",",
                     "f___"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "e"}], "}"}], ",", "f"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"a___", ",", 
                    RowBox[{"{", 
                    RowBox[{"b___", ",", 
                    SubscriptBox["SWAP", 
                    RowBox[{"i_", ",", "j_"}]], ",", "c___"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d___", ",", 
                    SubscriptBox["SWAP", 
                    RowBox[{"i_", ",", "j_"}]], ",", "e___"}], "}"}], ",", 
                    "f___"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "e"}], "}"}], ",", "f"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"a___", ",", 
                    RowBox[{"{", 
                    RowBox[{"b___", ",", 
                    SubscriptBox["SWAP", 
                    RowBox[{"i_", ",", "j_"}]], ",", "c___"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d___", ",", 
                    SubscriptBox["SWAP", 
                    RowBox[{"j_", ",", "i_"}]], ",", "e___"}], "}"}], ",", 
                    "f___"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "c"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "e"}], "}"}], ",", "f"}], "}"}]}]}], 
                "\[IndentingNewLine]", "}"}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"simplify", " ", "parametric", " ", "gates"}], " ", "*)"}],
           "\[IndentingNewLine]", 
          RowBox[{"ancol", "=", 
           RowBox[{"ancol", "//.", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"a___", ",", 
                 RowBox[{"{", 
                  RowBox[{"b___", ",", 
                   RowBox[{
                    SubscriptBox["Rx", "j_"], "[", 
                    SubscriptBox["\[Theta]", "k_"], "]"}], ",", "c___"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d___", ",", 
                   RowBox[{
                    SubscriptBox["Rx", "j_"], "[", 
                    SubscriptBox["\[Theta]", "l_"], "]"}], ",", "e___"}], 
                  "}"}], ",", "f___"}], "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{"b", ",", 
                   RowBox[{
                    SubscriptBox["Rx", "j"], "[", 
                    SubscriptBox["\[Theta]", "k"], "]"}], ",", "c"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "k"], ",", 
                    SubscriptBox["\[Theta]", "l"]}], "}"}], ",", "e"}], "}"}],
                  ",", "f"}], "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"a___", ",", 
                 RowBox[{"{", 
                  RowBox[{"b___", ",", 
                   RowBox[{
                    SubscriptBox["Ry", "j_"], "[", 
                    SubscriptBox["\[Theta]", "k_"], "]"}], ",", "c___"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d___", ",", 
                   RowBox[{
                    SubscriptBox["Ry", "j_"], "[", 
                    SubscriptBox["\[Theta]", "l_"], "]"}], ",", "e___"}], 
                  "}"}], ",", "f___"}], "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{"b", ",", 
                   RowBox[{
                    SubscriptBox["Ry", "j"], "[", 
                    SubscriptBox["\[Theta]", "k"], "]"}], ",", "c"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "k"], ",", 
                    SubscriptBox["\[Theta]", "l"]}], "}"}], ",", "e"}], "}"}],
                  ",", "f"}], "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"a___", ",", 
                 RowBox[{"{", 
                  RowBox[{"b___", ",", 
                   RowBox[{
                    SubscriptBox["Rz", "j_"], "[", 
                    SubscriptBox["\[Theta]", "k_"], "]"}], ",", "c___"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d___", ",", 
                   RowBox[{
                    SubscriptBox["Rz", "j_"], "[", 
                    SubscriptBox["\[Theta]", "l_"], "]"}], ",", "e___"}], 
                  "}"}], ",", "f___"}], "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{"b", ",", 
                   RowBox[{
                    SubscriptBox["Rz", "j"], "[", 
                    SubscriptBox["\[Theta]", "k"], "]"}], ",", "c"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "k"], ",", 
                    SubscriptBox["\[Theta]", "l"]}], "}"}], ",", "e"}], "}"}],
                  ",", "f"}], "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"a___", ",", 
                 RowBox[{"{", 
                  RowBox[{"b___", ",", 
                   RowBox[{
                    SubscriptBox["C", "i"], "[", 
                    RowBox[{
                    SubscriptBox["Rz", "j_"], "[", 
                    SubscriptBox["\[Theta]", "k_"], "]"}], "]"}], ",", 
                   "c___"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d___", ",", 
                   RowBox[{
                    SubscriptBox["C", "i"], "[", 
                    RowBox[{
                    SubscriptBox["Rz", "j_"], "[", 
                    SubscriptBox["\[Theta]", "k_"], "]"}], "]"}], ",", 
                   "e___"}], "}"}], ",", "f___"}], "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{"b", ",", 
                   RowBox[{
                    SubscriptBox["C", "i"], "[", 
                    RowBox[{
                    SubscriptBox["Rz", "j"], "[", 
                    SubscriptBox["\[Theta]", "k"], "]"}], "]"}], ",", "c"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "k"], ",", 
                    SubscriptBox["\[Theta]", "l"]}], "}"}], ",", "e"}], "}"}],
                  ",", "f"}], "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"a___", ",", 
                 RowBox[{"{", 
                  RowBox[{"b___", ",", 
                   RowBox[{
                    SubscriptBox["C", "i"], "[", 
                    RowBox[{
                    SubscriptBox["Rx", "j_"], "[", 
                    SubscriptBox["\[Theta]", "k_"], "]"}], "]"}], ",", 
                   "c___"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d___", ",", 
                   RowBox[{
                    SubscriptBox["C", "i"], "[", 
                    RowBox[{
                    SubscriptBox["Rx", "j_"], "[", 
                    SubscriptBox["\[Theta]", "k_"], "]"}], "]"}], ",", 
                   "e___"}], "}"}], ",", "f___"}], "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{"b", ",", 
                   RowBox[{
                    SubscriptBox["C", "i"], "[", 
                    RowBox[{
                    SubscriptBox["Rx", "j"], "[", 
                    SubscriptBox["\[Theta]", "k"], "]"}], "]"}], ",", "c"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "k"], ",", 
                    SubscriptBox["\[Theta]", "l"]}], "}"}], ",", "e"}], "}"}],
                  ",", "f"}], "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"a___", ",", 
                 RowBox[{"{", 
                  RowBox[{"b___", ",", 
                   RowBox[{
                    SubscriptBox["C", "i"], "[", 
                    RowBox[{
                    SubscriptBox["Ry", "j_"], "[", 
                    SubscriptBox["\[Theta]", "k_"], "]"}], "]"}], ",", 
                   "c___"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d___", ",", 
                   RowBox[{
                    SubscriptBox["C", "i"], "[", 
                    RowBox[{
                    SubscriptBox["Ry", "j_"], "[", 
                    SubscriptBox["\[Theta]", "k_"], "]"}], "]"}], ",", 
                   "e___"}], "}"}], ",", "f___"}], "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{"b", ",", 
                   RowBox[{
                    SubscriptBox["C", "i"], "[", 
                    RowBox[{
                    SubscriptBox["Ry", "j"], "[", 
                    SubscriptBox["\[Theta]", "k"], "]"}], "]"}], ",", "c"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "k"], ",", 
                    SubscriptBox["\[Theta]", "l"]}], "}"}], ",", "e"}], "}"}],
                  ",", "f"}], "}"}]}]}], "\[IndentingNewLine]", "}"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"ansatz", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"ancol", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"\[Theta]merge", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"ansatz", ",", "ListQ"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ansatz", "=", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{"ansatz", ",", "_List"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"merge", " ", "the", " ", "parameters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"deleted", "+=", 
           RowBox[{"Length", "@", "\[Theta]merge"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", "\[Theta]merge"}], ">", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"\[Theta]vars", "[", 
                 RowBox[{
                 "t", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 "]"}], "+=", 
                RowBox[{"\[Theta]vars", "[", 
                 RowBox[{
                 "t", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"\[Theta]vars", "=", 
                RowBox[{"KeyDrop", "[", 
                 RowBox[{"\[Theta]vars", ",", 
                  RowBox[{
                  "t", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "\[Theta]merge"}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", "ansatz"}], "==", "slen"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "deleted"}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8181783430785007`*^9, 3.818178373960538*^9}, 
   3.8181815385091877`*^9, {3.818183527179865*^9, 3.8181835527097807`*^9}, {
   3.818183694226061*^9, 3.81818371569168*^9}, {3.8181837517100163`*^9, 
   3.818183810634286*^9}, {3.8181838587437687`*^9, 3.81818386263164*^9}, {
   3.818183934518463*^9, 3.8181839756918488`*^9}, {3.818184062721219*^9, 
   3.818184166188184*^9}, {3.8181860565601788`*^9, 3.818186060660878*^9}, {
   3.8188662777181587`*^9, 3.8188662801911917`*^9}, {3.8205653285105953`*^9, 
   3.8205653460537443`*^9}, {3.820565656788571*^9, 3.820565807042951*^9}, {
   3.82056671538337*^9, 3.820566732859226*^9}, {3.82056715576589*^9, 
   3.820567327122254*^9}, {3.820567365452201*^9, 3.8205673855358677`*^9}, {
   3.820567736633729*^9, 3.820567770891005*^9}, 3.82056802151891*^9, {
   3.820568069374905*^9, 3.820568079226941*^9}, {3.8205681097323313`*^9, 
   3.820568121167489*^9}, {3.82056829659692*^9, 3.820568333110229*^9}, {
   3.82056837273374*^9, 3.8205683779281397`*^9}, {3.820582534614221*^9, 
   3.8205825617680264`*^9}, {3.820582605206716*^9, 3.820582635362645*^9}, 
   3.820582779105164*^9, {3.8205841065955153`*^9, 3.820584122384589*^9}, {
   3.820585384327263*^9, 3.8205854188170233`*^9}, {3.820585451528512*^9, 
   3.8205854536472692`*^9}, {3.82058673140893*^9, 3.820586784515963*^9}, 
   3.820586941633479*^9, {3.8205871425134287`*^9, 3.820587250508157*^9}, {
   3.82058742507642*^9, 3.8205874524008512`*^9}, {3.8205879333954268`*^9, 
   3.820587991652424*^9}, {3.820588252541177*^9, 3.820588281159019*^9}, {
   3.820588327045553*^9, 3.820588402958119*^9}, 3.820588442359911*^9, {
   3.82058946982316*^9, 3.8205894996883907`*^9}, {3.8205895648411617`*^9, 
   3.8205895774564953`*^9}, {3.820589631147852*^9, 3.820589671332962*^9}, {
   3.820589713189786*^9, 3.820589803072893*^9}, {3.82058985005087*^9, 
   3.820589856662859*^9}, {3.820589941939468*^9, 3.8205899685925207`*^9}, {
   3.8205903331746693`*^9, 3.8205903421367397`*^9}, {3.8205903749441423`*^9, 
   3.820590386971662*^9}, 3.820590621977439*^9, {3.820591621071718*^9, 
   3.820591634084134*^9}, {3.82059198090737*^9, 3.820591981242777*^9}, {
   3.820592021512986*^9, 3.820592024798676*^9}, {3.820592551801166*^9, 
   3.820592588144807*^9}, 3.820593484249713*^9, 3.82059356677217*^9, {
   3.820597763329774*^9, 3.820597826845077*^9}, {3.820597869481145*^9, 
   3.820597871119771*^9}, {3.8205979520097103`*^9, 3.8205980095864153`*^9}, {
   3.8206041831352*^9, 3.8206042008444242`*^9}, {3.820604321956541*^9, 
   3.8206043251781883`*^9}, {3.820604460824152*^9, 3.8206045083675137`*^9}, {
   3.82060509470475*^9, 3.820605256290481*^9}, {3.820605297202382*^9, 
   3.820605334166439*^9}, {3.82060544727005*^9, 3.820605505753015*^9}, {
   3.820605590369006*^9, 3.8206056200600853`*^9}, {3.820605674734445*^9, 
   3.820605704798202*^9}, {3.820606005354319*^9, 3.8206061553789062`*^9}, {
   3.820606377684765*^9, 3.82060639018797*^9}, {3.8206064459167347`*^9, 
   3.8206065520518217`*^9}, {3.820606642206402*^9, 3.820606700896222*^9}, {
   3.820606748903014*^9, 3.820606758644475*^9}, {3.820606792747056*^9, 
   3.820606795106575*^9}, {3.82060685919601*^9, 3.820606924734901*^9}, {
   3.820606992286337*^9, 3.820607042472383*^9}, {3.8206071200353403`*^9, 
   3.820607147364149*^9}, {3.820607255613263*^9, 3.8206072564512777`*^9}, {
   3.820607317642276*^9, 3.820607366040677*^9}, {3.820609391617889*^9, 
   3.820609404610262*^9}, {3.821293548556136*^9, 3.8212935704091377`*^9}, {
   3.8212959285326014`*^9, 3.821295975396806*^9}, {3.821349111142521*^9, 
   3.821349141640801*^9}, 3.821349659860861*^9, {3.821811415734954*^9, 
   3.821811468204713*^9}, {3.821811528706624*^9, 3.821811529216406*^9}, {
   3.8218767486431217`*^9, 3.821876994038789*^9}, 3.82187713350207*^9, 
   3.821877239862979*^9, 3.821877288024396*^9, 3.823616886402093*^9, {
   3.823670564424387*^9, 3.8236706556166058`*^9}, {3.823670825180327*^9, 
   3.823670868509602*^9}, {3.823670967826877*^9, 3.8236710103242483`*^9}, {
   3.823671651465732*^9, 3.823671661931498*^9}, {3.8236730811928577`*^9, 
   3.823673122280308*^9}, {3.823673365273386*^9, 3.823673366150177*^9}, {
   3.82395297193475*^9, 3.823953001311503*^9}, {3.825535296257371*^9, 
   3.825535377290172*^9}, {3.8257833877979727`*^9, 3.82578338845082*^9}, {
   3.826701747676702*^9, 3.826701783067309*^9}, {3.826701840232893*^9, 
   3.826701902203444*^9}, {3.82670209454916*^9, 3.826702187426648*^9}, {
   3.826702325784061*^9, 3.826702331671729*^9}, {3.826702455146092*^9, 
   3.826702457517173*^9}, {3.826702509584309*^9, 3.8267025511137123`*^9}, {
   3.826704796012869*^9, 3.826704843457568*^9}, {3.8267110850961514`*^9, 
   3.826711087674672*^9}, {3.826711229652351*^9, 3.8267113234916267`*^9}, {
   3.826712122858364*^9, 3.8267121366283484`*^9}, {3.826721218453601*^9, 
   3.826721258228978*^9}, {3.826721294086611*^9, 3.826721344710992*^9}, {
   3.826721383314136*^9, 3.8267214449338017`*^9}, {3.82674565439408*^9, 
   3.826745663382709*^9}, {3.833954612822612*^9, 3.833954628735763*^9}, {
   3.833955128200364*^9, 3.833955179078326*^9}, 3.835849393134869*^9, {
   3.8358496162649803`*^9, 3.8358496167629833`*^9}, {3.83585013768591*^9, 
   3.835850149774382*^9}, {3.835850202275364*^9, 3.835850205268401*^9}, {
   3.835850261253943*^9, 3.83585026195914*^9}, {3.835860904448992*^9, 
   3.835860904604116*^9}, {3.8358609774489937`*^9, 3.835860995795018*^9}, {
   3.8358611251431713`*^9, 3.8358611277129*^9}, {3.835861211492293*^9, 
   3.83586122382318*^9}, {3.83594893473487*^9, 3.835948939346427*^9}, {
   3.8359489906613617`*^9, 3.8359489923942013`*^9}, {3.83594945652248*^9, 
   3.835949532471826*^9}, {3.8359496248402767`*^9, 3.835949681979272*^9}, {
   3.83594983522908*^9, 3.8359498426114273`*^9}, {3.836034665774781*^9, 
   3.8360347537408752`*^9}, {3.836034822453673*^9, 3.8360348244948606`*^9}, {
   3.836038515321391*^9, 3.83603851713057*^9}, {3.8363731728453693`*^9, 
   3.8363731935219603`*^9}, 3.8363732269588203`*^9, {3.836374580521338*^9, 
   3.836374582154237*^9}, {3.836374749595697*^9, 3.836374806583365*^9}, {
   3.852446017623949*^9, 3.852446060575046*^9}, {3.852446224588173*^9, 
   3.85244631811236*^9}, {3.8524463724866257`*^9, 3.852446469088979*^9}, {
   3.852451648520093*^9, 3.8524517384403973`*^9}, {3.852451791683628*^9, 
   3.852451951786169*^9}, {3.852452079725132*^9, 3.852452126547175*^9}, {
   3.8524521577047777`*^9, 3.852452306717977*^9}, {3.8524524240153522`*^9, 
   3.852452507157977*^9}, {3.852452575730393*^9, 3.852452601159251*^9}, {
   3.852452639489917*^9, 3.852452676142037*^9}, {3.852452711220645*^9, 
   3.852452764491448*^9}, {3.8524528251065407`*^9, 3.852452908742371*^9}, {
   3.852453047430769*^9, 3.852453092763134*^9}, {3.852453139034419*^9, 
   3.852453241756259*^9}, {3.852453291947012*^9, 3.852453354740806*^9}, {
   3.852453416372768*^9, 3.8524534462009974`*^9}, {3.8524534904194937`*^9, 
   3.852453609051879*^9}, {3.852453675757341*^9, 3.852453693605288*^9}, {
   3.852453877002857*^9, 3.852453907133024*^9}, {3.8524539378557673`*^9, 
   3.8524539564470053`*^9}, {3.85245406227498*^9, 3.852454087179893*^9}, {
   3.852454156728087*^9, 3.852454199158599*^9}, {3.852454362373596*^9, 
   3.852454406540771*^9}, {3.852455418334076*^9, 3.85245542257983*^9}, {
   3.85599085011863*^9, 3.8559908528111877`*^9}, {3.865942551441996*^9, 
   3.8659425542168818`*^9}, {3.8659439481931458`*^9, 3.865943949037642*^9}, {
   3.865943981119151*^9, 3.86594398480306*^9}, {3.866053316914301*^9, 
   3.866053336038135*^9}},
 CellLabel->
  "In[864]:=",ExpressionUUID->"ff6e4f5f-4dbb-40b5-8e41-9c9a698ac247"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BruteForceSmall\[Theta]", "::", "usage"}], "=", 
   "\"\<BruteForceSmall\[Theta][conf,fev,Ecur,gradstep,ansatz,\[Theta]vars,\
TotalCirc,\[Psi],\[Psi]work,\[Psi]\[Theta]k,maxcost,fullbf]\n Burte-focefully \
try to eliminate small gates. Gates are sorted by the angles, and eliminate \
it one by one until it fails failtrial times, unless\nfullbf=True. If \
fullbf=True, SWAPs will be deleted as well.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"BruteForceSmall\[Theta]", ",", "HoldAll"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BruteForceSmall\[Theta]", "[", 
   RowBox[{
   "conf_", ",", "fev_", ",", "Ecur_", ",", "gradstep_", ",", "ansatz_", ",", 
    "\[Theta]vars_", ",", "TotalCirc_", ",", "\[Psi]_", ",", "\[Psi]work_", 
    ",", "\[Psi]\[Theta]k_", ",", "maxcost_", ",", 
    RowBox[{"fullbf_", ":", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ansatztmp", ",", 
      RowBox[{"Etmp", "=", "Ecur"}], ",", 
      RowBox[{"Akl", "=", "0"}], ",", 
      RowBox[{"\[Theta]varstmp", "=", "\[Theta]vars"}], ",", 
      RowBox[{"\[Theta]varsinit", "=", "\[Theta]vars"}], ",", 
      RowBox[{"Einit", "=", "Ecur"}], ",", 
      RowBox[{"del\[Theta]", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "j", ",", "keysort\[Theta]vars", 
      ",", "ansatzold", ",", "Eold", ",", "\[Theta]varsold", ",", 
      "\[Theta]cand", ",", 
      RowBox[{"converge", "=", "0"}], ",", 
      RowBox[{"deleted", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"fail", "=", "0"}], ",", 
      RowBox[{"fail\[Theta]", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"maxfail", "=", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{"0.1", "*", 
         RowBox[{"Length", "@", "\[Theta]vars"}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Brutefocelly", " ", "try", " ", "to", " ", "delete", " ", "each", " ", 
      "gate", " ", "from", " ", "the", " ", "smallest", " ", "one"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"keysort\[Theta]vars", "=", 
      RowBox[{"Keys", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"#", "-", 
               RowBox[{"4", "\[Pi]"}]}], "]"}], ",", 
             RowBox[{"Abs", "[", 
              RowBox[{"#", "-", 
               RowBox[{"2", "\[Pi]"}]}], "]"}], ",", 
             RowBox[{"Abs", "[", "#", "]"}], ",", 
             RowBox[{"Abs", "[", 
              RowBox[{"#", "+", 
               RowBox[{"2", "\[Pi]"}]}], "]"}], ",", 
             RowBox[{"Abs", "[", 
              RowBox[{"#", "+", 
               RowBox[{"4", "\[Pi]"}]}], "]"}]}], "}"}], "]"}], "&"}], "/@", 
         "\[Theta]vars"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", " ", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "@", "keysort\[Theta]vars"}]}], ",", " ", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]cand", "=", 
         RowBox[{
         "keysort\[Theta]vars", "\[LeftDoubleBracket]", "k", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"keep", " ", "the", " ", "parameterized", " ", "swaps"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Not]", "fullbf"}], " ", "&&", " ", 
           RowBox[{"MatchQ", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{"ansatz", ",", 
                RowBox[{"_", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ContainsAny", "[", 
                    RowBox[{
                    RowBox[{"Level", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"{", "\[Theta]cand", "}"}]}], "]"}], "&"}], 
                  ")"}]}]}], "]"}], "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              SubscriptBox["SW", "__"], "[", "_", "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Continue", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"\[Theta]varstmp", "=", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{"\[Theta]vars", ",", 
           RowBox[{"{", "\[Theta]cand", "}"}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"ansatztmp", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"ansatz", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ContainsAny", "[", 
               RowBox[{
                RowBox[{"Level", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"-", "1"}]}], "]"}], ",", 
                RowBox[{"{", "\[Theta]cand", "}"}]}], "]"}], "&"}], ")"}]}]}],
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
         RowBox[{
          RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", 
          "\[Theta]varstmp", ",", "\[Psi]\[Theta]k"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Etmp", ",", "gradstep"}], "}"}], "=", 
         RowBox[{"UpdateCost", "[", 
          RowBox[{"conf", ",", 
           RowBox[{"TotalCirc", "[", "ansatztmp", "]"}], ",", 
           "\[Theta]varstmp", ",", "\[Psi]", ",", "\[Psi]work", ",", 
           "\[Psi]\[Theta]k"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"conf", "[", "\"\<maxgreediter\>\"", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Eold", ",", "ansatzold", ",", "\[Theta]varsold"}], 
             "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"Etmp", ",", "ansatztmp", ",", "\[Theta]varstmp"}], 
             "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Etmp", ",", "gradstep"}], "}"}], "=", 
            RowBox[{"UpdateCost", "[", 
             RowBox[{"conf", ",", 
              RowBox[{"TotalCirc", "[", "ansatztmp", "]"}], ",", 
              "\[Theta]varstmp", ",", "\[Psi]", ",", "\[Psi]work", ",", 
              "\[Psi]\[Theta]k"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fev", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Etmp", "\[LessEqual]", "Einit"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"converge", "+=", "1"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"converge", ">", "5"}], ",", 
                RowBox[{"Break", "[", "]"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Eold", "<", "Etmp"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"energy", " ", "is", " ", "increasing"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Etmp", ",", "ansatztmp", ",", "\[Theta]varstmp"}], 
                "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"Eold", ",", "ansatzold", ",", "\[Theta]varsold"}], 
                "}"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], " ", 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Etmp", "\[LessEqual]", " ", "maxcost"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"works", " ", "out"}], ",", " ", 
            RowBox[{"apply", " ", "changes"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ansatz", ",", "Ecur", ",", "\[Theta]vars"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"ansatztmp", ",", "Etmp", ",", "\[Theta]varstmp"}], 
             "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"del\[Theta]", ",", "\[Theta]cand"}], "]"}]}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fail", "+=", "1"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"fail", "\[GreaterEqual]", "maxfail"}], ")"}], " ", "&&",
               " ", 
              RowBox[{"\[Not]", "fullbf"}]}], " ", ",", "\[IndentingNewLine]", 
             RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
      RowBox[{
       RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", "\[Theta]vars", ",",
        "\[Psi]\[Theta]k"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Length", "@", "del\[Theta]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.818873855255032*^9, 3.818874109953802*^9}, {
   3.818956030099131*^9, 3.818956087572915*^9}, {3.818956232793655*^9, 
   3.818956242352602*^9}, {3.818956309665516*^9, 3.818956310967348*^9}, {
   3.819722749505988*^9, 3.819722764173705*^9}, {3.8198098147852*^9, 
   3.8198098299709883`*^9}, {3.820009974335231*^9, 3.820009979646825*^9}, {
   3.8206071855756903`*^9, 3.8206072170459623`*^9}, {3.820607381312777*^9, 
   3.820607381574059*^9}, {3.820610350964765*^9, 3.820610351953207*^9}, {
   3.821308685943389*^9, 3.821308722095748*^9}, {3.821308886249062*^9, 
   3.8213089756168003`*^9}, {3.821309022190922*^9, 3.8213090568774233`*^9}, {
   3.821310298147174*^9, 3.821310298680398*^9}, {3.821310992841588*^9, 
   3.8213110049479027`*^9}, 3.821311731618533*^9, {3.8213117676465282`*^9, 
   3.8213118712754507`*^9}, {3.821468632759301*^9, 3.821468699110268*^9}, {
   3.8214690257233458`*^9, 3.82146902935087*^9}, {3.8214690757448053`*^9, 
   3.821469078575101*^9}, {3.82147118274763*^9, 3.821471203195614*^9}, {
   3.8214713172734537`*^9, 3.821471324773548*^9}, {3.8224957963992987`*^9, 
   3.8224958179011307`*^9}, {3.822590833906672*^9, 3.822590852461075*^9}, {
   3.822590954415786*^9, 3.822590954952507*^9}, {3.822591062252946*^9, 
   3.822591119779368*^9}, {3.8225912275007*^9, 3.8225912292622957`*^9}, 
   3.822591515616613*^9, {3.8225918213372602`*^9, 3.822591854753639*^9}, {
   3.822766885992096*^9, 3.822766887732272*^9}, 3.822770067883275*^9, 
   3.822770100526033*^9, {3.822772486529903*^9, 3.8227724956979094`*^9}, {
   3.822775813328052*^9, 3.822775832215436*^9}, 3.8227758818297777`*^9, {
   3.822776091537428*^9, 3.822776093152973*^9}, 3.8227798271096907`*^9, {
   3.82360060615659*^9, 3.823600653160192*^9}, {3.823600711517661*^9, 
   3.823600769260391*^9}, {3.823600805358383*^9, 3.823600817397183*^9}, {
   3.823607020475545*^9, 3.823607021166464*^9}, {3.823608945890375*^9, 
   3.82360894897884*^9}, {3.823610404846787*^9, 3.823610415912855*^9}, {
   3.823611495251521*^9, 3.823611505597125*^9}, {3.823611646322658*^9, 
   3.82361165491634*^9}, {3.823611727439192*^9, 3.823611728646472*^9}, 
   3.8236118598266783`*^9, {3.82361336351303*^9, 3.823613378872157*^9}, {
   3.823613481466988*^9, 3.823613485409556*^9}, {3.823617040626225*^9, 
   3.823617042019286*^9}, {3.8236212491020184`*^9, 3.8236212689249983`*^9}, {
   3.823627155346277*^9, 3.823627156100202*^9}, {3.8236280665243692`*^9, 
   3.8236282616051693`*^9}, {3.823629088703967*^9, 3.823629119243306*^9}, {
   3.8236292608649483`*^9, 3.82362928180029*^9}, {3.823629365338933*^9, 
   3.823629375570187*^9}, {3.823629483539925*^9, 3.823629518290625*^9}, {
   3.823629579723535*^9, 3.8236295812428303`*^9}, {3.82362996787331*^9, 
   3.823629969766327*^9}, {3.823631474831423*^9, 3.823631478238799*^9}, {
   3.823631680270007*^9, 3.823631688151613*^9}, {3.823632268279265*^9, 
   3.823632341698794*^9}, {3.823632743374199*^9, 3.8236327482576857`*^9}, {
   3.8236328849618597`*^9, 3.823632896753915*^9}, {3.8236330143507557`*^9, 
   3.823633057495964*^9}, {3.823633270979965*^9, 3.823633285792139*^9}, {
   3.823633343512781*^9, 3.823633345288516*^9}, 3.823633470197496*^9, {
   3.823633645421156*^9, 3.823633645865752*^9}, {3.823633940366403*^9, 
   3.823633945178944*^9}, 3.823634003062375*^9, {3.82363409391789*^9, 
   3.823634125779737*^9}, {3.8236342195483627`*^9, 3.823634292788316*^9}, {
   3.8236343364058037`*^9, 3.823634346786643*^9}, 3.82363450296206*^9, {
   3.82368665155647*^9, 3.82368665262477*^9}, {3.8236883682068787`*^9, 
   3.823688368500532*^9}, {3.8236897884443903`*^9, 3.823689812597711*^9}, {
   3.8236898622238493`*^9, 3.8236899965614634`*^9}, {3.823690291457019*^9, 
   3.82369029371835*^9}, {3.823690350245283*^9, 3.823690396836857*^9}, 
   3.823690558794621*^9, {3.823690654771811*^9, 3.823690655717033*^9}, {
   3.823694535784425*^9, 3.823694556669009*^9}, {3.823694616162448*^9, 
   3.823694616804895*^9}, {3.823694932279778*^9, 3.8236949518575153`*^9}, {
   3.823695553543325*^9, 3.8236955575534163`*^9}, {3.8236956339797773`*^9, 
   3.8236956342807693`*^9}, {3.823695735456471*^9, 3.8236957564113293`*^9}, {
   3.823696004738207*^9, 3.823696023352417*^9}, {3.8236961097895327`*^9, 
   3.82369611002678*^9}, {3.823696319561955*^9, 3.823696335731265*^9}, {
   3.8236963983075523`*^9, 3.8236964197618303`*^9}, {3.823696574309964*^9, 
   3.8236966103845873`*^9}, {3.823696696966457*^9, 3.823696714758093*^9}, {
   3.823696828049471*^9, 3.823696844193653*^9}, {3.823696916061658*^9, 
   3.823696919218289*^9}, {3.8236970832960253`*^9, 3.823697087713183*^9}, {
   3.82369718931507*^9, 3.8236972256028748`*^9}, {3.823697719306642*^9, 
   3.823697761336648*^9}, 3.8236981424819517`*^9, {3.823698757323741*^9, 
   3.823698759669546*^9}, {3.8236989712499733`*^9, 3.823698994217457*^9}, {
   3.823699423180088*^9, 3.823699447938558*^9}, {3.823699661900209*^9, 
   3.823699665735373*^9}, {3.823699804365018*^9, 3.823699865269108*^9}, {
   3.823703296727531*^9, 3.823703310719843*^9}, {3.823722266084755*^9, 
   3.8237222845427637`*^9}, {3.823722472087607*^9, 3.823722485370783*^9}, {
   3.8237682533715153`*^9, 3.8237683975758133`*^9}, {3.823872345008663*^9, 
   3.8238724186419497`*^9}, {3.8238724515982447`*^9, 3.82387248047033*^9}, {
   3.823872602954564*^9, 3.823872609957696*^9}, {3.823940484543015*^9, 
   3.823940503198367*^9}, {3.823940635533434*^9, 3.823940655922084*^9}, {
   3.8239407031568403`*^9, 3.82394077609368*^9}, {3.823941004880281*^9, 
   3.823941065082859*^9}, {3.823941277794383*^9, 3.823941300253818*^9}, {
   3.823941437838209*^9, 3.82394147126481*^9}, {3.823941525544861*^9, 
   3.8239416057313433`*^9}, {3.823941837773363*^9, 3.823941846812525*^9}, {
   3.823942107127816*^9, 3.823942154556027*^9}, {3.823942385643715*^9, 
   3.8239424392058983`*^9}, {3.8239424951207123`*^9, 3.823942516012985*^9}, {
   3.8239425502384577`*^9, 3.8239425807315617`*^9}, {3.8239427599399014`*^9, 
   3.823942889481806*^9}, {3.8239433360466413`*^9, 3.823943349084284*^9}, {
   3.8239435719201593`*^9, 3.823943575072782*^9}, {3.823943758653471*^9, 
   3.823943759432969*^9}, {3.823944033374577*^9, 3.8239440338173847`*^9}, {
   3.8239444174524317`*^9, 3.823944420655683*^9}, {3.8239445207419786`*^9, 
   3.823944535197578*^9}, {3.8239446848095093`*^9, 3.823944706306438*^9}, {
   3.823944912567836*^9, 3.823944919517774*^9}, {3.823945401095203*^9, 
   3.823945403271422*^9}, {3.823945664130427*^9, 3.823945672812993*^9}, {
   3.8239457447823544`*^9, 3.823945840052346*^9}, {3.823946281943831*^9, 
   3.823946282795823*^9}, {3.823946413787971*^9, 3.823946450596706*^9}, {
   3.823946972602528*^9, 3.8239471466131363`*^9}, {3.823947467767408*^9, 
   3.8239474925338907`*^9}, {3.823947661647028*^9, 3.823947662493882*^9}, {
   3.823947951508203*^9, 3.823947954525481*^9}, {3.823947987304728*^9, 
   3.823947992527081*^9}, {3.823948078807273*^9, 3.8239480831450872`*^9}, {
   3.823948142310906*^9, 3.823948146740965*^9}, 3.823948276757147*^9, {
   3.8239483114896317`*^9, 3.823948317985681*^9}, {3.823948485675153*^9, 
   3.823948491245616*^9}, {3.823948569016613*^9, 3.82394860095048*^9}, {
   3.8239487405622063`*^9, 3.823948825173196*^9}, {3.823948963428047*^9, 
   3.823948970955133*^9}, {3.823949672823942*^9, 3.823949698412364*^9}, {
   3.823949758166374*^9, 3.823949769838129*^9}, {3.823949824237797*^9, 
   3.8239498972987223`*^9}, {3.82395021289742*^9, 3.823950294850006*^9}, {
   3.823950549890459*^9, 3.823950568083723*^9}, {3.823950717011649*^9, 
   3.8239507668740807`*^9}, {3.823950822495401*^9, 3.823950865686021*^9}, {
   3.8239509115418673`*^9, 3.823950945663768*^9}, {3.823951442394627*^9, 
   3.823951442716689*^9}, {3.8239515286728573`*^9, 3.8239515609364367`*^9}, {
   3.823951610555811*^9, 3.8239516300176773`*^9}, {3.823951674700185*^9, 
   3.823951677581197*^9}, {3.823951752814521*^9, 3.8239517753205214`*^9}, {
   3.823951825262383*^9, 3.82395185854256*^9}, {3.823951924435261*^9, 
   3.823951924775259*^9}, {3.823951978310886*^9, 3.8239519791112833`*^9}, {
   3.82395201106339*^9, 3.823952025299223*^9}, {3.823952181042832*^9, 
   3.8239522219362297`*^9}, 3.823952989749249*^9, 3.823953051064802*^9, {
   3.823953082477406*^9, 3.823953085482381*^9}, 3.8239531601607513`*^9, {
   3.8241976506664953`*^9, 3.824197657399856*^9}, {3.824209870099125*^9, 
   3.824209883945196*^9}, {3.824209915236794*^9, 3.824209948776367*^9}, {
   3.824209991267199*^9, 3.8242100258178387`*^9}, {3.824212164777116*^9, 
   3.824212202944515*^9}, {3.824220331752522*^9, 3.824220365673822*^9}, {
   3.8242204005820704`*^9, 3.82422046836042*^9}, {3.824294236643528*^9, 
   3.824294247861829*^9}, {3.824299155502481*^9, 3.824299160295725*^9}, {
   3.82430653705016*^9, 3.8243067235036583`*^9}, {3.8243097239406853`*^9, 
   3.824309806297893*^9}, 3.8243112891507587`*^9, {3.824318843120521*^9, 
   3.824318887398119*^9}, {3.824318923692133*^9, 3.824319015450757*^9}, {
   3.824319046128158*^9, 3.8243190512423897`*^9}, {3.824321060793516*^9, 
   3.824321097656966*^9}, {3.824321229400552*^9, 3.824321240627344*^9}, {
   3.82432135474119*^9, 3.824321355179895*^9}, {3.8243215786652937`*^9, 
   3.8243216091726627`*^9}, {3.824321660945291*^9, 3.824321685707899*^9}, {
   3.824322362118515*^9, 3.824322377594945*^9}, {3.824539373444551*^9, 
   3.824539387588983*^9}, {3.8245394203625193`*^9, 3.824539435824663*^9}, {
   3.824539773646077*^9, 3.824539821894484*^9}, {3.824541006392351*^9, 
   3.824541044793991*^9}, {3.824541910156546*^9, 3.824541918084787*^9}, {
   3.82454207510058*^9, 3.824542082201923*^9}, {3.824542457049595*^9, 
   3.824542470899317*^9}, {3.824542729228791*^9, 3.824542841789768*^9}, {
   3.824543208306665*^9, 3.824543248946312*^9}, {3.82454328007117*^9, 
   3.824543280729487*^9}, {3.824543542445122*^9, 3.8245435474263763`*^9}, {
   3.824543612700886*^9, 3.8245436252599792`*^9}, {3.82454388033643*^9, 
   3.824543880761352*^9}, {3.824543959963067*^9, 3.8245440236987467`*^9}, {
   3.82454837858652*^9, 3.824548394728629*^9}, {3.824549981715664*^9, 
   3.82454999373595*^9}, {3.824550030963603*^9, 3.824550035993519*^9}, {
   3.8245502760217943`*^9, 3.82455031359163*^9}, {3.824852692530924*^9, 
   3.8248526963046913`*^9}, {3.824882835344887*^9, 3.824882885143928*^9}, {
   3.8255169024040327`*^9, 3.825516911763253*^9}, {3.825516975849502*^9, 
   3.825516978658951*^9}, {3.825517088370191*^9, 3.825517128791875*^9}, {
   3.825517250209673*^9, 3.82551730484807*^9}, {3.8255173724470663`*^9, 
   3.825517373690166*^9}, {3.825517407769643*^9, 3.82551741283834*^9}, {
   3.825517443420141*^9, 3.825517471496986*^9}, {3.825783406042478*^9, 
   3.825783450627048*^9}, {3.825785174712576*^9, 3.82578518666142*^9}, {
   3.825785657597742*^9, 3.825785657750877*^9}, {3.8257882505147457`*^9, 
   3.8257882776716747`*^9}, {3.826724330245575*^9, 3.826724361538409*^9}, {
   3.82672440521992*^9, 3.826724426212617*^9}, {3.8267244656827*^9, 
   3.826724477264516*^9}, {3.8267245161722393`*^9, 3.826724522861226*^9}, {
   3.826725121642517*^9, 3.826725125677885*^9}, {3.826725271795576*^9, 
   3.826725349724935*^9}, {3.826725390557951*^9, 3.826725390957159*^9}, {
   3.826725561273143*^9, 3.826725624152841*^9}, {3.826725660061062*^9, 
   3.826725663548873*^9}, {3.8267257464491568`*^9, 3.826725748360794*^9}, {
   3.826725871960617*^9, 3.826725880709556*^9}, {3.841281958867955*^9, 
   3.8412819622236767`*^9}, {3.841284818663012*^9, 3.841284830460157*^9}, {
   3.8412849000841217`*^9, 3.841284917407632*^9}, {3.848657725450385*^9, 
   3.848657730106289*^9}, {3.849499182594489*^9, 3.84949919329457*^9}, {
   3.850103617149579*^9, 3.850103631491419*^9}, {3.8511483769911633`*^9, 
   3.8511484052300158`*^9}, {3.851153065510776*^9, 3.851153068467205*^9}, {
   3.8659429199073353`*^9, 3.865942920246881*^9}, {3.866037679150127*^9, 
   3.866037700909238*^9}, {3.866037738437375*^9, 3.866037762409741*^9}, {
   3.866038871900522*^9, 3.866038875588852*^9}, {3.8660397036034946`*^9, 
   3.8660397067443123`*^9}, 3.86603977920792*^9, 3.866046633221406*^9, {
   3.8660484171316137`*^9, 3.8660484233578*^9}, {3.866051722558062*^9, 
   3.8660517757928467`*^9}, 3.866051836015786*^9, {3.867923923813518*^9, 
   3.867923931077948*^9}},ExpressionUUID->"91a75a03-08f1-4019-b332-\
57233552b753"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DeleteGatesByMetric", "::", "usage"}], "=", 
   "\"\<DeleteGatesByMetric[conf,fev,Ecur,gradstep,ansatz,\[Theta]vars,\
TotalCirc,\[Psi]init,\[Psi]initu,\[Psi],\[Psi]work,\[Psi]\[Theta]k,maxcost]\n\
delete gates by similarity of rows in metric \!\(\*SubscriptBox[\(A\), \
\(kl\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"DeleteGatesByMetric", ",", "HoldAll"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeleteGatesByMetric", "[", 
   RowBox[{
   "conf_", ",", "fev_", ",", "Ecur_", ",", "gradstep_", ",", "ansatz_", ",", 
    "\[Theta]vars_", ",", "TotalCirc_", ",", "\[Psi]_", ",", "\[Psi]work_", 
    ",", "\[Psi]\[Theta]k_", ",", "maxcost_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"didx", "=", 
       RowBox[{"{", "}"}]}], ",", "Akls", ",", "\[Theta]del", ",", 
      "elim\[Theta]", ",", "gphase", ",", 
      RowBox[{"ndeleted", "=", "0"}], ",", "j", ",", "\[Theta]varskeys", ",", 
      "Eold", ",", "\[Theta]varsold", ",", "dE", ",", 
      RowBox[{"econverge", "=", "0"}], ",", 
      RowBox[{"Etmp", "=", "Ecur"}], ",", 
      RowBox[{"\[Theta]varstmp", "=", "\[Theta]vars"}], ",", 
      RowBox[{"ansatztmp", "=", "ansatz"}], ",", 
      RowBox[{"simidx", "=", 
       RowBox[{"{", "}"}]}], ",", "sim\[Theta]", ",", "nt"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
      RowBox[{
       RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", "\[Theta]vars", ",",
        "\[Psi]\[Theta]k"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nt", "=", 
      RowBox[{"Length", "@", 
       RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"number", " ", "of", " ", "training"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Akls", "=", 
      RowBox[{"<|", 
       RowBox[{"Table", "[", " ", 
        RowBox[{"(*", 
         RowBox[{"gather", " ", "all", " ", "Akl"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"InitStateFromAmps", "[", 
           RowBox[{"\[Psi]", ",", 
            RowBox[{"Re", "@", 
             RowBox[{
              RowBox[{"conf", "[", "\"\<initstates\>\"", "]"}], "[", "t", 
              "]"}]}], ",", 
            RowBox[{"Im", "@", 
             RowBox[{
              RowBox[{"conf", "[", "\"\<initstates\>\"", "]"}], "[", "t", 
              "]"}]}]}], "]"}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"U", 
            TemplateBox[{"\[Psi]"},
             "Ket"]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"CalcQuregDerivs", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"ansatz", ",", 
              RowBox[{
               RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}], "[", "t", 
               "]"}]}], "]"}], ",", "\[Psi]", ",", 
            RowBox[{"Normal", "[", "\[Theta]vars", "]"}], ",", 
            "\[Psi]\[Theta]k"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"t", "->", 
           RowBox[{"Re", "@", 
            RowBox[{"CalcInnerProducts", "[", "\[Psi]\[Theta]k", "]"}]}]}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "nt"}], "}"}]}], "]"}], "|>"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"indices", " ", "of", " ", "redundant", " ", "rows"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "<", "i"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"And", "@@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{
                 RowBox[{"Akls", "[", "t", "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "<=", 
               RowBox[{"conf", "[", "\"\<metignore\>\"", "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "nt"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"too", " ", "flat"}], " ", "*)"}], "\[IndentingNewLine]", 
           
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"didx", ",", "i"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Break", "[", "]"}]}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "find", " ", "other", " ", "similar", " ", "ones", " ", "by", " ",
              "projecting"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Catch", "[", "\[IndentingNewLine]", 
              RowBox[{"And", "@@", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Quiet", "[", 
                   RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"VectorAngle", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Akls", "[", "t", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Akls", "[", "t", "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", "0", ",", 
                    RowBox[{"ArcTan", "::", "indet"}]}], "]"}], "]"}], 
                  "\[LessEqual]", 
                  RowBox[{"conf", "[", "\"\<metignore\>\"", "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "nt"}], "}"}]}], "]"}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"didx", ",", "i"}], "]"}], ";", "\[IndentingNewLine]", 
              
              RowBox[{"AppendTo", "[", 
               RowBox[{"simidx", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"found", " ", "the", " ", "similar", " ", "one"}], " ",
                "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}],
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "\[Theta]vars"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]varskeys", "=", 
      RowBox[{"Keys", "@", "\[Theta]vars"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"elim\[Theta]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
        "\[Theta]varskeys", "\[LeftDoubleBracket]", "j", 
         "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "didx"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sim\[Theta]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]varskeys", "\[LeftDoubleBracket]", 
           RowBox[{
           "j", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{"\[Theta]varskeys", "\[LeftDoubleBracket]", 
           RowBox[{
           "j", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[RightDoubleBracket]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "simidx"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "elim\[Theta]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"update", " ", "assoc", " ", "\[Theta]vars"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]varstmp", "=", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{"\[Theta]vars", ",", "elim\[Theta]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ansatztmp", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"ansatz", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ContainsAny", "[", 
               RowBox[{
                RowBox[{"Level", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"-", "1"}]}], "]"}], ",", "elim\[Theta]"}], "]"}], 
              "&"}], ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
         RowBox[{
          RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", 
          "\[Theta]varstmp", ",", "\[Psi]\[Theta]k"}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Relax", " ", "the", " ", "result"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"conf", "[", "\"\<maxgreediter\>\"", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Eold", ",", "\[Theta]varsold"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"Etmp", ",", "\[Theta]varstmp"}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Etmp", ",", "gradstep"}], "}"}], "=", 
            RowBox[{"UpdateCost", "[", 
             RowBox[{"conf", ",", 
              RowBox[{"TotalCirc", "[", "ansatztmp", "]"}], ",", 
              "\[Theta]varstmp", ",", "\[Psi]", ",", "\[Psi]work", ",", 
              "\[Psi]\[Theta]k"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fev", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Etmp", "\[LessEqual]", "Ecur"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"econverge", "+=", "1"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"econverge", ">", 
                 RowBox[{"conf", "[", "\"\<iterconverge\>\"", "]"}]}], ",", 
                RowBox[{"Break", "[", "]"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"j", ">", "1"}], " ", "&&", " ", 
              RowBox[{"Eold", "<", "Etmp"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"energy", " ", "is", " ", "increasing"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Etmp", ",", "\[Theta]varstmp"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"Eold", ",", "\[Theta]varsold"}], "}"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], " ", 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"end", " ", "of", " ", "relaxation"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Etmp", "\[LessEqual]", "maxcost"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ndeleted", "+=", 
            RowBox[{"Length", "@", "elim\[Theta]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Ecur", ",", "ansatz", ",", "\[Theta]vars"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"Etmp", ",", "ansatztmp", ",", "\[Theta]varstmp"}], 
             "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
         RowBox[{
          RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", "\[Theta]vars", 
          ",", "\[Psi]\[Theta]k"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "ndeleted"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.814625401717328*^9, 3.814625446891323*^9}, 
   3.8146256876669693`*^9, {3.81462582137939*^9, 3.814625854163455*^9}, {
   3.814625984705573*^9, 3.814625996423587*^9}, {3.814626082531973*^9, 
   3.814626152977729*^9}, {3.814626235507041*^9, 3.8146262663431673`*^9}, {
   3.814626299601633*^9, 3.814626325626844*^9}, {3.814626400094364*^9, 
   3.814626504525085*^9}, {3.814626567643441*^9, 3.814626569428136*^9}, {
   3.8146267695657263`*^9, 3.8146267867722883`*^9}, {3.814626909513071*^9, 
   3.8146269111800547`*^9}, {3.8146269432003803`*^9, 3.814627031807969*^9}, {
   3.8146271133571053`*^9, 3.814627138525979*^9}, {3.814627191421818*^9, 
   3.814627199488515*^9}, {3.816418183448379*^9, 3.816418203941787*^9}, {
   3.8166020396348963`*^9, 3.8166020448634653`*^9}, {3.8166021004805517`*^9, 
   3.8166021063290653`*^9}, 3.817240247292697*^9, 3.817242602536433*^9, {
   3.818156945630951*^9, 3.818156963859968*^9}, {3.8181569976143293`*^9, 
   3.818157047923284*^9}, {3.818157085122682*^9, 3.818157119534636*^9}, {
   3.818157155141369*^9, 3.818157170439097*^9}, {3.8181572034173594`*^9, 
   3.8181572091689243`*^9}, {3.818157252130282*^9, 3.818157253488187*^9}, {
   3.8181574559202023`*^9, 3.818157484358222*^9}, {3.818158067140606*^9, 
   3.81815806739879*^9}, {3.818158563373598*^9, 3.8181585885497007`*^9}, {
   3.818158622963929*^9, 3.818158649769579*^9}, {3.818158877489049*^9, 
   3.8181588818052387`*^9}, {3.81815907168884*^9, 3.81815907414386*^9}, {
   3.8181591579206257`*^9, 3.8181591814223137`*^9}, {3.8181599071859694`*^9, 
   3.818159944685104*^9}, {3.818161045236074*^9, 3.818161072395187*^9}, 
   3.818162052558401*^9, {3.8206109907180233`*^9, 3.8206110109465103`*^9}, {
   3.820611082156858*^9, 3.820611126257339*^9}, {3.820611156422447*^9, 
   3.8206112372863894`*^9}, 3.820860941681532*^9, {3.821312236924632*^9, 
   3.82131223857237*^9}, {3.8213122688343277`*^9, 3.821312546310802*^9}, {
   3.821312833954472*^9, 3.821312834301046*^9}, {3.8213129411614923`*^9, 
   3.8213129498580236`*^9}, {3.821313064316935*^9, 3.821313120810412*^9}, 
   3.821313237979547*^9, {3.8213132916814613`*^9, 3.8213133115240717`*^9}, {
   3.8213133539230757`*^9, 3.8213134017117558`*^9}, {3.821313450973591*^9, 
   3.821313478847687*^9}, 3.821313839374649*^9, {3.821313901888309*^9, 
   3.821313908780403*^9}, {3.821348051270648*^9, 3.8213481030555363`*^9}, {
   3.821348540124776*^9, 3.82134854168216*^9}, {3.8213493746145372`*^9, 
   3.821349435708458*^9}, {3.82134958021994*^9, 3.821349597383424*^9}, {
   3.821388565827778*^9, 3.8213885996785088`*^9}, {3.821468714854248*^9, 
   3.821468720793191*^9}, {3.821469104638229*^9, 3.821469105825389*^9}, {
   3.8214691374179783`*^9, 3.8214691559763937`*^9}, {3.821469293210689*^9, 
   3.82146931680345*^9}, {3.82147120841574*^9, 3.821471227971657*^9}, {
   3.822495824430335*^9, 3.822495853339047*^9}, {3.822501738419286*^9, 
   3.822501739212965*^9}, {3.822766909258829*^9, 3.822766912120673*^9}, 
   3.822770115355764*^9, {3.822778827870205*^9, 3.822778832567041*^9}, 
   3.822779296886806*^9, {3.8227798132615633`*^9, 3.8227798200974607`*^9}, {
   3.822779891995303*^9, 3.822779892838263*^9}, {3.822809288069591*^9, 
   3.822809301004508*^9}, {3.82302548775063*^9, 3.823025495879426*^9}, {
   3.823239414280648*^9, 3.823239438490094*^9}, {3.8236891299052677`*^9, 
   3.823689211674184*^9}, {3.823689241912602*^9, 3.823689362518811*^9}, {
   3.823689515205307*^9, 3.823689518129836*^9}, {3.8236956451064587`*^9, 
   3.823695645529294*^9}, {3.823722757916781*^9, 3.8237227605923223`*^9}, {
   3.8237556656655083`*^9, 3.823755668141013*^9}, {3.8237684335582438`*^9, 
   3.823768437866798*^9}, {3.823769799746559*^9, 3.823769806412963*^9}, {
   3.824299205721349*^9, 3.824299212699555*^9}, {3.8250159581353073`*^9, 
   3.82501596621891*^9}, {3.825016086603675*^9, 3.825016179222293*^9}, {
   3.825016242569632*^9, 3.825016243784006*^9}, 3.825016289385313*^9, {
   3.825016438479776*^9, 3.825016460227023*^9}, {3.8257852137931013`*^9, 
   3.825785300488895*^9}, {3.825785652800502*^9, 3.825785653907363*^9}, {
   3.82578829203911*^9, 3.825788327473733*^9}, {3.8262732416172237`*^9, 
   3.826273271559205*^9}, {3.8262735159743958`*^9, 3.826273618940392*^9}, {
   3.826273657743318*^9, 3.826273667889223*^9}, {3.826273758345233*^9, 
   3.8262737599528313`*^9}, {3.826274066757605*^9, 3.826274071006632*^9}, {
   3.826274161400309*^9, 3.8262741753335867`*^9}, {3.826274415954707*^9, 
   3.826274419662492*^9}, {3.826721617355906*^9, 3.8267216513864403`*^9}, {
   3.8267217532010717`*^9, 3.8267217738128433`*^9}, {3.826721947810789*^9, 
   3.826721966283895*^9}, {3.8267220336429663`*^9, 3.826722035899356*^9}, 
   3.8267223461706142`*^9, {3.826724898218008*^9, 3.826724903197337*^9}, {
   3.826724964746746*^9, 3.826724965410581*^9}, {3.841284796741027*^9, 
   3.841284797326232*^9}, {3.850103648849778*^9, 3.850103650763192*^9}, {
   3.851148530324353*^9, 3.851148582823988*^9}, {3.8511530892619553`*^9, 
   3.851153090907048*^9}, {3.85115313280647*^9, 3.85115313468816*^9}, 
   3.865943109205772*^9, {3.866038556077689*^9, 3.866038560682707*^9}, {
   3.866038602851006*^9, 3.866038607348257*^9}, {3.866039793606574*^9, 
   3.8660397947855597`*^9}, {3.866051488117375*^9, 3.86605148924722*^9}, {
   3.866051543544112*^9, 3.866051545783359*^9}, {3.866051579750461*^9, 
   3.866051604155951*^9}, 3.8660517841891317`*^9, {3.866051932055224*^9, 
   3.866051944666999*^9}, {3.866052890984318*^9, 3.8660529692550507`*^9}, {
   3.866053033714665*^9, 3.8660530582340803`*^9}, {3.8660531597500963`*^9, 
   3.866053296295891*^9}, 3.866053395697854*^9, {3.866053439819418*^9, 
   3.866053467700263*^9}, 3.866053520162305*^9, {3.86605461838667*^9, 
   3.866054660391816*^9}, {3.867923936239787*^9, 
   3.867923949378376*^9}},ExpressionUUID->"25d983f7-49ab-4544-aa72-\
5be9073007aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DeleteGateBF", "::", "usage"}], "=", 
   "\"\<DeleteGateBF[conf,fev,Ecur,ansatz,\[Theta]vars,TotalCirc,\[Psi],\[Psi]\
work,\[Psi]\[Theta]k,maxcost]. \nBrute force deletion, layer by layer. The \
first layer sometimes are useless since most of the time states are started \
from zeros.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"DeleteGateBF", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeleteGateBF", "[", 
   RowBox[{
   "conf_", ",", "fev_", ",", "Ecur_", ",", "gradstep_", ",", "ansatz_", ",", 
    "\[Theta]vars_", ",", "TotalCirc_", ",", "\[Psi]_", ",", "\[Psi]work_", 
    ",", "\[Psi]\[Theta]k_", ",", "maxcost_", ",", 
    RowBox[{"full_", ":", "True"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"idxdel", ",", "oldidxdel", ",", 
      RowBox[{"deleted", "=", "0"}], ",", 
      RowBox[{"deltot", "=", "0"}], ",", "\[Theta]del", ",", "ansatzcol", ",",
       "idxcol", ",", "idx", ",", 
      RowBox[{"\[Theta]varstmp", "=", "\[Theta]vars"}], ",", 
      RowBox[{"ansatztmp", "=", "ansatz"}], ",", "j", ",", "Eold", ",", 
      "\[Theta]varsold", ",", 
      RowBox[{"Etmp", "=", "Ecur"}], ",", "converge", ",", 
      RowBox[{"Einit", "=", "Ecur"}], ",", 
      RowBox[{"maxlayer", "=", "0"}], ",", "old\[Theta]vars", ",", "oldE"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "ansatz"}], ">", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"re", "-", 
         RowBox[{"arrange", " ", "the", " ", "ansatz"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ansatzcol", "=", 
         RowBox[{"GetCircuitColumns", "[", "ansatz", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ansatz", "=", 
         RowBox[{"Flatten", "@", "ansatzcol"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"idx", "=", "0"}], ";", 
        RowBox[{"deleted", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"idxcol", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"++", "idx"}], ",", 
             RowBox[{"{", 
              RowBox[{"Length", "@", "col"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"col", ",", "ansatzcol"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"TODO", ":", " ", 
           RowBox[{
           "keep", " ", "the", " ", "parameterized", " ", "swaps", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Not]", "full"}], " ", "&&", " ", 
               RowBox[{"MatchQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cases", "[", 
                   RowBox[{"ansatz", ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ContainsAny", "[", 
                    RowBox[{
                    RowBox[{"Level", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"{", "\[Theta]cand", "}"}]}], "]"}], "&"}], 
                    ")"}]}]}], "]"}], "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  SubscriptBox["SW", "__"], "[", "_", "]"}]}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Continue", "[", "]"}]}], "]"}]}]}], ";"}], 
         "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "try", " ", "to", " ", "delete", " ", "the", " ", "first", " ", 
            "layer"}], ";", " ", 
           RowBox[{"track", " ", "ansatz"}]}], ",", " ", "\[Theta]vars", ",", 
          " ", 
          RowBox[{"E", " ", "for", " ", "a", " ", "layer"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"idxdel", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "record", " ", "before", " ", "removing", " ", "gate", " ", "q"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"oldidxdel", "=", "idxdel"}], ";", 
           RowBox[{"old\[Theta]vars", "=", "\[Theta]varstmp"}], ";", 
           RowBox[{"oldE", "=", "Etmp"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", "update", " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"idxdel", ",", 
             RowBox[{"{", "q", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"ansatztmp", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"ansatz", ",", "idxdel"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Theta]del", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"Level", "[", 
               RowBox[{
                RowBox[{
                "ansatz", "\[LeftDoubleBracket]", "q", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", 
              SubscriptBox["\[Theta]", "_"]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Theta]varstmp", "=", 
            RowBox[{"KeyDrop", "[", 
             RowBox[{"\[Theta]varstmp", ",", "\[Theta]del"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"update", " ", "ansatztmp"}], ",", "\[Theta]varstmp", 
             ",", 
             RowBox[{
             "Etmp", " ", "with", " ", "a", " ", "missing", " ", "gate"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
            RowBox[{
             RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", 
             "\[Theta]varstmp", ",", "\[Psi]\[Theta]k"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Etmp", "=", 
            RowBox[{"CostFunction", "[", 
             RowBox[{"\[Psi]", ",", "\[Psi]work", ",", 
              RowBox[{"TotalCirc", "[", 
               RowBox[{"ansatztmp", "/.", "\[Theta]varstmp"}], "]"}], ",", 
              "conf"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"converge", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", "1"}], ",", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"conf", "[", "\"\<maxbfiter\>\"", "]"}]}], ",", 
             RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Eold", ",", "\[Theta]varsold"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"Etmp", ",", "\[Theta]varstmp"}], "}"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Etmp", ",", "gradstep"}], "}"}], "=", 
               RowBox[{"UpdateCost", "[", 
                RowBox[{"conf", ",", 
                 RowBox[{"TotalCirc", "[", "ansatztmp", "]"}], ",", 
                 "\[Theta]varstmp", ",", "\[Psi]", ",", "\[Psi]work", ",", 
                 "\[Psi]\[Theta]k"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"fev", "++"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"Etmp", "\[LessEqual]", "Einit"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"converge", "+=", "1"}], ";", "\[IndentingNewLine]", 
                 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"converge", ">", "2"}], ",", 
                   RowBox[{"Break", "[", "]"}]}], "]"}]}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"Eold", "<", "Etmp"}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"energy", " ", "is", " ", "increasing"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Etmp", ",", "\[Theta]varstmp"}], "}"}], "=", 
                  RowBox[{"{", 
                   RowBox[{"Eold", ",", "\[Theta]varsold"}], "}"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], " ", 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"\[Theta]varstmp", ",", 
             RowBox[{
             "Etmp", " ", "at", " ", "their", " ", "best", " ", "without", 
              " ", "gate", " ", "q"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"delete", "/", "keep"}], " ", "gate", " ", "q"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Etmp", "\[LessEqual]", "maxcost"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"deleted", "++"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", "reject", " ", "*)"}], "\[IndentingNewLine]", 
             
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Etmp", ",", "\[Theta]varstmp", ",", "idxdel"}], "}"}],
               "=", 
              RowBox[{"{", 
               RowBox[{"oldE", ",", "old\[Theta]vars", ",", "oldidxdel"}], 
               "}"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", 
            RowBox[{"idxcol", "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "exploring", " ", "the", " ", "first", " ", "layer", " ", "ends", 
            " ", "here"}], ";", " ", "Etmp"}], ",", " ", "\[Theta]varstmp", 
          ",", " ", 
          RowBox[{
          "idxdel", " ", "are", " ", "at", " ", "their", " ", "best"}]}], " ",
          "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"ansatz", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"ansatz", ",", "idxdel"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Theta]vars", "=", "\[Theta]varstmp"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Ecur", "=", "Etmp"}], ";", "\[IndentingNewLine]", 
        RowBox[{"deltot", "+=", "deleted"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"stop", " ", "at", " ", "this", " ", "layer"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"deleted", "===", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"++", "maxlayer"}], ">", "2"}], ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"maxlayer", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
      RowBox[{
       RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", "\[Theta]vars", ",",
        "\[Psi]\[Theta]k"}], "]"}], ";", "\[IndentingNewLine]", "deltot"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.836621817776767*^9, 3.8366219639235573`*^9}, {
   3.8366231537327433`*^9, 3.836623178476821*^9}, {3.836623833397497*^9, 
   3.83662394278389*^9}, {3.836623974893667*^9, 3.836623988705721*^9}, {
   3.836624052989444*^9, 3.8366240542845297`*^9}, {3.836624364942831*^9, 
   3.836624397221542*^9}, {3.836624490398782*^9, 3.836624642762208*^9}, {
   3.836624945604765*^9, 3.836625009779868*^9}, {3.836628976198637*^9, 
   3.83662909593604*^9}, {3.836630237339623*^9, 3.836630291048058*^9}, {
   3.8366309645046062`*^9, 3.836630974881421*^9}, {3.83663401150735*^9, 
   3.836634081808085*^9}, {3.836634138843286*^9, 3.836634173827648*^9}, {
   3.8366342081132917`*^9, 3.836634218148638*^9}, {3.8366342710850563`*^9, 
   3.836634347129417*^9}, {3.8366343800924873`*^9, 3.836634521310721*^9}, {
   3.836634571953568*^9, 3.836634580340584*^9}, {3.836634620435199*^9, 
   3.8366346216855516`*^9}, {3.8366354185805883`*^9, 3.836635426138947*^9}, {
   3.836635479078823*^9, 3.8366354869335012`*^9}, {3.836635543421794*^9, 
   3.836635593036117*^9}, {3.836635839638379*^9, 3.8366359885493927`*^9}, {
   3.836636020201988*^9, 3.8366360636948347`*^9}, {3.836636141147897*^9, 
   3.836636182231297*^9}, {3.836636213204706*^9, 3.836636340443462*^9}, {
   3.836636385891758*^9, 3.836636507367962*^9}, {3.8366365663991528`*^9, 
   3.8366366473866253`*^9}, {3.8366699665255327`*^9, 3.836669966725874*^9}, {
   3.836670961034211*^9, 3.8366710164752693`*^9}, {3.836671144311689*^9, 
   3.836671147426149*^9}, {3.836671572791704*^9, 3.83667157484299*^9}, {
   3.83667262538662*^9, 3.836672634919853*^9}, {3.83667267750366*^9, 
   3.836672696196475*^9}, {3.836672739996728*^9, 3.836672747192834*^9}, {
   3.836672782029915*^9, 3.83667278659543*^9}, {3.836672861601343*^9, 
   3.836672890103736*^9}, {3.8366733907171917`*^9, 3.836673395780321*^9}, {
   3.836674772347981*^9, 3.8366747727474527`*^9}, {3.836674804726362*^9, 
   3.836674808723342*^9}, {3.836675087887486*^9, 3.836675088274767*^9}, 
   3.8366757436143923`*^9, {3.8367316367065687`*^9, 3.836731664727727*^9}, {
   3.836731975070307*^9, 3.836731977038352*^9}, {3.836732010341254*^9, 
   3.836732011408627*^9}, {3.836732042254277*^9, 3.836732058341963*^9}, {
   3.8367322151650953`*^9, 3.836732235241214*^9}, {3.836736368522545*^9, 
   3.836736375184916*^9}, 3.836737389761825*^9, {3.83673743043438*^9, 
   3.83673743081115*^9}, {3.836742472779571*^9, 3.836742485936392*^9}, {
   3.836815915621726*^9, 3.836815919929845*^9}, {3.836815952035784*^9, 
   3.836815956139511*^9}, {3.836816354920033*^9, 3.8368163668379087`*^9}, {
   3.836816606687563*^9, 3.836816607271585*^9}, {3.836816644413088*^9, 
   3.836816691643502*^9}, {3.836816743686158*^9, 3.83681674988587*^9}, {
   3.836817118303303*^9, 3.836817127564746*^9}, {3.836817179253635*^9, 
   3.836817245410141*^9}, {3.836817361553335*^9, 3.836817366707061*^9}, {
   3.836817401006854*^9, 3.83681742371815*^9}, {3.8368174828331823`*^9, 
   3.836817513117016*^9}, {3.836817614464485*^9, 3.8368176219789248`*^9}, 
   3.836845364261538*^9, {3.8368824138446217`*^9, 3.836882420423218*^9}, {
   3.8368824601343203`*^9, 3.836882463048114*^9}, {3.836882627756649*^9, 
   3.836882635603615*^9}, {3.836882724097458*^9, 3.836882813100594*^9}, {
   3.836883020031021*^9, 3.836883069482835*^9}, {3.836887158738893*^9, 
   3.836887243228346*^9}, {3.836887620642557*^9, 3.836887719385228*^9}, {
   3.836887773129815*^9, 3.836887830722065*^9}, {3.836888805482313*^9, 
   3.8368888120776463`*^9}, {3.836888867318452*^9, 3.836888922506467*^9}, {
   3.836888963260622*^9, 3.836888967602556*^9}, {3.836889038073484*^9, 
   3.836889038236683*^9}, {3.836889107295884*^9, 3.836889110433589*^9}, {
   3.836889159183144*^9, 3.836889165559431*^9}, {3.8368892191852083`*^9, 
   3.836889245588292*^9}, {3.836889303597205*^9, 3.836889336609771*^9}, {
   3.836889367619385*^9, 3.8368893761062403`*^9}, {3.836889901476749*^9, 
   3.836889914766522*^9}, {3.836890653996151*^9, 3.836890672687337*^9}, {
   3.8368910559805593`*^9, 3.836891062395076*^9}, {3.836891101224144*^9, 
   3.836891103941915*^9}, {3.836891139123129*^9, 3.836891170685596*^9}, {
   3.836891224554327*^9, 3.8368912277816887`*^9}, {3.836891637502396*^9, 
   3.8368916491584883`*^9}, {3.836891680950432*^9, 3.83689168800758*^9}, {
   3.836891743436018*^9, 3.836891757725992*^9}, {3.83689179241368*^9, 
   3.8368918049580193`*^9}, {3.836891853636239*^9, 3.836891861512124*^9}, {
   3.836891975720533*^9, 3.836891983521742*^9}, {3.83689202371546*^9, 
   3.836892026521031*^9}, {3.8368920676961403`*^9, 3.836892147586886*^9}, {
   3.836892206015462*^9, 3.836892206189681*^9}, {3.836969115076797*^9, 
   3.836969120104246*^9}, 3.8369691609864407`*^9, {3.8369702889767027`*^9, 
   3.836970289530698*^9}, {3.8369705079418583`*^9, 3.836970535854033*^9}, {
   3.841281967760055*^9, 3.84128197169501*^9}, 3.841282463368568*^9, {
   3.841284724879129*^9, 3.841284739680214*^9}, 3.841284806715569*^9, {
   3.841284939222169*^9, 3.84128496321115*^9}, {3.84128505966634*^9, 
   3.841285060023136*^9}, {3.8412869836590014`*^9, 3.841287012510438*^9}, {
   3.841287158102428*^9, 3.8412871593112698`*^9}, {3.851148606825693*^9, 
   3.8511486099390907`*^9}, {3.85114957894767*^9, 3.851149610347604*^9}, {
   3.8511496456754427`*^9, 3.851149647274341*^9}, {3.851150127761352*^9, 
   3.8511501284597588`*^9}, {3.852455606874867*^9, 3.852455630879484*^9}, {
   3.865944062891192*^9, 3.865944065193467*^9}, {3.866037857971841*^9, 
   3.8660378637913857`*^9}, {3.866037943246183*^9, 3.8660379533189983`*^9}, 
   3.866038011603339*^9, {3.8660387685886908`*^9, 3.8660388094697657`*^9}, 
   3.866039890782611*^9, {3.8660399836653643`*^9, 3.866039983934724*^9}, {
   3.866040174378375*^9, 3.8660401825339947`*^9}, 3.866040566366323*^9, {
   3.866041191323228*^9, 3.866041193491194*^9}, {3.866041644472693*^9, 
   3.866041658192206*^9}, {3.86604847302074*^9, 3.866048475237774*^9}, {
   3.866051801782148*^9, 3.866051810632756*^9}, {3.867923954057569*^9, 
   3.86792396061801*^9}},ExpressionUUID->"e5b49b2f-3e63-4721-ba59-\
12cade4c9ba5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Recompilation", "Subsection",
 CellChangeTimes->{{3.841373409070689*^9, 3.841373440169259*^9}, {
  3.865944587108782*^9, 3.865944596401246*^9}, {3.866028900716866*^9, 
  3.86602890305859*^9}},ExpressionUUID->"41bd046f-d56d-456b-a7b5-\
ea19f0998feb"],

Cell[CellGroupData[{

Cell[" helpers to the main function", "Subsubsection",
 CellChangeTimes->{{3.8211291780732937`*^9, 3.821129199186705*^9}, {
   3.821195903481749*^9, 3.821195911170946*^9}, {3.821212480633562*^9, 
   3.8212124813518047`*^9}, 3.821215055886223*^9, {3.821296015066798*^9, 
   3.821296037531743*^9}, {3.82619648719241*^9, 3.826196491027482*^9}, {
   3.841373434975297*^9, 3.8413734517552032`*^9}, {3.866020769791051*^9, 
   3.8660207711202173`*^9}, 3.866028837457861*^9, {3.867919672515607*^9, 
   3.867919677526135*^9}},ExpressionUUID->"1af26ec8-4c38-4db5-bca3-\
f6e12e176a33"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AdjustSpeed", "::", "usage"}], "=", 
  "\"\<AdjustSpeed[conf,defconf,slowdown,ncycle]. Adjust some \
hyperparameters.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"AdjustSpeed", ",", "HoldAll"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AdjustSpeed", "[", 
    RowBox[{"conf_", ",", "defconf_", ",", "slowdown_", ",", "ncycle_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"abort", "=", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"first", ",", " ", 
       RowBox[{"try", " ", "to", " ", 
        RowBox[{"speedup", ":", " ", 
         RowBox[{"more", " ", "gates"}]}]}], ",", " ", 
       RowBox[{"more", " ", "disturbed", " ", "system"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"conf", "[", "\"\<gatespercycle\>\"", "]"}], 
         "\[GreaterEqual]", 
         RowBox[{"4", 
          RowBox[{"defconf", "[", "\"\<gatespercycle\>\"", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"slowdown", "=", " ", "False"}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"(*", 
          RowBox[{"reset", " ", "first", " ", "before", " ", "speedingup"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"conf", "[", 
             RowBox[{"ToString", "[", "key", "]"}], "]"}], "=", 
            RowBox[{"defconf", "[", "key", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"key", ",", 
             RowBox[{"Keys", "@", "conf"}]}], "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"conf", "[", "\"\<gatespercycle\>\"", "]"}], "===", "2"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<I give up lowering the energy \>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"abort", "=", "True"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"slowdown", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "the", " ", "computation", " ", "is", " ", "going", " ", "slower"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"conf", "[", "\"\<gatespercycle\>\"", "]"}], "=", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"conf", "[", "\"\<gatespercycle\>\"", "]"}], "*", 
              "1.2"}], "]"}], ",", 
            RowBox[{"4", " ", 
             RowBox[{"defconf", "[", "\"\<gatespercycle\>\"", "]"}]}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"conf", "[", "\"\<ngatesinit\>\"", "]"}], "=", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"conf", "[", "\"\<ngatesinit\>\"", "]"}], "*", "2"}], 
             "]"}], ",", 
            RowBox[{"4", " ", 
             RowBox[{"defconf", "[", "\"\<ngatesinit\>\"", "]"}]}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"conf", "[", "\"\<\[Alpha]tikhonov\>\"", "]"}], "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"conf", "[", "\"\<\[Alpha]tikhonov\>\"", "]"}], "*", 
             "0.8"}], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "4"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}], "=", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}], "*", "1.2"}], 
            ",", "6"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<I'm slowing down. Number of gates is increased to \>\"", ",", 
           RowBox[{"conf", "[", "\"\<gatespercycle\>\"", "]"}], ",", 
           "\"\< @cycle \>\"", ",", "ncycle"}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "the", " ", "computation", " ", "is", " ", "going", " ", "faster"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"conf", "[", "\"\<gatespercycle\>\"", "]"}], "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"conf", "[", "\"\<gatespercycle\>\"", "]"}], "*", 
              "0.8"}], "]"}], ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"conf", "[", "\"\<ngatesinit\>\"", "]"}], "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"conf", "[", "\"\<ngatesinit\>\"", "]"}], "*", "0.8"}], 
             "]"}], ",", 
            RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"conf", "[", "\"\<\[Alpha]tikhonov\>\"", "]"}], "=", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"conf", "[", "\"\<\[Alpha]tikhonov\>\"", "]"}], "*", 
             "1.2"}], ",", "1.0"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}], "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}], "*", "0.8"}], 
            ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "3"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"conf", "[", "\"\<greediness\>\"", "]"}], "+=", "1"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<I'm speeding up. Number of gates is decreased to \>\"", ",", 
           RowBox[{"conf", "[", "\"\<gatespercycle\>\"", "]"}], ",", 
           "\"\< @cycle \>\"", ",", "ncycle"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "abort"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.83400184389423*^9, 3.834001878965909*^9}, {
  3.834001920594445*^9, 3.83400200130425*^9}, {3.834002049549749*^9, 
  3.834002079359251*^9}, {3.834002303197135*^9, 3.8340023534078903`*^9}, {
  3.834002545518257*^9, 3.834002566751112*^9}, {3.834002601332962*^9, 
  3.834002633633953*^9}, {3.8340027201519747`*^9, 3.8340027310002947`*^9}, {
  3.836332347273509*^9, 3.836332354041654*^9}, {3.836332452433137*^9, 
  3.8363324861205063`*^9}, {3.8486691013892927`*^9, 3.848669127246417*^9}, {
  3.866127069618561*^9, 3.866127097733227*^9}, {3.866128156818281*^9, 
  3.8661281595563297`*^9}, {3.866128279182509*^9, 3.86612828308418*^9}, {
  3.866134960225068*^9, 3.8661349915841846`*^9}},
 CellLabel->
  "In[876]:=",ExpressionUUID->"46f9886f-74fd-47e8-91e5-1ec9bbf4476a"],

Cell[BoxData["\<\"AdjustSpeed[conf,defconf,slowdown,ncycle]. Adjust some \
hyperparameters.\"\>"], "Output",
 CellChangeTimes->{
  3.834002634553699*^9, 3.834002739627515*^9, {3.8341316972706327`*^9, 
   3.834131719022306*^9}, 3.834132491868713*^9, 3.834132583606894*^9, 
   3.834132727855402*^9, 3.8341377756061153`*^9, 3.8341379235343657`*^9, 
   3.834138091453895*^9, 3.834138201432328*^9, 3.834138870573845*^9, 
   3.8341389883398952`*^9, 3.834139126711338*^9, 3.834139466143487*^9, 
   3.83413956306593*^9, 3.834139599147525*^9, 3.834139754642848*^9, 
   3.8341398686781187`*^9, 3.83414211715583*^9, 3.834142409564003*^9, 
   3.8342169183763447`*^9, 3.83421939116457*^9, 3.834228485499276*^9, 
   3.834228590187587*^9, 3.834228938243005*^9, 3.834229813942189*^9, 
   3.834470886823884*^9, 3.834472268577394*^9, 3.834559776444502*^9, 
   3.834562599861746*^9, 3.834565557182366*^9, 3.834566841892941*^9, 
   3.83457170818246*^9, 3.83457699802595*^9, 3.834577051866296*^9, 
   3.83457779510273*^9, 3.8345778893571*^9, 3.834638467556961*^9, 
   3.834736210715602*^9, 3.83473739909086*^9, 3.834737992123996*^9, 
   3.834745396453566*^9, 3.834748814041847*^9, 3.835001720667251*^9, 
   3.835009325247942*^9, 3.835009362249571*^9, 3.8350862819734592`*^9, 
   3.835088375724319*^9, 3.83509944964563*^9, 3.83510568971243*^9, 
   3.835116588495216*^9, 3.835126456857952*^9, 3.8357052629504538`*^9, 
   3.8357671275116987`*^9, 3.835772092727758*^9, 3.8357727894059877`*^9, 
   3.835772859364149*^9, 3.835777070015045*^9, 3.835780602765686*^9, 
   3.8357865574226007`*^9, 3.835797004216309*^9, 3.835809661097136*^9, 
   3.835811200860935*^9, 3.835811375464076*^9, 3.83581156252555*^9, 
   3.835814995544166*^9, 3.8358479555264482`*^9, 3.835947639462265*^9, 
   3.835951848341414*^9, 3.835953184289452*^9, 3.835956081034724*^9, 
   3.835957190456984*^9, 3.835957638767078*^9, 3.83595813347155*^9, 
   3.8359582790840063`*^9, 3.836031204207127*^9, 3.8360315277717953`*^9, 
   3.836044446356037*^9, 3.836046912936076*^9, 3.836048191724334*^9, 
   3.836048288004404*^9, 3.8360483654014387`*^9, 3.836048526677149*^9, 
   3.836048560376293*^9, 3.8361229599456043`*^9, 3.83612403587154*^9, 
   3.836124435049539*^9, 3.836127154937736*^9, 3.836217878817951*^9, 
   3.8362180301229963`*^9, 3.836218725890749*^9, 3.836218889346878*^9, 
   3.8362196668223867`*^9, 3.8362198894424047`*^9, 3.836220014967951*^9, 
   3.836220427008774*^9, 3.836220574300797*^9, 3.836220865212921*^9, 
   3.8362210845691967`*^9, 3.836222195091419*^9, 3.8362224055127993`*^9, 
   3.836222550890061*^9, 3.836223685083929*^9, 3.8362237487006083`*^9, 
   3.83622382085044*^9, 3.836223892345953*^9, 3.8362242688002157`*^9, 
   3.836224402286426*^9, 3.83622462006069*^9, {3.836224708520434*^9, 
   3.836224726603949*^9}, 3.836224950584242*^9, 3.836306983633232*^9, 
   3.836332195941063*^9, 3.8363324892485533`*^9, 3.836396374280881*^9, 
   3.836419348078559*^9, 3.836419469468741*^9, 3.836452544159534*^9, 
   3.836452666744914*^9, 3.8364531146473103`*^9, 3.836453331396535*^9, 
   3.836894179021133*^9, 3.836906394996479*^9, 3.836907144005537*^9, 
   3.836907396691177*^9, 3.836984634788032*^9, 3.836985784346404*^9, 
   3.836986121896882*^9, 3.836986280303986*^9, 3.836986333816766*^9, 
   3.8369897341047363`*^9, 3.8369899446113586`*^9, 3.8369933258739758`*^9, 
   3.836993452696432*^9, 3.836993633071762*^9, 3.836993854072797*^9, 
   3.8369939426804533`*^9, 3.83699400514051*^9, 3.836995100778566*^9, 
   3.836995254734209*^9, 3.836995379163925*^9, 3.836995425156139*^9, 
   3.836995538956359*^9, 3.836995662734933*^9, 3.8369957136419773`*^9, 
   3.836995949846874*^9, 3.837003324212351*^9, 3.837006069292034*^9, 
   3.8370078352757063`*^9, {3.8370093473050737`*^9, 3.837009349976068*^9}, 
   3.837009489675104*^9, 3.837009999862214*^9, 3.837010323783082*^9, 
   3.837013779544702*^9, 3.837015023314974*^9, 3.83701659425956*^9, 
   3.837016846271008*^9, 3.837017434511486*^9, 3.837019348713632*^9, {
   3.8370194447373962`*^9, 3.837019468353128*^9}, 3.837019517094084*^9, 
   3.837019748068366*^9, 3.8370198509659367`*^9, 3.837020071907065*^9, 
   3.837020116872032*^9, {3.837020366563848*^9, 3.837020380486047*^9}, 
   3.8370204249244204`*^9, 3.837020476679603*^9, 3.8370206120864897`*^9, {
   3.8370206746193743`*^9, 3.8370207149486103`*^9}, 3.837020831059914*^9, 
   3.8370210658650093`*^9, 3.8370213276679277`*^9, 3.837021821315447*^9, 
   3.8370219071850758`*^9, 3.837054274883243*^9, 3.8370548559496727`*^9, 
   3.837055910280683*^9, 3.83705619062817*^9, 3.837056424631888*^9, 
   3.8370565126384068`*^9, {3.837056639744418*^9, 3.837056706763152*^9}, 
   3.837056755989986*^9, {3.837056948527231*^9, 3.837056972504846*^9}, 
   3.837057042472879*^9, 3.837058054534912*^9, 3.8370581256918573`*^9, 
   3.837058316795259*^9, 3.837059430544064*^9, 3.837486423645967*^9, 
   3.837486604218915*^9, 3.837486784561308*^9, 3.837493910994648*^9, 
   3.837494513189393*^9, 3.837494545022683*^9, 3.837494729185364*^9, 
   3.837494809126938*^9, 3.837494864963594*^9, 3.83749660650535*^9, 
   3.837496703897592*^9, 3.837497065663582*^9, 3.837497369809064*^9, 
   3.837506892120813*^9, 3.8375166119935837`*^9, 3.837517536232998*^9, 
   3.8375176554323072`*^9, 3.837517985984317*^9, 3.837518445719385*^9, 
   3.8375185247858973`*^9, 3.837518686823213*^9, 3.837518818902184*^9, 
   3.8375188613889313`*^9, 3.837519336257852*^9, 3.837519386277104*^9, 
   3.837520537696022*^9, 3.837520567876875*^9, 3.837752884717513*^9, 
   3.837753062229506*^9, 3.8377532915474043`*^9, 3.83775705210385*^9, 
   3.837758508969447*^9, 3.837758715514894*^9, 3.837759070798724*^9, 
   3.837759378700736*^9, 3.8377594406275578`*^9, 3.837759581466683*^9, {
   3.837760006920978*^9, 3.837760019403022*^9}, {3.8377605063408546`*^9, 
   3.837760564723014*^9}, 3.837841343155905*^9, 3.837843018460156*^9, 
   3.837843170593199*^9, 3.8378436896174383`*^9, 3.837843739465013*^9, 
   3.837843883980206*^9, 3.837843973216671*^9, 3.8378440481352587`*^9, 
   3.8378441324550743`*^9, 3.837845713676629*^9, 3.837847398501644*^9, 
   3.837847692892995*^9, 3.837848056611088*^9, 3.8378488246580143`*^9, 
   3.837848998479877*^9, 3.837849103299706*^9, {3.837849217375016*^9, 
   3.8378492371289186`*^9}, 3.8378493148310213`*^9, {3.837849347355653*^9, 
   3.837849376443254*^9}, {3.837849421691256*^9, 3.837849448498063*^9}, {
   3.8378497446434383`*^9, 3.837849753821233*^9}, 3.8378498100659122`*^9, 
   3.839397278795278*^9, 3.839415654744061*^9, 3.839471738422892*^9, 
   3.8394735617725563`*^9, 3.8394737049728537`*^9, 3.839473765020961*^9, {
   3.8394751424142647`*^9, 3.839475161883416*^9}, 3.839475195703833*^9, 
   3.839475264349415*^9, 3.839475316540298*^9, 3.839475425970686*^9, 
   3.839475557074019*^9, 3.8394757093311872`*^9, 3.839475879464802*^9, 
   3.839476867278633*^9, 3.839476977093143*^9, 3.839478022154364*^9, 
   3.839478615223712*^9, 3.839478710332884*^9, 3.839491888223503*^9, 
   3.839492020776359*^9, 3.839492059334936*^9, 3.8394921282309637`*^9, 
   3.839492281562564*^9, 3.8394930663369102`*^9, 3.8394932759661503`*^9, 
   3.83950128020337*^9, 3.839501424487442*^9, 3.839501506416718*^9, 
   3.839501697769836*^9, 3.839501780485653*^9, 3.839561945730917*^9, 
   3.839564125728516*^9, 3.8395646039336147`*^9, 3.8395661473338823`*^9, {
   3.83957343869615*^9, 3.839573465145151*^9}, {3.839573887855729*^9, 
   3.8395739091568527`*^9}, 3.839574522490835*^9, 3.8395934653773203`*^9, 
   3.839594982150309*^9, 3.8395950956490583`*^9, 3.839926161133049*^9, 
   3.839995263923739*^9, 3.839995818304788*^9, 3.839995865392145*^9, 
   3.8399999429128637`*^9, 3.8400002643631887`*^9, 3.840001288554858*^9, 
   3.840010301098546*^9, 3.840010507307041*^9, 3.8400108178582478`*^9, 
   3.840010853707776*^9, 3.84001111487718*^9, 3.8400117981581173`*^9, 
   3.840011873867985*^9, 3.840012484337109*^9, 3.840012534896337*^9, 
   3.840012576391017*^9, {3.840012958703556*^9, 3.8400129676629333`*^9}, 
   3.840013406330748*^9, 3.8400135213799677`*^9, 3.840013582041338*^9, 
   3.840017073115003*^9, {3.8400235217862988`*^9, 3.840023529181295*^9}, {
   3.8400242125808563`*^9, 3.8400242185459423`*^9}, 3.840024667713188*^9, 
   3.8400247207789993`*^9, 3.8400247743199453`*^9, 3.840024922597386*^9, 
   3.84002517295693*^9, 3.840025342344603*^9, 3.840025581839521*^9, 
   3.8400258273636017`*^9, {3.840025950444233*^9, 3.840025976502681*^9}, 
   3.840026243410904*^9, {3.840027834994454*^9, 3.8400278527399187`*^9}, 
   3.84002790592258*^9, 3.840027989124391*^9, 3.841373664076476*^9, 
   3.8413737292248096`*^9, 3.841374453285742*^9, 3.8413747295061913`*^9, 
   3.841375573804863*^9, 3.846753523199308*^9, 3.84675537725033*^9, 
   3.847297765069476*^9, 3.847342011516881*^9, 3.847342123968766*^9, 
   3.847342593520708*^9, {3.847342743196269*^9, 3.847342752580901*^9}, 
   3.847343580428341*^9, 3.848653311721981*^9, {3.848654563503784*^9, 
   3.848654582083864*^9}, 3.848654638081224*^9, 3.8486546811994133`*^9, {
   3.8486548585020103`*^9, 3.848654884799512*^9}, 3.848656143110833*^9, 
   3.848656928610902*^9, {3.848657196630309*^9, 3.848657208657605*^9}, {
   3.848657743149674*^9, 3.848657793477597*^9}, 3.8486579816191387`*^9, {
   3.848667578558528*^9, 3.848667628567017*^9}, 3.848667967607855*^9, {
   3.8486680201198483`*^9, 3.84866804384472*^9}, 3.848668335489045*^9, {
   3.8486690052553673`*^9, 3.848669022046124*^9}, 3.848669139150045*^9, 
   3.8486692519617653`*^9, {3.8486701125399113`*^9, 3.848670140181625*^9}, 
   3.848670395927907*^9, {3.848670482391056*^9, 3.848670490681274*^9}, 
   3.8486715090801287`*^9, 3.848671643660039*^9, 3.8486725315530043`*^9, {
   3.848673582039253*^9, 3.848673612723811*^9}, 3.848675769882453*^9, 
   3.848730573131074*^9, {3.848730616052556*^9, 3.8487306359628563`*^9}, 
   3.848730805924572*^9, 3.849176186470571*^9, 3.84949938247946*^9, 
   3.849499459583006*^9, 3.849499704486061*^9, {3.849683297112672*^9, 
   3.849683307321208*^9}, 3.849712824827444*^9, 3.8497137596067133`*^9, 
   3.8497138503566313`*^9, 3.8497139123981123`*^9, 3.8497139528955727`*^9, 
   3.849773744071409*^9, 3.8497833565734987`*^9, 3.849878573692864*^9, 
   3.849879199733902*^9, 3.850103712784782*^9, 3.8501323562710247`*^9, 
   3.850212012022883*^9, 3.8502124917213984`*^9, 3.850212562594886*^9, 
   3.850217972192753*^9, 3.8503940718378983`*^9, 3.851150425655295*^9, 
   3.851150811072041*^9, 3.851151928106744*^9, 3.8511520093152103`*^9, 
   3.851152466138955*^9, 3.851153159811064*^9, 3.851160527761792*^9, 
   3.851707776117859*^9, 3.851708654874017*^9, 3.8517087839997063`*^9, 
   3.8522646321593733`*^9, 3.85226498528476*^9, 3.852444296406006*^9, 
   3.8524459083902693`*^9, 3.852446641400899*^9, 3.8524539210914917`*^9, 
   3.852455207829076*^9, 3.852455347091835*^9, 3.852455428764886*^9, 
   3.852456405040002*^9, 3.852456452252071*^9, 3.852456859432047*^9, 
   3.855990678134205*^9, 3.85599113141866*^9, 3.85599154619506*^9, 
   3.8559917214399443`*^9, {3.8559921015261993`*^9, 3.8559921116085787`*^9}, 
   3.85599248685469*^9, 3.855992791360547*^9, 3.855993229048788*^9, 
   3.855993319513421*^9, 3.855993855246808*^9, 3.8576278153607407`*^9, 
   3.857628413503026*^9, 3.857628872905799*^9, 3.85788274664003*^9, 
   3.8580519149961452`*^9, 3.858287336534087*^9, 3.865940306205461*^9, 
   3.865942408438641*^9, 3.8659427834263783`*^9, 3.86594311414014*^9, 
   3.865943412790135*^9, {3.865943931330187*^9, 3.865943953361693*^9}, 
   3.865967601231049*^9, 3.8660192355055523`*^9, {3.866036816304852*^9, 
   3.866036835898041*^9}, 3.8660369467983828`*^9, 3.866037132625416*^9, 
   3.8660372505180073`*^9, 3.86603742563411*^9, 3.866037536741139*^9, 
   3.866040104194006*^9, 3.866045755697097*^9, 3.866045923084934*^9, 
   3.8660466484843597`*^9, 3.866047190472826*^9, 3.866047263507786*^9, 
   3.866047318319806*^9, 3.866047557667222*^9, {3.8660476314132633`*^9, 
   3.866047646680564*^9}, 3.866047806448637*^9, 3.866047920108789*^9, 
   3.866048023853456*^9, 3.866048115524395*^9, 3.866048241584601*^9, 
   3.866048305326149*^9, 3.866048480922861*^9, 3.866049773813641*^9, {
   3.866051959318417*^9, 3.8660519719663763`*^9}, 3.866052042056807*^9, 
   3.866052115464676*^9, {3.8660533198357277`*^9, 3.866053342117077*^9}, 
   3.866053403607999*^9, 3.86605344664979*^9, {3.866054672214517*^9, 
   3.8660547020165033`*^9}, 3.866055472871211*^9, 3.866055557052177*^9, 
   3.866055638344006*^9, {3.866059612131312*^9, 3.866059627166923*^9}, 
   3.866059868526451*^9, 3.8660601564114122`*^9, {3.866060323577874*^9, 
   3.866060336117106*^9}, {3.866107221832683*^9, 3.866107229067761*^9}, 
   3.866110701544343*^9, 3.8661125280603447`*^9, 3.866114658581809*^9, 
   3.866114698937742*^9, 3.866122578200795*^9, 3.866122640640563*^9, 
   3.866122813842348*^9, 3.866123096469799*^9, 3.86612320608447*^9, 
   3.866123687878435*^9, 3.8661237867626543`*^9, 3.866124018883391*^9, 
   3.866124823577237*^9, 3.866124886150803*^9, 3.866125120469841*^9, 
   3.866125294676705*^9, 3.8661255493765182`*^9, 3.866127146850334*^9, 
   3.866127458917912*^9, 3.866127493276157*^9, 3.866127686867529*^9, 
   3.8661280169787617`*^9, 3.8661281822358227`*^9, {3.866128296196703*^9, 
   3.866128307278213*^9}, 3.866133732431068*^9, 3.8661338300910473`*^9, {
   3.8661349714621983`*^9, 3.866135003311194*^9}, 3.8661351786910467`*^9, 
   3.866137265338673*^9, 3.867919043572522*^9, 3.867922677438799*^9},
 CellLabel->
  "Out[876]=",ExpressionUUID->"08334892-4203-4d72-844e-0c232b724991"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AdjustAngles", "::", "usage"}], "=", 
  "\"\<AdjustAngles[\[Theta]vars]. Adjust \[Theta]vars so that angles within \
the range [-4\[Pi],4\[Pi]]. Note that this process will alter the cost, since \
different duration alters the passive noise.\>\""}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"AdjustAngles", ",", "HoldFirst"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AdjustAngles", "[", "\[Theta]vars_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]vars", "[", "k", "]"}], "<", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Theta]vars", "[", "k", "]"}], "=", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"\[Theta]vars", "[", "k", "]"}], ",", 
            RowBox[{
             RowBox[{"-", "4"}], "\[Pi]"}]}], "]"}]}], "\[IndentingNewLine]", 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Theta]vars", "[", "k", "]"}], "=", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"\[Theta]vars", "[", "k", "]"}], ",", 
            RowBox[{"4", "\[Pi]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
        ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Keys", "@", "\[Theta]vars"}]}], "}"}]}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8394053908767033`*^9, 3.839405456653802*^9}, {
  3.839407536696048*^9, 3.839407573173818*^9}, {3.8394076494569683`*^9, 
  3.8394077477505503`*^9}, {3.83940839238931*^9, 3.839408427443285*^9}, {
  3.839409065357811*^9, 3.8394090776506357`*^9}, {3.839475958577764*^9, 
  3.839475995390764*^9}, {3.841289995100748*^9, 3.841290073794557*^9}},
 CellLabel->
  "In[879]:=",ExpressionUUID->"77efd437-9432-46e2-80b3-52287f1eb111"],

Cell[BoxData["\<\"AdjustAngles[\[Theta]vars]. Adjust \[Theta]vars so that \
angles within the range [-4\[Pi],4\[Pi]]. Note that this process will alter \
the cost, since different duration alters the passive noise.\"\>"], "Output",
 CellChangeTimes->{
  3.839415654731421*^9, 3.839471738409844*^9, 3.839473561762384*^9, 
   3.839473704960534*^9, 3.839473765011948*^9, {3.839475142401821*^9, 
   3.839475161871681*^9}, 3.839475195693281*^9, 3.839475264346726*^9, 
   3.8394753165313997`*^9, 3.8394754259673758`*^9, 3.8394755570651197`*^9, 
   3.8394757093212767`*^9, 3.8394758794608173`*^9, 3.8394759977185698`*^9, 
   3.8394768672681437`*^9, 3.839476977082211*^9, 3.839478022144898*^9, 
   3.839478615214609*^9, 3.8394787103238497`*^9, 3.839491888214291*^9, 
   3.839492020768218*^9, 3.839492059332055*^9, 3.839492128228716*^9, 
   3.839492281553525*^9, 3.839493066330817*^9, 3.839493275962627*^9, 
   3.839501280187689*^9, 3.839501424482339*^9, 3.839501506413011*^9, 
   3.8395016977658*^9, 3.839501780480501*^9, 3.839561945711278*^9, 
   3.839564125709408*^9, 3.839564603918901*^9, 3.839566147301993*^9, {
   3.839573438685005*^9, 3.839573465142219*^9}, {3.839573887844993*^9, 
   3.839573909145113*^9}, 3.839574522487772*^9, 3.839593465368915*^9, 
   3.8395949821392508`*^9, 3.83959509564532*^9, 3.8399261611295357`*^9, 
   3.839995263904643*^9, 3.839995818280551*^9, 3.839995865374888*^9, 
   3.839999942891502*^9, 3.84000026434367*^9, 3.840001288544692*^9, 
   3.8400103010901527`*^9, 3.8400105072922907`*^9, 3.8400108178477163`*^9, 
   3.840010853698017*^9, 3.840011114864575*^9, 3.840011798145467*^9, 
   3.840011873861813*^9, 3.840012484326779*^9, 3.84001253488645*^9, 
   3.84001257638734*^9, {3.840012958681295*^9, 3.8400129676485043`*^9}, 
   3.840013406318882*^9, 3.840013521366601*^9, 3.840013582030921*^9, 
   3.840017073099249*^9, {3.840023521772106*^9, 3.840023529171626*^9}, {
   3.8400242125691633`*^9, 3.8400242185338*^9}, 3.8400246677012157`*^9, 
   3.8400247207686462`*^9, 3.84002477431046*^9, 3.8400249225847797`*^9, 
   3.840025172947186*^9, 3.8400253423315353`*^9, 3.840025581827236*^9, 
   3.8400258273501*^9, {3.8400259504264717`*^9, 3.840025976487059*^9}, 
   3.840026243395509*^9, {3.840027834982624*^9, 3.840027852725217*^9}, 
   3.840027905906907*^9, 3.840027989106276*^9, {3.841290048272271*^9, 
   3.8412900742536497`*^9}, 3.8413736640940733`*^9, 3.8413737292388077`*^9, 
   3.84137445329783*^9, 3.841374729512575*^9, 3.841375573818214*^9, 
   3.846753523219117*^9, 3.846755377268252*^9, 3.8472977650819807`*^9, 
   3.847342011529845*^9, 3.84734212398352*^9, 3.847342593530323*^9, {
   3.847342743207011*^9, 3.84734275258465*^9}, 3.8473435804326982`*^9, 
   3.84865331174072*^9, 3.848654582087278*^9, 3.848654638096429*^9, 
   3.8486546812112226`*^9, {3.848654858512611*^9, 3.848654884813362*^9}, 
   3.8486561431330223`*^9, 3.848656928614703*^9, {3.8486571966337547`*^9, 
   3.848657208662098*^9}, {3.848657743162764*^9, 3.8486577934931993`*^9}, 
   3.848657981623502*^9, {3.848667578569336*^9, 3.848667628582741*^9}, 
   3.84866796761777*^9, {3.848668020125359*^9, 3.8486680438482533`*^9}, 
   3.8486683355000668`*^9, {3.848669005266873*^9, 3.848669022054648*^9}, 
   3.848669139169306*^9, 3.8486692519799757`*^9, {3.848670112551433*^9, 
   3.8486701401859837`*^9}, 3.848670395939295*^9, {3.848670482401367*^9, 
   3.84867049068487*^9}, 3.8486715090916777`*^9, 3.848671643674738*^9, 
   3.84867253156595*^9, {3.848673582076448*^9, 3.848673612757853*^9}, 
   3.848675769903644*^9, 3.848730573150721*^9, {3.848730616074381*^9, 
   3.848730635979501*^9}, 3.848730805950221*^9, 3.849176186497476*^9, 
   3.849499382500971*^9, 3.849499459607437*^9, 3.849499704507531*^9, {
   3.849683297132913*^9, 3.849683307345491*^9}, 3.849712824855349*^9, 
   3.8497137596287518`*^9, 3.849713850375762*^9, 3.8497139124259453`*^9, 
   3.849713952933374*^9, 3.849773744092225*^9, 3.849783356598755*^9, 
   3.8498785737172737`*^9, 3.849879199753419*^9, 3.8501037128074493`*^9, 
   3.8501323563036423`*^9, 3.850212012054516*^9, 3.850212491741922*^9, 
   3.8502125626275187`*^9, 3.8502179722110577`*^9, 3.850394071858019*^9, 
   3.85115042569477*^9, 3.851150811091878*^9, 3.851151928113008*^9, 
   3.851152009326139*^9, 3.851152466160273*^9, 3.851153159817544*^9, 
   3.8511605277733707`*^9, 3.851707776126974*^9, 3.851708654899086*^9, 
   3.851708784033598*^9, 3.8522646321768436`*^9, 3.852264985300849*^9, 
   3.852444296426381*^9, 3.852445908397509*^9, 3.852446641422515*^9, 
   3.852453921113414*^9, 3.852455207857647*^9, 3.8524553471214848`*^9, 
   3.8524554287726707`*^9, 3.852456405057775*^9, 3.852456452295092*^9, 
   3.8524568594597807`*^9, 3.855990678147996*^9, 3.855991131438905*^9, 
   3.855991546249915*^9, 3.85599172147537*^9, {3.855992101545787*^9, 
   3.855992111628772*^9}, 3.855992486868094*^9, 3.8559927913957863`*^9, 
   3.8559932290684958`*^9, 3.855993319566437*^9, 3.855993855272255*^9, 
   3.857627815389073*^9, 3.8576284135297937`*^9, 3.857628872933045*^9, 
   3.85788274665939*^9, 3.858051915044036*^9, 3.8582873365544*^9, 
   3.8659403062197933`*^9, 3.865942408456173*^9, 3.86594278343039*^9, 
   3.865943114143763*^9, 3.865943412801111*^9, {3.865943931340249*^9, 
   3.8659439533665733`*^9}, 3.865967601248149*^9, 3.866019235524454*^9, {
   3.866036816320653*^9, 3.866036835910043*^9}, 3.8660369468074207`*^9, 
   3.866037132633726*^9, 3.866037250526053*^9, 3.866037425637236*^9, 
   3.866037536750547*^9, 3.8660401042059507`*^9, 3.866045755709631*^9, 
   3.8660459231000013`*^9, 3.866046648488584*^9, 3.866047190484948*^9, 
   3.8660472635213327`*^9, 3.8660473183307734`*^9, 3.86604755768084*^9, {
   3.8660476314167337`*^9, 3.8660476466919527`*^9}, 3.866047806452931*^9, 
   3.8660479201123857`*^9, 3.8660480238704567`*^9, 3.866048115536887*^9, 
   3.866048241588378*^9, 3.8660483053387537`*^9, 3.866048480926613*^9, 
   3.866049773831544*^9, {3.866051959331273*^9, 3.866051971977828*^9}, 
   3.8660520420692*^9, 3.8660521154789553`*^9, {3.866053319849504*^9, 
   3.866053342130414*^9}, 3.86605340361719*^9, 3.866053446653941*^9, {
   3.8660546722250137`*^9, 3.866054702026442*^9}, 3.8660554728823767`*^9, 
   3.866055557065174*^9, 3.866055638357111*^9, {3.866059612186215*^9, 
   3.866059627212006*^9}, 3.866059868553947*^9, 3.866060156447085*^9, {
   3.866060323618555*^9, 3.866060336143505*^9}, {3.866107221850299*^9, 
   3.866107229088311*^9}, 3.866110701559725*^9, 3.8661125280723124`*^9, 
   3.86611465859656*^9, 3.866114698957078*^9, 3.8661225782152023`*^9, 
   3.866122640657014*^9, 3.866122813855694*^9, 3.866123096482493*^9, 
   3.866123206100367*^9, 3.866123687891131*^9, 3.866123786777701*^9, 
   3.866124018903151*^9, 3.8661248235893784`*^9, 3.866124886163458*^9, 
   3.866125120483837*^9, 3.8661252946909523`*^9, 3.866125549393231*^9, 
   3.8661274600891733`*^9, 3.8661276868869467`*^9, 3.8661280169998713`*^9, 
   3.86612818226728*^9, 3.8661337324477253`*^9, 3.8661338301061697`*^9, 
   3.866135003331695*^9, 3.866135178716227*^9, 3.866137265366584*^9, 
   3.86791904358808*^9, 3.867922677452097*^9},
 CellLabel->
  "Out[879]=",ExpressionUUID->"a4e82288-0146-424c-9a03-efee91716551"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Wrap", "::", "usage"}], "=", 
   "\"\<Wrap[list,anzatz,angle,enerhy,sidx,hash___]. Wrap data into a list of \
association.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"Wrap", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Wrap", "[", 
    RowBox[{
    "list_", ",", "anz_", ",", "ang_", ",", "en_", ",", "sidx_", ",", 
     "hash___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{
        "list", "\[LeftDoubleBracket]", "\"\<ansatz\>\"", 
         "\[RightDoubleBracket]"}], ",", "anz"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{
        "list", "\[LeftDoubleBracket]", "\"\<\[Theta]vars\>\"", 
         "\[RightDoubleBracket]"}], ",", "ang"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{
        "list", "\[LeftDoubleBracket]", "\"\<E\>\"", 
         "\[RightDoubleBracket]"}], ",", "en"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{
        "list", "\[LeftDoubleBracket]", "\"\<idx\>\"", 
         "\[RightDoubleBracket]"}], ",", "sidx"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"{", "hash", "}"}]}], ">", "0"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{
          "list", "\[LeftDoubleBracket]", "\"\<hash\>\"", 
           "\[RightDoubleBracket]"}], ",", "hash"}], "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.851707686653632*^9, 3.851707689335683*^9}},
 CellLabel->
  "In[882]:=",ExpressionUUID->"0ccfb1a7-bb6d-4a05-805f-a651a473b296"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotmat", "[", "matrix_", "]"}], ":=", 
  RowBox[{"MatrixPlot", "[", 
   RowBox[{"matrix", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<correlation\>\""}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "440"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Medium"}], "]"}]}], ",", 
      RowBox[{"FrameTicks", "->", "All"}], ",", 
      RowBox[{"ColorFunction", "->", "cscheme"}], ",", 
      RowBox[{"ColorFunctionScaling", "->", "False"}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"BarLegend", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"cscheme", "[", "#", "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
         "Bottom"}], "]"}]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cscheme", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.02", ",", "1", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0.48", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0.73"}], "]"}], ",", "Black", ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.6", ",", "0.22", ",", "0"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0.55", ",", "0"}], "]"}], ",", "White"}], "}"}], 
       ",", 
       RowBox[{"Rescale", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "]"}], "&"}], 
    ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8661245249952097`*^9, 3.866124617758518*^9}},
 CellLabel->
  "In[885]:=",ExpressionUUID->"78490eab-7b55-4d12-a112-e200b658ebbf"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Main function: GSHW gate synthesis on a hardware
Ansatz form is 2d\
\>", "Subsubsection",
 CellChangeTimes->{{3.866028860077969*^9, 3.866028864292239*^9}, {
  3.86791627508897*^9, 3.867916284342319*^9}, {3.8680067651039257`*^9, 
  3.868006784284021*^9}},ExpressionUUID->"623cf927-cef2-4a2f-9852-\
815674ea007b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GSHW", "::", "usage"}], "=", 
   "\"\<GSHW[conf] generate conf using DefaultConfig function\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"GSHW", ",", "HoldAll"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GSHW", "[", "conf_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Rho]", ",", "\[Rho]work", ",", 
      RowBox[{"\[Rho]\[Theta]k", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"fev", "=", "0"}], ",", "cycleres", ",", 
      RowBox[{"Elist", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"ansatz", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"\[Theta]vars", "=", 
       RowBox[{"<|", "|>"}]}], ",", "Ecur", ",", "IsDone", ",", 
      RowBox[{"ncycle", "=", "0"}], ",", 
      RowBox[{"greedy", "=", "True"}], ",", "finmsg", ",", "greedtrial", ",", 
      "greedres", ",", "g", ",", "gatespercycle", ",", "ghash", ",", 
      "gansatz", ",", "g\[Theta]vars", ",", "ng\[Theta]vars", ",", "tidx", 
      ",", "gansatzid", ",", "Eold", ",", "gE", ",", "gElist", ",", "r", ",", 
      "ibestg", ",", 
      RowBox[{"elimmerge", "=", "0"}], ",", 
      RowBox[{"gmerge", "=", "0"}], ",", 
      RowBox[{"elimbfsmall", "=", "0"}], ",", 
      RowBox[{"elimmetov", "=", "0"}], ",", 
      RowBox[{"elimbf", "=", "0"}], ",", 
      RowBox[{"wmsg", "=", "\"\<\>\""}], ",", "dE", ",", 
      RowBox[{"dkeys", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<ansatz\>\"", ",", "\"\<\[Theta]vars\>\"", ",", "\"\<E\>\"", ",", 
         "\"\<idx\>\""}], "}"}]}], ",", 
      RowBox[{"hkeys", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<ansatz\>\"", ",", "\"\<\[Theta]vars\>\"", ",", "\"\<E\>\"", ",", 
         "\"\<idx\>\"", ",", "\"\<hash\>\""}], "}"}]}], ",", 
      RowBox[{"\[Alpha]incr", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"conf", "[", "\"\<\[Alpha]tikhonov\>\"", "]"}], "]"}], ",", 
         "0.1"}], "]"}]}], ",", 
      RowBox[{"aborted", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"idx", "=", "1"}], ",", "eincr", ",", 
      RowBox[{"compsucc", "=", "0"}], ",", 
      RowBox[{"globalconverge", "=", "0"}], ",", "g\[Theta]varsold", ",", 
      "gdE", ",", "gEold", ",", "\[Theta]varsold", ",", "elist", ",", 
      RowBox[{"failing", "=", "0"}], ",", 
      RowBox[{"speedup", "=", 
       RowBox[{"conf", "[", "\"\<speedupfirst\>\"", "]"}]}], ",", 
      "IsConverge", ",", 
      RowBox[{"defconf", "=", "conf"}], ",", "maxcost", ",", 
      RowBox[{"\[Theta]varlist", "=", 
       RowBox[{"<|", "|>"}]}], ",", 
      RowBox[{"abort", "=", "False"}], ",", "gradstep", ",", 
      RowBox[{"status", "=", "\"\<start\>\""}], ",", 
      RowBox[{"corrmat", "=", "0"}], ",", "corsize", ",", "corsizeinit", ",", 
      "dev"}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"local", " ", "functions"}], " ", "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{
      RowBox[{"IsConverge", "[", "e_", "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"e", "-", 
           RowBox[{"conf", "[", "\"\<groundstate\>\"", "]"}]}], "]"}], 
         "\[LessEqual]", 
         RowBox[{"conf", "[", "\"\<\[Epsilon]fin\>\"", "]"}]}], ",", "True", 
        ",", "False"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "Initializations", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Rho]", ",", "\[Rho]work"}], "}"}], "=", 
      RowBox[{"CreateDensityQuregs", "[", 
       RowBox[{
        RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", "2"}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ListQ", "[", 
        RowBox[{"conf", "[", "\"\<fixansatz\>\"", "]"}], "]"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Compilation with a fixed ansatz guess\>\"", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"ansatz1d", "=", 
         RowBox[{"conf", "[", "\"\<fixansatz\>\"", "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "  ", 
      RowBox[{"TODO", ":", " ", 
       RowBox[{"fix", " ", "the", " ", "correlation"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Ecur", "=", 
      RowBox[{"CostFunction", "[", 
       RowBox[{"\[Rho]", ",", "\[Rho]work", ",", 
        RowBox[{"ansatz", "/.", "\[Theta]vars"}], ",", "conf"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"conf", "[", "\"\<usecorr\>\"", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"corrmat", "=", 
         RowBox[{"Mean", "@", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"dev", "=", 
              RowBox[{"conf", "[", "\"\<device\>\"", "]"}]}], ";", " ", 
             RowBox[{"(*", 
              RowBox[{
              "always", " ", "copy", " ", "the", " ", "device", " ", "desc"}],
               "*)"}], "\[IndentingNewLine]", 
             RowBox[{"InitStateFromAmps", "[", 
              RowBox[{"\[Rho]", ",", 
               RowBox[{"Re", "@", 
                RowBox[{
                 RowBox[{"conf", "[", "\"\<initstates\>\"", "]"}], "[", "i", 
                 "]"}]}], ",", 
               RowBox[{"Im", "@", 
                RowBox[{
                 RowBox[{"conf", "[", "\"\<initstates\>\"", "]"}], "[", "i", 
                 "]"}]}]}], "]"}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"U", 
               TemplateBox[{"\[Psi]"},
                "Ket"]}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"ApplyCircuit", "[", 
              RowBox[{"\[Rho]", ",", 
               RowBox[{"Flatten", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ExtractCircuit", "@", 
                   RowBox[{"InsertCircuitNoise", "[", 
                    RowBox[{
                    RowBox[{"ansatz", "/.", "\[Theta]vars"}], ",", "dev"}], 
                    "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}], "[", "i", 
                   "]"}]}], "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"CalcExpecPauliSum", "[", 
              RowBox[{"\[Rho]", ",", 
               RowBox[{"conf", "[", "\"\<hamiltonian\>\"", "]"}], ",", 
               "\[Rho]work"}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"Calc2QubitCorr", "[", 
              RowBox[{"conf", ",", " ", "\[Rho]", ",", " ", "\[Rho]work"}], 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "@", 
               RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}]}]}], "}"}]}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"corsizeinit", "=", 
         RowBox[{"Mean", "@", 
          RowBox[{"Flatten", "@", "corrmat"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"fev", "++"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"Elist", ",", "Ecur"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cycleres", "=", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"{", "}"}]}], "&"}], "/@", "dkeys"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Wrap", "[", 
      RowBox[{
      "cycleres", ",", "ansatz", ",", "\[Theta]vars", ",", "Ecur", ",", 
       "idx"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"finmsg", "=", 
         RowBox[{"Catch", "[", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"Ready", " ", "for", " ", "interruption"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{"True", ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"++", "ncycle"}], ";", "\[IndentingNewLine]", 
             RowBox[{"greedtrial", "=", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ncycle", "===", "1"}], ",", 
                RowBox[{"conf", "[", "\"\<greedinessinit\>\"", "]"}], ",", 
                RowBox[{"conf", "[", "\"\<greediness\>\"", "]"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"gatespercycle", "=", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ncycle", " ", "===", " ", "1"}], ",", 
                RowBox[{"conf", "[", "\"\<ngatesinit\>\"", "]"}], ",", 
                RowBox[{"conf", "[", "\"\<gatespercycle\>\"", "]"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"clear", " ", "old", " ", "buffer"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"gElist", "=", 
              RowBox[{"<|", "|>"}]}], ";", " ", "\[IndentingNewLine]", 
             RowBox[{"greedres", "=", 
              RowBox[{"Association", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"{", "}"}]}], "&"}], "/@", "hkeys"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Eold", "=", 
              RowBox[{
               RowBox[{"cycleres", "[", "\"\<E\>\"", "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Eold", "\[NotEqual]", " ", "Ecur"}], ",", " ", 
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<ERROR: Eold != Ecur\>\"", ",", " ", "Eold", ",", 
                 "\"\<,\>\"", ",", "Ecur"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"start", " ", "GREEDY"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"conf", "[", "\"\<usecorr\>\"", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"corrmat", "=", 
                 RowBox[{"Mean", "@", 
                  RowBox[{"Table", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"InitStateFromAmps", "[", 
                    RowBox[{"\[Psi]", ",", 
                    RowBox[{"Re", "@", 
                    RowBox[{
                    RowBox[{"conf", "[", "\"\<initstates\>\"", "]"}], "[", 
                    "i", "]"}]}], ",", 
                    RowBox[{"Im", "@", 
                    RowBox[{
                    RowBox[{"conf", "[", "\"\<initstates\>\"", "]"}], "[", 
                    "i", "]"}]}]}], "]"}], ";", 
                    RowBox[{"(*", " ", 
                    RowBox[{"U", 
                    TemplateBox[{"\[Psi]"},
                    "Ket"]}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"ApplyCircuit", "[", 
                    RowBox[{"\[Psi]", ",", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ansatz", "/.", "\[Theta]vars"}], ",", 
                    RowBox[{
                    RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}], "[", "i", 
                    "]"}]}], "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Calc2QubitCorr", "[", 
                    RowBox[{
                    "conf", ",", " ", "\[Rho]", ",", " ", "\[Rho]work"}], 
                    "]"}]}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Length", "@", 
                    RowBox[{"conf", "[", "\"\<undocirc\>\"", "]"}]}]}], 
                    "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"corsize", "=", 
                 RowBox[{"Mean", "@", 
                  RowBox[{"Flatten", "@", "corrmat"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"try", " ", "some", " ", "slow", " ", "reduce"}], 
                 " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{"gatespercycle", "=", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    RowBox[{"conf", "[", "\"\<ngatesinit\>\"", "]"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"corsize", "/", "corsizeinit"}], ")"}], 
                    RowBox[{"1", "/", "16"}]]}], "]"}], ",", 
                   RowBox[{"IntegerPart", "[", 
                    RowBox[{
                    RowBox[{"conf", "[", "\"\<ngatesinit\>\"", "]"}], "*", 
                    "0.2"}], "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
               "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"g", "=", "1"}], ",", 
               RowBox[{"g", "\[LessEqual]", "greedtrial"}], ",", " ", 
               RowBox[{"g", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"tidx", "=", "idx"}], ";", "\[IndentingNewLine]", 
                RowBox[{"status", "=", "\"\<extend ansatz\>\""}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"gansatz", "=", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"conf", "[", "\"\<usecorr\>\"", "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ExtendAnsatz", "[", 
                    RowBox[{
                    "tidx", ",", "conf", ",", "ansatz", ",", "gatespercycle", 
                    ",", "corrmat"}], "]"}], "\[IndentingNewLine]", ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ExtendAnsatz", "[", 
                    RowBox[{
                    "tidx", ",", "conf", ",", "ansatz", ",", 
                    "gatespercycle"}], "]"}]}], "\[IndentingNewLine]", 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"ghash", "=", 
                 RowBox[{"Hash", "[", "gansatz", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"greedres", "[", "\"\<hash\>\"", "]"}], ",", 
                    "ghash"}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                   "wmsg", "=", "\"\<I have tried this ansatz before. \>\""}],
                    ";", "\[IndentingNewLine]", 
                   RowBox[{"Continue", "[", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"g\[Theta]vars", "=", "\[Theta]vars"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"g\[Theta]vars", "[", 
                    SubscriptBox["\[Theta]", "t"], "]"}], "=", 
                   RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"conf", "[", "\"\<\[Theta]initrange\>\"", "]"}]}],
                     ",", 
                    RowBox[{"conf", "[", "\"\<\[Theta]initrange\>\"", "]"}]}],
                     "}"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "idx", ",", 
                    RowBox[{"tidx", "-", "1"}]}], "}"}]}], "]"}], ";", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"gmerge", "+=", 
                 RowBox[{"MergeGates", "[", 
                  RowBox[{"gansatz", ",", "g\[Theta]vars"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
                 RowBox[{
                  RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", 
                  "g\[Theta]vars", ",", "\[Rho]\[Theta]k"}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "Relax", " ", "the", " ", "newly", " ", "obtained", " ", 
                  RowBox[{"parameters", "."}]}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"gE", "=", "Eold"}], ";", 
                RowBox[{"g\[Theta]varsold", "=", "g\[Theta]vars"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"status", "=", "\"\<relaxation\>\""}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"gElist", "[", "g", "]"}], "=", 
                 RowBox[{"RelaxAnsatz", "[", 
                  RowBox[{
                  "conf", ",", "fev", ",", "gansatz", ",", "g\[Theta]vars", 
                   ",", "\[Rho]", ",", "\[Rho]work", ",", "\[Rho]\[Theta]k", 
                   ",", "gE", ",", "gradstep", ",", 
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"conf", "[", "\"\<greedflat\>\"", "]"}], "*", 
                    "Ecur"}], "]"}], ",", 
                   RowBox[{"conf", "[", "\"\<maxgreediter\>\"", "]"}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                
                RowBox[{"(*", " ", 
                 RowBox[{
                 "wrap", " ", "and", " ", "record", " ", "the", " ", 
                  "results"}], " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Wrap", "[", 
                 RowBox[{
                 "greedres", ",", "gansatz", ",", "g\[Theta]vars", ",", "gE", 
                  ",", "tidx", ",", "ghash"}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "terminate", " ", "if", " ", "the", " ", "target", " ", 
                  "energy", " ", "is", " ", "found"}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"IsConverge", "[", "gE", "]"}], ",", 
                  RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"release", " ", "greedy"}], "-", "memory"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
                 RowBox[{
                  RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", 
                  "\[Theta]vars", ",", "\[Rho]\[Theta]k"}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", " ", 
             RowBox[{"(*", " ", 
              RowBox[{"END", " ", "OF", " ", "GREEDY", " ", "TRIAL"}], "*)"}],
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "Pick", " ", "the", " ", "best", " ", "line", " ", "to", " ", 
               "continue", " ", "optimization"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"ibestg", "=", 
              RowBox[{"First", "@", 
               RowBox[{"Flatten", "[", 
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"greedres", "[", "\"\<E\>\"", "]"}], ",", 
                  RowBox[{"Min", "@", 
                   RowBox[{
                   "greedres", "\[LeftDoubleBracket]", "\"\<E\>\"", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "ansatz", ",", "\[Theta]vars", ",", "Ecur", ",", "idx"}], 
               "}"}], "=", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"greedres", "[", "#", "]"}], "\[LeftDoubleBracket]", 
                 "ibestg", "\[RightDoubleBracket]"}], "&"}], "/@", 
               "dkeys"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AdjustQuregs\[Rho]\[Theta]k", "[", 
              RowBox[{
               RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}], ",", 
               "\[Theta]vars", ",", "\[Rho]\[Theta]k"}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"IsConverge", "[", "Ecur", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Wrap", "[", 
                 RowBox[{
                 "cycleres", ",", "ansatz", ",", "\[Theta]vars", ",", "Ecur", 
                  ",", "idx"}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Elist", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"Elist", ",", 
                   RowBox[{"gElist", "[", "ibestg", "]"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                "Throw", "[", 
                 "\"\<Circuit within target precision is found\>\"", "]"}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"**", " ", "Improves"}], " ", "****)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Ecur", "<", 
                RowBox[{
                 RowBox[{"cycleres", "[", "\"\<E\>\"", "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"improves", ":", " ", "pathetic"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cycleres", "[", "\"\<E\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "-", "Ecur"}], "]"}], "<=", 
                   RowBox[{"Ecur", "*", 
                    RowBox[{"conf", "[", "\"\<perfectingflat\>\"", "]"}]}]}], 
                  ",", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Print", "[", 
                    RowBox[{"\"\<@cycle\>\"", "<>", 
                    RowBox[{"ToString", "[", "ncycle", "]"}], "<>", 
                    "\"\<, pathetic result.\>\""}], "]"}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"wmsg", "=", "\"\<I might be converging. \>\""}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"globalconverge", "+=", "1"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"wmsg", "=", 
                    RowBox[{"wmsg", "<>", "\"\<Abort cycle \>\"", "<>", 
                    RowBox[{"ToString", "[", "ncycle", "]"}], "<>", 
                    "\"\<. Pathetic result. \>\""}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "ansatz", ",", "\[Theta]vars", ",", "Ecur", ",", "idx"}], 
                    "}"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"cycleres", "[", "#", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "&"}], "/@",
                     "dkeys"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"aborted", ",", "ncycle"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"AdjustSpeed", "[", 
                    RowBox[{
                    "conf", ",", "defconf", ",", "speedup", ",", "ncycle"}], 
                    "]"}], ",", 
                    RowBox[{"Throw", "[", "\"\<I'm giving up.\>\"", "]"}]}], 
                    "]"}], ";"}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"improves", ":", " ", "good"}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"globalconverge", "=", "0"}], ";", " ", 
                   RowBox[{"failing", "=", "0"}], ";", "\[IndentingNewLine]", 
                   
                   RowBox[{"wmsg", "=", 
                    RowBox[{"\"\<Cycle \>\"", "<>", 
                    RowBox[{"ToString", "[", "ncycle", "]"}], "<>", 
                    "\"\< is completed with significant improvement. \
\>\""}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", "record", " ", "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"Elist", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"Elist", ",", 
                    RowBox[{"gElist", "[", "ibestg", "]"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{"pruning", ":", " ", 
                    RowBox[{
                    "keep", " ", "at", " ", "least", " ", "90", "%", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "or", " ", "most", " ", "of", " ", "it", " ", "for", " ", 
                    "the", " ", "first", " ", "cycle"}], ")"}], " ", "of", 
                    " ", "improvement"}]}], " ", "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"maxcost", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ncycle", ">", "1"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Ecur", "-", 
                    RowBox[{
                    RowBox[{"cycleres", "[", "\"\<E\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ")"}], 
                    "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"conf", "[", "\"\<pruningerror\>\"", "]"}], ",", 
                    "0.1"}], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"cycleres", "[", "\"\<E\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Ecur", "+", 
                    RowBox[{"conf", "[", "\"\<\[Epsilon]fin\>\"", "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"wmsg", "=", 
                    RowBox[{
                    "wmsg", "<>", "\"\<Pruning and perfecting cycle \>\"", "<>", 
                    RowBox[{"ToString", "[", "ncycle", "]"}], "<>", 
                    "\"\<, with maxcost:\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"maxcost", ",", "FortranForm"}], "]"}], "<>", 
                    "\"\<; current cost=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Ecur", ",", "FortranForm"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"(*", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "elimmerge", ",", "elimbfsmall", ",", "elimmetov", ",", 
                    "elimbf"}], "}"}], "+=", 
                    RowBox[{"PruneGates", "[", 
                    RowBox[{
                    "conf", ",", "fev", ",", "Ecur", ",", "gradstep", ",", 
                    "ansatz", ",", "\[Theta]vars", ",", "TotalCirc", ",", 
                    "\[Psi]", ",", "\[Psi]work", ",", "\[Psi]\[Theta]k", ",", 
                    "maxcost", ",", "False", ",", "status"}], "]"}]}], ";"}], 
                    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"Elist", ",", "Ecur"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AdjustAngles", "[", "\[Theta]vars", "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"status", "=", "\"\<perfecting\>\""}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"elist", "=", 
                    RowBox[{"RelaxAnsatz", "[", 
                    RowBox[{
                    "conf", ",", "fev", ",", "ansatz", ",", "\[Theta]vars", 
                    ",", "\[Rho]", ",", "\[Rho]work", ",", "\[Rho]\[Theta]k", 
                    ",", "Ecur", ",", "gradstep", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"conf", "[", "\"\<perfectingflat\>\"", "]"}], "*",
                     "Ecur"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"Elist", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"Elist", ",", "elist"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Wrap", "[", 
                    RowBox[{
                    "cycleres", ",", "ansatz", ",", "\[Theta]vars", ",", 
                    "Ecur", ",", "idx"}], "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"**", " ", "Equals"}], "/", "Worse"}], " ", 
                "****)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"failing", "+=", "1"}], ";", "\[IndentingNewLine]", 
                RowBox[{"wmsg", "=", 
                 RowBox[{"\"\<Abort cycle \>\"", "<>", 
                  RowBox[{"ToString", "[", "ncycle", "]"}], "<>", 
                  "\"\<. Worse or equal result. \>\""}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ansatz", ",", "\[Theta]vars", ",", "Ecur", ",", "idx"}], 
                  "}"}], "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"cycleres", "[", "#", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "&"}], "/@",
                   "dkeys"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"aborted", ",", "ncycle"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"AdjustSpeed", "[", 
                   RowBox[{
                   "conf", ",", "defconf", ",", "speedup", ",", "ncycle"}], 
                   "]"}], ",", 
                  RowBox[{"Throw", "[", "\"\<I'm giving up.\>\"", "]"}]}], 
                 "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
               RowBox[{"\"\<@cycle\>\"", "<>", 
                RowBox[{"ToString", "[", "ncycle", "]"}], "<>", "\"\<:\>\"", "<>", 
                RowBox[{"DateString", "[", "]"}], "<>", "\"\<, fev:\>\"", "<>", 
                RowBox[{"ToString", "[", "fev", "]"}], "<>", 
                "\"\<, <E>: \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Ecur", ",", "FortranForm"}], "]"}]}], ",", 
               RowBox[{"\"\< nansatz: \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Length", "@", "ansatz"}], "]"}]}], ",", 
               RowBox[{"\"\< merged-small\[Theta]-metric-bf-gmerged: \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "elimmerge", ",", "elimbfsmall", ",", "elimmetov", ",", 
                   "elimbf", ",", "gmerge"}], "}"}], "]"}]}]}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "Getting", " ", "converged", " ", "or", " ", "failing"}], " ", 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", " ", 
              RowBox[{
               RowBox[{"failing", " ", "\[GreaterEqual]", " ", 
                RowBox[{"conf", "[", "\"\<globalconverge\>\"", "]"}]}], ",", 
               " ", 
               RowBox[{
               "Throw", "[", "\"\<I keep failing to lower the energy. \>\"", 
                "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"globalconverge", "\[GreaterEqual]", " ", 
                RowBox[{"conf", "[", "\"\<globalconverge\>\"", "]"}]}], ",", 
               " ", 
               RowBox[{
               "Throw", "[", 
                "\"\<Compilation is either converging or stuck. \>\"", 
                "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"IsConverge", "[", "Ecur", "]"}], ",", 
               RowBox[{
               "Throw", "[", 
                "\"\<Circuit within target precision is found\>\"", "]"}]}], 
              "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "]"}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"wmsg", "=", "finmsg"}], ";", "\[IndentingNewLine]", 
        RowBox[{"wmsg", "=", 
         RowBox[{
         "wmsg", "<>", "\"\< Final pruning ... we are almost there\>\""}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "maxcost", " ", "is", " ", "simply", " ", "the", " ", "final", " ", 
          "target"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"AdjustAngles", "[", "\[Theta]vars", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "elimmerge", ",", "elimbfsmall", ",", "elimmetov", ",", 
             "elimbf"}], "}"}], "+=", 
           RowBox[{"PruneGates", "[", 
            RowBox[{
            "conf", ",", "fev", ",", "Ecur", ",", "gradstep", ",", "ansatz", 
             ",", "\[Theta]vars", ",", "TotalCirc", ",", "\[Psi]", ",", 
             "\[Psi]work", ",", "\[Psi]\[Theta]k", ",", "Ecur", ",", "True", 
             ",", "status"}], "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"status", "=", "\"\<perfecting\>\""}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"Elist", ",", "Ecur"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AdjustAngles", "[", "\[Theta]vars", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"elist", "=", 
         RowBox[{"RelaxAnsatz", "[", 
          RowBox[{
          "conf", ",", "fev", ",", "ansatz", ",", "\[Theta]vars", ",", 
           "\[Rho]", ",", "\[Rho]work", ",", "\[Rho]\[Theta]k", ",", "Ecur", 
           ",", "gradstep", ",", 
           RowBox[{"conf", "[", "\"\<\[Epsilon]fin\>\"", "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Elist", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"Elist", ",", "elist"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Wrap", "[", 
         RowBox[{
         "cycleres", ",", "ansatz", ",", "\[Theta]vars", ",", "Ecur", ",", 
          "idx"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<ncycle:\>\"", " ", "<>", 
           RowBox[{"ToString", "@", "ncycle"}], "<>", "\"\<, fev:\>\"", "<>", 
           
           RowBox[{"ToString", "@", "fev"}], "<>", 
           "\"\<, globalconvergence: \>\"", "<>", 
           RowBox[{"ToString", "[", "globalconverge", "]"}], "<>", 
           "\"\<, failing=\>\"", "<>", 
           RowBox[{"ToString", "[", "failing", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<Eliminations -- merged: \>\"", "<>", 
           RowBox[{"ToString", "[", "elimmerge", "]"}], "<>", 
           "\"\<, bruteforce small\[Theta]:\>\"", "<>", 
           RowBox[{"ToString", "[", "elimbfsmall", "]"}], "<>", 
           "\[IndentingNewLine]", "\"\<, metric: \>\"", "<>", 
           RowBox[{"ToString", "[", "elimmetov", "]"}], "<>", 
           "\"\<, bruteforce:\>\"", "<>", 
           RowBox[{"ToString", "[", "elimbf", "]"}], "<>", 
           "\"\<, gmerge:\>\"", "<>", 
           RowBox[{"ToString", "[", "gmerge", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<gatespercycle, greediness, \[Alpha]tikhonov, gradstep: \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"{", 
             RowBox[{"gatespercycle", ",", 
              RowBox[{"conf", "[", "\"\<greediness\>\"", "]"}], ",", 
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"conf", "[", "\"\<\[Alpha]tikhonov\>\"", "]"}], ",", 
                "FortranForm"}], "]"}], ",", 
              RowBox[{"ToString", "[", 
               RowBox[{"gradstep", ",", "FortranForm"}], "]"}]}], "}"}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<groundstate=\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
             RowBox[{"conf", "[", "\"\<groundstate\>\"", "]"}], ",", 
             "FortranForm"}], "]"}], "<>", "\"\<; ngates:\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "@", "ansatz"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<cost=\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Ecur", ",", "FortranForm"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<Greedy section: \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"gE", ",", "FortranForm"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"greedres", "[", "\"\<E\>\"", "]"}], ",", 
          RowBox[{"status", "<>", "\"\< -- \>\"", "<>", "wmsg"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"MatrixForm", "@", "corrmat"}], ",", "corsize", 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"DrawCircuit", "[", 
           RowBox[{"ansatz", ",", 
            RowBox[{"conf", "[", "\"\<nqubit\>\"", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Elist", ",", "ansatz", ",", "\[Theta]vars", ",", "finmsg", ",", 
       "ncycle", ",", "fev", ",", "aborted", ",", "cycleres", ",", 
       RowBox[{"{", 
        RowBox[{
        "elimmerge", ",", "elimbfsmall", ",", "elimmetov", ",", "elimbf"}], 
        "}"}], ",", "corrmat"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.818866287921228*^9, 3.8188663140557137`*^9}, {
   3.818866575974663*^9, 3.818866648239793*^9}, {3.8188670744982977`*^9, 
   3.818867152250988*^9}, {3.818867200589505*^9, 3.818867228315877*^9}, {
   3.818867261268505*^9, 3.818867310841958*^9}, {3.818867412061289*^9, 
   3.8188674352239122`*^9}, {3.8188701924683523`*^9, 3.818870194973802*^9}, {
   3.818870998207262*^9, 3.8188710337586517`*^9}, {3.818871103548115*^9, 
   3.818871158311137*^9}, {3.818871227439344*^9, 3.818871335822884*^9}, 
   3.818872287333638*^9, {3.8188723759070787`*^9, 3.8188724258011227`*^9}, {
   3.8188731424401827`*^9, 3.818873193180937*^9}, {3.818873348718049*^9, 
   3.8188733571051188`*^9}, {3.818873398346096*^9, 3.8188734505259323`*^9}, {
   3.818873501510907*^9, 3.81887350452388*^9}, {3.81887359397013*^9, 
   3.818873596455492*^9}, {3.8188736770847607`*^9, 3.8188737174598227`*^9}, {
   3.818873790431275*^9, 3.818873816235731*^9}, {3.8188741510670156`*^9, 
   3.8188741815042753`*^9}, 3.8188742399605227`*^9, {3.818874286267984*^9, 
   3.818874418553134*^9}, {3.8188746986185417`*^9, 3.818874708657123*^9}, {
   3.8188747770184813`*^9, 3.8188747915809593`*^9}, {3.8188749205223*^9, 
   3.818874922227586*^9}, {3.8188749752050056`*^9, 3.818874984745612*^9}, {
   3.81887502890228*^9, 3.818875108506709*^9}, {3.818875162766426*^9, 
   3.818875225020604*^9}, {3.818875573664316*^9, 3.81887560710938*^9}, 
   3.818875664465044*^9, {3.81887572239074*^9, 3.81887573016*^9}, 
   3.818876084111815*^9, 3.818876433356715*^9, {3.818877293916646*^9, 
   3.818877305970224*^9}, 3.81887736245986*^9, {3.818877402508409*^9, 
   3.818877407325633*^9}, 3.818879244266343*^9, 3.818879360430743*^9, {
   3.818880592870439*^9, 3.818880615343904*^9}, {3.818880659626103*^9, 
   3.818880660552343*^9}, {3.818880691239297*^9, 3.818880694424903*^9}, {
   3.818882106544149*^9, 3.818882121653351*^9}, {3.8189170516502237`*^9, 
   3.8189170815230227`*^9}, {3.818917133382832*^9, 3.818917136731306*^9}, {
   3.8189171728720837`*^9, 3.818917179146432*^9}, {3.8189172583607597`*^9, 
   3.8189172607788563`*^9}, {3.818917311712109*^9, 3.818917335045802*^9}, {
   3.818926079256941*^9, 3.818926089597844*^9}, 3.818926119835464*^9, 
   3.818926425523337*^9, {3.818926510697173*^9, 3.818926519936573*^9}, {
   3.818926683394518*^9, 3.8189266850290117`*^9}, {3.818955661902564*^9, 
   3.818955691530938*^9}, {3.818955874329213*^9, 3.818955882965692*^9}, {
   3.818955919336141*^9, 3.818955923732958*^9}, {3.8189561078218403`*^9, 
   3.8189561243454103`*^9}, {3.8193909679889917`*^9, 3.819391018267992*^9}, 
   3.819391116109713*^9, {3.819391559553643*^9, 3.819391569179887*^9}, {
   3.819391646844598*^9, 3.8193916798262672`*^9}, {3.819391739504209*^9, 
   3.819391890912654*^9}, {3.8193919596750727`*^9, 3.819392014097406*^9}, {
   3.8193924868019238`*^9, 3.819392559762495*^9}, {3.819392603600933*^9, 
   3.8193926575613527`*^9}, {3.819393440227944*^9, 3.819393462290761*^9}, {
   3.819393499139077*^9, 3.819393661368264*^9}, {3.819393712003207*^9, 
   3.819393744156272*^9}, {3.819393878413639*^9, 3.819393881924361*^9}, {
   3.819394461392626*^9, 3.819394462982039*^9}, 3.819394642297099*^9, {
   3.819394827050008*^9, 3.819394828106442*^9}, {3.819394916925037*^9, 
   3.8193949480408287`*^9}, {3.8193949872971*^9, 3.8193950239344788`*^9}, {
   3.819395091964692*^9, 3.819395102064604*^9}, {3.819395167801991*^9, 
   3.8193951690305357`*^9}, {3.819395219104999*^9, 3.8193952284400673`*^9}, 
   3.819395404948539*^9, {3.819401872095833*^9, 3.819401980129465*^9}, {
   3.81940202343583*^9, 3.819402025185506*^9}, {3.8194020645473824`*^9, 
   3.819402066879384*^9}, {3.819402210759691*^9, 3.819402235597225*^9}, {
   3.819553586851602*^9, 3.819553591227137*^9}, {3.8195536918041487`*^9, 
   3.819553696561182*^9}, {3.819553758617455*^9, 3.8195537777421083`*^9}, {
   3.819554121406694*^9, 3.819554125353599*^9}, {3.819554161732629*^9, 
   3.819554217878686*^9}, {3.8195542681378098`*^9, 3.8195542692702837`*^9}, {
   3.819554335539914*^9, 3.8195543359112463`*^9}, {3.8195544711348877`*^9, 
   3.819554507103991*^9}, {3.819554559031498*^9, 3.81955456226606*^9}, {
   3.8195545956723557`*^9, 3.8195546322983828`*^9}, {3.819554845434408*^9, 
   3.819554862238633*^9}, {3.819554916635543*^9, 3.81955491834554*^9}, {
   3.8195549841703653`*^9, 3.8195550011021643`*^9}, {3.819555257433923*^9, 
   3.819555303548311*^9}, {3.819555350676914*^9, 3.81955536901775*^9}, {
   3.819555671689234*^9, 3.819555694171774*^9}, {3.8195557574878674`*^9, 
   3.8195557743722057`*^9}, {3.81955586748739*^9, 3.819555875630522*^9}, {
   3.819560515694871*^9, 3.819560545389743*^9}, {3.81956073043884*^9, 
   3.819560747964654*^9}, 3.8195609547492228`*^9, {3.8195610326335907`*^9, 
   3.819561053143077*^9}, {3.8195674533778353`*^9, 3.819567455393042*^9}, {
   3.8195677929368277`*^9, 3.819567820356502*^9}, {3.819567880664818*^9, 
   3.819568062318151*^9}, {3.819568217022625*^9, 3.8195682208455*^9}, {
   3.8195682742967663`*^9, 3.8195682792115*^9}, {3.8195683220617228`*^9, 
   3.819568332589957*^9}, {3.819568420723235*^9, 3.819568421024331*^9}, {
   3.819568459512689*^9, 3.819568461807551*^9}, {3.8195685785799217`*^9, 
   3.819568591579054*^9}, {3.8195686817966137`*^9, 3.8195687157218723`*^9}, {
   3.819568879404698*^9, 3.819568898214569*^9}, {3.819569008015148*^9, 
   3.819569041157958*^9}, {3.819570274880694*^9, 3.819570324768648*^9}, {
   3.819570962072603*^9, 3.819570996539019*^9}, {3.819571232769334*^9, 
   3.819571233164475*^9}, {3.8195712910322104`*^9, 3.8195713498391333`*^9}, 
   3.819571391527132*^9, {3.819571502933503*^9, 3.819571504394182*^9}, {
   3.819571546276125*^9, 3.819571551144763*^9}, {3.819571597643058*^9, 
   3.81957169679986*^9}, {3.819571757990137*^9, 3.819571776355434*^9}, {
   3.8195718313825207`*^9, 3.819571859213915*^9}, {3.819572073497835*^9, 
   3.819572073730277*^9}, {3.81964948026033*^9, 3.819649480771555*^9}, {
   3.81964953357681*^9, 3.8196497289821577`*^9}, 3.819649767038073*^9, {
   3.819709850700037*^9, 3.819709944035659*^9}, {3.8197102819718227`*^9, 
   3.819710285803028*^9}, {3.819710318828063*^9, 3.8197103363409367`*^9}, {
   3.8197119803955183`*^9, 3.819712002908939*^9}, {3.819723171364749*^9, 
   3.819723206109026*^9}, {3.819723366083579*^9, 3.8197233896159983`*^9}, {
   3.819742091358584*^9, 3.81974209378832*^9}, {3.819742292070632*^9, 
   3.819742300682663*^9}, {3.819743258827222*^9, 3.819743296574046*^9}, {
   3.819743722777205*^9, 3.8197437297187243`*^9}, {3.819744086475174*^9, 
   3.8197440921487417`*^9}, 3.819746024990107*^9, {3.819746181684264*^9, 
   3.819746184764452*^9}, {3.819746264739743*^9, 3.8197462804052134`*^9}, {
   3.819746311078678*^9, 3.8197463775141563`*^9}, {3.819747051492834*^9, 
   3.8197470675176697`*^9}, {3.819797349979104*^9, 3.819797355862179*^9}, {
   3.819803292612711*^9, 3.819803293124357*^9}, {3.819803472956588*^9, 
   3.819803486982148*^9}, {3.819805211506311*^9, 3.819805214126045*^9}, {
   3.819810677477332*^9, 3.81981072303204*^9}, {3.819817524564794*^9, 
   3.819817525457752*^9}, {3.819824038007053*^9, 3.819824058022175*^9}, {
   3.819824161973277*^9, 3.819824255748413*^9}, {3.8198267647185307`*^9, 
   3.819826832111703*^9}, 3.819826889648903*^9, {3.819826943947857*^9, 
   3.819826983122044*^9}, {3.819827377128633*^9, 3.819827395926682*^9}, {
   3.81996143472357*^9, 3.8199615286639633`*^9}, {3.819969341331847*^9, 
   3.819969373217997*^9}, {3.819969941643612*^9, 3.8199699584936333`*^9}, {
   3.819970153097768*^9, 3.819970154955284*^9}, {3.819970261182241*^9, 
   3.819970300221805*^9}, {3.819970396153428*^9, 3.819970464006187*^9}, {
   3.819971630504047*^9, 3.8199716707746353`*^9}, {3.819971767888167*^9, 
   3.819971791590424*^9}, {3.819971841895686*^9, 3.8199718924462147`*^9}, {
   3.819971987826953*^9, 3.819971999436442*^9}, {3.819972088871257*^9, 
   3.8199721031743603`*^9}, {3.819972222631919*^9, 3.81997223889299*^9}, {
   3.819972313374263*^9, 3.819972313748651*^9}, {3.819972349362974*^9, 
   3.819972359848256*^9}, {3.819972432775403*^9, 3.8199724358485937`*^9}, {
   3.8199760105151577`*^9, 3.819976016281046*^9}, {3.819976054044271*^9, 
   3.819976054454946*^9}, {3.819976088844688*^9, 3.819976107136426*^9}, {
   3.819976577791712*^9, 3.8199765904016953`*^9}, {3.819976649305393*^9, 
   3.819976683883194*^9}, {3.819976792647922*^9, 3.819976833864482*^9}, {
   3.819976953075706*^9, 3.819977040651984*^9}, {3.819977127017582*^9, 
   3.819977135666451*^9}, {3.819977177167165*^9, 3.819977177669558*^9}, {
   3.819986921838306*^9, 3.819986934787175*^9}, {3.819986974781537*^9, 
   3.819986977650029*^9}, {3.819987954711483*^9, 3.819987961312277*^9}, {
   3.8199880073269043`*^9, 3.819988022377234*^9}, {3.819988054557279*^9, 
   3.819988061389592*^9}, {3.8199881499872503`*^9, 3.819988151420936*^9}, {
   3.819988387838752*^9, 3.819988407112506*^9}, {3.8199884801440277`*^9, 
   3.819988506872271*^9}, {3.819988556062029*^9, 3.8199885740096283`*^9}, {
   3.8199886281054287`*^9, 3.81998869627435*^9}, {3.819992489374123*^9, 
   3.819992575446435*^9}, {3.819992627063746*^9, 3.819992638569723*^9}, {
   3.81999268609724*^9, 3.819992688388595*^9}, 3.819992913263031*^9, {
   3.819992947428372*^9, 3.819992957186817*^9}, {3.8199929951447268`*^9, 
   3.8199929953245373`*^9}, {3.819993035040683*^9, 3.8199930588973837`*^9}, {
   3.819993090017098*^9, 3.819993165261135*^9}, {3.819993204179722*^9, 
   3.819993219566553*^9}, {3.819993253656888*^9, 3.819993275966042*^9}, {
   3.8199933189062357`*^9, 3.819993320163829*^9}, {3.819993364326722*^9, 
   3.819993386851536*^9}, 3.819993720746009*^9, 3.819993843997958*^9, 
   3.819993899081534*^9, {3.819994472005495*^9, 3.819994491815077*^9}, {
   3.819994524573369*^9, 3.8199945733787527`*^9}, {3.819994733571168*^9, 
   3.8199947347952423`*^9}, {3.819994767565198*^9, 3.81999477058569*^9}, {
   3.819994827628729*^9, 3.8199948530025187`*^9}, {3.819996782407942*^9, 
   3.819996794601184*^9}, {3.8199976998812647`*^9, 3.81999771922515*^9}, {
   3.819999225527914*^9, 3.81999923796824*^9}, {3.819999296952132*^9, 
   3.819999304139573*^9}, {3.819999363645115*^9, 3.819999383180387*^9}, {
   3.819999427882913*^9, 3.81999956249102*^9}, {3.819999601690683*^9, 
   3.819999668855338*^9}, {3.8199998232673883`*^9, 3.819999824379253*^9}, {
   3.820010168537346*^9, 3.820010170804882*^9}, {3.820010268988675*^9, 
   3.82001028960452*^9}, {3.8200104898507233`*^9, 3.8200105242260523`*^9}, 
   3.82001073785631*^9, {3.82001078649981*^9, 3.8200107915797977`*^9}, 
   3.8200112856128263`*^9, {3.820012367854807*^9, 3.820012384271949*^9}, {
   3.820012436119089*^9, 3.8200124718628483`*^9}, {3.82001250997339*^9, 
   3.820012631797308*^9}, {3.820012978834777*^9, 3.8200129975523148`*^9}, {
   3.820049166965352*^9, 3.8200491689376383`*^9}, {3.820049219895555*^9, 
   3.820049220179744*^9}, {3.820049262822587*^9, 3.820049277221941*^9}, {
   3.820049312574778*^9, 3.82004937836446*^9}, {3.8200494116508017`*^9, 
   3.8200494819556932`*^9}, 3.8200499578429613`*^9, {3.820059802213065*^9, 
   3.820059804272683*^9}, 3.820062220023485*^9, {3.82006591293987*^9, 
   3.820065913562911*^9}, {3.820066173259623*^9, 3.820066180632056*^9}, {
   3.820067111642008*^9, 3.8200671201834173`*^9}, {3.8200672250331497`*^9, 
   3.820067226069477*^9}, {3.820067469136869*^9, 3.820067469804323*^9}, {
   3.820071333775763*^9, 3.8200713895106707`*^9}, {3.8200719376261377`*^9, 
   3.8200719385297318`*^9}, {3.820072431852887*^9, 3.820072432079934*^9}, {
   3.820072712106257*^9, 3.820072833510849*^9}, 3.8200728751691723`*^9, {
   3.820072909376789*^9, 3.820073026851015*^9}, {3.820073298324997*^9, 
   3.82007332157653*^9}, {3.820073378476408*^9, 3.8200734182103243`*^9}, {
   3.820073513486022*^9, 3.820073516630824*^9}, {3.8200738344106894`*^9, 
   3.820073863262355*^9}, {3.820074266288629*^9, 3.82007431992045*^9}, {
   3.820074513211343*^9, 3.820074513384281*^9}, 3.8200748024002123`*^9, {
   3.8200873518047457`*^9, 3.820087416761249*^9}, {3.82008951499931*^9, 
   3.820089540418273*^9}, {3.8200895947017384`*^9, 3.820089614154523*^9}, {
   3.820089671692054*^9, 3.820089673892886*^9}, {3.820089719050879*^9, 
   3.8200897441459427`*^9}, {3.8200904581892357`*^9, 3.820090459044827*^9}, {
   3.820091315463111*^9, 3.820091322292919*^9}, 3.820091469545169*^9, 
   3.820093198424789*^9, {3.8200939535240498`*^9, 3.820093972010573*^9}, {
   3.820094030193304*^9, 3.820094054093375*^9}, 3.820094448447814*^9, {
   3.820094481689445*^9, 3.8200945441050053`*^9}, {3.820094870728079*^9, 
   3.820094877495183*^9}, {3.820097336490657*^9, 3.820097356191868*^9}, {
   3.820136520811891*^9, 3.8201365219485893`*^9}, {3.8206075301482153`*^9, 
   3.8206075464883957`*^9}, {3.820607581422956*^9, 3.820607601490286*^9}, {
   3.820607674849818*^9, 3.820607697283613*^9}, {3.820607745343998*^9, 
   3.8206079496519337`*^9}, {3.82060804112807*^9, 3.820608045466106*^9}, {
   3.820608092417728*^9, 3.820608093066251*^9}, {3.82060824829823*^9, 
   3.820608249446787*^9}, {3.820608349676696*^9, 3.820608379292495*^9}, {
   3.820608924781824*^9, 3.820608959477351*^9}, {3.82060902456024*^9, 
   3.820609039159127*^9}, {3.820609071226432*^9, 3.8206090776164703`*^9}, {
   3.820609283875512*^9, 3.8206093128955107`*^9}, {3.820609357623508*^9, 
   3.820609360179284*^9}, {3.820610642332692*^9, 3.8206107826885853`*^9}, {
   3.820610951499569*^9, 3.820610959018318*^9}, {3.820611377658018*^9, 
   3.820611421318903*^9}, {3.8206114810420237`*^9, 3.820611515421133*^9}, {
   3.8206115558282843`*^9, 3.82061162084688*^9}, {3.8206122991263103`*^9, 
   3.82061233440326*^9}, {3.820612365181838*^9, 3.820612365385119*^9}, {
   3.820612424500498*^9, 3.8206124363119917`*^9}, {3.820612522774241*^9, 
   3.820612565376505*^9}, {3.820659161005834*^9, 3.8206591939564962`*^9}, {
   3.820659732767171*^9, 3.8206597422694902`*^9}, 3.820660484284917*^9, {
   3.8206605745720367`*^9, 3.820660582621502*^9}, {3.820660758793024*^9, 
   3.820660762455966*^9}, {3.820660794987753*^9, 3.820660886927802*^9}, {
   3.82066352465137*^9, 3.820663527727417*^9}, {3.82066596489529*^9, 
   3.820666066586047*^9}, {3.82066610007231*^9, 3.82066610881735*^9}, {
   3.820833805280356*^9, 3.8208339650848627`*^9}, {3.821122010728652*^9, 
   3.8211220264705353`*^9}, 3.821124154366797*^9, {3.821124356517684*^9, 
   3.821124357300346*^9}, {3.8211275788907547`*^9, 3.82112763513624*^9}, {
   3.82112766582898*^9, 3.82112781057786*^9}, {3.82112820796926*^9, 
   3.821128279400498*^9}, {3.8211283209642467`*^9, 3.821128387326363*^9}, {
   3.821128425821052*^9, 3.821128457102881*^9}, 3.821128541803335*^9, {
   3.821128657526388*^9, 3.821128667881559*^9}, {3.8211287062094803`*^9, 
   3.8211287249022408`*^9}, {3.821129137145784*^9, 3.821129148342705*^9}, {
   3.821129229935437*^9, 3.8211292584976873`*^9}, {3.821129380601261*^9, 
   3.821129395243441*^9}, 3.821129430240035*^9, {3.821129486522436*^9, 
   3.8211295312215557`*^9}, {3.821129561299498*^9, 3.821129594860487*^9}, {
   3.821129657256343*^9, 3.82112976365768*^9}, {3.8211298365569963`*^9, 
   3.821129837309475*^9}, {3.821129969234624*^9, 3.821130052524543*^9}, {
   3.821130085117359*^9, 3.8211300971028013`*^9}, {3.82113013620393*^9, 
   3.8211301445177307`*^9}, {3.821130176326377*^9, 3.821130268453106*^9}, {
   3.8211303002809887`*^9, 3.8211303647682123`*^9}, 3.82113090008134*^9, {
   3.821130943121834*^9, 3.821131069347308*^9}, {3.82113144486274*^9, 
   3.821131488804543*^9}, {3.821131834665324*^9, 3.821131900996973*^9}, {
   3.821131951732009*^9, 3.821132038842537*^9}, {3.8211848701824083`*^9, 
   3.8211849542926493`*^9}, {3.821185000962985*^9, 3.821185078496471*^9}, {
   3.821187272744545*^9, 3.8211874969043713`*^9}, {3.82118754094534*^9, 
   3.821187707976972*^9}, {3.821187799759693*^9, 3.8211878084552097`*^9}, {
   3.8211878446692867`*^9, 3.821188068060307*^9}, {3.821188208401092*^9, 
   3.821188416552636*^9}, {3.82119433000629*^9, 3.8211943382578*^9}, {
   3.8211944811932783`*^9, 3.8211944815904903`*^9}, {3.821194756544829*^9, 
   3.8211947592688017`*^9}, {3.821194931031188*^9, 3.821194931769824*^9}, {
   3.821194965430608*^9, 3.821194965900391*^9}, {3.821195368835568*^9, 
   3.821195419290152*^9}, {3.821195516407692*^9, 3.821195521785398*^9}, {
   3.821196606966716*^9, 3.821196612016527*^9}, {3.821196705619318*^9, 
   3.821196710357307*^9}, {3.8211967674059057`*^9, 3.821196813466477*^9}, {
   3.821196847628788*^9, 3.821196868949353*^9}, {3.821197596726575*^9, 
   3.821197657829494*^9}, {3.8211977608812428`*^9, 3.82119781183997*^9}, {
   3.821197864936767*^9, 3.821197871718173*^9}, {3.821200612658639*^9, 
   3.82120061439258*^9}, {3.821200745085747*^9, 3.8212007599386587`*^9}, {
   3.821200868902589*^9, 3.8212008873916187`*^9}, {3.821201247257762*^9, 
   3.821201266641203*^9}, {3.82120203719709*^9, 3.8212020426675043`*^9}, {
   3.821209386632599*^9, 3.821209391824791*^9}, {3.821209585957405*^9, 
   3.821209601457108*^9}, {3.8212161646451*^9, 3.821216166587555*^9}, {
   3.8212161968835487`*^9, 3.821216257128007*^9}, {3.821216528015358*^9, 
   3.821216557115815*^9}, {3.8212165919581633`*^9, 3.821216596094174*^9}, {
   3.821216945166044*^9, 3.8212171678832283`*^9}, {3.821217261434848*^9, 
   3.821217283134863*^9}, {3.821217347334414*^9, 3.821217384288114*^9}, {
   3.821217470804976*^9, 3.821217561343589*^9}, {3.821217597950925*^9, 
   3.821217616098445*^9}, {3.821217655808989*^9, 3.821217686672483*^9}, {
   3.82121777407229*^9, 3.8212178582614727`*^9}, {3.821218036812937*^9, 
   3.821218049582981*^9}, {3.821218182412271*^9, 3.821218227953095*^9}, {
   3.8212198796073313`*^9, 3.8212199346226187`*^9}, {3.8212200626414213`*^9, 
   3.821220063304222*^9}, {3.8212201227815647`*^9, 3.8212201282868643`*^9}, {
   3.821221067736166*^9, 3.8212210799561853`*^9}, {3.8212211138165083`*^9, 
   3.82122113660783*^9}, {3.821221182473605*^9, 3.821221272055347*^9}, {
   3.821221304055291*^9, 3.821221325040956*^9}, {3.8212213655941133`*^9, 
   3.821221541938322*^9}, {3.82122159930582*^9, 3.821221863313319*^9}, {
   3.821221938065214*^9, 3.8212219941189613`*^9}, {3.821222134158554*^9, 
   3.821222154595945*^9}, {3.821222185195661*^9, 3.821222327696171*^9}, {
   3.82122236825688*^9, 3.821222441047573*^9}, {3.821223421023363*^9, 
   3.821223439663389*^9}, {3.821223542760787*^9, 3.821223554733227*^9}, {
   3.821223591012896*^9, 3.821223658328154*^9}, {3.821223714464036*^9, 
   3.821223715130138*^9}, {3.8212237950693827`*^9, 3.8212238432790956`*^9}, {
   3.821224231919643*^9, 3.821224354163538*^9}, {3.821224406077053*^9, 
   3.8212244097046137`*^9}, {3.821224564683652*^9, 3.821224600934463*^9}, {
   3.8212246346478977`*^9, 3.821224635021944*^9}, {3.821227420119029*^9, 
   3.8212274241193457`*^9}, {3.821227477760648*^9, 3.821227493568203*^9}, {
   3.821227554295033*^9, 3.821227562800791*^9}, 3.821227637232562*^9, {
   3.8212278010380983`*^9, 3.82122789320231*^9}, {3.821261236990369*^9, 
   3.8212612608162603`*^9}, {3.821261740376658*^9, 3.821262071889949*^9}, {
   3.8212621161020813`*^9, 3.821262228556889*^9}, {3.8212629745070257`*^9, 
   3.821262992896188*^9}, {3.821264143764081*^9, 3.821264156038476*^9}, 
   3.821264214893214*^9, {3.8212642804864492`*^9, 3.821264286309307*^9}, {
   3.821264321848085*^9, 3.821264357202257*^9}, {3.8212644478760347`*^9, 
   3.821264574048313*^9}, {3.821264613585269*^9, 3.821264661706429*^9}, {
   3.821265068672647*^9, 3.821265088644855*^9}, {3.821265149127448*^9, 
   3.8212651543083477`*^9}, {3.8212652332633743`*^9, 
   3.8212653184569283`*^9}, {3.821265414826612*^9, 3.821265439873767*^9}, {
   3.821265489847663*^9, 3.8212654932046757`*^9}, {3.821265810135874*^9, 
   3.821265878187722*^9}, {3.8212659146098003`*^9, 3.8212659155630407`*^9}, 
   3.8212660010281773`*^9, {3.821266054873212*^9, 3.821266060561119*^9}, {
   3.82126613101959*^9, 3.821266142996983*^9}, 3.82126642691606*^9, {
   3.8212679122722*^9, 3.821267986617318*^9}, {3.821268036997354*^9, 
   3.8212680761416187`*^9}, {3.821268185992482*^9, 3.821268187294711*^9}, {
   3.8212685371565228`*^9, 3.821268538361739*^9}, {3.821268658614972*^9, 
   3.821268661614833*^9}, {3.821268705481553*^9, 3.821268713594935*^9}, {
   3.821268764281197*^9, 3.821268779378072*^9}, {3.821268819712728*^9, 
   3.821268914210305*^9}, {3.821268947322609*^9, 3.821268949393333*^9}, 
   3.821269044078899*^9, 3.82126912348355*^9, {3.821269219747789*^9, 
   3.82126933937423*^9}, {3.821269419083293*^9, 3.8212694795759697`*^9}, {
   3.821269577754085*^9, 3.821269578326968*^9}, {3.821269609720419*^9, 
   3.821269614069309*^9}, {3.821269653148682*^9, 3.8212696774068604`*^9}, {
   3.821269816226457*^9, 3.821269818715887*^9}, {3.821269928509913*^9, 
   3.8212699339312143`*^9}, {3.821269964531761*^9, 3.821270060150895*^9}, {
   3.8212724050856028`*^9, 3.821272414651284*^9}, {3.821272448888019*^9, 
   3.821272549007023*^9}, {3.8212725817514553`*^9, 3.821272626210601*^9}, {
   3.821272676423147*^9, 3.821272732393672*^9}, {3.821272772301591*^9, 
   3.821272773279352*^9}, {3.821273187024054*^9, 3.821273229434766*^9}, {
   3.82127331490965*^9, 3.821273395633395*^9}, {3.8212734652921467`*^9, 
   3.821273471234672*^9}, {3.821273768562337*^9, 3.82127382750369*^9}, 
   3.821273861997954*^9, {3.821273895840191*^9, 3.82127391418955*^9}, {
   3.82127402645044*^9, 3.821274042742909*^9}, 3.8212741220686626`*^9, {
   3.82127416834162*^9, 3.821274177334524*^9}, 3.8212742520225782`*^9, {
   3.8212743541677*^9, 3.821274524182185*^9}, {3.8212745550272913`*^9, 
   3.821274644176609*^9}, {3.821274698151808*^9, 3.821274717359995*^9}, {
   3.82127474893106*^9, 3.82127478184665*^9}, {3.82127484205441*^9, 
   3.821274867449926*^9}, {3.821274940813719*^9, 3.821274964954795*^9}, {
   3.8212750654028997`*^9, 3.821275153944785*^9}, {3.821275229604425*^9, 
   3.821275262448886*^9}, {3.821275329035904*^9, 3.8212753355546*^9}, {
   3.821276181838584*^9, 3.82127620245711*^9}, {3.821276267694469*^9, 
   3.821276271662166*^9}, {3.8212763193652067`*^9, 3.821276349314687*^9}, 
   3.82127680964371*^9, {3.821282897135269*^9, 3.821282920320649*^9}, {
   3.821283026984234*^9, 3.821283033966434*^9}, {3.821283096009275*^9, 
   3.821283136432934*^9}, {3.821283416913643*^9, 3.8212834183772297`*^9}, 
   3.821283603953611*^9, {3.821283655792665*^9, 3.82128369834205*^9}, {
   3.8212837331836147`*^9, 3.8212837721511707`*^9}, {3.821283815599806*^9, 
   3.821283818680378*^9}, {3.821283874845172*^9, 3.821283876446282*^9}, {
   3.8212840949690742`*^9, 3.821284133118472*^9}, {3.821284185332635*^9, 
   3.82128419124864*^9}, {3.821284443552239*^9, 3.821284463652624*^9}, 
   3.821284579438877*^9, {3.821287456829337*^9, 3.8212874579482803`*^9}, {
   3.8212916035104723`*^9, 3.821291603517788*^9}, {3.82129287483219*^9, 
   3.821293015329802*^9}, {3.821293056699943*^9, 3.821293076828205*^9}, {
   3.821293110935425*^9, 3.8212931117670918`*^9}, {3.821293297489931*^9, 
   3.821293345016012*^9}, {3.821293559939165*^9, 3.821293630088441*^9}, {
   3.821293743768235*^9, 3.821293784457389*^9}, {3.821295989022957*^9, 
   3.821296005727099*^9}, {3.821296040753105*^9, 3.821296052825935*^9}, {
   3.821296816620264*^9, 3.821296833164948*^9}, {3.82129689163618*^9, 
   3.821296893250825*^9}, 3.821296942545229*^9, {3.8212970629538307`*^9, 
   3.821297063561677*^9}, {3.821297125484908*^9, 3.8212972250468597`*^9}, {
   3.821297257756974*^9, 3.8212972612546253`*^9}, {3.821297360048441*^9, 
   3.8212974204044333`*^9}, {3.821297998852425*^9, 3.821298006744246*^9}, {
   3.821298070673156*^9, 3.821298108066259*^9}, {3.821298139406314*^9, 
   3.821298149459693*^9}, {3.821298199254601*^9, 3.82129820489573*^9}, {
   3.82129829619151*^9, 3.821298527315621*^9}, {3.8212985620039787`*^9, 
   3.821298582728402*^9}, {3.821298631817883*^9, 3.821298707827221*^9}, {
   3.821298835674768*^9, 3.8212988617735653`*^9}, {3.821298903404996*^9, 
   3.82129899665864*^9}, {3.82129958077637*^9, 3.8212995831171703`*^9}, {
   3.821299911224635*^9, 3.8212999148472557`*^9}, {3.821299953486836*^9, 
   3.821300082676332*^9}, {3.821300866935461*^9, 3.8213008942742167`*^9}, {
   3.821300926763515*^9, 3.8213013876909246`*^9}, {3.821301428459004*^9, 
   3.821301454090321*^9}, {3.8213014933629932`*^9, 3.8213015282488947`*^9}, {
   3.821301575810773*^9, 3.821301704915208*^9}, {3.821301808790608*^9, 
   3.8213018562066813`*^9}, {3.8213018880076857`*^9, 3.821302023118408*^9}, {
   3.821302056601639*^9, 3.821302227690563*^9}, {3.8213022645622683`*^9, 
   3.821302297591414*^9}, 3.8213023917000732`*^9, {3.821302428165948*^9, 
   3.821302442838017*^9}, 3.82130249546624*^9, 3.821302561882245*^9, {
   3.821303063886011*^9, 3.8213030784132843`*^9}, {3.821303209022142*^9, 
   3.821303220239223*^9}, {3.8213034720230503`*^9, 3.821303496121009*^9}, {
   3.8213035269700727`*^9, 3.821303557652623*^9}, {3.821303663301279*^9, 
   3.821303931379837*^9}, {3.8213040071612463`*^9, 3.821304014455976*^9}, {
   3.821304128120364*^9, 3.821304130009131*^9}, {3.821304224911669*^9, 
   3.821304251077248*^9}, {3.8213042975371647`*^9, 3.8213043292959433`*^9}, {
   3.821304386980904*^9, 3.821304483118184*^9}, 3.821304615308427*^9, {
   3.821304732118332*^9, 3.8213047347123137`*^9}, {3.821304772567112*^9, 
   3.82130477462681*^9}, {3.821304811132599*^9, 3.821304843520625*^9}, {
   3.821305055603788*^9, 3.8213051230566177`*^9}, {3.821305206311763*^9, 
   3.8213052609350863`*^9}, {3.821305317225381*^9, 3.821305388932836*^9}, {
   3.8213054192135143`*^9, 3.821305421845995*^9}, {3.8213054792664623`*^9, 
   3.8213055068593407`*^9}, {3.821305739827751*^9, 3.821305748608198*^9}, {
   3.821306586412912*^9, 3.821306708323601*^9}, {3.8213082217348948`*^9, 
   3.821308338190336*^9}, {3.8213084038167887`*^9, 3.821308412378953*^9}, 
   3.8213084728019342`*^9, {3.821308571696631*^9, 3.821308584741302*^9}, {
   3.821308619144186*^9, 3.821308631798534*^9}, {3.821309574182665*^9, 
   3.8213095932103148`*^9}, {3.821309651267852*^9, 3.821309675186376*^9}, {
   3.821311921837966*^9, 3.821311994356707*^9}, {3.821312585688675*^9, 
   3.821312651647381*^9}, 3.821313529771957*^9, {3.8213136421308737`*^9, 
   3.8213136513470917`*^9}, {3.821313694051917*^9, 3.821313702248212*^9}, {
   3.821313895922311*^9, 3.8213138966196823`*^9}, 3.821313999139977*^9, {
   3.8213141423017282`*^9, 3.8213142440462513`*^9}, {3.821314300501019*^9, 
   3.8213143677282867`*^9}, {3.8213144663288193`*^9, 3.821314491754677*^9}, {
   3.821314699784984*^9, 3.821314714765152*^9}, {3.82131482338798*^9, 
   3.821314923331943*^9}, {3.8213149618260403`*^9, 3.82131496365723*^9}, {
   3.82134812417072*^9, 3.8213481698862457`*^9}, {3.821348304768733*^9, 
   3.821348346848481*^9}, {3.8213483772228127`*^9, 3.821348380026485*^9}, {
   3.821349307096912*^9, 3.821349339383326*^9}, {3.821349470977804*^9, 
   3.821349473112247*^9}, {3.821349516998012*^9, 3.821349519151144*^9}, {
   3.821349825278638*^9, 3.821349907550544*^9}, {3.821349999591516*^9, 
   3.8213500073133287`*^9}, {3.821350045219281*^9, 3.821350077199432*^9}, {
   3.821350685157487*^9, 3.821350688181204*^9}, {3.821350746976807*^9, 
   3.821350811316869*^9}, {3.8213510992595453`*^9, 3.821351116570788*^9}, 
   3.82135123445889*^9, {3.821351314756735*^9, 3.821351323859559*^9}, {
   3.821351399025517*^9, 3.821351404440699*^9}, {3.821351449275771*^9, 
   3.821351457460388*^9}, {3.8213518609402323`*^9, 3.821351914690716*^9}, {
   3.821351975644431*^9, 3.821352005268046*^9}, {3.821352040444201*^9, 
   3.821352092215302*^9}, {3.82135215002495*^9, 3.821352198041027*^9}, 
   3.821352424478066*^9, {3.821352512601671*^9, 3.821352564140283*^9}, {
   3.821352661577017*^9, 3.8213527052161427`*^9}, {3.821352808457418*^9, 
   3.8213528090526743`*^9}, {3.821352888067348*^9, 3.821352891076695*^9}, {
   3.82135294608025*^9, 3.82135300981994*^9}, {3.821353084621985*^9, 
   3.821353102093987*^9}, 3.8213531702603903`*^9, {3.82135326681555*^9, 
   3.821353268207623*^9}, {3.8213533874624157`*^9, 3.821353465046639*^9}, {
   3.8213552838729*^9, 3.821355369345817*^9}, {3.821355425302647*^9, 
   3.82135550395056*^9}, {3.821355578012484*^9, 3.8213556207661743`*^9}, {
   3.821355677627329*^9, 3.821355766360051*^9}, {3.8213558572150173`*^9, 
   3.821355953061573*^9}, {3.821356002551182*^9, 3.821356012077899*^9}, {
   3.821356163637109*^9, 3.821356179621828*^9}, {3.8213562596594763`*^9, 
   3.821356265817161*^9}, 3.821356310255755*^9, {3.821357128919455*^9, 
   3.821357192127597*^9}, {3.821357370577284*^9, 3.8213573738123837`*^9}, {
   3.8213574645737762`*^9, 3.821357475129385*^9}, {3.821357579789654*^9, 
   3.821357587181787*^9}, {3.821357631337631*^9, 3.821357688337285*^9}, {
   3.821357874586816*^9, 3.821357877479006*^9}, 3.8213579336175423`*^9, {
   3.82135825759336*^9, 3.8213582878359613`*^9}, {3.821358557014818*^9, 
   3.821358582590629*^9}, {3.821358801003833*^9, 3.821358807200369*^9}, {
   3.8213591710498247`*^9, 3.8213593030913153`*^9}, {3.8213593486547728`*^9, 
   3.821359361851672*^9}, {3.821360284392695*^9, 3.821360346492249*^9}, {
   3.821360496274392*^9, 3.82136054550391*^9}, {3.8213606116314*^9, 
   3.8213606808460627`*^9}, {3.821360735154413*^9, 3.821360842606464*^9}, {
   3.8213608809264603`*^9, 3.8213608955049057`*^9}, {3.821361230100338*^9, 
   3.821361251756864*^9}, {3.821361394702981*^9, 3.821361403641611*^9}, {
   3.821361541711258*^9, 3.8213615419683332`*^9}, 3.82138771271845*^9, {
   3.8213879117218323`*^9, 3.821387963684429*^9}, {3.821388144301093*^9, 
   3.821388151067185*^9}, {3.821388455472539*^9, 3.8213885281311827`*^9}, {
   3.821393468021667*^9, 3.821393551180838*^9}, {3.8214281588948812`*^9, 
   3.82142816716772*^9}, {3.821428219497097*^9, 3.8214282280716267`*^9}, 
   3.821428258524569*^9, {3.821442304621564*^9, 3.8214423185687*^9}, {
   3.821442693180031*^9, 3.821442728187347*^9}, {3.8214427632262487`*^9, 
   3.821442785034444*^9}, {3.8214428274141817`*^9, 3.821442829157868*^9}, {
   3.821442924957192*^9, 3.82144294768073*^9}, 3.8214429826952467`*^9, 
   3.82144304138881*^9, 3.821443094576693*^9, {3.8214438956847887`*^9, 
   3.821443904607499*^9}, {3.821443977412806*^9, 3.821444061841948*^9}, 
   3.821444106203004*^9, {3.8214442386208153`*^9, 3.821444302195853*^9}, {
   3.821444406468622*^9, 3.8214444457395678`*^9}, {3.8214444794881973`*^9, 
   3.821444621626652*^9}, {3.8214447528221827`*^9, 3.8214447568942833`*^9}, {
   3.821465371242161*^9, 3.821465372585243*^9}, {3.821467884889452*^9, 
   3.821467887895997*^9}, {3.821471994180271*^9, 3.821472095823008*^9}, {
   3.821543712225903*^9, 3.821543742353993*^9}, {3.8215440950179033`*^9, 
   3.821544102500771*^9}, {3.82182132762143*^9, 3.821821329753318*^9}, {
   3.821822574661985*^9, 3.8218226135232773`*^9}, {3.821867441050082*^9, 
   3.82186748811136*^9}, {3.821867543007115*^9, 3.821867544344965*^9}, 
   3.82199081433885*^9, {3.821990854571039*^9, 3.8219909876176453`*^9}, {
   3.8219911200360327`*^9, 3.8219911709504013`*^9}, {3.821991212721281*^9, 
   3.821991244110292*^9}, {3.822494993225131*^9, 3.8224950930028067`*^9}, {
   3.822495234816004*^9, 3.8224952520328712`*^9}, {3.822495615841545*^9, 
   3.822495618385828*^9}, {3.822495659105051*^9, 3.822495680784758*^9}, {
   3.822501697462603*^9, 3.8225017076615*^9}, {3.8225039352801657`*^9, 
   3.822503951643959*^9}, {3.822503985393251*^9, 3.8225040417684*^9}, {
   3.822504175062481*^9, 3.8225041873897753`*^9}, {3.8225044390331078`*^9, 
   3.8225044490780573`*^9}, {3.822505771655344*^9, 3.822505781673216*^9}, {
   3.8225058707107983`*^9, 3.8225058769209642`*^9}, {3.822505909596119*^9, 
   3.8225059794115458`*^9}, {3.8225068310603437`*^9, 3.822506852699492*^9}, {
   3.822507598812133*^9, 3.822507613104855*^9}, {3.822507649122655*^9, 
   3.822507660711089*^9}, 3.8225084660761833`*^9, {3.822512722835878*^9, 
   3.822512782458479*^9}, {3.822515190222703*^9, 3.822515213229698*^9}, {
   3.822515404232964*^9, 3.822515407440556*^9}, {3.822515467599269*^9, 
   3.822515481132218*^9}, {3.822515539402232*^9, 3.822515555425499*^9}, {
   3.822515606565649*^9, 3.822515606873128*^9}, {3.822515683677041*^9, 
   3.822515690424334*^9}, {3.822516080478683*^9, 3.822516178384655*^9}, {
   3.822516211735436*^9, 3.822516225537395*^9}, {3.8225162598180037`*^9, 
   3.822516263387796*^9}, {3.822516452520186*^9, 3.822516520204048*^9}, {
   3.82258615898289*^9, 3.822586190842078*^9}, {3.822587044102384*^9, 
   3.822587064796838*^9}, {3.8225874140323772`*^9, 3.8225874157492867`*^9}, {
   3.822588047110244*^9, 3.822588052559721*^9}, {3.822588589006619*^9, 
   3.822588590580694*^9}, {3.822588628061152*^9, 3.8225886293837214`*^9}, {
   3.822589668461637*^9, 3.822589688045102*^9}, {3.822592007630946*^9, 
   3.822592031012388*^9}, {3.822592072853959*^9, 3.822592113572423*^9}, {
   3.822592388668066*^9, 3.822592389854203*^9}, {3.8225924219496613`*^9, 
   3.822592449924629*^9}, {3.822592534186542*^9, 3.8225925618613997`*^9}, {
   3.8225925982153883`*^9, 3.822592640418906*^9}, {3.822592718303212*^9, 
   3.82259273442292*^9}, {3.822593353105991*^9, 3.822593476978498*^9}, {
   3.8225935095327053`*^9, 3.822593652270907*^9}, {3.82276525327619*^9, 
   3.822765255293849*^9}, {3.822765392953226*^9, 3.8227654392720537`*^9}, {
   3.822765478983107*^9, 3.822765566691134*^9}, {3.822765634130836*^9, 
   3.822765635538004*^9}, {3.822765690763732*^9, 3.822765942232153*^9}, {
   3.822765991861195*^9, 3.8227660480450783`*^9}, {3.822766096943234*^9, 
   3.822766098920226*^9}, {3.8227661641123047`*^9, 3.8227662305822783`*^9}, {
   3.822766288550149*^9, 3.8227662888719788`*^9}, {3.8227663899957047`*^9, 
   3.822766504886735*^9}, {3.822766597983417*^9, 3.822766598351125*^9}, {
   3.822766628826849*^9, 3.822766637027532*^9}, {3.8227667237421837`*^9, 
   3.822766742408332*^9}, {3.822767042854466*^9, 3.82276711844909*^9}, {
   3.8227671490925093`*^9, 3.8227671659508*^9}, {3.82276722067552*^9, 
   3.822767244972528*^9}, 3.8227672762319937`*^9, {3.822767331925885*^9, 
   3.822767342641914*^9}, {3.82276755416739*^9, 3.822767554628374*^9}, {
   3.8227678567278357`*^9, 3.822767884465043*^9}, {3.822767975950966*^9, 
   3.822768199950789*^9}, {3.822768236541779*^9, 3.822768244748053*^9}, {
   3.82276836273488*^9, 3.8227684449537973`*^9}, {3.822768477344377*^9, 
   3.8227685021865473`*^9}, {3.822768569152307*^9, 3.8227686574780693`*^9}, {
   3.8227687099823637`*^9, 3.822768714251721*^9}, {3.8227687543849773`*^9, 
   3.822768765290518*^9}, {3.822768965915378*^9, 3.822769103583025*^9}, {
   3.822769178709004*^9, 3.8227692817877913`*^9}, {3.822769389502707*^9, 
   3.8227693910444813`*^9}, {3.8227694250471067`*^9, 
   3.8227694574464397`*^9}, {3.822769615534672*^9, 3.822769642971756*^9}, {
   3.822769678043614*^9, 3.822769680182529*^9}, {3.8227697325734367`*^9, 
   3.8227697643887987`*^9}, {3.822769798625085*^9, 3.8227698011922493`*^9}, {
   3.822769864353509*^9, 3.822769872730103*^9}, {3.822769924676528*^9, 
   3.822769925686647*^9}, {3.822770220125217*^9, 3.822770227295835*^9}, {
   3.82277039369071*^9, 3.822770396011196*^9}, {3.8227705438541927`*^9, 
   3.8227705506596727`*^9}, {3.82277063129852*^9, 3.822770634645866*^9}, {
   3.822770734215023*^9, 3.822770735880397*^9}, {3.8227708004876432`*^9, 
   3.822770810731697*^9}, {3.8227708728357267`*^9, 3.8227708738360043`*^9}, {
   3.822770911551949*^9, 3.822770912305571*^9}, {3.822770943710021*^9, 
   3.822770944351471*^9}, {3.8227710770771933`*^9, 3.822771078443231*^9}, {
   3.822771220210421*^9, 3.822771222320072*^9}, {3.822771372092721*^9, 
   3.822771373034087*^9}, {3.822772324980081*^9, 3.8227723620768023`*^9}, {
   3.82277259217983*^9, 3.822772623603525*^9}, {3.822773465685968*^9, 
   3.82277346806444*^9}, {3.822773544378991*^9, 3.822773566650971*^9}, {
   3.822773647547339*^9, 3.822773651188512*^9}, {3.822773728726441*^9, 
   3.8227737494626083`*^9}, {3.822773784073443*^9, 3.8227738841949778`*^9}, {
   3.82277404609307*^9, 3.822774308284463*^9}, {3.8227743775776043`*^9, 
   3.822774435278317*^9}, {3.822774512621724*^9, 3.822774513891156*^9}, {
   3.822774770114532*^9, 3.8227747703941383`*^9}, {3.822775898202375*^9, 
   3.822775899474823*^9}, {3.822776293180382*^9, 3.822776294158725*^9}, {
   3.822776371264763*^9, 3.822776399217691*^9}, {3.822776546732705*^9, 
   3.822776564217957*^9}, {3.82277663552491*^9, 3.822776661414197*^9}, {
   3.822776725647094*^9, 3.822776726898096*^9}, {3.822777411473275*^9, 
   3.822777414378894*^9}, {3.8227774532577877`*^9, 3.822777457096243*^9}, {
   3.822780653982757*^9, 3.822780752658444*^9}, {3.8227808037370367`*^9, 
   3.822780834383005*^9}, {3.822781032961485*^9, 3.8227810487452803`*^9}, {
   3.8227810865331697`*^9, 3.8227811132056828`*^9}, {3.822781170320176*^9, 
   3.8227811782517157`*^9}, {3.822786380523683*^9, 3.822786380796595*^9}, {
   3.822807292326948*^9, 3.822807371915476*^9}, {3.822807528659994*^9, 
   3.822807529612527*^9}, {3.822810935714233*^9, 3.822811020859233*^9}, {
   3.822811115299499*^9, 3.822811136567137*^9}, {3.822811292877494*^9, 
   3.822811403225095*^9}, {3.822811447903882*^9, 3.8228114487596397`*^9}, {
   3.8228115784231443`*^9, 3.822811593892089*^9}, {3.822811647037387*^9, 
   3.82281187269582*^9}, {3.822811911302072*^9, 3.8228119724637527`*^9}, {
   3.822812035462675*^9, 3.822812327751745*^9}, {3.822812660971586*^9, 
   3.822813018503661*^9}, {3.822813068407493*^9, 3.82281312202595*^9}, {
   3.82281322245079*^9, 3.8228133234193563`*^9}, {3.822813549986919*^9, 
   3.822813551804182*^9}, {3.8228136896234913`*^9, 3.822813696228263*^9}, {
   3.822813978918117*^9, 3.822813995065452*^9}, {3.822818244623843*^9, 
   3.822818246243166*^9}, {3.822824833363448*^9, 3.822824836626668*^9}, {
   3.822825067909801*^9, 3.822825068813911*^9}, {3.822825119543256*^9, 
   3.822825126889475*^9}, {3.822826378113462*^9, 3.822826438189413*^9}, {
   3.822826604997801*^9, 3.822826635881621*^9}, {3.822826897327634*^9, 
   3.822826912351396*^9}, {3.822827075438588*^9, 3.8228270773488894`*^9}, {
   3.822828107546652*^9, 3.822828348305471*^9}, {3.822828430719534*^9, 
   3.822828451439538*^9}, {3.822828702623497*^9, 3.8228287572377777`*^9}, {
   3.822828873723413*^9, 3.8228289778340282`*^9}, {3.822829053307859*^9, 
   3.822829061532229*^9}, {3.822829475923417*^9, 3.822829498730929*^9}, {
   3.822829847786668*^9, 3.8228299388528748`*^9}, {3.8228305052879963`*^9, 
   3.8228305082409983`*^9}, {3.822830654722733*^9, 3.822830696041337*^9}, {
   3.822830892649048*^9, 3.822830896536841*^9}, {3.822831010234757*^9, 
   3.822831035406107*^9}, {3.822831510102559*^9, 3.8228315105205717`*^9}, {
   3.8228319436931953`*^9, 3.822831952833459*^9}, {3.822832127321341*^9, 
   3.822832170178246*^9}, {3.822832200329175*^9, 3.822832228924795*^9}, {
   3.822832618094421*^9, 3.8228326818884*^9}, {3.822832719070854*^9, 
   3.82283278148923*^9}, {3.822832855415099*^9, 3.822832907008849*^9}, {
   3.822832975354504*^9, 3.822833108404776*^9}, {3.822833153860446*^9, 
   3.8228333328666477`*^9}, {3.822833389416542*^9, 3.822833389555606*^9}, {
   3.8228335392548437`*^9, 3.822833568475313*^9}, {3.8228336751849613`*^9, 
   3.822833675631822*^9}, {3.8228337445100927`*^9, 3.8228337446529617`*^9}, {
   3.8228337885216017`*^9, 3.822833940430197*^9}, {3.8228340824961033`*^9, 
   3.822834084447257*^9}, {3.822834279480749*^9, 3.822834281059432*^9}, {
   3.8228344837975073`*^9, 3.8228345320451202`*^9}, {3.822834618976022*^9, 
   3.822834639980318*^9}, {3.822834899273677*^9, 3.82283490929919*^9}, {
   3.8228350047484503`*^9, 3.8228350468688517`*^9}, {3.822835081148922*^9, 
   3.822835086856118*^9}, {3.822835117576354*^9, 3.8228351528587303`*^9}, {
   3.8228353614453382`*^9, 3.8228354307814074`*^9}, {3.8228357167238913`*^9, 
   3.822835739607747*^9}, {3.822836270246211*^9, 3.822836276044056*^9}, {
   3.8228366306218557`*^9, 3.822836673418763*^9}, {3.822837932053529*^9, 
   3.822837957798931*^9}, {3.822838195370408*^9, 3.8228381958749943`*^9}, {
   3.822838233212042*^9, 3.8228382798874273`*^9}, {3.82283832596813*^9, 
   3.8228384422869053`*^9}, {3.8228384766063147`*^9, 3.822838480468131*^9}, {
   3.8228389023712273`*^9, 3.8228389950290127`*^9}, {3.8228392214044037`*^9, 
   3.822839225079582*^9}, {3.8228394608348303`*^9, 3.8228395037029676`*^9}, {
   3.822839534559169*^9, 3.822839617453252*^9}, {3.822839698682331*^9, 
   3.822839724068959*^9}, 3.822850146074215*^9, {3.822851603713711*^9, 
   3.822851604781577*^9}, {3.82285163506266*^9, 3.822851637615608*^9}, {
   3.822858248204705*^9, 3.822858256081233*^9}, {3.8228583211661797`*^9, 
   3.8228583252021933`*^9}, 3.822858886791008*^9, {3.822859734159089*^9, 
   3.822859750926794*^9}, {3.822860077876883*^9, 3.822860079043867*^9}, {
   3.822860223695606*^9, 3.822860229953556*^9}, {3.822861735456339*^9, 
   3.8228617695612707`*^9}, {3.8234201142328863`*^9, 3.823420116534828*^9}, {
   3.8234202959007063`*^9, 3.823420419255557*^9}, 3.8234215780034513`*^9, 
   3.823439359210102*^9, 3.8234394256015587`*^9, {3.823439571011128*^9, 
   3.823439603146224*^9}, {3.8234397679096937`*^9, 3.823439768701622*^9}, {
   3.823445711988881*^9, 3.82344571220826*^9}, 3.823528602098598*^9, {
   3.823529190517065*^9, 3.8235291908447866`*^9}, {3.823532524148479*^9, 
   3.823532617946772*^9}, {3.823532739198613*^9, 3.823532786694042*^9}, {
   3.8235328329185133`*^9, 3.823532841032249*^9}, 3.823534490532179*^9, {
   3.8235345420656757`*^9, 3.823534542391657*^9}, {3.823534806279792*^9, 
   3.823534855104854*^9}, {3.823534980588543*^9, 3.8235349927926064`*^9}, {
   3.823535067098454*^9, 3.8235350896994743`*^9}, {3.823535142015245*^9, 
   3.823535210550267*^9}, {3.823535693614765*^9, 3.8235357309302063`*^9}, 
   3.82353591960604*^9, {3.8235367601068983`*^9, 3.823536903666932*^9}, {
   3.823549947241047*^9, 3.823550021747134*^9}, {3.823550058485005*^9, 
   3.8235500713815813`*^9}, {3.8235501469810047`*^9, 
   3.8235501868204203`*^9}, {3.82355021917388*^9, 3.823550335743696*^9}, {
   3.823550380202187*^9, 3.823550388476039*^9}, {3.823550503993421*^9, 
   3.8235506472002487`*^9}, {3.82355094339145*^9, 3.8235509490611134`*^9}, {
   3.823551044524177*^9, 3.823551084140901*^9}, {3.823551121047875*^9, 
   3.823551128038656*^9}, {3.823551158498344*^9, 3.823551160362502*^9}, {
   3.823551194751533*^9, 3.823551405062641*^9}, {3.823551493188328*^9, 
   3.823551495909911*^9}, {3.8235515286699533`*^9, 3.823551681048366*^9}, {
   3.823551745577896*^9, 3.823551750540395*^9}, {3.8235518046681643`*^9, 
   3.82355187730337*^9}, {3.823552018763588*^9, 3.823552041263732*^9}, {
   3.823552089139554*^9, 3.8235521001460533`*^9}, {3.82355214176514*^9, 
   3.823552156659446*^9}, {3.823552250236888*^9, 3.823552266748666*^9}, {
   3.823552414589753*^9, 3.8235524398298883`*^9}, {3.8235525427326937`*^9, 
   3.8235526131660833`*^9}, {3.823552667555132*^9, 3.82355266901045*^9}, {
   3.823583313840302*^9, 3.8235833170226717`*^9}, {3.823583795124588*^9, 
   3.8235837998742533`*^9}, {3.823584955460669*^9, 3.823584956387795*^9}, {
   3.823585030646481*^9, 3.823585043592183*^9}, {3.82358516658811*^9, 
   3.823585168367907*^9}, {3.8235856677280607`*^9, 3.823585668444004*^9}, {
   3.823585702203719*^9, 3.823585794500784*^9}, {3.823586130571974*^9, 
   3.8235861345335913`*^9}, {3.8235861697365522`*^9, 3.823586316474668*^9}, {
   3.823586977000691*^9, 3.823587143427211*^9}, 3.8235871775804787`*^9, {
   3.823588193757373*^9, 3.823588377355896*^9}, {3.823588688060123*^9, 
   3.823588988344674*^9}, {3.823589025638957*^9, 3.823589057099394*^9}, {
   3.823589094631966*^9, 3.823589181808312*^9}, {3.8235892329753647`*^9, 
   3.823589277074695*^9}, {3.823589312466261*^9, 3.823589313488977*^9}, 
   3.823590086553472*^9, {3.823590989410645*^9, 3.8235912012893047`*^9}, {
   3.8235912713011293`*^9, 3.823591278251439*^9}, {3.823591416081067*^9, 
   3.823591472110351*^9}, {3.8235919674000807`*^9, 3.823592016243621*^9}, {
   3.823592088963039*^9, 3.8235921890365458`*^9}, {3.82359375568327*^9, 
   3.823594086948016*^9}, 3.823594262121002*^9, {3.823594530255805*^9, 
   3.823594533830085*^9}, {3.8235945754163*^9, 3.823594609735675*^9}, 
   3.823594662067377*^9, {3.823595322452907*^9, 3.8235953307636013`*^9}, {
   3.823595625851141*^9, 3.823595731377769*^9}, {3.823597518771435*^9, 
   3.8235975258230457`*^9}, {3.823597744206455*^9, 3.823597762570114*^9}, {
   3.823599628719244*^9, 3.823599783860278*^9}, {3.82359982645783*^9, 
   3.823599843157984*^9}, {3.823599885273264*^9, 3.823599888456986*^9}, {
   3.823601042952463*^9, 3.82360109260222*^9}, {3.823601127683498*^9, 
   3.823601128346681*^9}, {3.823601414610077*^9, 3.823601419061632*^9}, {
   3.823601497758299*^9, 3.8236014986109324`*^9}, 3.823604625200027*^9, 
   3.823604716366366*^9, {3.823604812483136*^9, 3.82360481906561*^9}, 
   3.823604853163741*^9, {3.823604990999295*^9, 3.823605025033395*^9}, {
   3.823605313250412*^9, 3.823605363912342*^9}, 3.823606079404675*^9, {
   3.823609264123804*^9, 3.823609373291404*^9}, {3.823610453431542*^9, 
   3.823610520429449*^9}, {3.8236111824019403`*^9, 3.8236112269252863`*^9}, {
   3.82361192469341*^9, 3.8236119250035543`*^9}, {3.823613849541223*^9, 
   3.8236138526859694`*^9}, {3.823613882957337*^9, 3.82361389924866*^9}, {
   3.8236139358092947`*^9, 3.82361399126153*^9}, {3.8236142201058483`*^9, 
   3.8236142219686604`*^9}, {3.823614415821213*^9, 3.823614419856247*^9}, {
   3.8236144535000963`*^9, 3.823614495808261*^9}, {3.8236146126213903`*^9, 
   3.823614623631727*^9}, {3.823616558748362*^9, 3.823616564333705*^9}, {
   3.823616613205838*^9, 3.823616613503994*^9}, {3.823621391154076*^9, 
   3.823621397879694*^9}, {3.82363307047762*^9, 3.823633099546299*^9}, {
   3.823633178590507*^9, 3.8236331822813253`*^9}, {3.823633226462573*^9, 
   3.823633227721933*^9}, {3.8236343816840143`*^9, 3.823634381844029*^9}, {
   3.8236414558123713`*^9, 3.823641479112693*^9}, {3.823670304495624*^9, 
   3.823670321274777*^9}, {3.8236703750484333`*^9, 3.823670378335526*^9}, {
   3.823684265294132*^9, 3.823684318309147*^9}, {3.8236907462047977`*^9, 
   3.823690765023693*^9}, {3.823695011472039*^9, 3.823695044502091*^9}, {
   3.823697246781299*^9, 3.8236972648541594`*^9}, {3.823697304468512*^9, 
   3.8236973551884727`*^9}, {3.823697495508532*^9, 3.8236975143772793`*^9}, {
   3.82371077612574*^9, 3.823710779031505*^9}, {3.823710816969275*^9, 
   3.823710843755125*^9}, {3.823711162437264*^9, 3.8237112249400806`*^9}, {
   3.8237112583187*^9, 3.8237112624347677`*^9}, {3.82371132132176*^9, 
   3.8237114816192102`*^9}, {3.823711721830717*^9, 3.823711749229286*^9}, {
   3.823711800624652*^9, 3.823711834066428*^9}, {3.823711937445529*^9, 
   3.8237119580463543`*^9}, {3.823712052837397*^9, 3.823712081049726*^9}, {
   3.823713575695407*^9, 3.823713577351568*^9}, {3.8237141967582283`*^9, 
   3.823714239793366*^9}, {3.823716209086113*^9, 3.8237162428518248`*^9}, {
   3.823716766563403*^9, 3.823716773840096*^9}, {3.823716809616623*^9, 
   3.8237168315193253`*^9}, {3.823717453016507*^9, 3.823717453621161*^9}, {
   3.8237174863788443`*^9, 3.823717489430715*^9}, {3.8237186913741007`*^9, 
   3.823718697426566*^9}, {3.8237230920443563`*^9, 3.823723105257889*^9}, {
   3.823725093655446*^9, 3.8237251079551973`*^9}, {3.823725333412766*^9, 
   3.823725341694599*^9}, {3.823751948506546*^9, 3.823751951671986*^9}, {
   3.823752779074217*^9, 3.8237528071378727`*^9}, {3.82375283911469*^9, 
   3.823752864136467*^9}, {3.823753404879815*^9, 3.8237534074533463`*^9}, 
   3.823754335899004*^9, {3.823756031917647*^9, 3.823756038125533*^9}, {
   3.823756945021174*^9, 3.8237569458018713`*^9}, {3.82375704973342*^9, 
   3.823757050592787*^9}, {3.823768495754774*^9, 3.823768504422738*^9}, {
   3.823770567899536*^9, 3.823770668324643*^9}, {3.8237709989798403`*^9, 
   3.823771000212308*^9}, {3.823771341246592*^9, 3.823771347732224*^9}, {
   3.8237714071871843`*^9, 3.823771415265832*^9}, {3.823779515901339*^9, 
   3.823779801118269*^9}, {3.8237806249935102`*^9, 3.823780644442745*^9}, {
   3.823788013380501*^9, 3.8237880340513773`*^9}, {3.823940299964137*^9, 
   3.82394030009993*^9}, {3.823943013758355*^9, 3.8239430489228287`*^9}, {
   3.823943141468729*^9, 3.823943148953133*^9}, {3.8239432453301086`*^9, 
   3.823943284828331*^9}, 3.823943520202198*^9, {3.8239451044003468`*^9, 
   3.823945107899839*^9}, {3.823953610163478*^9, 3.8239536163478947`*^9}, {
   3.8239539068149567`*^9, 3.8239539099165077`*^9}, {3.8239546966011972`*^9, 
   3.82395471246767*^9}, {3.8240455370156803`*^9, 3.8240455464411917`*^9}, {
   3.8240455793292427`*^9, 3.824045581726969*^9}, 3.824045621233227*^9, {
   3.824045674793413*^9, 3.82404571904592*^9}, {3.8240457650120573`*^9, 
   3.824045777589467*^9}, {3.824045885525251*^9, 3.824045907596431*^9}, {
   3.824046056140748*^9, 3.8240460791967297`*^9}, {3.8240464124232197`*^9, 
   3.82404644271762*^9}, {3.824052759736142*^9, 3.824052760488967*^9}, {
   3.824052821102157*^9, 3.824052832225107*^9}, {3.824056746689221*^9, 
   3.8240567473349257`*^9}, {3.824056886936778*^9, 3.824056887066123*^9}, {
   3.824056939808653*^9, 3.8240569956151648`*^9}, {3.82406028566057*^9, 
   3.824060318180421*^9}, {3.824060429351767*^9, 3.824060430882636*^9}, {
   3.824060616341539*^9, 3.824060625510305*^9}, {3.824064064015003*^9, 
   3.824064065601905*^9}, {3.8240641511933002`*^9, 3.824064162014756*^9}, {
   3.824064201539193*^9, 3.82406425216083*^9}, 3.8240643249580107`*^9, {
   3.8240647894261703`*^9, 3.8240649040255537`*^9}, {3.824065035403655*^9, 
   3.824065140094378*^9}, {3.824065175655686*^9, 3.824065209038598*^9}, {
   3.824115458225988*^9, 3.824115507935285*^9}, {3.824124959230843*^9, 
   3.8241249673172817`*^9}, {3.8241276731701183`*^9, 3.824127697382465*^9}, {
   3.824129822414916*^9, 3.824129830944118*^9}, {3.824129893302397*^9, 
   3.824129914483831*^9}, {3.82413044394466*^9, 3.824130452417828*^9}, 
   3.824131530961121*^9, {3.824134345283375*^9, 3.824134388683681*^9}, {
   3.82413490953441*^9, 3.824135158362446*^9}, {3.8241351917700043`*^9, 
   3.824135237535748*^9}, {3.824135273513978*^9, 3.824135321577793*^9}, {
   3.82413819751128*^9, 3.824138205515108*^9}, {3.824138237955942*^9, 
   3.824138241242322*^9}, {3.824139575163011*^9, 3.824139609113576*^9}, {
   3.8241417865138702`*^9, 3.824142147913919*^9}, 3.824142848529324*^9, {
   3.824188166658251*^9, 3.824188166971436*^9}, {3.824188612592845*^9, 
   3.824188617904533*^9}, {3.824193642276539*^9, 3.824193642766398*^9}, {
   3.824195621161024*^9, 3.8241956212857323`*^9}, {3.824196652159816*^9, 
   3.824196744942978*^9}, {3.8241977272346697`*^9, 3.824197752481512*^9}, {
   3.824198501450794*^9, 3.824198568390031*^9}, {3.824200863055756*^9, 
   3.824200872214259*^9}, {3.824210108544971*^9, 3.824210126101013*^9}, 
   3.824212263528141*^9, {3.8242142984526567`*^9, 3.824214318266594*^9}, {
   3.8242202667719584`*^9, 3.824220268065528*^9}, {3.8242205083477297`*^9, 
   3.824220522208424*^9}, {3.824223900400037*^9, 3.824223900972487*^9}, {
   3.824294966128542*^9, 3.824295060307137*^9}, {3.824295096461597*^9, 
   3.824295101805642*^9}, {3.824295153252967*^9, 3.8242951587275753`*^9}, {
   3.824295207692618*^9, 3.824295236618284*^9}, {3.824296061712043*^9, 
   3.824296091066305*^9}, {3.824296328159781*^9, 3.824296336986953*^9}, {
   3.8242963755841618`*^9, 3.824296384145405*^9}, {3.8242985693838663`*^9, 
   3.824298574184946*^9}, {3.824298848405962*^9, 3.824298867168269*^9}, {
   3.824299242639201*^9, 3.824299243459223*^9}, {3.824299453365321*^9, 
   3.8242994655608892`*^9}, {3.8242995042933397`*^9, 
   3.8242995110406427`*^9}, {3.8242997606260033`*^9, 3.824299764220682*^9}, {
   3.8243005573528643`*^9, 3.82430055881691*^9}, {3.824300611111121*^9, 
   3.8243006128446836`*^9}, {3.8243006950803127`*^9, 
   3.8243007329161654`*^9}, {3.824300935748876*^9, 3.824300978553939*^9}, {
   3.824301157157516*^9, 3.824301159081505*^9}, {3.824301220531694*^9, 
   3.8243012258766813`*^9}, {3.824302070628528*^9, 3.824302081461019*^9}, {
   3.824302365326556*^9, 3.824302464646496*^9}, {3.824302543982318*^9, 
   3.824302555306704*^9}, {3.8243027797171926`*^9, 3.824302783559651*^9}, {
   3.8243036244157248`*^9, 3.824303640360798*^9}, {3.824303705337516*^9, 
   3.824303744933778*^9}, {3.824303836096053*^9, 3.824303885286385*^9}, {
   3.8243039232558413`*^9, 3.824303992873065*^9}, 3.8243046014624443`*^9, {
   3.824304721423376*^9, 3.8243047255186443`*^9}, {3.824304761451281*^9, 
   3.82430479234863*^9}, {3.824305559485857*^9, 3.8243055666149*^9}, {
   3.824306197288363*^9, 3.8243062468901663`*^9}, {3.824307064637556*^9, 
   3.824307066870605*^9}, {3.824307371132061*^9, 3.82430737504605*^9}, {
   3.824307407346196*^9, 3.824307415582924*^9}, {3.8243076182727833`*^9, 
   3.8243076184472713`*^9}, {3.82430774369795*^9, 3.8243077446490593`*^9}, {
   3.824308085025352*^9, 3.824308090725337*^9}, {3.824308199422291*^9, 
   3.824308206140506*^9}, {3.824308252785657*^9, 3.8243082935669937`*^9}, {
   3.824308324482592*^9, 3.824308410682747*^9}, {3.8243084496502953`*^9, 
   3.824308488910963*^9}, {3.8243093942811413`*^9, 3.824309430982087*^9}, {
   3.8243107923867207`*^9, 3.8243108445735292`*^9}, {3.824311024166565*^9, 
   3.824311027453088*^9}, {3.8243184501323423`*^9, 3.824318464487668*^9}, {
   3.8243202162284822`*^9, 3.8243202911329947`*^9}, {3.824321859990234*^9, 
   3.824321862062951*^9}, {3.824321917716749*^9, 3.824321950334517*^9}, {
   3.824321988843864*^9, 3.82432222452626*^9}, {3.824322329498057*^9, 
   3.824322330211993*^9}, {3.824322614074294*^9, 3.824322631974923*^9}, {
   3.824323890558671*^9, 3.824323891136404*^9}, {3.824537418492444*^9, 
   3.824537424122225*^9}, {3.824538130925724*^9, 3.824538142393158*^9}, {
   3.824538295437866*^9, 3.824538299246235*^9}, {3.824538484960519*^9, 
   3.824538527757381*^9}, 3.82453855786154*^9, {3.824539278213999*^9, 
   3.8245392903795357`*^9}, {3.824540075990387*^9, 3.824540076833686*^9}, {
   3.8245447938595867`*^9, 3.824544794903626*^9}, {3.824544962410778*^9, 
   3.824545005551125*^9}, {3.8245450589251204`*^9, 3.824545076376213*^9}, {
   3.824548329157998*^9, 3.824548332446637*^9}, {3.82454915815876*^9, 
   3.824549167377708*^9}, {3.8245492198720703`*^9, 3.824549220563349*^9}, {
   3.824755305476252*^9, 3.824755306765834*^9}, {3.82485053687591*^9, 
   3.824850564779814*^9}, {3.824883120918393*^9, 3.8248831405625*^9}, {
   3.824883246261015*^9, 3.8248833115745087`*^9}, {3.8248833622595053`*^9, 
   3.824883473262661*^9}, {3.824883677202252*^9, 3.8248836814067297`*^9}, {
   3.824883862802598*^9, 3.824883869441951*^9}, {3.825014610297204*^9, 
   3.8250146110752974`*^9}, {3.8250165996349382`*^9, 3.825016600928647*^9}, {
   3.825058150430339*^9, 3.825058153579541*^9}, {3.8250630183201523`*^9, 
   3.825063058617509*^9}, 3.825104545560051*^9, {3.82510563664517*^9, 
   3.825105655523931*^9}, {3.825105704992066*^9, 3.8251057613434362`*^9}, {
   3.825106295956503*^9, 3.8251062982168694`*^9}, {3.825106738580282*^9, 
   3.8251067443225517`*^9}, {3.8251067766094418`*^9, 3.825106808256688*^9}, {
   3.825106860443375*^9, 3.825106878117125*^9}, {3.825106922627831*^9, 
   3.8251069276237288`*^9}, {3.82526760676342*^9, 3.8252676381881104`*^9}, {
   3.825268222776764*^9, 3.825268236131613*^9}, {3.8254957790766773`*^9, 
   3.825495791022871*^9}, {3.825495824222884*^9, 3.825495826860299*^9}, {
   3.825495858474276*^9, 3.825495859922833*^9}, {3.825498459321604*^9, 
   3.825498472200067*^9}, {3.825508410180365*^9, 3.825508412471156*^9}, {
   3.825510535785088*^9, 3.825510541736676*^9}, {3.8255110258935127`*^9, 
   3.825511031049593*^9}, {3.8255111796119833`*^9, 3.825511184914736*^9}, {
   3.825511873474053*^9, 3.825511874715992*^9}, 3.825511911160968*^9, {
   3.825512019043532*^9, 3.825512029076371*^9}, {3.825512066218796*^9, 
   3.825512320383342*^9}, {3.825512994360845*^9, 3.825513016641941*^9}, {
   3.825513099322051*^9, 3.82551320588933*^9}, {3.8255132374060087`*^9, 
   3.8255132705249033`*^9}, {3.825513305573246*^9, 3.82551337346861*^9}, {
   3.82551388475298*^9, 3.825513891560669*^9}, {3.825514413022797*^9, 
   3.825514428461008*^9}, {3.8255181205650673`*^9, 3.825518122316593*^9}, {
   3.8255182455727663`*^9, 3.825518248354433*^9}, {3.825534223641121*^9, 
   3.825534237994011*^9}, {3.825534599634287*^9, 3.825534700502471*^9}, {
   3.825534742211144*^9, 3.825534764676961*^9}, {3.825534946276765*^9, 
   3.825534981417391*^9}, {3.825535048088523*^9, 3.82553505038449*^9}, {
   3.825660849483787*^9, 3.825660864110058*^9}, {3.825664698419793*^9, 
   3.825664723565132*^9}, {3.825665049669495*^9, 3.82566505377386*^9}, {
   3.825665393241602*^9, 3.8256655022016172`*^9}, {3.8256680448530807`*^9, 
   3.825668103089615*^9}, {3.825672081418087*^9, 3.825672088093466*^9}, 
   3.825673266449448*^9, {3.825675553202299*^9, 3.825675555203444*^9}, {
   3.825675601351818*^9, 3.825675684967312*^9}, {3.825675729569035*^9, 
   3.825675761334628*^9}, {3.825675974498933*^9, 3.825675982675151*^9}, {
   3.825676023333053*^9, 3.825676030887165*^9}, {3.8256761381984577`*^9, 
   3.825676193958191*^9}, {3.825785321064992*^9, 3.8257853222568502`*^9}, {
   3.825785360406653*^9, 3.825785392440948*^9}, {3.8257854888904657`*^9, 
   3.825785544623884*^9}, {3.825785575988226*^9, 3.825785637414837*^9}, {
   3.825785975166486*^9, 3.825785984346795*^9}, {3.825787528283985*^9, 
   3.825787659713517*^9}, {3.825787842281169*^9, 3.8257878681666594`*^9}, {
   3.825788346081984*^9, 3.825788371099234*^9}, {3.825791531086545*^9, 
   3.825791573672353*^9}, {3.82609426681771*^9, 3.826094301245672*^9}, {
   3.8260943388328133`*^9, 3.826094389856464*^9}, 3.826120322169571*^9, {
   3.8261207046360683`*^9, 3.8261207615476723`*^9}, {3.826120888806754*^9, 
   3.826120889126109*^9}, {3.826138110252082*^9, 3.8261381136511993`*^9}, {
   3.826138231845673*^9, 3.826138232678771*^9}, {3.826138262737748*^9, 
   3.82613830698333*^9}, {3.8261385515443068`*^9, 3.826138552318265*^9}, {
   3.826139766372301*^9, 3.826139769926347*^9}, {3.826140448893526*^9, 
   3.8261404520097933`*^9}, {3.826144910501575*^9, 3.826144912675462*^9}, {
   3.826145205520015*^9, 3.826145213235814*^9}, {3.826198720956499*^9, 
   3.8261987749690104`*^9}, {3.826198874868515*^9, 3.826198876043291*^9}, {
   3.826199173007904*^9, 3.826199175377626*^9}, {3.826199218302203*^9, 
   3.8261992204719963`*^9}, {3.8262702423674173`*^9, 3.826270242648131*^9}, {
   3.826270468282893*^9, 3.826270473673602*^9}, {3.82627691820885*^9, 
   3.826276958617146*^9}, {3.8262773191321917`*^9, 3.826277383484249*^9}, {
   3.826277432107605*^9, 3.826277437786437*^9}, {3.826277475344172*^9, 
   3.826277485457539*^9}, {3.826298328914434*^9, 3.826298409068282*^9}, {
   3.826298530553568*^9, 3.826298531692553*^9}, {3.826299052951599*^9, 
   3.826299065179369*^9}, {3.826299229301776*^9, 3.826299230544084*^9}, {
   3.826302431576777*^9, 3.826302454738573*^9}, {3.826302501195551*^9, 
   3.826302553803144*^9}, {3.826302609693803*^9, 3.826302616352551*^9}, {
   3.82669881853535*^9, 3.826698824871673*^9}, {3.826698870378009*^9, 
   3.826698921686386*^9}, {3.826698978096369*^9, 3.826698979255539*^9}, {
   3.826699382633584*^9, 3.826699454624948*^9}, {3.826699752670434*^9, 
   3.826699755070755*^9}, {3.826701600273657*^9, 3.826701692990178*^9}, {
   3.826711499616312*^9, 3.8267114998103037`*^9}, {3.826723542544141*^9, 
   3.826723604106338*^9}, {3.826724056838066*^9, 3.826724097339995*^9}, {
   3.827381578658127*^9, 3.827381682308859*^9}, {3.827590206191196*^9, 
   3.827590265781546*^9}, {3.827590320063257*^9, 3.827590428656948*^9}, 
   3.8275904632356043`*^9, {3.827590672275003*^9, 3.827590693663891*^9}, {
   3.82759151998945*^9, 3.827591526933489*^9}, {3.827591667079279*^9, 
   3.827591699812133*^9}, {3.827591869378847*^9, 3.827591871063985*^9}, {
   3.827592982261919*^9, 3.827592984645404*^9}, {3.829129975471951*^9, 
   3.829129975691337*^9}, 3.829727228365007*^9, 3.830406047660296*^9, {
   3.830516846524458*^9, 3.8305168554346647`*^9}, 3.830516983702199*^9, {
   3.830517122283965*^9, 3.830517149353979*^9}, {3.8305172029748287`*^9, 
   3.830517255116683*^9}, {3.830883768021872*^9, 3.8308837760179873`*^9}, {
   3.830887742813096*^9, 3.830887756183467*^9}, {3.836553889895269*^9, 
   3.836553906000643*^9}, {3.8365539446945*^9, 3.8365539542589903`*^9}, {
   3.836554142757292*^9, 3.836554170334568*^9}, {3.836554207809362*^9, 
   3.836554210781348*^9}, {3.841281504914192*^9, 3.841281512472829*^9}, {
   3.841281557505576*^9, 3.841281560268291*^9}, {3.8412816407013683`*^9, 
   3.841281646924739*^9}, {3.8412819825290527`*^9, 3.841282004509449*^9}, {
   3.841282202095355*^9, 3.84128221790936*^9}, {3.8412851004303293`*^9, 
   3.841285107575028*^9}, {3.84128710627743*^9, 3.841287108442604*^9}, {
   3.841373606013208*^9, 3.841373629258903*^9}, {3.841373686668873*^9, 
   3.8413737203944807`*^9}, 3.8413745069049597`*^9, {3.8413747134154787`*^9, 
   3.841374721335206*^9}, {3.841375495003571*^9, 3.841375509683024*^9}, {
   3.841375592493779*^9, 3.841375614284273*^9}, {3.848660937775676*^9, 
   3.848660938531136*^9}, {3.848667472803022*^9, 3.8486675387699013`*^9}, {
   3.8486679798993683`*^9, 3.848668000574142*^9}, {3.848668941293209*^9, 
   3.848668994305099*^9}, {3.848669345871215*^9, 3.8486693484095297`*^9}, {
   3.84866997914004*^9, 3.84866998113693*^9}, {3.848670432247521*^9, 
   3.848670449552619*^9}, {3.848672515049727*^9, 3.848672520574985*^9}, {
   3.848729216378002*^9, 3.84872924538651*^9}, {3.848730517189725*^9, 
   3.848730565844849*^9}, {3.8487307789576817`*^9, 3.848730798634769*^9}, 
   3.84949967129289*^9, {3.849712851337772*^9, 3.8497128576339283`*^9}, {
   3.8497129148652983`*^9, 3.849712948649438*^9}, {3.849712979820606*^9, 
   3.849712990694585*^9}, {3.849713699907035*^9, 3.8497137277934637`*^9}, {
   3.8497138379509583`*^9, 3.849713844667927*^9}, {3.849713878190297*^9, 
   3.849713879714087*^9}, {3.8497737288295116`*^9, 3.849773734404529*^9}, {
   3.849878566390152*^9, 3.8498785676900682`*^9}, {3.849879107707847*^9, 
   3.849879125733337*^9}, {3.850217757456399*^9, 3.850217799932056*^9}, {
   3.850217857052908*^9, 3.850217867791634*^9}, {3.850217921755496*^9, 
   3.850217965050208*^9}, {3.850393876262211*^9, 3.8503938891478453`*^9}, {
   3.851150172477744*^9, 3.8511501770267076`*^9}, {3.851150294468104*^9, 
   3.8511504144875097`*^9}, {3.851150884537572*^9, 3.8511509253988028`*^9}, {
   3.8511518515807657`*^9, 3.851151919563807*^9}, {3.8511524315269337`*^9, 
   3.8511524542071457`*^9}, {3.851152492231286*^9, 3.851152500890918*^9}, {
   3.851152582125849*^9, 3.8511525824252243`*^9}, {3.851707657757352*^9, 
   3.851707699109293*^9}, {3.8559909250206623`*^9, 3.8559909663347797`*^9}, {
   3.855991024066531*^9, 3.855991124307199*^9}, 3.855991181808735*^9, {
   3.857628861500217*^9, 3.857628867590035*^9}, {3.865943295944415*^9, 
   3.8659432982161913`*^9}, {3.8659433425599937`*^9, 3.865943345683351*^9}, 
   3.86594340688768*^9, {3.8659439262069187`*^9, 3.865943926737352*^9}, {
   3.865944421095337*^9, 3.865944423610496*^9}, {3.865944589420731*^9, 
   3.865944593025494*^9}, {3.866020931213101*^9, 3.8660209413088923`*^9}, {
   3.8660210002757063`*^9, 3.8660210505328913`*^9}, {3.866027787777566*^9, 
   3.866027793097357*^9}, {3.866028040295907*^9, 3.866028233324695*^9}, {
   3.866028669481759*^9, 3.866028769536128*^9}, {3.866036892308441*^9, 
   3.866036942117139*^9}, {3.8660370593596478`*^9, 3.866037110975122*^9}, 
   3.866037519329899*^9, {3.866041674743902*^9, 3.866041711305743*^9}, {
   3.866048717159939*^9, 3.866048748223694*^9}, {3.866052023197975*^9, 
   3.86605203233895*^9}, {3.8660520998766403`*^9, 3.86605210949963*^9}, {
   3.866060140936995*^9, 3.866060147966448*^9}, {3.8661121183598633`*^9, 
   3.8661121708010073`*^9}, {3.866112211890114*^9, 3.866112226554192*^9}, {
   3.866112324408622*^9, 3.8661123535222387`*^9}, {3.866112390324079*^9, 
   3.8661123908995943`*^9}, {3.8661124970981703`*^9, 3.866112513546122*^9}, {
   3.8661126839054832`*^9, 3.866112685868424*^9}, {3.866112821551126*^9, 
   3.866112824422626*^9}, {3.866122782773778*^9, 3.8661228098862*^9}, 
   3.8661231999212713`*^9, {3.8661235489302197`*^9, 3.8661235807849083`*^9}, 
   3.866123613706284*^9, {3.866123695399446*^9, 3.866123697634091*^9}, {
   3.866123773579648*^9, 3.866123775350863*^9}, {3.866123846646624*^9, 
   3.8661238489260798`*^9}, {3.866123950359952*^9, 3.866123954018586*^9}, {
   3.866123992565769*^9, 3.866124010764385*^9}, {3.866124626601042*^9, 
   3.866124644757228*^9}, {3.866124862924201*^9, 3.8661248755815277`*^9}, {
   3.866125167855385*^9, 3.866125177709053*^9}, {3.866125764743889*^9, 
   3.866125766322424*^9}, {3.866126265774907*^9, 3.866126302650978*^9}, {
   3.8661263412962933`*^9, 3.866126412538513*^9}, {3.8661266849813623`*^9, 
   3.866126740390052*^9}, {3.8661267733718224`*^9, 3.866126834760798*^9}, {
   3.866127636399893*^9, 3.866127652569539*^9}, {3.866133628058872*^9, 
   3.866133645753477*^9}, {3.866133703325261*^9, 3.866133826680293*^9}, {
   3.866134829429892*^9, 3.8661348318054256`*^9}, {3.8661349093977623`*^9, 
   3.86613492566341*^9}, {3.86613600874864*^9, 3.8661360119325953`*^9}, {
   3.8661371482724047`*^9, 3.866137218055822*^9}, {3.8679097670793467`*^9, 
   3.8679097724564466`*^9}, {3.867910922189073*^9, 3.867910938783761*^9}, {
   3.867910982678852*^9, 3.867910983715641*^9}, 3.867911071035386*^9, {
   3.8679111206711407`*^9, 3.867911149483101*^9}, {3.867916267312516*^9, 
   3.8679163100698347`*^9}, {3.8679189672963877`*^9, 3.867919021177664*^9}, {
   3.8679196491829042`*^9, 3.867919653481863*^9}, {3.867919711630272*^9, 
   3.867919761500362*^9}, {3.8679224785584507`*^9, 3.8679224791109047`*^9}, {
   3.867923021110949*^9, 3.8679231599435253`*^9}, {3.86792321557683*^9, 
   3.867923315066835*^9}, {3.8679235726105328`*^9, 3.867923639851574*^9}, {
   3.867923672898978*^9, 3.867923679025462*^9}, {3.867923720592907*^9, 
   3.867923735693316*^9}, {3.86792396389058*^9, 3.8679239653267803`*^9}, {
   3.867940615385603*^9, 3.867940687631008*^9}, {3.867944219243743*^9, 
   3.8679442289437*^9}, {3.867944387385812*^9, 3.867944389666267*^9}, {
   3.8679448110387583`*^9, 3.867944815425565*^9}, {3.868006356126376*^9, 
   3.868006359533709*^9}, 
   3.868011135867877*^9},ExpressionUUID->"c121e646-8bc6-4559-8c6b-\
cbd2e7cae450"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1919., 1063.5},
WindowMargins->{{Automatic, 1296.5}, {Automatic, 16}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>0.7 Inherited,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"8b166d3f-0650-454d-9282-1670db3fabac"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 905, 12, 100, "Title",ExpressionUUID->"7532a72a-505f-400b-ac05-031ad951830d"],
Cell[CellGroupData[{
Cell[1510, 38, 170, 3, 35, "Subsection",ExpressionUUID->"f8927233-1ac2-41e3-b00e-d144b3c5eba1"],
Cell[CellGroupData[{
Cell[1705, 45, 355, 6, 34, "Subsubsection",ExpressionUUID->"1e964a40-6779-4f5b-96fe-d4a1b68f5e00"],
Cell[2063, 53, 642, 12, 56, "Input",ExpressionUUID->"7ad401c5-4a44-4d3f-9032-238544e328d2"],
Cell[2708, 67, 1960, 33, 100, "Input",ExpressionUUID->"84668fc4-2893-4c14-8e4b-bddb5cda67f9"],
Cell[4671, 102, 155, 3, 56, "Input",ExpressionUUID->"e55c13b5-fd4d-4566-8b44-ed2d838e21e3"]
}, Closed]],
Cell[CellGroupData[{
Cell[4863, 110, 309, 5, 34, "Subsubsection",ExpressionUUID->"364966f0-0fa9-4d5d-b8b6-b701b1d3988c"],
Cell[5175, 117, 267, 5, 42, "Input",ExpressionUUID->"b6080252-f3cc-4bc9-8a60-70aec65a167d"],
Cell[5445, 124, 35516, 593, 1562, "Input",ExpressionUUID->"d59efb8e-5439-4ec9-b913-64b1683d8faf"],
Cell[40964, 719, 8801, 201, 497, "Input",ExpressionUUID->"cb6def9c-7ea8-497e-98f6-6d2d93b34f68"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[49814, 926, 229, 4, 35, "Subsection",ExpressionUUID->"7c16ba10-869f-4022-94b3-019cda9ad76a"],
Cell[CellGroupData[{
Cell[50068, 934, 2275, 61, 349, "Input",ExpressionUUID->"6e6586ba-c3b0-48cb-bee7-877edf44242b"],
Cell[52346, 997, 2797, 41, 42, "Output",ExpressionUUID->"53678869-6c16-4e57-8bfd-d5bb382838cc"]
}, Open  ]],
Cell[55158, 1041, 8958, 159, 568, "Input",ExpressionUUID->"2dfc2f9a-60cf-4566-aa9d-8a7d6c960669"],
Cell[64119, 1202, 6637, 134, 743, "Input",ExpressionUUID->"704ffa78-82c2-43d5-9019-b217175dda74"],
Cell[70759, 1338, 8743, 185, 897, "Input",ExpressionUUID->"5f7a081a-0dab-4ea2-9bee-77fc2433ada6"]
}, Closed]],
Cell[CellGroupData[{
Cell[79539, 1528, 193, 3, 35, "Subsection",ExpressionUUID->"86d71386-1a3b-4b80-81b4-3a549c53d3cc"],
Cell[79735, 1533, 6573, 168, 616, "Input",ExpressionUUID->"a0dd377d-8d24-4f0f-a698-b5a7b7d2df22"]
}, Closed]],
Cell[CellGroupData[{
Cell[86345, 1706, 325, 5, 35, "Subsection",ExpressionUUID->"4b588684-548a-4e1e-aed2-19b22ae42b45"],
Cell[86673, 1713, 4603, 99, 289, "Input",ExpressionUUID->"6dfc71a2-81c6-4e6f-b18f-976a203c5174"],
Cell[91279, 1814, 8214, 145, 652, "Input",ExpressionUUID->"66614a13-c7b5-4205-9cbb-4b7567b62989"],
Cell[99496, 1961, 25238, 438, 1187, "Input",ExpressionUUID->"915d477a-b6c5-4de3-8c4a-db480cf1a6c5"],
Cell[124737, 2401, 7441, 148, 841, "Input",ExpressionUUID->"e92c345a-290a-4a0a-a739-d6519efa13a4"]
}, Closed]],
Cell[CellGroupData[{
Cell[132215, 2554, 187, 3, 35, "Subsection",ExpressionUUID->"cc2423f1-fc1f-476a-bb5d-2b3cd9e0d65f"],
Cell[132405, 2559, 4739, 94, 273, "Input",ExpressionUUID->"bb86377f-dd4e-4105-aeab-1ec44a0a18ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[137181, 2658, 385, 6, 35, "Subsection",ExpressionUUID->"2193745b-35cd-48e1-b811-90b2c4779fe8"],
Cell[137569, 2666, 3235, 73, 349, "Input",ExpressionUUID->"50c3a9ea-1878-48ac-a5d7-253fb3651fec"],
Cell[140807, 2741, 14391, 257, 1181, "Input",ExpressionUUID->"77b551ff-cdb5-48ce-93d3-ef660423fdb6"],
Cell[155201, 3000, 28559, 589, 1138, "Input",ExpressionUUID->"ff6e4f5f-4dbb-40b5-8e41-9c9a698ac247"],
Cell[183763, 3591, 22247, 398, 1193, "Input",ExpressionUUID->"91a75a03-08f1-4019-b332-57233552b753"],
Cell[206013, 3991, 18779, 376, 1739, "Input",ExpressionUUID->"25d983f7-49ab-4544-aa72-5be9073007aa"],
Cell[224795, 4369, 18537, 361, 1742, "Input",ExpressionUUID->"e5b49b2f-3e63-4721-ba59-12cade4c9ba5"]
}, Closed]],
Cell[CellGroupData[{
Cell[243369, 4735, 255, 4, 35, "Subsection",ExpressionUUID->"41bd046f-d56d-456b-a7b5-ea19f0998feb"],
Cell[CellGroupData[{
Cell[243649, 4743, 574, 8, 34, "Subsubsection",ExpressionUUID->"1af26ec8-4c38-4db5-bca3-f6e12e176a33"],
Cell[CellGroupData[{
Cell[244248, 4755, 7502, 174, 777, "Input",ExpressionUUID->"46f9886f-74fd-47e8-91e5-1ec9bbf4476a"],
Cell[251753, 4931, 13410, 188, 42, "Output",ExpressionUUID->"08334892-4203-4d72-844e-0c232b724991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265200, 5124, 2036, 46, 240, "Input",ExpressionUUID->"77efd437-9432-46e2-80b3-52287f1eb111"],
Cell[267239, 5172, 7138, 100, 42, "Output",ExpressionUUID->"a4e82288-0146-424c-9a03-efee91716551"]
}, Open  ]],
Cell[274392, 5275, 2027, 56, 218, "Input",ExpressionUUID->"0ccfb1a7-bb6d-4a05-805f-a651a473b296"],
Cell[276422, 5333, 2128, 55, 109, "Input",ExpressionUUID->"78490eab-7b55-4d12-a112-e200b658ebbf"]
}, Closed]],
Cell[CellGroupData[{
Cell[278587, 5393, 321, 7, 61, "Subsubsection",ExpressionUUID->"623cf927-cef2-4a2f-9852-815674ea007b"],
Cell[278911, 5402, 107380, 1761, 4848, "Input",ExpressionUUID->"c121e646-8bc6-4559-8c6b-cbd2e7cae450"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


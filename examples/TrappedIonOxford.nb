(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1348657,      25796]
NotebookOptionsPosition[   1294999,      24838]
NotebookOutlinePosition[   1341351,      25693]
CellTagsIndexPosition[   1341308,      25690]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Trapped-Ions Oxford/Hub  virtual device", "Title",
 CellChangeTimes->{{3.866179584565133*^9, 3.866179602585011*^9}, {
  3.866740794334939*^9, 
  3.8667408151039267`*^9}},ExpressionUUID->"a51a1c00-1c1e-4809-99a7-\
9b45151e9214"],

Cell[TextData[StyleBox["Set environment, such as threads, gpu, etc.",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.8528844215679693`*^9, 3.8528844367050333`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"c34d2386-44e3-4d12-8bcd-6e0adf0c59d5"],

Cell[BoxData[{
 RowBox[{"SetEnvironment", "[", 
  RowBox[{"\"\<OMP_NUM_THREADS\>\"", "\[Rule]", "\"\<8\>\""}], "]"}], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.872921462633623*^9},
 CellLabel->
  "In[2597]:=",ExpressionUUID->"4fb6ff86-df9c-4786-aab4-c5b29d03d1f8"],

Cell[TextData[StyleBox["Load the QuESTLink",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"c91ba40d-3b6c-42cd-bdae-10c38124ceab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Import", "[", "\"\</home/cica/programs/QuESTlink/Link/QuESTlink.m\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateLocalQuESTEnv", "[", "\"\<quest_link_cpu\>\"", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.82497505062926*^9, 3.8249750506297073`*^9}, 
   3.824994043627574*^9, 3.825001607792643*^9, {3.825001692867886*^9, 
   3.825001693910748*^9}, 3.825005541672139*^9, {3.8257703632332573`*^9, 
   3.8257703928999557`*^9}, {3.8257705549908867`*^9, 
   3.8257705572226887`*^9}, {3.827395402084569*^9, 3.827395414565299*^9}, 
   3.8273959879208593`*^9, {3.8273960394479303`*^9, 3.8273960853619223`*^9}, {
   3.8273961168062162`*^9, 3.827396123715522*^9}, {3.827396318549856*^9, 
   3.827396412632536*^9}, {3.8274045827011538`*^9, 3.82740458379325*^9}, {
   3.8278173564819393`*^9, 3.827817361228321*^9}, {3.830976734134877*^9, 
   3.8309767494625072`*^9}, {3.834480282684927*^9, 3.834480283538302*^9}, {
   3.834480426528635*^9, 3.834480438344689*^9}, {3.840643429673587*^9, 
   3.84064343214264*^9}, {3.840644090065632*^9, 3.840644110294639*^9}, {
   3.841376639126837*^9, 3.841376652890356*^9}, {3.852805051225027*^9, 
   3.852805051940732*^9}, 3.852866941489101*^9, 3.863433244574464*^9, {
   3.863444417946168*^9, 3.8634444207524557`*^9}, {3.863758485466724*^9, 
   3.8637585009226294`*^9}, {3.863763334072833*^9, 3.8637633356047773`*^9}, {
   3.875107822325452*^9, 3.8751078327815647`*^9}, {3.8833829933758574`*^9, 
   3.883382993547421*^9}},
 CellLabel->
  "In[2599]:=",ExpressionUUID->"df0ec05c-7c65-422e-9507-d63ba1cb5d39"],

Cell[TextData[StyleBox["Virtual quantum devices, loaded after questlink",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.8406416900502462`*^9, 3.840641698118609*^9}, {3.840641813367085*^9, 
  3.840641822804656*^9}, {3.853839759327433*^9, 3.853839762140107*^9}, {
  3.86344845184791*^9, 3.863448455324099*^9}, {3.8637680860803547`*^9, 
  3.863768086918572*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"5f37c9ba-3582-4916-b8a6-b00b0ad21432"],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../vqd.wl\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.840641143565943*^9, 3.840641172251192*^9}, {
   3.852799583306651*^9, 3.85279959973236*^9}, 3.8626416092550993`*^9, {
   3.8634335183180933`*^9, 3.863433525482596*^9}, {3.863433568660131*^9, 
   3.863433569874107*^9}, {3.863433692497489*^9, 3.863433694465293*^9}, {
   3.863445057138888*^9, 3.86344507880478*^9}, {3.863445347209435*^9, 
   3.8634453507921267`*^9}, {3.863445650432852*^9, 3.863445652815689*^9}, {
   3.863445897019453*^9, 3.8634458974688377`*^9}, {3.86344607759472*^9, 
   3.863446078099331*^9}, {3.863446143635272*^9, 3.863446143966124*^9}, {
   3.863446177367778*^9, 3.86344617796842*^9}, {3.8634467623389387`*^9, 
   3.863446816486045*^9}, {3.863446923713131*^9, 3.863446924990855*^9}, {
   3.863447604132453*^9, 3.8634476320572042`*^9}, {3.863448157317191*^9, 
   3.863448185412036*^9}, {3.86344848550739*^9, 3.863448486307929*^9}, {
   3.863730635263914*^9, 3.863730645543404*^9}, {3.863730806825498*^9, 
   3.863730825085904*^9}, {3.864798306500605*^9, 3.864798308030095*^9}, {
   3.864808339041327*^9, 3.864808339281568*^9}},
 CellLabel->
  "In[2601]:=",ExpressionUUID->"fbda1cba-5510-430b-ae7f-72219c40e12c"],

Cell[TextData[{
 "Time unit : \[Mu]s\nFrequency unit: MHz\n\nInteresting thing to put in \
paper:\n",
 StyleBox["The total time\nTime profile\nBottleneck: dominant contribution of \
noise",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.867237179837118*^9, 3.867237192179912*^9}, {
  3.8836481660443087`*^9, 3.883648173728076*^9}, {3.883648228299481*^9, 
  3.883648255571145*^9}, {3.883648313940173*^9, 3.883648319153202*^9}, {
  3.883648977941886*^9, 3.883648984144506*^9}, {3.883653712028092*^9, 
  3.883653736465776*^9}, {3.883653772833355*^9, 3.883653796508432*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"81bad29d-8522-4e31-bd45-0ec214a12116"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TrappedIonOxford", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "the", " ", "nodes", " ", "name", " ", "together", " ", "with", " ", 
      "the", " ", "total", " ", "qubits", " ", "on", " ", "each", " ", 
      "node"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Nodes", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "4"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"time", " ", "and", " ", "duration", " ", "unit", " ", 
       RowBox[{"\[Mu]s", ":", " ", 
        RowBox[{"3000", " ", "s"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"T1", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         RowBox[{"3", "*", 
          SuperscriptBox["10", "9"]}]}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"3", "*", 
          SuperscriptBox["10", "9"]}]}]}], "    ", "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Simulating", " ", "T2", "*", " ", "error", " ", "by", " ", "gaussian", 
       " ", 
       RowBox[{"decay", ":", " ", 
        RowBox[{"10", " ", "ms"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"T2s", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         SuperscriptBox["10", "5"]}], ",", "  ", 
        RowBox[{"\"\<Bob\>\"", "->", 
         SuperscriptBox["10", "5"]}]}], "   ", "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Switch", " ", 
       RowBox[{"on", "/", "off"}], " ", "the", " ", "standard", " ", 
       "passive", " ", 
       RowBox[{"noise", ":", " ", 
        RowBox[{
        "Amplitude", " ", "damping", " ", "T1", " ", "and", " ", "dephasing", 
         " ", "T2"}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"StdPassiveNoise", "->", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Duration", " ", "for", " ", "moving", " ", 
        RowBox[{"operations", ":", " ", "Split"}]}], ",", " ", "Combine", ",",
        " ", 
       RowBox[{
        RowBox[{"and", " ", "physical", " ", "swap"}], ";", " ", 
        RowBox[{"they", " ", "have", " ", "zero", " ", "error"}]}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DurMove", "->", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", " ", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"Shutl", "->", "25"}], ",", " ", 
           RowBox[{"Splz", "->", "50"}], ",", " ", 
           RowBox[{"Comb", "->", "50"}], ",", " ", 
           RowBox[{"SWAPLoc", "->", "10"}]}], " ", "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"Shutl", "->", "25"}], ",", " ", 
           RowBox[{"Splz", "->", "50"}], ",", " ", 
           RowBox[{"Comb", "->", "50"}], ",", " ", 
           RowBox[{"SWAPLoc", "->", "10"}]}], " ", "|>"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"fidelity", " ", "of", " ", 
        RowBox[{"preparation", "/", "initialisation"}]}], ";", " ", 
       RowBox[{
       "initialisation", " ", "is", " ", "done", " ", "by", " ", "amplitude", 
        " ", "damping"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FidInit", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.9999"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.9998"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"DurInit", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "20"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "20"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Readout", " ", "error", " ", "includes", " ", "bitflip", " ", "and", 
        " ", "scattering", "\[IndentingNewLine]", "Bitflip", " ", "error", 
        " ", "represents", " ", "symmetric", " ", "error", " ", "on", " ", 
        "both", " ", "0", " ", "and", " ", "1", " ", "readout", "  ", 
        "\[IndentingNewLine]", "Amplitude", " ", "damping", " ", 
        RowBox[{"(", 
         RowBox[{"change", " ", "to", " ", "depol"}], ")"}], " ", 
        "represents", " ", "scattering", " ", "error", " ", "affecting", " ", 
        "the", " ", "neighborhood", " ", "qubits", " ", 
        RowBox[{"(", 
         RowBox[{"in", " ", "the", " ", "same", " ", "zone"}], ")"}]}], ":", 
       " ", 
       RowBox[{
       "collapsing", " ", "the", " ", "superposition", " ", "into", " ", 
        TemplateBox[{"0"},
         "Ket"]}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DurRead", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "50"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "50"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BFProb", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"delete", " ", "this"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ScatProb", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.05"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.05"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"Fidelity", " ", "of", " ", "single", " ", "x"}], "-", " ", 
        RowBox[{"and", " ", "y"}], "-", " ", "rotations"}], ";", " ", 
       RowBox[{"z", "-", 
        RowBox[{"rotation", " ", "is", " ", "instaneous", " ", 
         RowBox[{"(", 
          RowBox[{"noiseless", ",", " ", "virtual"}], ")"}], 
         "\[IndentingNewLine]", 
         RowBox[{"future", ":", 
          RowBox[{
          "Set", " ", "manually", " ", "the", " ", "error", " ", 
           "coefficient", " ", "instead", " ", "of", " ", "setting", " ", 
           "the", " ", "fidelity", " ", "at", " ", "the", " ", "first", " ", 
           RowBox[{"place", ".", "\[IndentingNewLine]", "Future"}]}], ":", 
          " ", 
          RowBox[{"off", "-", 
           RowBox[{
           "resonant", " ", "oscillation", " ", "in", " ", "the", " ", "same",
             " ", "zone"}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FidSingleXY", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.99999"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.99999"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"fraction", " ", "of", " ", 
       RowBox[{"depolarising", ":", 
        RowBox[{
         RowBox[{"dephasing", " ", "noise", " ", "of", " ", "the", " ", "x"}],
          "-", " ", 
         RowBox[{"and", " ", "y"}], "-", " ", "rotations"}]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"EFSingleXY", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Frequency", " ", "unit", " ", "is", " ", "MHz"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Rabi", " ", "frequency", " ", "on", " ", "single", " ", "rotations", 
       " ", "in", " ", "MHz"}], "  ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"RabiFreq", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "10"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "10"}]}], " ", "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Frequency", " ", "of", " ", "CZ", " ", "operation"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"FreqCZ", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.1"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "0.1"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Fidelity", " ", "of", " ", "controlled"}], "-", 
       RowBox[{"Z", " ", "operation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"FidCZ", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.999"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.999"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"add", " ", "a", " ", "bit", " ", "of", " ", "bit"}], "-", 
       RowBox[{"flip", ":", " ", 
        RowBox[{
        "small", " ", "fraction", " ", "of", " ", "population", " ", "is", 
         " ", "depolarised"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"EFCZ", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "0.9"}], "}"}]}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "frequency", " ", "of", " ", "remote", " ", "entanglement", " ", "MHz", 
       "\[IndentingNewLine]", "initial", " ", "state", " ", "also", " ", 
       "heralded", " ", 
       RowBox[{"entanglement", "."}]}], "\[IndentingNewLine]", " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"FreqEnt", "->", "0.1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"fidelity", " ", "of", " ", "remote", " ", "entanglement"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FidEnt", "->", "0.95"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"fraction", " ", "of", " ", 
       RowBox[{"noise", ":", " ", "depolarizing", ":", "dephasing"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"EFEnt", "->", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "\[IndentingNewLine]", "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.866741525798813*^9, 3.8667415268823643`*^9}, {
   3.866741663432423*^9, 3.866741665522397*^9}, {3.866741745552545*^9, 
   3.86674175266329*^9}, {3.8667951940122232`*^9, 3.866795264671464*^9}, {
   3.86679558066088*^9, 3.866795620210507*^9}, {3.866795751852192*^9, 
   3.866795773983354*^9}, {3.866795889141552*^9, 3.866795931399184*^9}, 
   3.8667960054150743`*^9, {3.866796238217458*^9, 3.866796387720312*^9}, {
   3.866797546811494*^9, 3.8667975863855867`*^9}, {3.866797868437003*^9, 
   3.866797925147974*^9}, {3.866804302073353*^9, 3.8668043033454514`*^9}, {
   3.8668049823176613`*^9, 3.866804997766453*^9}, {3.8668054954071693`*^9, 
   3.866805501412159*^9}, {3.8672267922453127`*^9, 3.867226826078993*^9}, {
   3.86722755102808*^9, 3.867227619738082*^9}, {3.8672276764652348`*^9, 
   3.8672277171831093`*^9}, {3.8672278717818413`*^9, 3.867227877110051*^9}, {
   3.867228493899407*^9, 3.8672285328403187`*^9}, {3.867229396481929*^9, 
   3.8672293983037024`*^9}, 3.867235278678097*^9, {3.867235796126501*^9, 
   3.867235845448059*^9}, {3.867237137950498*^9, 3.8672371695811872`*^9}, {
   3.8672372036357193`*^9, 3.8672372235594378`*^9}, {3.867237623562272*^9, 
   3.867237643629908*^9}, {3.867237899531828*^9, 3.8672379111048193`*^9}, {
   3.8672385761871433`*^9, 3.867238580773076*^9}, {3.869213991025598*^9, 
   3.86921401005344*^9}, 3.869214111626649*^9, {3.86921415472738*^9, 
   3.869214186857623*^9}, {3.869214724170225*^9, 3.869214766542733*^9}, {
   3.869214798607539*^9, 3.8692147991185513`*^9}, {3.869214956910564*^9, 
   3.869215003816546*^9}, {3.869215064473733*^9, 3.869215079623447*^9}, {
   3.869215257338026*^9, 3.8692153217380466`*^9}, {3.869215369674582*^9, 
   3.8692153707769003`*^9}, {3.869218551089553*^9, 3.869218554105139*^9}, {
   3.873536137487809*^9, 3.873536157113378*^9}, {3.8737218269830513`*^9, 
   3.8737218942167397`*^9}, {3.873722023539997*^9, 3.873722078245874*^9}, {
   3.873722151005465*^9, 3.873722184832581*^9}, {3.873722262394095*^9, 
   3.873722299789385*^9}, {3.873727405456362*^9, 3.873727407667687*^9}, {
   3.873795067207028*^9, 3.873795083012207*^9}, 3.873801728693125*^9, {
   3.873803376445282*^9, 3.873803605099039*^9}, {3.873803936299101*^9, 
   3.873803985392705*^9}, {3.8738054296210938`*^9, 3.873805434739148*^9}, {
   3.8738081749509373`*^9, 3.873808189643832*^9}, {3.873808260543518*^9, 
   3.873808299197383*^9}, {3.8738086232761803`*^9, 3.8738086258360643`*^9}, {
   3.873809740474554*^9, 3.873809746170124*^9}, {3.873827989551094*^9, 
   3.873828046626005*^9}, {3.8738280918401623`*^9, 3.873828092823846*^9}, {
   3.873828868270315*^9, 3.873828878840913*^9}, {3.8738743930632133`*^9, 
   3.873874395974115*^9}, {3.8738744915832233`*^9, 3.873874499108654*^9}, {
   3.8738745608100157`*^9, 3.87387456531114*^9}, {3.873875747308943*^9, 
   3.873875786891082*^9}, {3.8738758454165497`*^9, 3.873875870793645*^9}, {
   3.873875905255966*^9, 3.873875913996315*^9}, {3.873875969049201*^9, 
   3.873875986036682*^9}, {3.873876056189313*^9, 3.873876103462187*^9}, {
   3.8738761385663*^9, 3.8738761771993837`*^9}, {3.873876472224475*^9, 
   3.873876487654408*^9}, {3.873883365596745*^9, 3.873883367431622*^9}, {
   3.873883431528206*^9, 3.873883433521964*^9}, {3.873883474136989*^9, 
   3.873883478808856*^9}, {3.8756901249387693`*^9, 3.8756901563944197`*^9}, {
   3.8756912977568398`*^9, 3.87569130899468*^9}, {3.875695695076517*^9, 
   3.8756957807834473`*^9}, {3.875697315448535*^9, 3.875697317226529*^9}, {
   3.8756990026610813`*^9, 3.875699006062674*^9}, {3.875783909784436*^9, 
   3.875783932509903*^9}, {3.8757839702434196`*^9, 3.875783991926955*^9}, {
   3.87578436190112*^9, 3.875784380902054*^9}, {3.87578443900996*^9, 
   3.8757844773945208`*^9}, {3.875784937308525*^9, 3.8757849415846767`*^9}, {
   3.875784987199074*^9, 3.875784988288704*^9}, {3.875810550708597*^9, 
   3.875810552776515*^9}, {3.8758197920102873`*^9, 3.875819792412874*^9}, 
   3.875821671365123*^9, {3.8762074814071903`*^9, 3.876207483622019*^9}, {
   3.876207525319086*^9, 3.876207527076189*^9}, {3.8769095900478888`*^9, 
   3.8769095943411417`*^9}, {3.876909653906137*^9, 3.876909655907584*^9}, {
   3.880187546317218*^9, 3.880187569387553*^9}, {3.8836353092981243`*^9, 
   3.883635318989584*^9}, {3.883643515674913*^9, 3.88364353193294*^9}, {
   3.883643742881509*^9, 3.883643762183663*^9}, {3.8836438359438868`*^9, 
   3.8836438363100348`*^9}, {3.883643883398198*^9, 3.8836438956169167`*^9}, {
   3.883644265128314*^9, 3.8836442664241734`*^9}, 3.883644561668241*^9, {
   3.88364577387563*^9, 3.883645779511386*^9}, {3.883648458100438*^9, 
   3.883648463754395*^9}, {3.883649022834107*^9, 3.883649025912264*^9}, {
   3.883649138391301*^9, 3.883649204038764*^9}, {3.883649241829829*^9, 
   3.883649244178939*^9}, {3.883649357764249*^9, 3.883649367223763*^9}, {
   3.883649516843505*^9, 3.8836495191985207`*^9}, {3.883649559382502*^9, 
   3.883649602092461*^9}, {3.883649647615107*^9, 3.8836496615221777`*^9}, {
   3.883734777484333*^9, 3.883734777735754*^9}, {3.884014878594007*^9, 
   3.884014925781691*^9}, {3.884023823178306*^9, 3.8840238256397867`*^9}, {
   3.884024774332857*^9, 3.8840247859359217`*^9}, {3.8840257321870203`*^9, 
   3.8840257357595453`*^9}},
 CellLabel->
  "In[2602]:=",ExpressionUUID->"786b6905-0c83-4785-9309-62848193302e"],

Cell[TextData[{
 StyleBox["[Native Gates]",
  FontWeight->"Bold"],
 "\n ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Init", "q"], TraditionalForm]],ExpressionUUID->
  "1d09064b-73a1-41da-b8f5-29bfdc8451dd"],
 "[node], ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Read", "q"], "[", "node", "]"}], TraditionalForm]],
  ExpressionUUID->"26a73222-1524-41dc-ae57-279f1797effa"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Rx", "q"], "[", 
    RowBox[{"node", ",", "\[Theta]"}], "]"}], TraditionalForm]],
  ExpressionUUID->"1db64c5f-090c-48ec-a6e8-d4fa995044d0"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Ry", "q"], "[", 
    RowBox[{"node", ",", "\[Theta]"}], "]"}], TraditionalForm]],
  ExpressionUUID->"acad095c-9f40-4645-a4c4-5c00814aad30"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["CZ", 
     RowBox[{"q1", ",", "q2"}]], "[", "node", "]"}], TraditionalForm]],
  ExpressionUUID->"300da055-2d4d-425a-9aa0-e20ad156cc5a"],
 ", Ent[node1, node2], ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["SWAPLoc", 
     RowBox[{"q1", ",", "q2"}]], "[", "node", "]"}], TraditionalForm]],
  ExpressionUUID->"11ee6e8b-13b7-4f51-9da4-7f708fdd49d5"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Splz", 
     RowBox[{"q1", ",", "q2"}]], "[", 
    RowBox[{"node", ",", "zone_destination"}], "]"}], TraditionalForm]],
  ExpressionUUID->"e63a851d-9931-4bb8-9b61-8a9a985167ab"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["Comb", 
      RowBox[{"q1", ",", "q2"}]], "[", "node", "]"}], ","}], 
   TraditionalForm]],ExpressionUUID->"9d8ce3a4-b2bf-411d-8598-bf8974d855d7"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Comb", 
     RowBox[{"q1", ",", "q2"}]], "[", 
    RowBox[{"node", ",", "zone_destination"}], "]"}], TraditionalForm]],
  ExpressionUUID->"0d25bf03-7554-403e-9c84-b08d8ede164b"],
 "\n",
 StyleBox["[Zone and operations]",
  FontWeight->"Bold"],
 "\n[from notes]\nZone 1 : prepare, store?, detect\nZone 2 : prepare, store?, \
detect, logic\nZone 3 : prepare, store?, detect, logic\nZone 4 : remote \
entangle\n[from email]\n   \[NonBreakingSpace]a.\[NonBreakingSpace]Zone 1 \
supports prep, detect, split, combine and rotate (SWAP), but\n        no \
local or remote quantum logic\n    \
\[NonBreakingSpace]b.\[NonBreakingSpace]Zone 2 and 3 are as (a) plus local \
logic (1Q and 2Q) \n    \[NonBreakingSpace]c.\[NonBreakingSpace]Zone 4 \
supports remote logic only (no split, no combine, only shuttle for the move)"
}], "Text",
 CellChangeTimes->{{3.8692122673836203`*^9, 3.869212288716358*^9}, {
   3.8732900821348667`*^9, 3.8732900892281*^9}, {3.873535234627952*^9, 
   3.8735352993376503`*^9}, 3.8735355903892736`*^9, {3.873535838903427*^9, 
   3.873535867433639*^9}, {3.873535943640603*^9, 3.873536051939383*^9}, {
   3.8737213853909492`*^9, 3.873721409511063*^9}, {3.873721675411847*^9, 
   3.87372167652286*^9}, {3.873721784879632*^9, 3.8737218004244747`*^9}, {
   3.873886462615952*^9, 3.8738864754993267`*^9}, {3.8835477479780693`*^9, 
   3.883547778908753*^9}, 3.883558706803985*^9, 3.883733935859179*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"5f86b73e-5906-4bd6-a372-9b5e7579b57a"],

Cell["\<\
Basic remote entanglement from the note. The total circuit and moves until \
page 38. The expected result is qubit 4 at zone 2 is highly entangled after 3 \
distillations .\
\>", "Text",
 CellChangeTimes->{{3.8735358044989357`*^9, 3.8735358152137203`*^9}, {
  3.8837349025782948`*^9, 3.8837349115556917`*^9}},
 Background->RGBColor[
  1, 0.9, 1],ExpressionUUID->"e1220042-e501-4a63-aad2-9ca6f469a27d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"circ", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"2", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"2", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "4"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "4"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "4"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "4"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ent", 
        RowBox[{"4", ",", "4"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"3", ",", "4"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"3", ",", "4"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"3", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"3", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ent", 
        RowBox[{"3", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "1"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "1"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Read", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Read", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"1", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"1", ",", "2"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"2", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"2", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Shutl", "3"], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Shutl", "3"], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ent", 
        RowBox[{"3", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"2", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"2", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "2"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"2", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"2", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Ent", 
        RowBox[{"2", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"3", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"3", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Read", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Read", "2"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["H", "4"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["H", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["H", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["H", "4"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Shutl", "2"], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Shutl", "2"], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["H", "q_"], "[", "n_", "]"}], ":>", 
      RowBox[{
       SubscriptBox["Rx", "q"], "[", 
       RowBox[{"n", ",", 
        RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQvSpkmi3HnTeOiSsMHUD0rE3nXUC0xRNJTxD9NiXd
Fyw/kyERRCdY61aC6JdzXlaB6IgFHTHaQNphTy+YXrT0XyqIPum9oRJEX7i0
sBZEr/uyfQKI5nWdsg9EXzk46wCIXnHt+wkQrbb8H5hu6mrO1QXSTk7zC0D0
7c7oiSBaxTlmCYjWiDtyEEQ/Dao7CqKnuMhdBtGJrutfg+Xd3n4E0W7eB36B
6CWFH/6B6L0filj1gHQ+32IuEJ3G6SAEohN/Wz0B0QZsVc9A9KnvIasqHgDd
MZl3HYi+xy8jXwOkw1bNB9MG/eW3F70H8h9K3wXRAMyBrfY=
  "],
 CellLabel->
  "In[2603]:=",ExpressionUUID->"39334818-453d-4215-b01f-6ad2ed45ee64"],

Cell["\<\
Check the arrangement of the circuit in the total density matrix. Here is \
completely serial within a node.
 It does not update the device state, thus we cannot check the final position \
of ions.\
\>", "Text",
 CellChangeTimes->{{3.8735358044989357`*^9, 3.8735358152137203`*^9}, {
  3.8735362827709*^9, 3.8735363463458776`*^9}, {3.873536412650112*^9, 
  3.873536440021015*^9}},
 Background->RGBColor[
  1, 0.9, 1],ExpressionUUID->"7dae8c7a-ebe8-4914-93d1-8e3024725605"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"DrawCircuit", "@", 
   RowBox[{"CircTrappedIons", "[", 
    RowBox[{"circ", ",", "dev"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8735356166506577`*^9, 3.8735356294032717`*^9}, {
   3.8735357581820583`*^9, 3.8735357592668552`*^9}, {3.87353625886707*^9, 
   3.873536259191338*^9}, {3.875697326741803*^9, 3.8756973294968157`*^9}, {
   3.8756994329139137`*^9, 3.875699433317068*^9}, 3.875784055766596*^9},
 CellLabel->
  "In[2604]:=",ExpressionUUID->"797106b3-7c71-46e2-9680-68c6566ce39f"],

Cell[TextData[{
 "This will show the total scheduling, noise operation, and the final form in \
the simulation.\nSet the",
 StyleBox[" MapQubits->False",
  FontWeight->"Bold"],
 " and",
 StyleBox[" ReplaceAliases->True",
  FontWeight->"Bold"],
 " if you intended to do the density matrix simulation"
}], "Text",
 CellChangeTimes->{{3.8735358044989357`*^9, 3.8735358152137203`*^9}, {
  3.8735362827709*^9, 3.8735363463458776`*^9}, {3.873536393477754*^9, 
  3.8735364073986673`*^9}, {3.873536454604163*^9, 3.873536532584633*^9}, {
  3.873536640439295*^9, 3.873536642504521*^9}, {3.873539398165966*^9, 
  3.873539399408609*^9}, {3.8738287501449623`*^9, 3.873828760745677*^9}, {
  3.873874327663858*^9, 3.873874362063689*^9}, {3.8741301890944147`*^9, 
  3.874130190106752*^9}},
 Background->RGBColor[
  1, 0.9, 1],ExpressionUUID->"b8508c3c-e271-4c93-8030-70d503509a3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dev", "=", 
   RowBox[{"TrappedIonOxford", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circ2", "=", 
   RowBox[{"CircTrappedIons", "[", 
    RowBox[{"circ", ",", "dev", ",", 
     RowBox[{"MapQubits", "->", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisycirc", "=", 
   RowBox[{"InsertCircuitNoise", "[", 
    RowBox[{"circ2", ",", "dev", ",", " ", 
     RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"DrawCircuit", "[", 
    RowBox[{"%", ",", "8"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8735365427377977`*^9, 3.873536635876189*^9}, {
   3.873539396712269*^9, 3.873539403859277*^9}, {3.875697389882848*^9, 
   3.8756973979789343`*^9}, {3.87569943733666*^9, 3.875699442348497*^9}, {
   3.875784066537302*^9, 3.875784074430694*^9}, {3.8757842173800793`*^9, 
   3.875784233763261*^9}, {3.8757843318838377`*^9, 3.875784355751664*^9}, {
   3.875784760266287*^9, 3.875784765461773*^9}, {3.875784957365838*^9, 
   3.875784998855071*^9}, {3.875790969089532*^9, 3.8757909796434193`*^9}, {
   3.8758184889942837`*^9, 3.8758184926305323`*^9}, 3.8837347098342876`*^9},
 CellLabel->
  "In[2605]:=",ExpressionUUID->"d6f1e258-c049-4570-8952-bb2893609008"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "initialise", " ", "the", " ", "qubit", " ", "with", " ", "random", " ", 
     "mixed", " ", "state"}], ",", " ", 
    RowBox[{
    "then", " ", "apply", " ", "the", " ", "noisy", " ", "circuit"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]", "=", 
     RowBox[{"CreateDensityQureg", "[", "8", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]2", "=", 
     RowBox[{"CreateQureg", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]2", "=", 
     RowBox[{"CreateDensityQureg", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetQuregMatrix", "[", 
     RowBox[{"\[Rho]", ",", 
      RowBox[{"RandomMixState", "[", "8", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ApplyCircuit", "[", 
     RowBox[{"\[Rho]", ",", 
      RowBox[{"ExtractCircuit", "@", "noisycirc"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ApplyCircuit", "[", 
     RowBox[{
      RowBox[{"InitZeroState", "@", "\[Psi]2"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["H", "0"], ",", 
        RowBox[{
         SubscriptBox["C", "0"], "[", 
         SubscriptBox["X", "1"], "]"}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetQuregMatrix", "[", 
     RowBox[{"\[Rho]2", ",", 
      RowBox[{"PartialTrace", "[", 
       RowBox[{
       "\[Rho]", ",", "0", ",", "1", ",", "2", ",", "4", ",", "5", ",", "6"}],
        "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{"CalcFidelity", "[", 
    RowBox[{"\[Rho]2", ",", "\[Psi]2"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"PlotDensityMatrix", "[", 
    RowBox[{
     RowBox[{"PartialTrace", "[", 
      RowBox[{
      "\[Rho]", ",", "0", ",", "1", ",", "2", ",", "4", ",", "5", ",", "6"}], 
      "]"}], ",", "\[Psi]2", ",", 
     RowBox[{"ImageSize", "->", "Small"}], ",", 
     RowBox[{"BarSpacing", "->", "0.1"}], ",", 
     RowBox[{"ChartElementFunction", "->", "\"\<Cube\>\""}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<00\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<01\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<10\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<11\>\""}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<00\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<01\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<10\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<11\>\""}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.873541681637575*^9, 3.873541751424814*^9}, {
   3.8757841205386143`*^9, 3.8757841294918327`*^9}, {3.8757842467170897`*^9, 
   3.875784337040402*^9}, {3.875784825198759*^9, 3.875784841719986*^9}, 
   3.875784875955913*^9, {3.875785077800418*^9, 3.875785105591632*^9}, {
   3.875821981083705*^9, 3.875821983105031*^9}, {3.883497350493561*^9, 
   3.883497396711956*^9}, {3.883736787115781*^9, 3.883736848601947*^9}},
 CellLabel->
  "In[2608]:=",ExpressionUUID->"b16782ff-ea3f-4153-83cb-c675797578e7"],

Cell[BoxData["0.8981331487388413`"], "Output",
 CellChangeTimes->{
  3.875784162593442*^9, {3.875784227713541*^9, 3.875784357616056*^9}, {
   3.875784754537125*^9, 3.875784767787106*^9}, {3.875784813224249*^9, 
   3.875784842455867*^9}, 3.875784876701469*^9, {3.875784925990993*^9, 
   3.87578494879453*^9}, 3.875785002447854*^9, 3.875785115651886*^9, 
   3.8757909824112597`*^9, 3.8757928797261477`*^9, 3.8758103218082867`*^9, 
   3.8758103906806087`*^9, 3.875810561260089*^9, 3.87581315901871*^9, 
   3.875815054835128*^9, 3.87581595380696*^9, 3.8758160636635427`*^9, 
   3.875817682124064*^9, 3.875817781253541*^9, {3.8758180808254967`*^9, 
   3.875818098155674*^9}, 3.875818335065015*^9, {3.875818447789188*^9, 
   3.875818496341061*^9}, 3.875819031144825*^9, {3.8758193344916143`*^9, 
   3.8758193509828787`*^9}, 3.8758197963626413`*^9, 3.875821675608789*^9, {
   3.875821984307454*^9, 3.875822009714748*^9}, 3.875822066134385*^9, 
   3.875822222945661*^9, 3.875822317664167*^9, 3.875822392199534*^9, 
   3.8758533471824636`*^9, 3.875869622142811*^9, 3.875870469741518*^9, 
   3.87587168970975*^9, 3.875874288945615*^9, 3.875874370346424*^9, {
   3.875874627212243*^9, 3.875874647644333*^9}, 3.875874716361985*^9, 
   3.87597269146741*^9, 3.875972744709272*^9, 3.875972861105781*^9, 
   3.876194889055654*^9, 3.876199240222349*^9, 3.876202446995277*^9, 
   3.876203266766798*^9, 3.87620640523446*^9, 3.876207486711542*^9, 
   3.876207530818915*^9, 3.876213338115676*^9, 3.8762185036696873`*^9, 
   3.876219033036215*^9, 3.876219085013709*^9, 3.876287011725073*^9, 
   3.876320486958457*^9, 3.876320803067623*^9, 3.876366246183374*^9, 
   3.876366296692225*^9, 3.8763664268800497`*^9, 3.876366502069263*^9, 
   3.8763667881949987`*^9, 3.8763687651315536`*^9, 3.876369194551701*^9, 
   3.876387047336177*^9, 3.876387206624456*^9, 3.876460396264352*^9, 
   3.876830817908824*^9, 3.876891216111376*^9, 3.876909292786405*^9, 
   3.876909400829074*^9, 3.8769096085874233`*^9, 3.8769096664897118`*^9, 
   3.876911626056899*^9, 3.876980328451453*^9, 3.876983363993387*^9, 
   3.876983479901698*^9, 3.8769989577555647`*^9, 3.8770633606692944`*^9, 
   3.877064070408555*^9, 3.880183075729824*^9, 3.882432881741987*^9, 
   3.883488076106667*^9, 3.8834971757580967`*^9, 3.8834973572115917`*^9, {
   3.8834973873596153`*^9, 3.8834973974469*^9}, 3.883548857937894*^9, 
   3.883550344351688*^9, 3.883627242083272*^9, 3.88363533524461*^9, {
   3.8836355039357443`*^9, 3.883635542476275*^9}, 3.883635597185995*^9, {
   3.883635632895529*^9, 3.8836356615094423`*^9}, {3.883635763486886*^9, 
   3.883635778465403*^9}, 3.883635852611905*^9, 3.883636043249854*^9, {
   3.883636082075697*^9, 3.883636102350148*^9}, 3.883636139611557*^9, 
   3.883636292419873*^9, 3.883636368863904*^9, 3.8836364050473623`*^9, 
   3.883644274390761*^9, 3.883644566709509*^9, 3.883645784491078*^9, 
   3.8836490319823093`*^9, 3.883649734722188*^9, 3.883733825977923*^9, 
   3.8837339295188293`*^9, 3.883736526146316*^9, {3.883736787745881*^9, 
   3.8837368974581842`*^9}, 3.883811997211841*^9, 3.883812244409546*^9, 
   3.8838147375302553`*^9, 3.8838221428422213`*^9, 3.883827930991396*^9, 
   3.883831598673818*^9, 3.884013361006955*^9, 3.884013997384508*^9, {
   3.884014179174844*^9, 3.8840141928853607`*^9}, 3.884015825859708*^9, 
   3.884023853073883*^9, 3.884024650163146*^9, 3.88402480836413*^9, 
   3.8840254277999268`*^9, 3.884073460764021*^9},
 CellLabel->
  "Out[2616]=",ExpressionUUID->"7eb2415a-6012-4a9e-82e7-691b248717c6"],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
   GrayLevel[0], Opacity[0.1]}], 
   StyleBox[{{{}, 
      {RGBColor[0.4947336, 0.6054231999999999, 0.7678384], Opacity[1], 
       EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.19805941723091325`, 0.013284204371651277`, 0.3673193971302279], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 0.47267173429440645`}]},
             
             ImageSizeCache->{{18.979208175463228`, 
              63.83568242533133}, {-31.940389507425337`, 
              25.407340694049026`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.47267173429440645`]& ,
          TagBoxNote->"0.47267173429440645"],
         StyleBox[
         "0.47267173429440645`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.47267173429440645`, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
               2.598451543231081*^-18}]},
             
             ImageSizeCache->{{41.75016321527477, 81.31618993998299}, {
              3.5450762133444726`, 16.501901272072136`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 2.598451543231081*^-18]& ,
          TagBoxNote->"2.598451543231081*^-18"],
         StyleBox[
         "2.598451543231081`*^-18", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[2.598451543231081*^-18, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55, 2.55, 0.}, {1.45, 3.45, 
               9.886348941806768*^-19}]},
             
             ImageSizeCache->{{59.746797539798784`, 
              96.85683768298514}, {-3.1240884607566173`, 8.636668396948373}}],
            
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 9.886348941806768*^-19]& ,
          TagBoxNote->"9.886348941806768*^-19"],
         StyleBox[
         "9.886348941806768`*^-19", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[9.886348941806768*^-19, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.25014334575207997`, 0.036233024431902155`, 0.48072876744980075`], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{0.55, 3.55, 0.}, {1.45, 4.45, 0.42546142085066413`}]},
             
             ImageSizeCache->{{75.14195095966333, 
              110.80890061327207`}, {-42.05247924438274, 
              1.6394456718627666`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.42546142085066413`]& ,
          TagBoxNote->"0.42546142085066413"],
         StyleBox[
         "0.42546142085066413`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.42546142085066413`, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
               2.48783953508314*^-18}]},
             
             ImageSizeCache->{{46.743883801462445`, 90.0506445956913}, {
              15.840318173344851`, 31.20081625113305}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 2.48783953508314*^-18]& ,
          TagBoxNote->"2.48783953508314*^-18"],
         StyleBox[
         "2.48783953508314`*^-18", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[2.48783953508314*^-18, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.6649918912444437, 0.8671755350969912, 0.9931015787538059], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
               0.027328271955593484`}]},
             
             ImageSizeCache->{{66.1426914495063, 106.55998548677823`}, {
              5.455639724110622, 21.586255640234565`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.027328271955593484`]& ,
          TagBoxNote->"0.027328271955593484"],
         StyleBox[
         "0.027328271955593484`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.027328271955593484`, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.6853413966568427, 0.8780934035937296, 0.9941661822915713], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{1.55, 2.55, 0.}, {2.45, 3.45, 0.02213427319595592}]},
             
             
             ImageSizeCache->{{83.36083229486941, 
              121.190500214525}, {-1.1203841242598642`, 13.134565633926904`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.02213427319595592]& ,
          TagBoxNote->"0.02213427319595592"],
         StyleBox[
         "0.02213427319595592`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.02213427319595592, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{1.55, 3.55, 0.}, {2.45, 4.45, 
               3.161403495034068*^-17}]},
             
             ImageSizeCache->{{98.66866033547228, 
              134.20567203257633`}, {-5.676017573847588, 5.646805188902327}}],
            
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 3.161403495034068*^-17]& ,
          TagBoxNote->"3.161403495034068*^-17"],
         StyleBox[
         "3.161403495034068`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[3.161403495034068*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{2.55, 0.55, 0.}, {3.45, 1.45, 
               1.8845395906126164`*^-17}]},
             
             ImageSizeCache->{{74.08331178750753, 118.33654078095131`}, {
              21.028181389965674`, 37.48149445315787}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 1.8845395906126164`*^-17]& ,
          TagBoxNote->"1.8845395906126164*^-17"],
         StyleBox[
         "1.8845395906126164`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[1.8845395906126164`*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.6853413966568427, 0.8780934035937296, 0.9941661822915713], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{2.55, 1.55, 0.}, {3.45, 2.45, 
               0.022134273195955918`}]},
             
             ImageSizeCache->{{92.49877431765314, 133.7048881164661}, {
              10.427072646784211`, 27.069577928216}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.022134273195955918`]& ,
          TagBoxNote->"0.022134273195955918"],
         StyleBox[
         "0.022134273195955918`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.022134273195955918`, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.6649918900202672, 0.8671755344401988, 0.993101578689762], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 
               0.027328272268051793`}]},
             
             ImageSizeCache->{{108.71448697961861`, 147.24600512632946`}, {
              2.462179858385575, 17.96328233457962}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.027328272268051793`]& ,
          TagBoxNote->"0.027328272268051793"],
         StyleBox[
         "0.027328272268051793`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.027328272268051793`, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
               2.1484383618557034`*^-17}]},
             
             ImageSizeCache->{{123.0578249273533, 
              159.18841826616585`}, {-2.0217734235790203`, 
              9.931515750453634}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 2.1484383618557034`*^-17]& ,
          TagBoxNote->"2.1484383618557034*^-17"],
         StyleBox[
         "2.1484383618557034`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[2.1484383618557034`*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.25014334575208, 0.03623302443190218, 0.4807287674498009], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{3.55, 0.55, 0.}, {4.45, 1.45, 0.4254614208506641}]},
             
             ImageSizeCache->{{103.64584880221278`, 
              150.10492117974366`}, {-16.219939233907184`, 
              44.313529839632764`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4254614208506641]& ,
          TagBoxNote->"0.4254614208506641"],
         StyleBox[
         "0.4254614208506641`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4254614208506641, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55, 1.55, 0.}, {4.45, 2.45, 
               4.447126305074716*^-18}]},
             
             ImageSizeCache->{{120.90098564981731`, 162.8681503805065}, {
              17.331051763451875`, 33.00074621907954}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 4.447126305074716*^-18]& ,
          TagBoxNote->"4.447126305074716*^-18"],
         StyleBox[
         "4.447126305074716`*^-18", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[4.447126305074716*^-18, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
               1.5585801738667375`*^-17}]},
             
             ImageSizeCache->{{135.90947490109488`, 175.0756470212047}, {
              9.141934039002379, 23.1607094971203}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 1.5585801738667375`*^-17]& ,
          TagBoxNote->"1.5585801738667375*^-17"],
         StyleBox[
         "1.5585801738667375`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[1.5585801738667375`*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.19805943136602708`, 0.013284210599756433`, 0.36731942790851985`], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 0.4726717214819483}]},
             
             ImageSizeCache->{{149.1408354901106, 
              187.8971222906245}, {-38.248513434559655`, 
              14.523402848335927`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4726717214819483]& ,
          TagBoxNote->"0.4726717214819483"],
         StyleBox[
         "0.4726717214819483`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4726717214819483, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}, {}, {}}, {{}, 
      {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], Opacity[
       0.3], EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.16791, 0., 0.301671], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55005, 0.55005, 0.}, {1.44995, 1.44995, 
               0.4999999999999999}]},
             
             ImageSizeCache->{{18.834109834864044`, 
              63.83349108175267}, {-34.49597146466151, 25.40658754304488}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4999999999999999]& ,
          TagBoxNote->"0.4999999999999999"],
         StyleBox[
         "0.4999999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4999999999999999, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.16791, 0., 0.301671], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55005, 3.55005, 0.}, {1.44995, 4.44995, 
               0.4999999999999999}]},
             
             ImageSizeCache->{{75.02318564392067, 
              110.81520459049159`}, {-47.96468030601483, 
              1.6389212354015754`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4999999999999999]& ,
          TagBoxNote->"0.4999999999999999"],
         StyleBox[
         "0.4999999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4999999999999999, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.16791, 0., 0.301671], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55005, 0.55005, 0.}, {4.44995, 1.44995, 
               0.4999999999999999}]},
             
             ImageSizeCache->{{103.63286142119833`, 
              150.3119018154589}, {-23.970963808029303`, 
              44.312565281158776`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4999999999999999]& ,
          TagBoxNote->"0.4999999999999999"],
         StyleBox[
         "0.4999999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4999999999999999, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.16791, 0., 0.301671], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55005, 3.55005, 0.}, {4.44995, 4.44995, 
               0.4999999999999999}]},
             
             ImageSizeCache->{{149.1428073258262, 
              188.0157163097071}, {-40.630440623116385`, 14.52275955486985}}],
            
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4999999999999999]& ,
          TagBoxNote->"0.4999999999999999"],
         StyleBox[
         "0.4999999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4999999999999999, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}, {}, {}}},
    FontColor->GrayLevel[0.4]]},
  Axes->{True, True, True},
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->Small,
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {All, All}},
  PlotRangePadding->{{0, 0}, {0, 0}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{1, 
      FormBox["\"00\"", TraditionalForm]}, {2, 
      FormBox["\"01\"", TraditionalForm]}, {3, 
      FormBox["\"10\"", TraditionalForm]}, {4, 
      FormBox["\"11\"", TraditionalForm]}}, {{1, 
      FormBox["\"00\"", TraditionalForm]}, {2, 
      FormBox["\"01\"", TraditionalForm]}, {3, 
      FormBox["\"10\"", TraditionalForm]}, {4, 
      FormBox["\"11\"", TraditionalForm]}}, Automatic},
  ViewPoint->{1.6558900681719912`, -2.8231659237080184`, 0.858930875765466},
  ViewVertical->{-0.12842420057504583`, 0.2189534400934967, 
   0.9672469259593872}]], "Output",
 CellChangeTimes->{
  3.875784162593442*^9, {3.875784227713541*^9, 3.875784357616056*^9}, {
   3.875784754537125*^9, 3.875784767787106*^9}, {3.875784813224249*^9, 
   3.875784842455867*^9}, 3.875784876701469*^9, {3.875784925990993*^9, 
   3.87578494879453*^9}, 3.875785002447854*^9, 3.875785115651886*^9, 
   3.8757909824112597`*^9, 3.8757928797261477`*^9, 3.8758103218082867`*^9, 
   3.8758103906806087`*^9, 3.875810561260089*^9, 3.87581315901871*^9, 
   3.875815054835128*^9, 3.87581595380696*^9, 3.8758160636635427`*^9, 
   3.875817682124064*^9, 3.875817781253541*^9, {3.8758180808254967`*^9, 
   3.875818098155674*^9}, 3.875818335065015*^9, {3.875818447789188*^9, 
   3.875818496341061*^9}, 3.875819031144825*^9, {3.8758193344916143`*^9, 
   3.8758193509828787`*^9}, 3.8758197963626413`*^9, 3.875821675608789*^9, {
   3.875821984307454*^9, 3.875822009714748*^9}, 3.875822066134385*^9, 
   3.875822222945661*^9, 3.875822317664167*^9, 3.875822392199534*^9, 
   3.8758533471824636`*^9, 3.875869622142811*^9, 3.875870469741518*^9, 
   3.87587168970975*^9, 3.875874288945615*^9, 3.875874370346424*^9, {
   3.875874627212243*^9, 3.875874647644333*^9}, 3.875874716361985*^9, 
   3.87597269146741*^9, 3.875972744709272*^9, 3.875972861105781*^9, 
   3.876194889055654*^9, 3.876199240222349*^9, 3.876202446995277*^9, 
   3.876203266766798*^9, 3.87620640523446*^9, 3.876207486711542*^9, 
   3.876207530818915*^9, 3.876213338115676*^9, 3.8762185036696873`*^9, 
   3.876219033036215*^9, 3.876219085013709*^9, 3.876287011725073*^9, 
   3.876320486958457*^9, 3.876320803067623*^9, 3.876366246183374*^9, 
   3.876366296692225*^9, 3.8763664268800497`*^9, 3.876366502069263*^9, 
   3.8763667881949987`*^9, 3.8763687651315536`*^9, 3.876369194551701*^9, 
   3.876387047336177*^9, 3.876387206624456*^9, 3.876460396264352*^9, 
   3.876830817908824*^9, 3.876891216111376*^9, 3.876909292786405*^9, 
   3.876909400829074*^9, 3.8769096085874233`*^9, 3.8769096664897118`*^9, 
   3.876911626056899*^9, 3.876980328451453*^9, 3.876983363993387*^9, 
   3.876983479901698*^9, 3.8769989577555647`*^9, 3.8770633606692944`*^9, 
   3.877064070408555*^9, 3.880183075729824*^9, 3.882432881741987*^9, 
   3.883488076106667*^9, 3.8834971757580967`*^9, 3.8834973572115917`*^9, {
   3.8834973873596153`*^9, 3.8834973974469*^9}, 3.883548857937894*^9, 
   3.883550344351688*^9, 3.883627242083272*^9, 3.88363533524461*^9, {
   3.8836355039357443`*^9, 3.883635542476275*^9}, 3.883635597185995*^9, {
   3.883635632895529*^9, 3.8836356615094423`*^9}, {3.883635763486886*^9, 
   3.883635778465403*^9}, 3.883635852611905*^9, 3.883636043249854*^9, {
   3.883636082075697*^9, 3.883636102350148*^9}, 3.883636139611557*^9, 
   3.883636292419873*^9, 3.883636368863904*^9, 3.8836364050473623`*^9, 
   3.883644274390761*^9, 3.883644566709509*^9, 3.883645784491078*^9, 
   3.8836490319823093`*^9, 3.883649734722188*^9, 3.883733825977923*^9, 
   3.8837339295188293`*^9, 3.883736526146316*^9, {3.883736787745881*^9, 
   3.8837368974581842`*^9}, 3.883811997211841*^9, 3.883812244409546*^9, 
   3.8838147375302553`*^9, 3.8838221428422213`*^9, 3.883827930991396*^9, 
   3.883831598673818*^9, 3.884013361006955*^9, 3.884013997384508*^9, {
   3.884014179174844*^9, 3.8840141928853607`*^9}, 3.884015825859708*^9, 
   3.884023853073883*^9, 3.884024650163146*^9, 3.88402480836413*^9, 
   3.8840254277999268`*^9, 3.8840734609589863`*^9},
 CellLabel->
  "Out[2617]=",ExpressionUUID->"ee3a0edc-2238-4421-ab19-532277c9c1fa"]
}, Open  ]],

Cell["\<\
Recall the expected result is qubit 4 at zone 2 is highly entangled after 3 \
distillations: trace out the rest except qubit 4 at both nodes. Thus we trace \
out the rest of other qubits above.\
\>", "Text",
 CellChangeTimes->{{3.8735358044989357`*^9, 3.8735358152137203`*^9}, {
  3.8737172637533283`*^9, 3.873717284776906*^9}, {3.8757910059256477`*^9, 
  3.875791014722041*^9}},
 Background->RGBColor[
  1, 0.9, 1],ExpressionUUID->"153e59e0-45fd-472c-85cb-312dbaef9e54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dev", "@", "ShowNodes"}]], "Input",
 CellChangeTimes->{{3.873536674746161*^9, 3.873536691184744*^9}},
 CellLabel->
  "In[2618]:=",ExpressionUUID->"78aba0aa-fe82-48a6-bbd6-1efbf05626d6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Alice\"\>", 
     GraphicsBox[{
       {RGBColor[0.300725, 0.680491, 0.901701], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["1", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 1\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.300725, 0.680491, 0.901701], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["4", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 2\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.300725, 0.680491, 0.901701], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["3", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 3\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.300725, 0.680491, 0.901701], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["2", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 4\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}]},
    {"\<\"Bob\"\>", 
     GraphicsBox[{
       {RGBColor[0.9112395, 0.6309425, 0.5195245], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["1", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 1\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.9112395, 0.6309425, 0.5195245], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["4", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 2\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.9112395, 0.6309425, 0.5195245], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["3", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 3\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.9112395, 0.6309425, 0.5195245], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["2", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 4\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.873536682487219*^9, 3.873536691753687*^9}, 
   3.8737170961100903`*^9, 3.873801675530674*^9, 3.8738017315138206`*^9, 
   3.873809620345888*^9, 3.873809749394195*^9, 3.873814429351036*^9, 
   3.8738277052601337`*^9, 3.873828563235853*^9, {3.8738288055197067`*^9, 
   3.873828819111541*^9}, 3.8738742769292707`*^9, 3.873874662600828*^9, 
   3.873883185695291*^9, 3.873883251320664*^9, 3.8738833011204443`*^9, {
   3.873883349077548*^9, 3.8738833705884657`*^9}, {3.8738834368872337`*^9, 
   3.873883460836851*^9}, 3.8738868558189487`*^9, 3.8738869211317167`*^9, 
   3.8738870130947237`*^9, {3.873887080185256*^9, 3.8738871377856207`*^9}, 
   3.874130011875496*^9, {3.874130078736189*^9, 3.874130091139804*^9}, {
   3.8741302006845617`*^9, 3.8741302121976357`*^9}, {3.8751078113457813`*^9, 
   3.8751078419533854`*^9}, 3.87568775128843*^9, 3.8756885902249117`*^9, 
   3.875697529863347*^9, 3.87569764159367*^9, 3.875697919910701*^9, 
   3.8756980555507193`*^9, 3.875699248306663*^9, 3.875699348333618*^9, 
   3.875699404477067*^9, 3.8756994494387074`*^9, 3.87572757793512*^9, {
   3.8757838495815907`*^9, 3.875783871055716*^9}, {3.875783916187111*^9, 
   3.875783948317679*^9}, 3.8757840888805017`*^9, 3.875784754707965*^9, 
   3.87578481338249*^9, 3.87578492626875*^9, 3.875785002714672*^9, 
   3.875790985423336*^9, 3.875792880431561*^9, 3.8758103235296183`*^9, 
   3.875810392443574*^9, 3.8758105614389763`*^9, 3.875813161404724*^9, 
   3.875815056550865*^9, 3.8758159555233297`*^9, 3.875816063839275*^9, 
   3.875817682290228*^9, 3.8758177815322237`*^9, {3.875818080988226*^9, 
   3.8758181000483217`*^9}, 3.875818337389896*^9, {3.875818447951949*^9, 
   3.8758184966384983`*^9}, 3.875819031334797*^9, {3.875819334681094*^9, 
   3.875819353066847*^9}, 3.8758197965492697`*^9, 3.8758216758097897`*^9, {
   3.8758219914020557`*^9, 3.875822009911335*^9}, 3.875822066344729*^9, 
   3.8758222240702*^9, 3.875822320064514*^9, 3.875822392863962*^9, 
   3.875853348130314*^9, 3.875869622346408*^9, 3.875870469936893*^9, 
   3.875871689911714*^9, 3.875874289125264*^9, 3.8758743710005207`*^9, {
   3.875874627393833*^9, 3.8758746483605223`*^9}, 3.875874716576174*^9, 
   3.875972692165556*^9, 3.875972745404345*^9, 3.875972861319846*^9, 
   3.87619488951709*^9, 3.8761992403935633`*^9, 3.8762024471606197`*^9, 
   3.876203266956337*^9, 3.876207486924808*^9, 3.8762075310108232`*^9, 
   3.876213338618465*^9, 3.87621850389703*^9, 3.876219033254323*^9, 
   3.876219085782703*^9, 3.876287012124001*^9, 3.8763204872603607`*^9, 
   3.876320803959218*^9, 3.876366247034946*^9, 3.876366297205464*^9, 
   3.876366427616188*^9, 3.876366502605167*^9, 3.876366788867585*^9, 
   3.876368765647148*^9, 3.8763691952054033`*^9, 3.8763870494272413`*^9, 
   3.876387207173613*^9, 3.876460396782894*^9, 3.8768308183403873`*^9, 
   3.876891216866647*^9, 3.876909293841922*^9, 3.876909401123014*^9, 
   3.8769096088726807`*^9, 3.8769096667659187`*^9, 3.876911626345932*^9, 
   3.876980328731901*^9, 3.876983364381186*^9, 3.876983480093356*^9, 
   3.8769989579532433`*^9, 3.877063363663508*^9, 3.8770640706306343`*^9, 
   3.8801830764876747`*^9, 3.882432882109015*^9, 3.8834880762712317`*^9, 
   3.883497176826296*^9, 3.883548858160781*^9, 3.883550344554133*^9, 
   3.8836272429503307`*^9, 3.883635335398053*^9, {3.883635504092605*^9, 
   3.883635542634982*^9}, 3.883635597349778*^9, {3.8836356330506573`*^9, 
   3.8836356616690893`*^9}, {3.883635763642445*^9, 3.88363577862389*^9}, 
   3.8836358527700377`*^9, 3.883636043398114*^9, {3.88363608223114*^9, 
   3.883636102504129*^9}, 3.883636139766445*^9, 3.883636292593811*^9, 
   3.8836363690187902`*^9, 3.883636405200061*^9, 3.883644274605125*^9, 
   3.883644567004924*^9, 3.883645784852003*^9, 3.883649032366517*^9, 
   3.883649735009469*^9, 3.8837338266140614`*^9, 3.883733929711204*^9, 
   3.883736526310569*^9, 3.8838119973984213`*^9, 3.8838122445798397`*^9, 
   3.883822143000795*^9, 3.883827931159202*^9, 3.883831598979426*^9, 
   3.884013361446727*^9, 3.884013997534458*^9, {3.884014179341016*^9, 
   3.884014193042368*^9}, 3.8840158260197153`*^9, 3.884023853254134*^9, 
   3.8840246503217993`*^9, 3.8840248086476297`*^9, 3.884025427952485*^9, 
   3.8840734609870462`*^9},
 CellLabel->
  "Out[2618]=",ExpressionUUID->"0de1e691-8b25-4338-ad82-ed25e59abbac"]
}, Open  ]],

Cell[TextData[{
 StyleBox["[FUTURE FEATURES]\n",
  FontWeight->"Bold"],
 "T1, and T2 for individual qubits\nT1-><|\[CloseCurlyDoubleQuote]Alice\
\[CloseCurlyDoubleQuote]-><|1->100,2->101|>, \[OpenCurlyDoubleQuote]Bob\
\[CloseCurlyDoubleQuote]->110 |>,\nModifyDev[dev,Opts->xxx]. One can modify \
T1, T2 in between.\nPassive noise different on each zone.\nThe noise on the \
move operations? (passive noise)\nCorrelated noise happens only to qubits \
with the same zone.\nThe role of measurement/outcome in the sequence?\n\
Measurement involves scattering that can affect neighborhood atoms within \
raidus.\nParrallel -> False (done), Default (no operations in the same zone, \
always parallel Alice and Bob, Ent is always serial) , Full (Default+ \
parallel when in different zone)"
}], "Text",
 CellChangeTimes->{{3.866798041123843*^9, 3.866798085107017*^9}, {
   3.866804830154402*^9, 3.866804853992099*^9}, {3.866804894389616*^9, 
   3.866804912685439*^9}, {3.866805523973617*^9, 3.866805543760735*^9}, {
   3.867227854446649*^9, 3.867227860282613*^9}, {3.867227946065613*^9, 
   3.8672279514200497`*^9}, {3.867228041406211*^9, 3.867228042676688*^9}, {
   3.86723513216148*^9, 3.867235211241733*^9}, {3.867235307604314*^9, 
   3.867235335867313*^9}, {3.867235371286138*^9, 3.8672354061102047`*^9}, {
   3.867235962393691*^9, 3.867235962970166*^9}, {3.867238330229786*^9, 
   3.867238362355316*^9}, {3.867238468787754*^9, 3.86723850907125*^9}, {
   3.867240311300603*^9, 3.86724034164545*^9}, {3.8672413796847353`*^9, 
   3.867241417929265*^9}, {3.869163469705277*^9, 3.8691634751922293`*^9}, {
   3.869163525412311*^9, 3.8691635258375473`*^9}, {3.869166296399373*^9, 
   3.869166322250745*^9}, {3.8692122221518927`*^9, 3.8692124416674767`*^9}, {
   3.869215610806291*^9, 3.869215763731125*^9}, {3.8692158205852203`*^9, 
   3.86921582685341*^9}, {3.869215924268742*^9, 3.8692159254106817`*^9}, {
   3.869219346000005*^9, 3.869219370887588*^9}, {3.8692217927989407`*^9, 
   3.869221803309319*^9}, {3.869223028067062*^9, 3.869223250181242*^9}, {
   3.869223414281083*^9, 3.8692234197818823`*^9}, {3.869298081236103*^9, 
   3.869298085428043*^9}, {3.873535204533883*^9, 3.8735352062381897`*^9}, {
   3.873535321071416*^9, 3.873535342905724*^9}, {3.8735353885038013`*^9, 
   3.873535401766279*^9}, {3.873809262183402*^9, 3.8738093024102077`*^9}, {
   3.873883568547492*^9, 3.873883572881077*^9}, {3.875687776410322*^9, 
   3.8756878248469057`*^9}, 3.883734854912146*^9},
 Background->RGBColor[
  1, 0.85, 0.85],ExpressionUUID->"bb277a5a-5a35-4034-9157-64bf18989e78"],

Cell[CellGroupData[{

Cell["Entanglement distillation modules", "Subtitle",
 CellChangeTimes->{{3.875791204135686*^9, 3.875791222292997*^9}, {
  3.8758099141065197`*^9, 3.87580992117246*^9}, {3.8758145958974*^9, 
  3.8758146040481453`*^9}, {3.876207609383684*^9, 3.87620761395012*^9}, {
  3.876551216438946*^9, 3.8765512234254713`*^9}, {3.883739797676971*^9, 
  3.883739799978877*^9}},ExpressionUUID->"b537fdb9-8ce6-4848-af9b-\
b8dda8bf18d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Bit", "-", 
    RowBox[{"Flip", " ", "distillation", " ", 
     RowBox[{"operation", ":", " ", 
      RowBox[{"The", " ", "CNOT", " ", "equivalent"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"cx", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["C", "0"], "[", 
        SubscriptBox["Z", "1"], "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{"\[Pi]", "/", "2"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Phase", "-", 
     RowBox[{"flip", " ", 
      RowBox[{"distillation", ":", " ", 
       RowBox[{"Alice", " ", "and", " ", "Bob"}]}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pfa", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["C", "0"], "[", 
        SubscriptBox["Z", "1"], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "\[Pi]", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pfb", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", 
        RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["C", "0"], "[", 
        SubscriptBox["Z", "1"], "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{"\[Pi]", "/", "2"}], "]"}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.883653975430418*^9, 3.883653985077478*^9}, {
   3.883654079944396*^9, 3.883654085269121*^9}, {3.88365415925456*^9, 
   3.88365423086073*^9}, {3.883654621752829*^9, 3.883654642255464*^9}, {
   3.883654969453896*^9, 3.883654978124701*^9}, {3.8837349450323963`*^9, 
   3.883734998802987*^9}, {3.88373504207271*^9, 3.883735065120805*^9}, 
   3.883735105132169*^9, {3.883836612826042*^9, 3.883836624257846*^9}, {
   3.883836661150372*^9, 3.8838367166955214`*^9}, {3.8838368900907993`*^9, 
   3.883836911376781*^9}, {3.883837179133024*^9, 3.88383723279764*^9}, {
   3.8838375989694777`*^9, 3.8838376062051983`*^9}, {3.88383821555481*^9, 
   3.8838382157349253`*^9}},
 CellLabel->
  "In[2619]:=",ExpressionUUID->"065d7afa-e2b8-4625-8d54-f6c53ef06fe3"],

Cell["\<\
In the case when entanglement has only dephasing errors, one-round of \
distillation is sufficient.\
\>", "Text",
 CellChangeTimes->{{3.875791116721039*^9, 3.875791196379963*^9}, {
  3.875791247399633*^9, 3.8757912501572027`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a3da6556-c143-4f6a-a982-6f24d4bd76fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"heraldout", "::", "usage"}], "=", 
   "\"\<heraldout[outputs]. Check if all outputs 00 or 11 in all measurement \
outcomes.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heraldout", "[", "out_", "]"}], ":=", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"Equal", "@@@", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "out", "]"}], ",", "2"}], "]"}]}], 
    ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bell", "::", "usage"}], "=", 
   "\"\<Return circuit that gives bell state 01+10.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bellrev", "::", "usage"}], "=", 
    "\"\<Return circuit that undo bell state 01+10.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["bell", 
   RowBox[{"p_", ",", "q_"}]], ":=", 
  RowBox[{"Sequence", "@@", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["H", "p"], ",", 
     SubscriptBox["X", "q"], ",", 
     RowBox[{
      SubscriptBox["C", "p"], "[", 
      SubscriptBox["X", "q"], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["belle", 
      RowBox[{"p_", ",", "q_"}]], "[", 
     RowBox[{"fid_", ",", "entnoise_"}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ef", "=", 
        RowBox[{"VQD`Private`entfid2DepolDeph", "[", 
         RowBox[{"fid", ",", "entnoise", ",", "FidEnt"}], "]"}]}], "}"}], ",", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["bell", 
          RowBox[{"p", ",", "q"}]], ",", 
         RowBox[{
          SubscriptBox["Depol", 
           RowBox[{"p", ",", "q"}]], "[", 
          RowBox[{"ef", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Deph", 
           RowBox[{"p", ",", "q"}]], "[", 
          RowBox[{"ef", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"distbf", "::", "usage"}], "=", 
   "\"\<\!\(\*SubscriptBox[\(distbf\), \(p, q, r, s\)]\). distillation that \
squeezes bit-flip error of two pairs of entangled states: \
|\!\(\*SubscriptBox[\(\[CapitalPsi]\), \(p, r\)]\) \!\(\*SubscriptBox[\(\
\[CapitalPsi]\), \(q, s\)]\)>\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"distdeph", "::", "usage"}], "=", 
   "\"\<distdeph. distillation that squeezes dephasing error of two pairs of \
entangled states: |\!\(\*SubscriptBox[\(\[CapitalPsi]\), \(p, r\)]\) \
\!\(\*SubscriptBox[\(\[CapitalPsi]\), \(q, s\)]\)>\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["distbf", 
   RowBox[{"p_", ",", "q_", ",", "r_", ",", "s_"}]], ":=", 
  RowBox[{"Sequence", "@@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "r"], "[", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "p"], "[", 
      SubscriptBox["Z", "r"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "r"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "s"], "[", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "q"], "[", 
      SubscriptBox["Z", "s"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "s"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     SubscriptBox["M", "r"], ",", 
     SubscriptBox["M", "s"]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["distdeph", 
   RowBox[{"p_", ",", "q_", ",", "r_", ",", "s_"}]], ":=", 
  RowBox[{"Sequence", "@@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "p"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "p"], "[", 
      SubscriptBox["Z", "r"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "p"], "[", "\[Pi]", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "r"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "q"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "q"], "[", 
      SubscriptBox["Z", "s"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "s"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     SubscriptBox["M", "r"], ",", 
     SubscriptBox["M", "s"]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gatereplace", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["bellerr", 
        RowBox[{"p_", ",", "q_"}]], "[", "a___", "]"}], ":>", 
      RowBox[{
       SubscriptBox["belle", 
        RowBox[{"p", ",", "q"}]], "[", "a", "]"}]}], "}"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.883835043449711*^9, 3.883835070239751*^9}, {
   3.883837383857931*^9, 3.883837410957073*^9}, {3.883837625470355*^9, 
   3.8838376323750134`*^9}, {3.883837701134677*^9, 3.8838377368957663`*^9}, {
   3.883837814318387*^9, 3.883837815347845*^9}, {3.883837877413435*^9, 
   3.8838378840300627`*^9}, 3.883838222608015*^9},
 CellLabel->
  "In[2622]:=",ExpressionUUID->"0811401a-a6c8-4b24-9b7c-3c89f628ccea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DistillationCircuit", "::", "usage"}], "=", 
   "\"\<DistillationCircuit[rounds:[0-2], ent_fidelity, error_fraction, \
method:[0-3]]. \nReturns the whole distillation simulation circuit. Method:\n\
0 {distdeph, distdeph, ... ,distdeph}\n1 {distbf, distbf, ... , distbf}\n2 \
{distdeph, distbf, distdeph, ...}\n3 {distbf, distdeph, distbf, ... }\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DistillationCircuit", "[", 
   RowBox[{"nrounds_", ",", "fident_", ",", "errfrac_", ",", 
    RowBox[{"methode_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"circ", "=", 
       RowBox[{"<|", "|>"}]}], ",", 
      RowBox[{"totalcirc", "=", 
       RowBox[{"{", "}"}]}], ",", "diststep", ",", "seq"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["diststep", "q__"], ":=", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"0", "->", 
         SubscriptBox["distdeph", "q"]}], ",", 
        RowBox[{"1", "->", 
         SubscriptBox["distbf", "q"]}]}], "|>"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"seq", "=", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", "nrounds"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"1", "->", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", "nrounds"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"2", "->", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OddQ", "[", "r", "]"}], ",", "0", ",", "1"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"3", "->", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OddQ", "[", "r", "]"}], ",", "1", ",", "0"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "total", " ", "circuit", " ", "for", " ", "every", " ", "round"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"circ", "=", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nrounds", "==", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["bellerr", 
           RowBox[{"0", ",", "1"}]], "[", 
          RowBox[{"fident", ",", "errfrac"}], "]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"nrounds", "==", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"0", ",", "1"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"2", ",", "3"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["diststep", 
            RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
           RowBox[{
            RowBox[{"seq", "[", "methode", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"nrounds", "==", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"0", ",", "1"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"2", ",", "3"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["diststep", 
            RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
           RowBox[{
            RowBox[{"seq", "[", "methode", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          SubscriptBox["SWAP", 
           RowBox[{"0", ",", "4"}]], ",", 
          SubscriptBox["SWAP", 
           RowBox[{"1", ",", "5"}]], ",", "\[IndentingNewLine]", "\t", 
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"0", ",", "1"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"2", ",", "3"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["diststep", 
            RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
           RowBox[{
            RowBox[{"seq", "[", "methode", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["diststep", 
            RowBox[{"0", ",", "1", ",", "4", ",", "5"}]], "[", 
           RowBox[{
            RowBox[{"seq", "[", "methode", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", "circ"}]}],
    "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.876477920363007*^9, 3.8764779655372057`*^9}, {
   3.876478169422557*^9, 3.8764784407026377`*^9}, {3.876479629215251*^9, 
   3.876479709764594*^9}, {3.876545879905179*^9, 3.8765459646376543`*^9}, {
   3.876546002358199*^9, 3.876546208651536*^9}, {3.8765463361616793`*^9, 
   3.8765464807425547`*^9}, {3.8765468541924667`*^9, 3.876547306593685*^9}, {
   3.876547341470606*^9, 3.876547384869872*^9}, {3.8765474449954557`*^9, 
   3.876547492019656*^9}, {3.876547543072007*^9, 3.876547580238459*^9}, {
   3.8765476326563063`*^9, 3.876547635392393*^9}, {3.8765482779766693`*^9, 
   3.8765483785225077`*^9}, {3.876548482233109*^9, 3.876548681863904*^9}, {
   3.87654970015764*^9, 3.876549776461742*^9}, {3.876549819526986*^9, 
   3.8765498449554777`*^9}, {3.8765498908424892`*^9, 3.8765499000924187`*^9}, 
   3.876557648650201*^9, {3.87655793995532*^9, 3.8765579840071793`*^9}, {
   3.8765580415098343`*^9, 3.876558053250574*^9}, {3.876558746752141*^9, 
   3.87655880182299*^9}, {3.876559567887268*^9, 3.876559593429453*^9}, {
   3.876559625289089*^9, 3.876559664930505*^9}, 3.876561678687051*^9, {
   3.8765617174820127`*^9, 3.876561730979945*^9}, {3.8765618938238497`*^9, 
   3.876562024396269*^9}, {3.876562218297768*^9, 3.876562243867091*^9}, {
   3.87656228140952*^9, 3.876562338214355*^9}, {3.876562458215062*^9, 
   3.8765625132189703`*^9}, {3.876562704966612*^9, 3.876562932053666*^9}, {
   3.876562996202396*^9, 3.876563072809422*^9}, {3.8765631106940203`*^9, 
   3.876563113715939*^9}, {3.8766344361284103`*^9, 3.8766344379162083`*^9}, 
   3.88373654186012*^9, 3.8837367172017927`*^9, {3.8837369657033443`*^9, 
   3.88373697224293*^9}, {3.8837370400989237`*^9, 3.883737101821054*^9}, {
   3.8837371357613697`*^9, 3.883737151397039*^9}, 3.883739400367062*^9, 
   3.883833914890347*^9},
 CellLabel->
  "In[2633]:=",ExpressionUUID->"0a7225d4-f3e3-4f53-ae7e-0b8c52676e74"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DistFid", "::", "usage"}], "=", 
   "\"\<DistFid[nrounds,fident,errfrac,methode:[0-3]]. Return fidelity of a \
distillation process with native gates of trapped ions.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DistFid", "[", 
   RowBox[{"nrounds_", ",", "fident_", ",", "errfrac_", ",", 
    RowBox[{"methode_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nq", ",", "circ", ",", "\[Rho]", ",", "\[Rho]2", ",", "\[Psi]2", ",", 
      "fid", ",", "out"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nq", "=", 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "nrounds"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Rho]", "=", 
      RowBox[{"CreateDensityQureg", "[", "nq", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]2", "=", 
      RowBox[{"CreateDensityQureg", "[", "2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]2", "=", 
      RowBox[{"CreateQureg", "[", "2", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{
       RowBox[{"InitZeroState", "@", "\[Psi]2"}], ",", 
       RowBox[{"{", 
        SubscriptBox["bell", 
         RowBox[{"0", ",", "1"}]], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"circ", "=", 
      RowBox[{
       RowBox[{"DistillationCircuit", "[", 
        RowBox[{"nrounds", ",", "fident", ",", "errfrac", ",", "methode"}], 
        "]"}], "/.", "gatereplace"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"Not", "@", 
       RowBox[{"heraldout", "@", 
        RowBox[{"ApplyCircuit", "[", 
         RowBox[{
          RowBox[{"InitZeroState", "@", "\[Rho]"}], ",", "circ"}], "]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetQuregMatrix", "[", 
      RowBox[{"\[Rho]2", ",", 
       RowBox[{"PartialTrace", "[", 
        RowBox[{"\[Rho]", ",", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"nq", "-", "1"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"fid", "=", 
      RowBox[{"CalcFidelity", "[", 
       RowBox[{"\[Rho]2", ",", "\[Psi]2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DestroyQureg", "/@", 
      RowBox[{"{", 
       RowBox[{"\[Rho]", ",", "\[Rho]2", ",", "\[Psi]2"}], "}"}]}], ";", 
     "\[IndentingNewLine]", "fid"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.876547386659213*^9, 3.876547401660595*^9}, {
   3.876547448336645*^9, 3.876547518648096*^9}, {3.8765476410015917`*^9, 
   3.876547641385591*^9}, {3.8765501445685863`*^9, 3.876550170218279*^9}, {
   3.876550353212078*^9, 3.876550370635606*^9}, {3.876550520033969*^9, 
   3.876550526027953*^9}, {3.8765510353649893`*^9, 3.876551098147965*^9}, {
   3.87655112903826*^9, 3.876551168691835*^9}, {3.876551308407734*^9, 
   3.876551405296711*^9}, {3.8765514492406883`*^9, 3.876551514487034*^9}, {
   3.876551565893002*^9, 3.876551626972477*^9}, {3.876559762094717*^9, 
   3.8765600214656982`*^9}, {3.876560060615821*^9, 3.876560202767292*^9}, {
   3.876560241380857*^9, 3.876560242418663*^9}, {3.876560563949051*^9, 
   3.876560564266802*^9}, {3.87656062390023*^9, 3.876560657000717*^9}, {
   3.876560799472308*^9, 3.8765608256851463`*^9}, {3.8765608689446917`*^9, 
   3.876560952883531*^9}, {3.876561059956852*^9, 3.8765610949418497`*^9}, {
   3.87656129625931*^9, 3.8765612977725286`*^9}, {3.876561374256624*^9, 
   3.876561416619288*^9}, 3.8768310732776613`*^9, {3.8837365929141197`*^9, 
   3.8837366052282963`*^9}, {3.8837369894079514`*^9, 3.883736990067255*^9}, {
   3.883737110062389*^9, 3.8837371175464983`*^9}, {3.8838374500702477`*^9, 
   3.8838375270824957`*^9}, {3.8838376846143837`*^9, 3.883837685947864*^9}},
 CellLabel->
  "In[2635]:=",ExpressionUUID->"148ece78-3408-4785-82fe-e9d700a8bfb2"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Fnal fidelity of Ideal distrillation circuits for up \
to two-rounds of distillations with various proportion of Depol:Deph in the \
raw entanglement",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Subsection",
 CellChangeTimes->{{3.876214363285668*^9, 3.8762143842813168`*^9}, {
  3.8765632985853643`*^9, 3.876563308034465*^9}, {3.8837366423730307`*^9, 
  3.883736662801868*^9}, {3.883739750743412*^9, 
  3.8837397875098047`*^9}},ExpressionUUID->"52f3a935-6289-4dc5-91d6-\
26daa61c56f2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fidEnt", "=", "0.985"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"entanglement", " ", "fidelity"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dephfrac", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "1", ",", "0.25"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fids", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"methode", "->", 
       RowBox[{"Association", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "->", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"round", ",", 
               RowBox[{"DistFid", "[", 
                RowBox[{"round", ",", "fidEnt", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "-", "#"}], ",", "#"}], "}"}], ",", 
                 "methode"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"round", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "&"}], 
         "/@", "dephfrac"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"methode", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"title", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"0", "->", "\"\<deph-deph\>\""}], ",", 
     RowBox[{"1", "->", "\"\<bf-bf\>\""}], ",", 
     RowBox[{"2", "->", "\"\<deph-bf\>\""}], ",", 
     RowBox[{"3", "->", "\"\<bf-deph\>\""}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"minval", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Values", "[", 
           RowBox[{"fids", "[", "methode", "]"}], "]"}], ",", "1"}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxval", "=", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Values", "[", 
            RowBox[{"fids", "[", "methode", "]"}], "]"}], ",", "1"}], "]"}], 
         "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", "0.002"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Values", "@", 
          RowBox[{"fids", "[", "methode", "]"}]}], ",", 
         RowBox[{"PlotLegends", "->", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"Keys", "@", 
             RowBox[{"fids", "[", "methode", "]"}]}], ",", "Below"}], "]"}]}],
          ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"title", "[", "methode", "]"}]}]}], "]"}], ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Values", "@", 
          RowBox[{"fids", "[", "methode", "]"}]}], ",", 
         RowBox[{"Joined", "->", "True"}]}], "]"}], ",", 
       RowBox[{"Ticks", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", "Automatic"}], 
         "}"}]}], ",", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.01"}], ",", "2.02"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"minval", ",", "maxval"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Keys", "@", 
           RowBox[{"fids", "[", "methode", "]"}]}], ",", "Below"}], "]"}]}], 
       ",", 
       RowBox[{"ImageSize", "->", "200"}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameTicks", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", "Automatic"}], 
         "}"}]}], ",", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
       RowBox[{"GridLines", "->", 
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"minval", ",", "maxval", ",", "0.002"}], "]"}]}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"{", 
     RowBox[{"methode", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8763308888540373`*^9, 3.876330893347539*^9}, {
   3.8764589565851583`*^9, 3.876458956771167*^9}, {3.8765634639205914`*^9, 
   3.876563477085387*^9}, {3.876563563698365*^9, 3.8765635767841043`*^9}, {
   3.876563931402649*^9, 3.876563936524578*^9}, {3.8768901532611647`*^9, 
   3.8768901710675383`*^9}, {3.8836527636022053`*^9, 3.88365276780764*^9}, 
   3.883736612395555*^9, 3.883837842405278*^9, {3.884073489833889*^9, 
   3.884073492683063*^9}},
 CellLabel->
  "In[2700]:=",ExpressionUUID->"0da992e8-3315-43a0-8d59-4b6929991a1d"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000032}, {1., 0.9898490104060456}, {2., 
            0.9997928641440064}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000085}, {1., 0.9919663183046213}, {2., 
            0.9997984809778824}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000081}, {1., 0.9943123374820302}, {2., 
            0.9997662453376892}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999907}, {1., 0.9969073395012427}, {2., 
            0.9996838060298066}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999997}, {1., 0.9997681487969498}, {2., 
            0.9995364051038593}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000032}, {1., 0.9898490104060456}, {2., 
            0.9997928641440064}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000085}, {1., 0.9919663183046213}, {2., 
            0.9997984809778824}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000081}, {1., 0.9943123374820302}, {2., 
            0.9997662453376892}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999907}, {1., 0.9969073395012427}, {2., 
            0.9996838060298066}}]}, {
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999997}, {1., 0.9997681487969498}, {2., 
            0.9995364051038593}}]}}}, {{}, {}}}}, {Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, 
       PlotRange -> {{-0.01, 2.02}, {0.9849999999999907, 
        1.0017984809778824`}}, PlotLegends -> 
       Placed[{0., 0.25, 0.5, 0.75, 1.}, Below], ImageSize -> 200, Frame -> 
       True, FrameTicks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, FrameStyle -> 
       Directive[
         GrayLevel[0], 
         Thickness[Large]], 
       GridLines -> {
        None, {0.9849999999999907, 0.9869999999999907, 0.9889999999999907, 
         0.9909999999999907, 0.9929999999999907, 0.9949999999999907, 
         0.9969999999999907, 0.9989999999999907, 1.0009999999999906`}}, 
       DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0.984177862167888}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"deph-deph\"", TraditionalForm], 
       PlotRange -> {{0, 2.}, {0.984177862167888, 0.9997984809778824}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"0.`", "0.25`", "0.5`", "0.75`", "1.`"}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "False", ",", "False", ",", "False", ",", "False", ",", 
                   "False"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000032}, {1., 0.9898490104060315}, {2., 
            0.9801020047948839}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000085}, {1., 0.9856346964838609}, {2., 
            0.9718020688283243}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000081}, {1., 0.9810121859819394}, {2., 
            0.9628027954577354}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999907}, {1., 0.9759559398187075}, {2., 
            0.953083494324963}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999997}, {1., 0.9704499999999989}, {2., 
            0.9426464049999999}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000032}, {1., 0.9898490104060315}, {2., 
            0.9801020047948839}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000085}, {1., 0.9856346964838609}, {2., 
            0.9718020688283243}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000081}, {1., 0.9810121859819394}, {2., 
            0.9628027954577354}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999907}, {1., 0.9759559398187075}, {2., 
            0.953083494324963}}]}, {
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999997}, {1., 0.9704499999999989}, {2., 
            0.9426464049999999}}]}}}, {{}, {}}}}, {Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, 
       PlotRange -> {{-0.01, 2.02}, {0.9426464049999999, 0.9918490104060315}},
        PlotLegends -> Placed[{0., 0.25, 0.5, 0.75, 1.}, Below], ImageSize -> 
       200, Frame -> True, FrameTicks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, FrameStyle -> 
       Directive[
         GrayLevel[0], 
         Thickness[Large]], 
       GridLines -> {
        None, {0.9426464049999999, 0.9446464049999999, 0.9466464049999999, 
         0.9486464049999999, 0.9506464049999999, 0.9526464049999999, 
         0.9546464049999999, 0.9566464049999999, 0.9586464049999999, 
         0.9606464049999999, 0.9626464049999999, 0.9646464049999999, 
         0.9666464049999999, 0.9686464049999999, 0.9706464049999999, 
         0.9726464049999999, 0.9746464049999999, 0.9766464049999999, 
         0.9786464049999999, 0.9806464049999999, 0.9826464049999999, 
         0.9846464049999999, 0.9866464049999999, 0.9886464049999999, 
         0.9906464049999999}}, DisplayFunction -> Identity, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0.9400240380330004}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"bf-bf\"", TraditionalForm], 
       PlotRange -> {{0, 2.}, {0.9400240380330004, 0.9898490104060315}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"0.`", "0.25`", "0.5`", "0.75`", "1.`"}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "False", ",", "False", ",", "False", ",", "False", ",", 
                   "False"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000032}, {1., 0.9898490104060466}, {2., 
            0.980102004794912}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000085}, {1., 0.9919663183046213}, {2., 
            0.9843064908238817}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000081}, {1., 0.9943123374820302}, {2., 
            0.9889922373014037}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999907}, {1., 0.9969073395012423}, {2., 
            0.9942085823095846}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999997}, {1., 0.9997681487969489}, {2., 
            0.9999999462200866}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000032}, {1., 0.9898490104060466}, {2., 
            0.980102004794912}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000085}, {1., 0.9919663183046213}, {2., 
            0.9843064908238817}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000081}, {1., 0.9943123374820302}, {2., 
            0.9889922373014037}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999907}, {1., 0.9969073395012423}, {2., 
            0.9942085823095846}}]}, {
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999997}, {1., 0.9997681487969489}, {2., 
            0.9999999462200866}}]}}}, {{}, {}}}}, {Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, 
       PlotRange -> {{-0.01, 2.02}, {0.980102004794912, 1.0019999462200866`}},
        PlotLegends -> Placed[{0., 0.25, 0.5, 0.75, 1.}, Below], ImageSize -> 
       200, Frame -> True, FrameTicks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, FrameStyle -> 
       Directive[
         GrayLevel[0], 
         Thickness[Large]], 
       GridLines -> {
        None, {0.980102004794912, 0.982102004794912, 0.984102004794912, 
         0.9861020047949121, 0.9881020047949121, 0.9901020047949121, 
         0.9921020047949121, 0.9941020047949121, 0.9961020047949121, 
         0.9981020047949121, 1.000102004794912}}, DisplayFunction -> Identity,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0.9789965636046271}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"deph-bf\"", TraditionalForm], 
       PlotRange -> {{0, 2.}, {0.9789965636046271, 0.9999999462200866}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"0.`", "0.25`", "0.5`", "0.75`", "1.`"}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "False", ",", "False", ",", "False", ",", "False", ",", 
                   "False"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000032}, {1., 0.9898490104060315}, {2., 
            0.9997928641440063}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000085}, {1., 0.9856346964838609}, {2., 
            0.9997250226587258}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000081}, {1., 0.9810121859819394}, {2., 
            0.9995951642115222}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999907}, {1., 0.9759559398187075}, {2., 
            0.9993851521461519}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999997}, {1., 0.9704499999999989}, {2., 
            0.9990736690922816}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000032}, {1., 0.9898490104060315}, {2., 
            0.9997928641440063}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000085}, {1., 0.9856346964838609}, {2., 
            0.9997250226587258}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000081}, {1., 0.9810121859819394}, {2., 
            0.9995951642115222}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999907}, {1., 0.9759559398187075}, {2., 
            0.9993851521461519}}]}, {
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999997}, {1., 0.9704499999999989}, {2., 
            0.9990736690922816}}]}}}, {{}, {}}}}, {Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, 
       PlotRange -> {{-0.01, 2.02}, {0.9704499999999989, 
        1.0017928641440061`}}, PlotLegends -> 
       Placed[{0., 0.25, 0.5, 0.75, 1.}, Below], ImageSize -> 200, Frame -> 
       True, FrameTicks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, FrameStyle -> 
       Directive[
         GrayLevel[0], 
         Thickness[Large]], 
       GridLines -> {
        None, {0.9704499999999989, 0.9724499999999989, 0.9744499999999989, 
         0.9764499999999989, 0.9784499999999989, 0.9804499999999989, 
         0.9824499999999989, 0.9844499999999989, 0.9864499999999989, 
         0.9884499999999989, 0.9904499999999989, 0.9924499999999989, 
         0.994449999999999, 0.996449999999999, 0.998449999999999, 
         1.000449999999999}}, DisplayFunction -> Identity, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0.9688198408808898}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"bf-deph\"", TraditionalForm], 
       PlotRange -> {{0, 2.}, {0.9688198408808898, 0.9997928641440063}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"0.`", "0.25`", "0.5`", "0.75`", "1.`"}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "False", ",", "False", ",", "False", ",", "False", ",", 
                   "False"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.8765646639285707`*^9, 3.876564684111384*^9}, 
   3.8765647245547113`*^9, {3.876564766266584*^9, 3.8765647928095083`*^9}, 
   3.876564866089015*^9, {3.876565066556601*^9, 3.87656512072897*^9}, 
   3.876565222351822*^9, 3.876565297765954*^9, {3.8765653491637707`*^9, 
   3.876565368079028*^9}, 3.876565546085031*^9, {3.8765656727782497`*^9, 
   3.876565680957061*^9}, 3.876830820251498*^9, {3.876890159468958*^9, 
   3.876890175710435*^9}, 3.876891218254752*^9, 3.8769092951011257`*^9, 
   3.876909402406783*^9, 3.876909610329509*^9, 3.876909668247697*^9, 
   3.876911627623735*^9, 3.8769803303848047`*^9, 3.876983365286839*^9, 
   3.876983481006316*^9, 3.876998959025387*^9, 3.8770633656353817`*^9, 
   3.877064071524036*^9, 3.880183078436434*^9, 3.8824328831847353`*^9, 
   3.8834880771922827`*^9, 3.8834971783746634`*^9, {3.8834973033209667`*^9, 
   3.883497325869835*^9}, 3.8835019635362177`*^9, 3.883548858914933*^9, 
   3.883550345338009*^9, 3.883627245135475*^9, 3.883635336104039*^9, {
   3.8836355048260317`*^9, 3.883635543355393*^9}, 3.883635598077281*^9, {
   3.883635633814991*^9, 3.883635662430431*^9}, {3.883635764363958*^9, 
   3.883635779478753*^9}, 3.883635853493741*^9, 3.883636044185318*^9, {
   3.883636082975428*^9, 3.883636103376368*^9}, 3.883636140569358*^9, 
   3.883636293461959*^9, 3.883636369908062*^9, 3.883636406117544*^9, 
   3.883644275730802*^9, 3.883644568756353*^9, 3.883645786184936*^9, 
   3.883649033962431*^9, 3.883649736375914*^9, 3.8837338274026413`*^9, 
   3.883733930444668*^9, 3.883736301039033*^9, {3.883736518683839*^9, 
   3.883736527058511*^9}, 3.88373663540611*^9, 3.883811998125094*^9, 
   3.8838122453258343`*^9, 3.883822143659389*^9, 3.8838279320093107`*^9, 
   3.883831599913628*^9, 3.883837549811194*^9, {3.883837637985633*^9, 
   3.883837656805378*^9}, {3.88383769125319*^9, 3.883837775462652*^9}, {
   3.883837819604788*^9, 3.883837846382143*^9}, 3.883837890558567*^9, 
   3.883837943184183*^9, 3.883838227335681*^9, 3.88383862607901*^9, 
   3.88401336227878*^9, 3.884013998098708*^9, {3.884014179898452*^9, 
   3.8840141936221313`*^9}, 3.884015826547023*^9, 3.8840238538250303`*^9, 
   3.884023969677801*^9, 3.884024650910585*^9, 3.884024809344699*^9, {
   3.884025419367128*^9, 3.884025428644253*^9}, 3.884071506570485*^9, 
   3.884073461631909*^9, {3.884073493601554*^9, 3.884073502273821*^9}},
 CellLabel->
  "Out[2704]=",ExpressionUUID->"4f130ccb-ede4-45e4-893c-86d19f834f26"]
}, Open  ]],

Cell[TextData[StyleBox["Density matrix styling",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8768907130573893`*^9, 3.876890720882328*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"2cdcbd35-c15a-47d0-934d-3ac26b9a3ac0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"chartstyle", "[", "label_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"BarSpacing", "\[Rule]", "0.1`"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "height", "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"height", "<=", 
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]]}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}], "[", 
           RowBox[{"1", "+", 
            RowBox[{"0.1", "*", 
             RowBox[{"Log", "@", "height"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "\"\<Pastel\>\"", "]"}], "[", 
           RowBox[{"10", "*", "height"}], "]"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"ChartElementFunction", "->", "\"\<Cube\>\""}], ",", 
     RowBox[{"ChartStyle", "->", 
      RowBox[{"EdgeForm", "[", "Thick", "]"}]}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Business\>\""}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<00\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<01\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<10\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<11\>\""}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<00\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<01\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<10\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<11\>\""}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", "Black"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "->", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"label", ",", "Thick", ",", "17"}], "]"}], ",", 
        RowBox[{"ImageScaled", "[", 
         RowBox[{"{", 
          RowBox[{".2", ",", ".7"}], "}"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
     "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.876387814052075*^9, 3.876387919186067*^9}, {
   3.8763879604066668`*^9, 3.87638799070963*^9}, {3.876388040702815*^9, 
   3.8763880645834827`*^9}, 3.8763880975070353`*^9, {3.8763881874275303`*^9, 
   3.876388190049057*^9}, {3.876406559476883*^9, 3.876406560516448*^9}, {
   3.87640682720898*^9, 3.876406874735072*^9}, {3.876406914907761*^9, 
   3.876406981284309*^9}, {3.876407044365756*^9, 3.876407143770425*^9}, {
   3.87645731976475*^9, 3.876457427168351*^9}, {3.876457496107978*^9, 
   3.876457496847908*^9}, {3.876889775551379*^9, 3.8768897860666237`*^9}, {
   3.87688984071742*^9, 3.8768899010624323`*^9}, {3.876889964440153*^9, 
   3.8768899718116207`*^9}, {3.87689000600463*^9, 3.8768900166430798`*^9}, {
   3.876891490624825*^9, 3.8768914925099707`*^9}, {3.876891642930756*^9, 
   3.876891644774102*^9}, {3.8768916808637877`*^9, 3.8768917409838257`*^9}, {
   3.876891783442519*^9, 3.876891802466153*^9}, {3.876891989989409*^9, 
   3.87689199387726*^9}, {3.8768920430382137`*^9, 3.876892043506853*^9}, {
   3.876892265894343*^9, 3.876892273915962*^9}, {3.876899080239559*^9, 
   3.876899087029848*^9}, {3.8769093903686113`*^9, 3.876909395394917*^9}, {
   3.876999615559959*^9, 3.8769996209559193`*^9}, {3.877002377872958*^9, 
   3.877002380404687*^9}, {3.884072642174117*^9, 3.8840726426071453`*^9}},
 CellLabel->
  "In[2642]:=",ExpressionUUID->"78a44d5b-d75d-4c68-96ab-221b2b7e5a73"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"chartbell", "[", "label_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
     RowBox[{"BarSpacing", "\[Rule]", "0.1`"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "height", "}"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}], "[", 
         "height", "]"}]}], "]"}]}], ",", 
     RowBox[{"ChartElementFunction", "->", "\"\<Cube\>\""}], ",", 
     RowBox[{"ChartStyle", "->", 
      RowBox[{"EdgeForm", "[", "Thick", "]"}]}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Business\>\""}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<\[CapitalPhi]+\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<\[CapitalPhi]-\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<\[CapitalPsi]+\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<\[CapitalPsi]-\>\""}], "}"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<\[CapitalPhi]+\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<\[CapitalPhi]-\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<\[CapitalPsi]+\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<\[CapitalPsi]-\>\""}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", 
        RowBox[{"FontFamily", "->", "\"\<Helvetica\>\""}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "->", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"label", ",", "17", ",", "Bold"}], "]"}], ",", 
        RowBox[{"ImageScaled", "[", 
         RowBox[{"{", 
          RowBox[{".3", ",", ".9"}], "}"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "4.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "4.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LabelingFunction", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Rotate", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"#", ">=", "0.5"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"NumberForm", "[", 
                 RowBox[{"#", ",", "5"}], "]"}], ",", "13", ",", 
                RowBox[{"GrayLevel", "[", "0.82", "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", ">=", "0.001"}], ")"}], "&&", 
               RowBox[{"(", 
                RowBox[{"#", "<=", "0.5"}], ")"}]}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"NumberForm", "[", 
                 RowBox[{"#", ",", "4"}], "]"}], ",", "10", ",", "Black"}], 
               "]"}], ",", "\[IndentingNewLine]", "True", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"ScientificForm", "[", 
                 RowBox[{"#", ",", "2"}], "]"}], ",", "10", ",", "Black"}], 
               "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"90", " ", "Degree"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", ">=", "0.5"}], ",", "Center", ",", "Above"}], 
           "]"}]}], "]"}], "&"}], ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ViewAngle", "->", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FaceGrids", "->", "None"}], ",", 
     RowBox[{"Lighting", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\"\<Ambient\>\"", ",", " ", "LightPurple"}], "}"}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"BoxRatios", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0.7"}], "}"}]}], ",", 
     RowBox[{"Axes", "->", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False"}], "}"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getcolor", "[", "height_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "10"}]], "<", "height", "<=", 
      SuperscriptBox["10", 
       RowBox[{"-", "1"}]]}], ",", 
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<Pastel\>\"", "]"}], "[", 
      RowBox[{"1", "+", 
       RowBox[{"0.1", 
        RowBox[{"Log10", "@", "height"}]}]}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"0", "<=", "height", "<=", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]]}], ",", "White", ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<RoseColors\>\"", "]"}], "[", "height", 
        "]"}]}], "]"}]}], "]"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.876979560148282*^9, 3.876979727614102*^9}, {
   3.8769798068659153`*^9, 3.876979817516808*^9}, {3.8769798483459187`*^9, 
   3.876979861337391*^9}, {3.8769799765825357`*^9, 3.876980001171527*^9}, {
   3.876980035011529*^9, 3.8769802117504387`*^9}, {3.8769803173959923`*^9, 
   3.876980318549447*^9}, 3.876980354229821*^9, {3.876980392044441*^9, 
   3.876980392983427*^9}, {3.876981492300438*^9, 3.8769815209319773`*^9}, {
   3.876981553843145*^9, 3.876981555267664*^9}, {3.876981589466167*^9, 
   3.876981605261683*^9}, {3.87698199053374*^9, 3.876982108670127*^9}, {
   3.876982149405799*^9, 3.8769821943371058`*^9}, {3.876982227121867*^9, 
   3.876982324306407*^9}, {3.8769824123752327`*^9, 3.876982421030588*^9}, {
   3.876982642167547*^9, 3.876982898600312*^9}, {3.876983161410459*^9, 
   3.8769831871263247`*^9}, {3.8769832308550367`*^9, 3.876983244353763*^9}, {
   3.87698350263104*^9, 3.876983505027169*^9}, {3.876985229541142*^9, 
   3.8769852804139957`*^9}, {3.876985347020067*^9, 3.876985380525435*^9}, {
   3.876985422745286*^9, 3.8769854332777233`*^9}, {3.876986579906888*^9, 
   3.876986638004673*^9}, {3.876990648931119*^9, 3.876990658587611*^9}, {
   3.876990710602832*^9, 3.8769910973573303`*^9}, {3.876991147003462*^9, 
   3.8769911477804117`*^9}, {3.876991204480769*^9, 3.876991221131629*^9}, {
   3.8769912522462606`*^9, 3.876991253022316*^9}, {3.876991298027089*^9, 
   3.876991343572694*^9}, {3.876991388601252*^9, 3.8769913904147463`*^9}, 
   3.876991424523377*^9, {3.876991493567006*^9, 3.876991496836388*^9}, {
   3.876991650148239*^9, 3.876991701376438*^9}, {3.8769917788643723`*^9, 
   3.876991826752802*^9}, {3.876991868817513*^9, 3.8769918720622997`*^9}, {
   3.87699190455686*^9, 3.876991975185678*^9}, {3.8769920070529423`*^9, 
   3.876992034767621*^9}, {3.8769920756831627`*^9, 3.876992237092181*^9}, {
   3.876992326800829*^9, 3.876992362209342*^9}, {3.876992426570319*^9, 
   3.8769926748499603`*^9}, 3.876992708671*^9, {3.8769929596081667`*^9, 
   3.8769930276467123`*^9}, {3.8769931279324903`*^9, 3.876993148431003*^9}, {
   3.876993198352371*^9, 3.876993198911695*^9}, 3.876993321541947*^9, 
   3.8769933796337833`*^9, {3.8769934313006077`*^9, 3.876993431760426*^9}, {
   3.8769935025002604`*^9, 3.876993523725471*^9}, {3.876993583904016*^9, 
   3.876993660896109*^9}, {3.876993716002076*^9, 3.876993716091022*^9}, {
   3.876999921051279*^9, 3.8769999835741653`*^9}, {3.877000135451353*^9, 
   3.8770001367177134`*^9}, {3.8770002434122553`*^9, 
   3.8770002789390078`*^9}, {3.87700037136974*^9, 3.877000392989847*^9}, {
   3.877000520125592*^9, 3.877000536276731*^9}, {3.8770007286724777`*^9, 
   3.877000902662283*^9}, {3.8770009398885813`*^9, 3.87700094028021*^9}, {
   3.877000975545061*^9, 3.8770009875300007`*^9}, {3.877001018450697*^9, 
   3.877001139307369*^9}, {3.877001265602689*^9, 3.877001397036653*^9}, {
   3.87700145352922*^9, 3.877001480443802*^9}, {3.8770021755486383`*^9, 
   3.877002246436224*^9}, {3.877002322475328*^9, 3.8770023317738867`*^9}, {
   3.87700238386043*^9, 3.8770025975733347`*^9}, {3.877002651321547*^9, 
   3.877002651531856*^9}, {3.877002726050808*^9, 3.877002830436611*^9}, {
   3.877002961346847*^9, 3.877002963693899*^9}, {3.877003051266088*^9, 
   3.877003051639925*^9}, {3.877003308813829*^9, 3.87700330913456*^9}, {
   3.882433582294565*^9, 3.882433589058144*^9}, {3.8836354787933197`*^9, 
   3.883635539718422*^9}, {3.883635576179627*^9, 3.883635657808833*^9}, 
   3.883635701936564*^9, {3.883635741051195*^9, 3.8836357744559383`*^9}, {
   3.8836358470634327`*^9, 3.883636136997737*^9}, {3.8836362825177107`*^9, 
   3.8836362893571157`*^9}, {3.8836363247713327`*^9, 3.883636365011752*^9}, 
   3.883636396527158*^9, {3.883838507783781*^9, 3.8838385079349413`*^9}, {
   3.883838539725791*^9, 3.883838540524043*^9}, {3.88407260099117*^9, 
   3.8840726466794443`*^9}, 3.884072704849024*^9, {3.884072789009433*^9, 
   3.8840727894958887`*^9}, {3.8840733379600267`*^9, 3.8840733397226067`*^9}},
 
 CellLabel->
  "In[2643]:=",ExpressionUUID->"f60c26c3-9869-49be-9a0e-e82ee5d8c8a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perfect distillation circuits with noisy remote entanglement", "Section",
 CellChangeTimes->{{3.876888411050728*^9, 3.876888426377926*^9}, {
  3.883738264496921*^9, 3.8837382661569357`*^9}, {3.8837384630144987`*^9, 
  3.8837384820994263`*^9}},ExpressionUUID->"803e1800-72f5-4633-89e2-\
a1051e58802e"],

Cell[TextData[StyleBox["Bell basis transformation",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.876889546872444*^9, 
  3.876889551176429*^9}},ExpressionUUID->"5100e1ec-aa1b-4755-8651-\
38f0df16479e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mat2BellBasis", "[", "m_", "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "2"}]}], ")"}], "*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], "}"}]}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"pinv", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "2"}]}], ")"}], "*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]}], "}"}]}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"pinv", ".", "m", ".", "p"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8768885261541557`*^9, 3.8768885341943502`*^9}, {
  3.876888628227262*^9, 3.876888662182872*^9}, {3.8768886950472527`*^9, 
  3.8768886965816507`*^9}, {3.876889328642879*^9, 3.876889345422171*^9}, {
  3.876889439950932*^9, 3.8768895176394978`*^9}, {3.8837370150048923`*^9, 
  3.883737020901533*^9}, {3.8837394106095457`*^9, 3.883739491942389*^9}},
 CellLabel->
  "In[2645]:=",ExpressionUUID->"03e5b243-f124-4461-8871-1233f93d5b42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DistillationCircuit"}]], "Input",
 CellChangeTimes->{{3.876890235508382*^9, 3.876890240545741*^9}, {
  3.883737029790081*^9, 3.883737030382901*^9}},
 CellLabel->
  "In[2646]:=",ExpressionUUID->"b2885880-841b-44f4-a3b8-5ce6b7118820"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DistillationCircuit[rounds:[0-2], ent_fidelity, \
error_fraction, method:[0-3]]. \\nReturns the whole distillation simulation \
circuit. Method:\\n0 {distdeph, distdeph, ... ,distdeph}\\n1 {distbf, distbf, \
... , distbf}\\n2 {distdeph, distbf, distdeph, ...}\\n3 {distbf, distdeph, \
distbf, ... }\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DistillationCircuit", "[", 
                    
                    RowBox[{
                    "nrounds_", ",", "fident_", ",", "errfrac_", ",", 
                    RowBox[{"methode_", ":", "0"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"circ", "=", 
                    RowBox[{"Association", "[", "]"}]}], ",", 
                    RowBox[{"totalcirc", "=", 
                    RowBox[{"{", "}"}]}], ",", "diststep", ",", "seq"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["diststep", "q__"], ":=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    SubscriptBox["distdeph", "q"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    SubscriptBox["distbf", "q"]}]}], "]"}]}], ";", 
                    RowBox[{"seq", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", "nrounds"}], "]"}]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", "nrounds"}], "]"}]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OddQ", "[", "r", "]"}], ",", "0", ",", "1"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OddQ", "[", "r", "]"}], ",", "1", ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"circ", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"nrounds", "\[Equal]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], "}"}], ",", 
                    RowBox[{"nrounds", "\[Equal]", "1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"2", ",", "3"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"nrounds", "\[Equal]", "2"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"2", ",", "3"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    SubscriptBox["SWAP", 
                    RowBox[{"0", ",", "4"}]], ",", 
                    SubscriptBox["SWAP", 
                    RowBox[{"1", ",", "5"}]], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"2", ",", "3"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "4", ",", "5"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "]"}]}], "}"}]}], "]"}]}], ";", "circ"}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`DistillationCircuit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DistillationCircuit[rounds:[0-2], ent_fidelity, \
error_fraction, method:[0-3]]. \\nReturns the whole distillation simulation \
circuit. Method:\\n0 {distdeph, distdeph, ... ,distdeph}\\n1 {distbf, distbf, \
... , distbf}\\n2 {distdeph, distbf, distdeph, ...}\\n3 {distbf, distdeph, \
distbf, ... }\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               
               ImageSizeCache->{
                10.499999999999998`, {3., 7.499999999999998}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               
               ImageSizeCache->{
                10.499999999999998`, {3., 7.499999999999998}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DistillationCircuit[rounds:[0-2], ent_fidelity, error_fraction, \
method:[0-3]]. \nReturns the whole distillation simulation circuit. Method:\n\
0 {distdeph, distdeph, ... ,distdeph}\n1 {distbf, distbf, ... , distbf}\n2 \
{distdeph, distbf, distdeph, ...}\n3 {distbf, distdeph, distbf, ... }", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`DistillationCircuit, \
{$CellContext`DistillationCircuit[
         Pattern[$CellContext`nrounds, 
          Blank[]], 
         Pattern[$CellContext`fident, 
          Blank[]], 
         Pattern[$CellContext`errfrac, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`methode, 
           Blank[]], 0]] :> 
       Module[{$CellContext`circ = <||>, $CellContext`totalcirc = {}, \
$CellContext`diststep, $CellContext`seq}, Subscript[$CellContext`diststep, 
            Pattern[$CellContext`q, 
             BlankSequence[]]] := <|
           0 -> Subscript[$CellContext`distdeph, $CellContext`q], 1 -> 
            Subscript[$CellContext`distbf, $CellContext`q]|>; \
$CellContext`seq = <|
           0 -> ConstantArray[0, $CellContext`nrounds], 1 -> 
            ConstantArray[1, $CellContext`nrounds], 2 -> Table[
              If[
               OddQ[$CellContext`r], 0, 
               1], {$CellContext`r, $CellContext`nrounds}], 3 -> Table[
              If[
               OddQ[$CellContext`r], 1, 
               0], {$CellContext`r, $CellContext`nrounds}]|>; \
$CellContext`circ = Which[$CellContext`nrounds == 0, {
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac]}, \
$CellContext`nrounds == 1, {
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac], 
             
             Subscript[$CellContext`bellerr, 2, 
              3][$CellContext`fident, $CellContext`errfrac], 
             Subscript[$CellContext`diststep, 0, 1, 2, 3][
              Part[
               $CellContext`seq[$CellContext`methode], 
               1]]}, $CellContext`nrounds == 2, {
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac], 
             
             Subscript[$CellContext`bellerr, 2, 
              3][$CellContext`fident, $CellContext`errfrac], 
             Subscript[$CellContext`diststep, 0, 1, 2, 3][
              Part[
               $CellContext`seq[$CellContext`methode], 1]], 
             Subscript[QuEST`Gate`SWAP, 0, 4], 
             Subscript[QuEST`Gate`SWAP, 1, 5], 
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac], 
             
             Subscript[$CellContext`bellerr, 2, 
              3][$CellContext`fident, $CellContext`errfrac], 
             Subscript[$CellContext`diststep, 0, 1, 2, 3][
              Part[
               $CellContext`seq[$CellContext`methode], 1]], 
             Subscript[$CellContext`diststep, 0, 1, 4, 5][
              Part[
               $CellContext`seq[$CellContext`methode], 
               2]]}]; $CellContext`circ]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`DistillationCircuit"|>, False]]], "Output",
 CellChangeTimes->{
  3.8768902413085318`*^9, 3.876891218558022*^9, 3.876909295434132*^9, 
   3.876909402719493*^9, 3.8769096105356083`*^9, 3.8769096684424353`*^9, 
   3.87691162784571*^9, 3.876980330578858*^9, 3.876983365482884*^9, 
   3.8769834811905203`*^9, 3.8769989591786137`*^9, 3.877063365843045*^9, 
   3.877064071755576*^9, 3.880183078593059*^9, 3.882432883389853*^9, 
   3.8834880773324823`*^9, 3.883497178585952*^9, 3.8835488590647297`*^9, 
   3.883550345452134*^9, 3.883627245522238*^9, 3.883635336247164*^9, {
   3.883635504929818*^9, 3.88363554345757*^9}, 3.8836355981799593`*^9, {
   3.883635633919673*^9, 3.883635662549172*^9}, {3.8836357644644623`*^9, 
   3.88363577958359*^9}, 3.8836358535961037`*^9, 3.883636044289427*^9, {
   3.88363608307663*^9, 3.883636103479403*^9}, 3.883636140673602*^9, 
   3.8836362935641947`*^9, 3.883636370011026*^9, 3.8836364062191753`*^9, 
   3.883644275879231*^9, 3.8836445689304037`*^9, 3.8836457863469877`*^9, 
   3.88364903416818*^9, 3.8836497365706263`*^9, 3.8837338275870743`*^9, 
   3.88373393061065*^9, 3.883736527190146*^9, 3.883737030775709*^9, {
   3.883737127602916*^9, 3.883737156186366*^9}, 3.883811998239389*^9, 
   3.883812245471011*^9, 3.8838221437968273`*^9, 3.8838279321345873`*^9, 
   3.883831600030031*^9, 3.8840133624728518`*^9, 3.8840139982883263`*^9, {
   3.884014180051031*^9, 3.884014193781398*^9}, 3.884015826701229*^9, 
   3.884023853993415*^9, 3.8840246510689096`*^9, 3.884024809508563*^9, 
   3.884025428812478*^9, 3.884073461842204*^9},
 CellLabel->
  "Out[2646]=",ExpressionUUID->"1b864bff-9412-4681-af80-1404927682f7"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]6", "=", 
   RowBox[{"CreateDensityQureg", "[", "6", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.876889583295796*^9, 3.876889588639914*^9}, {
  3.87689030826305*^9, 3.876890319396199*^9}, {3.876891320167832*^9, 
  3.876891325490698*^9}, {3.8769990384746227`*^9, 3.8769990461713867`*^9}, {
  3.883833392069981*^9, 3.883833392440838*^9}},
 CellLabel->
  "In[2647]:=",ExpressionUUID->"78af2f09-6876-429d-af29-8eea1e55846f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"**", 
    RowBox[{
    "*", " ", "Change", " ", "the", " ", "error", " ", "fractions", " ", 
     "here", " ", "for", " ", "the", " ", "raw", " ", "entanglement"}]}], " ",
    "****)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ef", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"entfid", "=", "0.96"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8768919411648083`*^9, 3.8768919467524242`*^9}, {
  3.876999659666046*^9, 3.876999665912156*^9}, {3.883737198287574*^9, 
  3.883737253810904*^9}, {3.8838334850015717`*^9, 3.883833486791966*^9}, {
  3.883838460061923*^9, 3.88383846193379*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[2649]:=",ExpressionUUID->"08ebf0a3-cdb9-462f-96b8-98669c09e122"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "@", "Histogram3D"}]], "Input",
 CellChangeTimes->{{3.8840718924318733`*^9, 3.8840718972959213`*^9}},
 CellLabel->
  "In[2651]:=",ExpressionUUID->"28a15f5f-2ddf-4860-b285-3ede449cffac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AutomaticImageSize", "\[Rule]", "False"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesEdge", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"BarOrigin", "\[Rule]", "Bottom"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Boxed", "\[Rule]", "True"}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0.4`"}], "}"}]}], ",", 
   RowBox[{"BoxStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ChartBaseStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ChartElementFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ChartElements", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", "None"}], ",", 
   RowBox[{"ChartLayout", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", "None"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ClipPlanes", "\[Rule]", "None"}], ",", 
   RowBox[{"ClipPlanesStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
   RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ControllerLinking", "\[Rule]", "False"}], ",", 
   RowBox[{"ControllerMethod", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ControllerPath", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FaceGrids", "\[Rule]", "None"}], ",", 
   RowBox[{"FaceGridsStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"LegendAppearance", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Lighting", "\[Rule]", "\<\"Neutral\"\>"}], ",", 
   RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}], ",", 
   RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"RotationAction", "\[Rule]", "\<\"Fit\"\>"}], ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", "None"}], ",", 
   RowBox[{"SphericalRegion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TargetUnits", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"TouchscreenAutoZoom", "\[Rule]", "False"}], ",", 
   RowBox[{"ViewAngle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewCenter", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewMatrix", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.3`", ",", 
      RowBox[{"-", "2.4`"}], ",", "2.`"}], "}"}]}], ",", 
   RowBox[{"ViewProjection", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ViewVector", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewVertical", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8840718976329412`*^9, 3.884073461879212*^9},
 CellLabel->
  "Out[2651]=",ExpressionUUID->"515b12c7-55f4-4318-a814-1bdec245b6c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", "\"\<raw to round 1\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{
       RowBox[{"InitZeroState", "@", "\[Rho]6"}], ",", 
       RowBox[{
        RowBox[{"DistillationCircuit", "[", 
         RowBox[{"0", ",", "entfid", ",", "ef", ",", "0"}], "]"}], "/.", 
        "gatereplace"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlotDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Chop", "@", 
        RowBox[{"mat2BellBasis", "[", 
         RowBox[{"PartialTrace", "[", 
          RowBox[{"\[Rho]6", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], 
         "]"}]}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"chartbell", "[", "\"\<raw\>\"", "]"}]}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{
       RowBox[{"InitZeroState", "@", "\[Rho]6"}], ",", 
       RowBox[{
        RowBox[{"DistillationCircuit", "[", 
         RowBox[{"1", ",", "entfid", ",", "ef", ",", "0"}], "]"}], "/.", 
        "gatereplace"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlotDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Chop", "@", 
        RowBox[{"mat2BellBasis", "[", 
         RowBox[{"PartialTrace", "[", 
          RowBox[{"\[Rho]6", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], 
         "]"}]}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"chartbell", "[", "\"\<deph\>\"", "]"}]}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{
       RowBox[{"InitZeroState", "@", "\[Rho]6"}], ",", 
       RowBox[{
        RowBox[{"DistillationCircuit", "[", 
         RowBox[{"1", ",", "entfid", ",", "ef", ",", "1"}], "]"}], "/.", 
        "gatereplace"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlotDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Chop", "@", 
        RowBox[{"mat2BellBasis", "[", 
         RowBox[{"PartialTrace", "[", 
          RowBox[{"\[Rho]6", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], 
         "]"}]}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"chartbell", "[", "\"\<bf\>\"", "]"}]}]}], "]"}]}]}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.876888243996686*^9, 3.8768882552187033`*^9}, {
   3.876888400226082*^9, 3.876888406231101*^9}, {3.8768884649610147`*^9, 
   3.876888521348789*^9}, {3.876889524339129*^9, 3.876889570405655*^9}, {
   3.876889673434115*^9, 3.876889676402361*^9}, {3.876889729690185*^9, 
   3.876889731287361*^9}, {3.8768900569149446`*^9, 3.876890059198719*^9}, {
   3.876890259625342*^9, 3.876890271553266*^9}, {3.876999687289558*^9, 
   3.876999690895556*^9}, {3.8769998349297533`*^9, 3.876999840963438*^9}, 
   3.877002669680532*^9, {3.8770559976036386`*^9, 3.8770560182294407`*^9}, {
   3.883737231702311*^9, 3.8837372784245768`*^9}, {3.883739544579938*^9, 
   3.8837395565907927`*^9}, {3.883832460170182*^9, 3.883832460282838*^9}, {
   3.8838332512313633`*^9, 3.8838333032042837`*^9}, {3.883833398074298*^9, 
   3.883833477188323*^9}, {3.883833839157415*^9, 3.8838338508507*^9}, {
   3.8840716420014277`*^9, 3.884071647181224*^9}, {3.884071975443132*^9, 
   3.884072073791915*^9}, {3.884072109839149*^9, 3.884072139053256*^9}, {
   3.884072217181534*^9, 3.884072318479144*^9}, {3.8840723584286337`*^9, 
   3.8840725050585413`*^9}, {3.884072623476192*^9, 3.88407265905293*^9}, {
   3.8840727430508204`*^9, 3.884072762899233*^9}, {3.884072820582622*^9, 
   3.8840728298519363`*^9}, {3.884072898951935*^9, 3.8840729636887217`*^9}, {
   3.88407317150707*^9, 3.884073329964587*^9}, {3.884073402809577*^9, 
   3.884073429183694*^9}},
 CellLabel->
  "In[2652]:=",ExpressionUUID->"4a2604f4-2a7c-4e87-bf6a-3f9e80b8ab32"],

Cell[BoxData["\<\"raw to round 1\"\>"], "Print",
 CellChangeTimes->{
  3.883833442137579*^9, {3.883833477599873*^9, 3.883833489141816*^9}, 
   3.8838335384098186`*^9, 3.883833746651126*^9, {3.88383382736998*^9, 
   3.883833851063555*^9}, {3.8838375543022137`*^9, 3.883837555796048*^9}, {
   3.8838378989235983`*^9, 3.883837901829165*^9}, 3.883837949467537*^9, 
   3.883838005809622*^9, {3.883838464553041*^9, 3.883838478636552*^9}, 
   3.8838385112333193`*^9, 3.883838544895759*^9, 3.8840133625111637`*^9, {
   3.884013976736848*^9, 3.884013998317606*^9}, 3.8840141800768213`*^9, 
   3.88401582672935*^9, 3.8840238540191298`*^9, 3.8840246510959883`*^9, 
   3.884024809535008*^9, 3.88402542884217*^9, {3.884071638458351*^9, 
   3.884071657133656*^9}, {3.884071977614913*^9, 3.884072011643231*^9}, {
   3.8840720471800413`*^9, 3.884072075265973*^9}, {3.884072111693182*^9, 
   3.884072143421125*^9}, {3.884072228960381*^9, 3.8840722894479322`*^9}, {
   3.884072332251177*^9, 3.884072427792535*^9}, {3.884072481593989*^9, 
   3.8840725346909*^9}, 3.884072660946909*^9, 3.884072709438582*^9, 
   3.884072763806301*^9, 3.8840727962717943`*^9, 3.884072830229903*^9, 
   3.884072899697825*^9, 3.884072936873961*^9, {3.8840729710332603`*^9, 
   3.8840729935904217`*^9}, {3.884073089545858*^9, 3.8840730902685823`*^9}, {
   3.884073173023828*^9, 3.884073343685083*^9}, {3.884073405665352*^9, 
   3.88407342957758*^9}, 3.8840734619101257`*^9},
 CellLabel->
  "During evaluation of \
In[2652]:=",ExpressionUUID->"974d8859-4f6f-495c-84f8-e86f58d3e1a6"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     Directive[
      RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
      FontColor -> GrayLevel[0.4], 
      EdgeForm[
       Directive[
        Thickness[Large], 
        GrayLevel[0], 
        Opacity[0.1]]]], {{}, {
       Directive[
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        FontColor -> GrayLevel[0.4], 
        EdgeForm[
         Directive[
          Thickness[Large], 
          GrayLevel[0], 
          Opacity[0.1]]]], {{{{
           Directive[
            RGBColor[0.72987, 0.239399, 0.230961]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9599999999999996}]}],
             "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.96\"", ShowStringCharacters -> False], 
                 0.9599999999999996, AutoDelete -> True], NumberForm[#, 5]& ],
                13, 
               GrayLevel[0.82], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {3., 3., 0.4799999999999998}, {0, 
           0}]}}, {{{
           Directive[
            RGBColor[0.237736, 0.340215, 0.575113]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
               0.04000000000000009}]}], "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.04\"", ShowStringCharacters -> False], 
                 0.04000000000000009, AutoDelete -> True], 
                NumberForm[#, 4]& ], 10, 
               GrayLevel[0], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {4., 4., 0.04000000000000009}, {
           0, -1}]}}}}, {}, {}}}, {
    Axes -> {True, True, False}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
     AxesLabel -> {None, None, None}, Boxed -> {Left, Bottom, Back}, 
     BoxRatios -> {1, 1, 0.7}, Epilog -> InsetBox[
       BoxData[
        FormBox[
         StyleBox["\"raw\"", 17, Bold, StripOnInput -> False], 
         TraditionalForm]], 
       ImageScaled[{0.3, 0.9}]], FaceGridsStyle -> Directive[
       GrayLevel[0.3, 1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica"], Lighting -> {{"Ambient", 
        RGBColor[0.94, 0.88, 0.94]}}, 
     Method -> {"RotationControl" -> "Globe"}, 
     PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
     PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
     TicksStyle -> {Automatic, Automatic, 
       Directive[
        Opacity[0], FontOpacity -> 1]}, ViewAngle -> All}], 
   Graphics3DBox[{
     Directive[
      RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
      FontColor -> GrayLevel[0.4], 
      EdgeForm[
       Directive[
        Thickness[Large], 
        GrayLevel[0], 
        Opacity[0.1]]]], {{}, {
       Directive[
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        FontColor -> GrayLevel[0.4], 
        EdgeForm[
         Directive[
          Thickness[Large], 
          GrayLevel[0], 
          Opacity[0.1]]]], {{{{
           Directive[
            RGBColor[0.237736, 0.340215, 0.575113]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
               0.0017331022530329304`}]}], "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.001733\"", ShowStringCharacters -> False], 
                 0.0017331022530329304`, AutoDelete -> True], 
                NumberForm[#, 4]& ], 10, 
               GrayLevel[0], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {1., 1., 0.0017331022530329304`}, {
           0, -1}]}}, {{{
           Directive[
            RGBColor[0.72987, 0.239399, 0.230961]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9982668977469669}]}],
             "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.99827\"", ShowStringCharacters -> False], 
                 0.9982668977469669, AutoDelete -> True], NumberForm[#, 5]& ],
                13, 
               GrayLevel[0.82], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {3., 3., 0.49913344887348343`}, {0, 
           0}]}}}}, {}, {}}}, {
    Axes -> {True, True, False}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
     AxesLabel -> {None, None, None}, Boxed -> {Left, Bottom, Back}, 
     BoxRatios -> {1, 1, 0.7}, Epilog -> InsetBox[
       BoxData[
        FormBox[
         StyleBox["\"deph\"", 17, Bold, StripOnInput -> False], 
         TraditionalForm]], 
       ImageScaled[{0.3, 0.9}]], FaceGridsStyle -> Directive[
       GrayLevel[0.3, 1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica"], Lighting -> {{"Ambient", 
        RGBColor[0.94, 0.88, 0.94]}}, 
     Method -> {"RotationControl" -> "Globe"}, 
     PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
     PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
     TicksStyle -> {Automatic, Automatic, 
       Directive[
        Opacity[0], FontOpacity -> 1]}, ViewAngle -> All}], 
   Graphics3DBox[{
     Directive[
      RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
      FontColor -> GrayLevel[0.4], 
      EdgeForm[
       Directive[
        Thickness[Large], 
        GrayLevel[0], 
        Opacity[0.1]]]], {{}, {
       Directive[
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        FontColor -> GrayLevel[0.4], 
        EdgeForm[
         Directive[
          Thickness[Large], 
          GrayLevel[0], 
          Opacity[0.1]]]], {{{{
           Directive[
            RGBColor[0.72987, 0.239399, 0.230961]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9231999999999989}]}],
             "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.9232\"", ShowStringCharacters -> False], 
                 0.9231999999999989, AutoDelete -> True], NumberForm[#, 5]& ],
                13, 
               GrayLevel[0.82], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {3., 3., 0.46159999999999946`}, {0, 
           0}]}}, {{{
           Directive[
            RGBColor[0.237736, 0.340215, 0.575113]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
               0.07680000000000006}]}], "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.0768\"", ShowStringCharacters -> False], 
                 0.07680000000000006, AutoDelete -> True], 
                NumberForm[#, 4]& ], 10, 
               GrayLevel[0], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {4., 4., 0.07680000000000006}, {
           0, -1}]}}}}, {}, {}}}, {
    Axes -> {True, True, False}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
     AxesLabel -> {None, None, None}, Boxed -> {Left, Bottom, Back}, 
     BoxRatios -> {1, 1, 0.7}, Epilog -> InsetBox[
       BoxData[
        FormBox[
         StyleBox["\"bf\"", 17, Bold, StripOnInput -> False], 
         TraditionalForm]], 
       ImageScaled[{0.3, 0.9}]], FaceGridsStyle -> Directive[
       GrayLevel[0.3, 1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica"], Lighting -> {{"Ambient", 
        RGBColor[0.94, 0.88, 0.94]}}, 
     Method -> {"RotationControl" -> "Globe"}, 
     PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
     PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
     TicksStyle -> {Automatic, Automatic, 
       Directive[
        Opacity[0], FontOpacity -> 1]}, ViewAngle -> All}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.877000187672124*^9, 3.877000281501705*^9}, {
   3.877000374426526*^9, 3.877000397714579*^9}, 3.877000576366065*^9, {
   3.87700073187759*^9, 3.877000943200082*^9}, {3.877000978712945*^9, 
   3.8770009972635317`*^9}, {3.8770011081934557`*^9, 
   3.8770011302148848`*^9}, {3.877001271394506*^9, 3.877001368495922*^9}, 
   3.877001399790042*^9, {3.877001457631136*^9, 3.877001484787303*^9}, {
   3.8770021791695623`*^9, 3.8770022059246273`*^9}, {3.877002240705379*^9, 
   3.8770022485992823`*^9}, {3.877002326533038*^9, 3.8770023343857403`*^9}, 
   3.877002387485021*^9, {3.877002438965961*^9, 3.877002599979075*^9}, {
   3.877002654250457*^9, 3.877002673376772*^9}, 3.877002728970887*^9, {
   3.877002813294805*^9, 3.877002838497059*^9}, 3.877002966861452*^9, {
   3.877003031295865*^9, 3.877003054300425*^9}, 3.877004173000166*^9, 
   3.877063366040612*^9, 3.877064071852955*^9, 3.880183078850162*^9, 
   3.882432883499764*^9, 3.883488077425902*^9, 3.8834971787356577`*^9, 
   3.8835022101801453`*^9, 3.8835488591494617`*^9, 3.8835503455191708`*^9, 
   3.883627245730833*^9, 3.883635336307639*^9, {3.88363550501411*^9, 
   3.883635543526462*^9}, 3.8836355982693*^9, {3.8836356339903727`*^9, 
   3.883635662621133*^9}, {3.883635747266815*^9, 3.883635779661784*^9}, 
   3.883635853670209*^9, {3.88363603602773*^9, 3.8836360443655863`*^9}, {
   3.883636083147355*^9, 3.8836361035787163`*^9}, 3.883636140767178*^9, 
   3.8836362936651697`*^9, {3.883636357492972*^9, 3.8836364062870398`*^9}, 
   3.883644276012835*^9, 3.883644569055821*^9, 3.883645786520919*^9, 
   3.883649034274473*^9, 3.883649736711796*^9, 3.883733827679879*^9, 
   3.883733930688118*^9, 3.883736527255308*^9, {3.8837381949103737`*^9, 
   3.883738237708364*^9}, {3.883739512902636*^9, 3.8837395274547977`*^9}, 
   3.883739558952305*^9, 3.883811998335237*^9, 3.883812245559743*^9, 
   3.883821790320075*^9, 3.8838221438894243`*^9, 3.883827932295041*^9, 
   3.883831600130657*^9, {3.883832461976597*^9, 3.88383246604843*^9}, 
   3.8838334422224216`*^9, {3.883833477680603*^9, 3.883833489213537*^9}, 
   3.883833538490164*^9, 3.883833746729254*^9, {3.883833827450149*^9, 
   3.883833851144012*^9}, {3.883837554379856*^9, 3.8838375558716593`*^9}, {
   3.883837899003759*^9, 3.883837901905327*^9}, 3.883837949547349*^9, 
   3.883838005887887*^9, {3.883838464626934*^9, 3.883838478710246*^9}, 
   3.883838511310141*^9, 3.883838544974703*^9, 3.8840133626131*^9, {
   3.884013976809421*^9, 3.884013998387929*^9}, 3.8840141801436777`*^9, 
   3.884015826797099*^9, 3.884023854079752*^9, 3.884024651163954*^9, 
   3.884024809604555*^9, 3.884025428905367*^9, {3.884071638529739*^9, 
   3.88407165741509*^9}, {3.884071977819416*^9, 3.884072011676009*^9}, {
   3.884072047208733*^9, 3.884072075295698*^9}, {3.884072111723627*^9, 
   3.884072143451707*^9}, {3.884072228989908*^9, 3.884072289478669*^9}, {
   3.884072332280051*^9, 3.8840724278253183`*^9}, {3.884072481620061*^9, 
   3.884072534721418*^9}, 3.884072661014565*^9, 3.8840727095125227`*^9, 
   3.884072763883497*^9, 3.88407279634028*^9, 3.8840728302980824`*^9, 
   3.884072899768647*^9, 3.884072936944913*^9, {3.884072971114972*^9, 
   3.884072993663962*^9}, {3.8840730896202507`*^9, 3.8840730903418913`*^9}, {
   3.884073173097294*^9, 3.884073343755886*^9}, {3.884073405737026*^9, 
   3.884073429650823*^9}, 3.884073461978537*^9},
 CellLabel->
  "Out[2653]=",ExpressionUUID->"14610248-798c-4405-a66f-2fe54d0cdc27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", "\"\<round 2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{"Not", "@", 
       RowBox[{"heraldout", "@", 
        RowBox[{"ApplyCircuit", "[", 
         RowBox[{
          RowBox[{"InitZeroState", "@", "\[Rho]6"}], ",", 
          RowBox[{
           RowBox[{"DistillationCircuit", "[", 
            RowBox[{"2", ",", "entfid", ",", "ef", ",", "0"}], "]"}], "/.", 
           "gatereplace"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlotDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Chop", "@", 
        RowBox[{"mat2BellBasis", "[", 
         RowBox[{"PartialTrace", "[", 
          RowBox[{"\[Rho]6", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], 
         "]"}]}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"chartbell", "[", "\"\<deph-deph\>\"", "]"}]}]}], "]"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{"Not", "@", 
       RowBox[{"heraldout", "@", 
        RowBox[{"ApplyCircuit", "[", 
         RowBox[{
          RowBox[{"InitZeroState", "@", "\[Rho]6"}], ",", 
          RowBox[{
           RowBox[{"DistillationCircuit", "[", 
            RowBox[{"2", ",", "entfid", ",", "ef", ",", "2"}], "]"}], "/.", 
           "gatereplace"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlotDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Chop", "@", 
        RowBox[{"mat2BellBasis", "[", 
         RowBox[{"PartialTrace", "[", 
          RowBox[{"\[Rho]6", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], 
         "]"}]}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"chartbell", "[", "\"\<deph-bf\>\"", "]"}]}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{"Not", "@", 
       RowBox[{"heraldout", "@", 
        RowBox[{"ApplyCircuit", "[", 
         RowBox[{
          RowBox[{"InitZeroState", "@", "\[Rho]6"}], ",", 
          RowBox[{
           RowBox[{"DistillationCircuit", "[", 
            RowBox[{"2", ",", "entfid", ",", "ef", ",", "1"}], "]"}], "/.", 
           "gatereplace"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlotDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Chop", "@", 
        RowBox[{"mat2BellBasis", "[", 
         RowBox[{"PartialTrace", "[", 
          RowBox[{"\[Rho]6", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], 
         "]"}]}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"chartbell", "[", "\"\<bf-bf\>\"", "]"}]}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{"Not", "@", 
       RowBox[{"heraldout", "@", 
        RowBox[{"ApplyCircuit", "[", 
         RowBox[{
          RowBox[{"InitZeroState", "@", "\[Rho]6"}], ",", 
          RowBox[{
           RowBox[{"DistillationCircuit", "[", 
            RowBox[{"2", ",", "entfid", ",", "ef", ",", "3"}], "]"}], "/.", 
           "gatereplace"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlotDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Chop", "@", 
        RowBox[{"mat2BellBasis", "[", 
         RowBox[{"PartialTrace", "[", 
          RowBox[{"\[Rho]6", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], 
         "]"}]}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"chartbell", "[", "\"\<bf-deph\>\"", "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "}"}]}]}], "Input",
 CellChangeTimes->{{3.88383445362862*^9, 3.8838345149232388`*^9}, {
  3.883834560710403*^9, 3.88383458741691*^9}, {3.8838351472779837`*^9, 
  3.883835233397751*^9}, {3.8840727141195183`*^9, 3.884072721742051*^9}},
 CellLabel->
  "In[2654]:=",ExpressionUUID->"45308944-57f1-4101-8f8a-039f7278ac1c"],

Cell[BoxData["\<\"round 2\"\>"], "Print",
 CellChangeTimes->{{3.883834515527913*^9, 3.8838346110816917`*^9}, 
   3.8838352002356*^9, 3.883835234034659*^9, 3.8838379696501017`*^9, {
   3.883838483575447*^9, 3.883838512895463*^9}, {3.883838549173504*^9, 
   3.883838549532772*^9}, 3.8840133626871147`*^9, {3.884013982981367*^9, 
   3.884013998431971*^9}, 3.884014180186241*^9, 3.884015826842586*^9, 
   3.884023854123131*^9, 3.884024651207884*^9, 3.8840248096515293`*^9, 
   3.8840254289532003`*^9, 3.884072722230747*^9, 3.8840727924149218`*^9, {
   3.8840730795577793`*^9, 3.8840730865419903`*^9}, {3.884073348286117*^9, 
   3.884073348581946*^9}, 3.884073462028326*^9},
 CellLabel->
  "During evaluation of \
In[2654]:=",ExpressionUUID->"f6a0fe54-7229-40e1-8727-b8c405055aa7"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     Directive[
      RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
      FontColor -> GrayLevel[0.4], 
      EdgeForm[
       Directive[
        Thickness[Large], 
        GrayLevel[0], 
        Opacity[0.1]]]], {{}, {
       Directive[
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        FontColor -> GrayLevel[0.4], 
        EdgeForm[
         Directive[
          Thickness[Large], 
          GrayLevel[0], 
          Opacity[0.1]]]], {{{{
           Directive[
            RGBColor[0.72987, 0.239399, 0.230961]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9965398027807729}]}],
             "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.99654\"", ShowStringCharacters -> False], 
                 0.9965398027807729, AutoDelete -> True], NumberForm[#, 5]& ],
                13, 
               GrayLevel[0.82], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {3., 3., 0.49826990139038646`}, {0, 
           0}]}}, {{{
           Directive[
            RGBColor[0.237736, 0.340215, 0.575113]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
               0.003460197219226882}]}], "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.00346\"", ShowStringCharacters -> False], 
                 0.003460197219226882, AutoDelete -> True], 
                NumberForm[#, 4]& ], 10, 
               GrayLevel[0], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {4., 4., 0.003460197219226882}, {
           0, -1}]}}}}, {}, {}}}, {
    Axes -> {True, True, False}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
     AxesLabel -> {None, None, None}, Boxed -> {Left, Bottom, Back}, 
     BoxRatios -> {1, 1, 0.7}, Epilog -> InsetBox[
       BoxData[
        FormBox[
         StyleBox["\"deph-deph\"", 17, Bold, StripOnInput -> False], 
         TraditionalForm]], 
       ImageScaled[{0.3, 0.9}]], FaceGridsStyle -> Directive[
       GrayLevel[0.3, 1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica"], Lighting -> {{"Ambient", 
        RGBColor[0.94, 0.88, 0.94]}}, 
     Method -> {"RotationControl" -> "Globe"}, 
     PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
     PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
     TicksStyle -> {Automatic, Automatic, 
       Directive[
        Opacity[0], FontOpacity -> 1]}, ViewAngle -> All}], 
   Graphics3DBox[{
     Directive[
      RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
      FontColor -> GrayLevel[0.4], 
      EdgeForm[
       Directive[
        Thickness[Large], 
        GrayLevel[0], 
        Opacity[0.1]]]], {{}, {
       Directive[
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        FontColor -> GrayLevel[0.4], 
        EdgeForm[
         Directive[
          Thickness[Large], 
          GrayLevel[0], 
          Opacity[0.1]]]], {{{{
           Directive[
            RGBColor[0.237736, 0.340215, 0.575113]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
               3.0140727054618774`*^-6}]}], "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"3.\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                  False], 3.0140727054618774`*^-6, AutoDelete -> True], 
                ScientificForm[#, 2]& ], 10, 
               GrayLevel[0], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {1., 1., 3.0140727054618774`*^-6}, {
           0, -1}]}}, {{{
           Directive[
            RGBColor[0.72987, 0.239399, 0.230961]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9999969859272944}]}],
             "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"1.\"", ShowStringCharacters -> False], 
                 0.9999969859272944, AutoDelete -> True], NumberForm[#, 5]& ],
                13, 
               GrayLevel[0.82], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {3., 3., 0.4999984929636472}, {0, 
           0}]}}}}, {}, {}}}, {
    Axes -> {True, True, False}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
     AxesLabel -> {None, None, None}, Boxed -> {Left, Bottom, Back}, 
     BoxRatios -> {1, 1, 0.7}, Epilog -> InsetBox[
       BoxData[
        FormBox[
         StyleBox["\"deph-bf\"", 17, Bold, StripOnInput -> False], 
         TraditionalForm]], 
       ImageScaled[{0.3, 0.9}]], FaceGridsStyle -> Directive[
       GrayLevel[0.3, 1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica"], Lighting -> {{"Ambient", 
        RGBColor[0.94, 0.88, 0.94]}}, 
     Method -> {"RotationControl" -> "Globe"}, 
     PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
     PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
     TicksStyle -> {Automatic, Automatic, 
       Directive[
        Opacity[0], FontOpacity -> 1]}, ViewAngle -> All}], 
   Graphics3DBox[{
     Directive[
      RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
      FontColor -> GrayLevel[0.4], 
      EdgeForm[
       Directive[
        Thickness[Large], 
        GrayLevel[0], 
        Opacity[0.1]]]], {{}, {
       Directive[
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        FontColor -> GrayLevel[0.4], 
        EdgeForm[
         Directive[
          Thickness[Large], 
          GrayLevel[0], 
          Opacity[0.1]]]], {{{{
           Directive[
            RGBColor[0.72987, 0.239399, 0.230961]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.8581964799999995}]}],
             "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.8582\"", ShowStringCharacters -> False], 
                 0.8581964799999995, AutoDelete -> True], NumberForm[#, 5]& ],
                13, 
               GrayLevel[0.82], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {3., 3., 0.42909823999999974`}, {0, 
           0}]}}, {{{
           Directive[
            RGBColor[0.237736, 0.340215, 0.575113]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 0.1418035200000003}]}],
             "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.1418\"", ShowStringCharacters -> False], 
                 0.1418035200000003, AutoDelete -> True], NumberForm[#, 4]& ],
                10, 
               GrayLevel[0], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {4., 4., 0.1418035200000003}, {
           0, -1}]}}}}, {}, {}}}, {
    Axes -> {True, True, False}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
     AxesLabel -> {None, None, None}, Boxed -> {Left, Bottom, Back}, 
     BoxRatios -> {1, 1, 0.7}, Epilog -> InsetBox[
       BoxData[
        FormBox[
         StyleBox["\"bf-bf\"", 17, Bold, StripOnInput -> False], 
         TraditionalForm]], 
       ImageScaled[{0.3, 0.9}]], FaceGridsStyle -> Directive[
       GrayLevel[0.3, 1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica"], Lighting -> {{"Ambient", 
        RGBColor[0.94, 0.88, 0.94]}}, 
     Method -> {"RotationControl" -> "Globe"}, 
     PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
     PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
     TicksStyle -> {Automatic, Automatic, 
       Directive[
        Opacity[0], FontOpacity -> 1]}, ViewAngle -> All}], 
   Graphics3DBox[{
     Directive[
      RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
      FontColor -> GrayLevel[0.4], 
      EdgeForm[
       Directive[
        Thickness[Large], 
        GrayLevel[0], 
        Opacity[0.1]]]], {{}, {
       Directive[
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        FontColor -> GrayLevel[0.4], 
        EdgeForm[
         Directive[
          Thickness[Large], 
          GrayLevel[0], 
          Opacity[0.1]]]], {{{{
           Directive[
            RGBColor[0.237736, 0.340215, 0.575113]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
               0.006872831731959688}]}], "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.006873\"", ShowStringCharacters -> False], 
                 0.006872831731959688, AutoDelete -> True], 
                NumberForm[#, 4]& ], 10, 
               GrayLevel[0], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {1., 1., 0.006872831731959688}, {
           0, -1}]}}, {{{
           Directive[
            RGBColor[0.72987, 0.239399, 0.230961]], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9931271682680402}]}],
             "DelayedMouseEffectStyle"]}, 
          Text3DBox[
           FormBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.99313\"", ShowStringCharacters -> False], 
                 0.9931271682680402, AutoDelete -> True], NumberForm[#, 5]& ],
                13, 
               GrayLevel[0.82], StripOnInput -> False], BoxRotation -> 
              1.5707963267948966`], {
              Directive[Bold, FontFamily -> "Helvetica"]}, StripOnInput -> 
             False], TraditionalForm], {3., 3., 0.4965635841340201}, {0, 
           0}]}}}}, {}, {}}}, {
    Axes -> {True, True, False}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
     AxesLabel -> {None, None, None}, Boxed -> {Left, Bottom, Back}, 
     BoxRatios -> {1, 1, 0.7}, Epilog -> InsetBox[
       BoxData[
        FormBox[
         StyleBox["\"bf-deph\"", 17, Bold, StripOnInput -> False], 
         TraditionalForm]], 
       ImageScaled[{0.3, 0.9}]], FaceGridsStyle -> Directive[
       GrayLevel[0.3, 1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
     Directive[Bold, FontFamily -> "Helvetica"], Lighting -> {{"Ambient", 
        RGBColor[0.94, 0.88, 0.94]}}, 
     Method -> {"RotationControl" -> "Globe"}, 
     PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
     PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
         FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
         FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
         FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
         FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
     TicksStyle -> {Automatic, Automatic, 
       Directive[
        Opacity[0], FontOpacity -> 1]}, ViewAngle -> All}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.884013362783654*^9, {3.884013983076844*^9, 3.8840139985277367`*^9}, 
   3.8840141802791433`*^9, 3.884015826935327*^9, 3.884023854224278*^9, 
   3.8840246513575773`*^9, 3.884024809757278*^9, 3.884025429076818*^9, 
   3.88407272233827*^9, 3.884072792528762*^9, {3.884073079683477*^9, 
   3.8840730866418133`*^9}, {3.8840733483901587`*^9, 3.884073348702243*^9}, 
   3.884073462139742*^9},
 CellLabel->
  "Out[2655]=",ExpressionUUID->"e775f870-0ea4-4658-8601-32395e0c311c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Zero, One, two-rounds of entanglement distillation on trapped ions\
\>", "Section",
 CellChangeTimes->{{3.875818684979363*^9, 3.875818696723239*^9}, {
  3.875818729119232*^9, 3.875818729561054*^9}, {3.8762080470437*^9, 
  3.8762080533448467`*^9}, {3.876213822279415*^9, 3.876213826446898*^9}, {
  3.8837383289332848`*^9, 3.883738331003879*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"2346cce6-bd8a-4ae4-88e1-f897966b2804"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"distcirc", "[", 
     RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"dephasing", " ", "distillation", " ", "sequence"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "->", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["Ry", "p"], "[", 
           RowBox[{"\"\<Alice\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "p"], "[", 
           RowBox[{"\"\<Bob\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["CZ", 
            RowBox[{"p", ",", "q"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
          RowBox[{
           SubscriptBox["CZ", 
            RowBox[{"p", ",", "q"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Alice\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Rx", "p"], "[", 
           RowBox[{"\"\<Alice\>\"", ",", "\[Pi]"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Bob\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"bitflip", " ", "distillation", " ", "sequence"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"1", "->", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Alice\>\"", ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Bob\>\"", ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["CZ", 
            RowBox[{"p", ",", "q"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
          RowBox[{
           SubscriptBox["CZ", 
            RowBox[{"p", ",", "q"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Alice\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "q"], "[", 
           RowBox[{"\"\<Bob\>\"", ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}]}]}]}], 
     "\[IndentingNewLine]", "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DistillationOnTrappedIons", "[", 
   RowBox[{"nrounds_", ",", "device_", ",", "methode_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"circ", ",", "seq"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"raw", " ", "entangled", " ", "pairs"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"seq", "=", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", "nrounds"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"1", "->", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", "nrounds"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"2", "->", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OddQ", "[", "r", "]"}], ",", "0", ",", "1"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"3", "->", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OddQ", "[", "r", "]"}], ",", "1", ",", "0"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"3", ",", "3"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nrounds", ">=", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"circ", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["Splz", 
            RowBox[{"2", ",", "3"}]], "[", 
           RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Splz", 
            RowBox[{"2", ",", "3"}]], "[", 
           RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ent", 
            RowBox[{"3", ",", "3"}]], "[", 
           RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"3", ",", 
       RowBox[{"3", "<>", "2"}], ",", 
       RowBox[{"2", "->", "3"}], ",", "3"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nrounds", ">=", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"circ", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"circ", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["Splz", 
              RowBox[{"1", ",", "2"}]], "[", 
             RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Splz", 
              RowBox[{"1", ",", "2"}]], "[", 
             RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Comb", 
              RowBox[{"2", ",", "3"}]], "[", 
             RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Comb", 
              RowBox[{"2", ",", "3"}]], "[", 
             RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["SWAPLoc", 
              RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
            RowBox[{
             SubscriptBox["SWAPLoc", 
              RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
            RowBox[{
             SubscriptBox["Splz", 
              RowBox[{"3", ",", "2"}]], "[", 
             RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Splz", 
              RowBox[{"3", ",", "2"}]], "[", 
             RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Ent", 
              RowBox[{"2", ",", "2"}]], "[", 
             RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Comb", 
              RowBox[{"3", ",", "2"}]], "[", 
             RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Comb", 
              RowBox[{"3", ",", "2"}]], "[", 
             RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
            RowBox[{
             RowBox[{"distcirc", "[", 
              RowBox[{"3", ",", "2"}], "]"}], "[", 
             RowBox[{
              RowBox[{"seq", "[", "methode", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Splz", 
              RowBox[{"3", ",", "2"}]], "[", 
             RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Splz", 
              RowBox[{"3", ",", "2"}]], "[", 
             RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Read", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
            RowBox[{
             SubscriptBox["Read", "2"], "[", "\"\<Bob\>\"", "]"}]}], "}"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"(*", " ", 
      RowBox[{"3", ",", 
       RowBox[{"3", "<>", "3"}], ",", 
       RowBox[{"3", "->", "3"}], ",", 
       RowBox[{"3", " ", "store", " ", "3"}], ",", 
       RowBox[{"3", " ", "to", " ", 
        RowBox[{"(", 
         RowBox[{"1", ",", "1"}], ")"}]}]}], "   ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nrounds", ">=", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"circ", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"circ", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Shutl", "2"], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Ent", 
               RowBox[{"2", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "3"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "3"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"1", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"1", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "1"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "1"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "2"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"1", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"1", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "1"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "1"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Ent", 
               RowBox[{"1", ",", "1"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"2", ",", "1"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"2", ",", "1"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"distcirc", "[", 
               RowBox[{"2", ",", "1"}], "]"}], "[", 
              RowBox[{
               RowBox[{"seq", "[", "methode", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "1"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"2", ",", "1"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "1"], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "1"], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "2"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              RowBox[{"distcirc", "[", 
               RowBox[{"3", ",", "2"}], "]"}], "[", 
              RowBox[{
               RowBox[{"seq", "[", "methode", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "2"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "1"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Read", "2"], "[", "\"\<Bob\>\"", "]"}]}], "}"}]}],
           "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "circ"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.87620792856719*^9, 3.876208001117175*^9}, {
   3.876215274728503*^9, 3.876215286554634*^9}, 3.876368572111559*^9, {
   3.876898388264534*^9, 3.876898407945396*^9}, {3.876899123274891*^9, 
   3.876899125520397*^9}, {3.8769003621229343`*^9, 3.876900570722139*^9}, {
   3.876901507655105*^9, 3.876901521012465*^9}, {3.876901562830941*^9, 
   3.876901700810974*^9}, {3.876901737290105*^9, 3.8769017745840597`*^9}, {
   3.8769029812159567`*^9, 3.876903130938057*^9}, {3.876903182766803*^9, 
   3.876903205359367*^9}, {3.876903386401197*^9, 3.8769034017393093`*^9}, {
   3.8769034423148613`*^9, 3.876903490562669*^9}, {3.876903658540641*^9, 
   3.876903659196698*^9}, {3.8769037564198303`*^9, 3.876903930751568*^9}, {
   3.8769039762085114`*^9, 3.876904162653749*^9}, 3.8769045632535877`*^9, {
   3.876904609290498*^9, 3.8769047284197617`*^9}, {3.876904959118281*^9, 
   3.87690498909181*^9}, {3.8769050776955853`*^9, 3.8769050930437813`*^9}, {
   3.876905135976798*^9, 3.876905201046363*^9}, {3.876905321801763*^9, 
   3.87690540383673*^9}, {3.876909092402619*^9, 3.87690909686765*^9}, 
   3.876909139837875*^9, {3.8769092234075317`*^9, 3.8769092484472227`*^9}, {
   3.8769094827920513`*^9, 3.8769094873521843`*^9}, {3.876909527992535*^9, 
   3.876909535818157*^9}, {3.876909721158576*^9, 3.8769097330445547`*^9}, {
   3.8769098464751*^9, 3.876909889513278*^9}, {3.8769099697651033`*^9, 
   3.8769100162364197`*^9}, {3.876910081894308*^9, 3.8769101831960993`*^9}, {
   3.876910226926647*^9, 3.876910227842403*^9}, {3.8769103787365713`*^9, 
   3.8769103877695723`*^9}, {3.87691124626353*^9, 3.8769112687363577`*^9}, {
   3.876914671943985*^9, 3.876914686028928*^9}, {3.876914722197845*^9, 
   3.8769148241894407`*^9}, {3.87691486099616*^9, 3.876914888800036*^9}, {
   3.8769778330094833`*^9, 3.876977898499495*^9}, {3.8769779423310337`*^9, 
   3.876977985867684*^9}, {3.876978068390196*^9, 3.8769780694235086`*^9}, 
   3.876978181222357*^9, {3.876978269161131*^9, 3.876978299375598*^9}, {
   3.876978336467092*^9, 3.8769783765719643`*^9}, {3.876978489696673*^9, 
   3.876978490368764*^9}, {3.876978526087816*^9, 3.87697852987707*^9}, {
   3.876978764813871*^9, 3.876978765028966*^9}, {3.876978859817518*^9, 
   3.876979024759413*^9}, {3.876979083679274*^9, 3.876979136998642*^9}, {
   3.87698337652905*^9, 3.876983387522605*^9}, {3.87699263664384*^9, 
   3.876992637215336*^9}, {3.8770634248050547`*^9, 3.877063480349205*^9}, {
   3.8770635429910393`*^9, 3.8770635462093267`*^9}, {3.877063582230268*^9, 
   3.877063671188808*^9}, {3.877063715631505*^9, 3.877063736113052*^9}, {
   3.8770637702654953`*^9, 3.8770638286021023`*^9}, {3.8770638628875313`*^9, 
   3.877063887626519*^9}, {3.877063931227439*^9, 3.877063975718758*^9}, {
   3.877064110023369*^9, 3.877064110547914*^9}, {3.87706423121316*^9, 
   3.877064311601922*^9}, {3.877064389302431*^9, 3.877064431811108*^9}, {
   3.877064486078033*^9, 3.8770644877445374`*^9}, {3.877064697923168*^9, 
   3.87706470542083*^9}, {3.8801834338661327`*^9, 3.880183444276075*^9}, {
   3.8801835301964197`*^9, 3.880183530887624*^9}, {3.880183734820613*^9, 
   3.880183805158581*^9}, {3.8801839034183817`*^9, 3.880184114067206*^9}, {
   3.880184263414304*^9, 3.8801845286422443`*^9}, {3.880184560974984*^9, 
   3.8801845725945044`*^9}, {3.880184619016617*^9, 3.880184706152402*^9}, {
   3.880184793232697*^9, 3.8801849051561604`*^9}, {3.8801850087660513`*^9, 
   3.8801850855951014`*^9}, {3.880185122161281*^9, 3.88018514642382*^9}, {
   3.8801852458905983`*^9, 3.880185280887958*^9}, {3.8801853743207197`*^9, 
   3.880185399585359*^9}, {3.880185636093677*^9, 3.88018565352122*^9}, {
   3.880185690414103*^9, 3.880185712727826*^9}, {3.880185753280694*^9, 
   3.880185754961944*^9}, 3.880186401320457*^9, {3.880186431464942*^9, 
   3.8801864692306623`*^9}, {3.880186524003654*^9, 3.8801865286296997`*^9}, {
   3.880186571864935*^9, 3.880186672724009*^9}, {3.880186738294354*^9, 
   3.8801868514194183`*^9}, {3.880186912485648*^9, 3.880187005540408*^9}, {
   3.8801870381971693`*^9, 3.880187041191223*^9}, {3.8801871962366867`*^9, 
   3.880187239511981*^9}, {3.88018727675572*^9, 3.8801874353264227`*^9}, {
   3.880188266050478*^9, 3.8801883218493357`*^9}, {3.883649758572068*^9, 
   3.883649893830846*^9}, 3.883738383471098*^9, {3.883738856847501*^9, 
   3.883738892346155*^9}, {3.8837402866956863`*^9, 3.883740295145094*^9}, 
   3.883740988080159*^9, {3.8838124152872868`*^9, 3.88381241789563*^9}, {
   3.883812448267826*^9, 3.8838124510715437`*^9}, {3.8838131555411243`*^9, 
   3.883813164429792*^9}, {3.883813204197668*^9, 3.883813318877781*^9}, {
   3.883813373571864*^9, 3.883813408929112*^9}, {3.883813440409885*^9, 
   3.8838134735687532`*^9}, {3.8838135049297543`*^9, 3.883813596590136*^9}, {
   3.883813656680788*^9, 3.883813714245866*^9}, {3.883813846098296*^9, 
   3.883814099949994*^9}, {3.8838145567025347`*^9, 3.8838145591809673`*^9}, {
   3.883814920421926*^9, 3.883814949033518*^9}, {3.8838152117398863`*^9, 
   3.883815214577798*^9}, {3.883815278985169*^9, 3.883815304255389*^9}, {
   3.8838154177788277`*^9, 3.883815426965074*^9}, {3.883815854080496*^9, 
   3.883815862003888*^9}, 3.8838159120034447`*^9, {3.883816038743217*^9, 
   3.883816049359736*^9}, {3.8838160842810698`*^9, 3.8838161714247503`*^9}, {
   3.883816233221674*^9, 3.883816245587707*^9}, {3.883817189994882*^9, 
   3.8838172224507713`*^9}, {3.883818739760007*^9, 3.883818754891959*^9}, 
   3.883818885599372*^9, {3.8838190862593603`*^9, 3.883819090037797*^9}, {
   3.883820035363268*^9, 3.883820042524913*^9}, {3.88382009946449*^9, 
   3.883820101889892*^9}, {3.883820335229772*^9, 3.8838203440469418`*^9}, {
   3.883820375357966*^9, 3.883820378956004*^9}, 3.883820442425919*^9, {
   3.883820497979906*^9, 3.883820521772489*^9}, {3.8838205705975437`*^9, 
   3.8838205753113317`*^9}, {3.88382060879078*^9, 3.883820847609994*^9}, {
   3.883820914500456*^9, 3.8838209413473787`*^9}, {3.883821038136866*^9, 
   3.883821079910884*^9}, {3.8838211583304577`*^9, 3.883821280245207*^9}, {
   3.883821319818029*^9, 3.8838214402617903`*^9}, {3.8838215204829273`*^9, 
   3.883821523830439*^9}, {3.883821608967332*^9, 3.883821610190332*^9}, 
   3.883825472987875*^9, {3.883825526702983*^9, 3.88382568153966*^9}, {
   3.883825720770731*^9, 3.883825856745634*^9}, {3.883826006924542*^9, 
   3.883826029463317*^9}, {3.8838260932242517`*^9, 3.8838261585895853`*^9}, {
   3.883826198943248*^9, 3.883826434118349*^9}, {3.883826469215946*^9, 
   3.883826585319373*^9}, {3.88382664303329*^9, 3.883826654781797*^9}, {
   3.883826693327004*^9, 3.8838267187537947`*^9}, {3.8838267785260887`*^9, 
   3.883826810108677*^9}, {3.883827047594154*^9, 3.883827059868754*^9}, {
   3.883827165329288*^9, 3.883827166151999*^9}, {3.883827468543154*^9, 
   3.883827661258276*^9}, {3.883827692123292*^9, 3.883827696378014*^9}, {
   3.8838325552488947`*^9, 3.88383256206841*^9}, {3.8838387341427727`*^9, 
   3.8838387826240873`*^9}, {3.883839578894528*^9, 3.883839596826798*^9}, {
   3.8840136514235697`*^9, 3.884013676450835*^9}, 3.884015155121134*^9, {
   3.884015187819789*^9, 3.884015268289258*^9}, {3.8840152993472652`*^9, 
   3.884015329482113*^9}, {3.88401541766511*^9, 3.88401541858711*^9}, {
   3.884015576597616*^9, 3.8840156528179817`*^9}, {3.8840157168952703`*^9, 
   3.884015725838128*^9}, {3.884015848087672*^9, 3.884015849735177*^9}, {
   3.8840159046144876`*^9, 3.884015913898958*^9}, {3.8840162947134027`*^9, 
   3.884016330907258*^9}, {3.884018212860681*^9, 3.88401831158992*^9}, {
   3.8840226045402*^9, 3.884022863984379*^9}, {3.884023403588883*^9, 
   3.884023405955585*^9}, {3.884023437405758*^9, 3.88402343844523*^9}, {
   3.884023664772504*^9, 3.884023665874771*^9}},
 CellLabel->
  "In[2656]:=",ExpressionUUID->"87274038-e121-4cf6-9854-097f3a94bf01"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Play around with the parameters ",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Subsection",
 CellChangeTimes->{{3.876985491179178*^9, 3.87698551374761*^9}, {
  3.876985561194066*^9, 3.876985567912353*^9}, {3.8769863863729887`*^9, 
  3.876986387563737*^9}, {3.883738649995586*^9, 
  3.88373867507825*^9}},ExpressionUUID->"b5ebd345-aa7c-4daf-9611-\
4bab62c48860"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TIonDist", "::", "usage"}], "=", 
   "\"\<TIonDist[device_options,\[Rho],nrounds,methode]. Distillation \
simulation on trapped ions.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TIonDist", "[", 
   RowBox[{"devoptions_", ",", "\[Rho]_", ",", "nrounds_", ",", "methode_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dev", ",", "circ", ",", "noisysch", ",", "noisycirc"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dev", "=", 
      RowBox[{"TrappedIonOxford", "[", 
       RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"circ", "=", 
      RowBox[{"DistillationOnTrappedIons", "[", 
       RowBox[{"nrounds", ",", "dev", ",", "methode"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"noisysch", "=", 
      RowBox[{"InsertCircuitNoise", "[", 
       RowBox[{
        RowBox[{"CircTrappedIons", "[", 
         RowBox[{"circ", ",", "dev", ",", 
          RowBox[{"MapQubits", "->", "False"}]}], "]"}], ",", "dev", ",", 
        RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"noisycirc", "=", 
      RowBox[{"ExtractCircuit", "@", "noisysch"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"Not", "@", 
       RowBox[{"heraldout", "@", 
        RowBox[{"ApplyCircuit", "[", 
         RowBox[{"\[Rho]", ",", "noisycirc"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "noisysch"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.883832517423379*^9, 3.883832519676569*^9}, {
  3.8838326148376417`*^9, 3.8838326150028687`*^9}, {3.8838330051679296`*^9, 
  3.88383301155273*^9}, {3.883833074489441*^9, 3.8838330746654863`*^9}, {
  3.883838867855856*^9, 3.88383890336205*^9}, {3.88384119669853*^9, 
  3.883841241028429*^9}, {3.8840136424229517`*^9, 3.884013642582426*^9}, {
  3.884014097394218*^9, 3.884014120418564*^9}, {3.8840142499418097`*^9, 
  3.884014252741062*^9}, {3.884014649414405*^9, 3.884014649915724*^9}, {
  3.884014717831867*^9, 3.884014735102234*^9}, {3.884015170658564*^9, 
  3.8840151708189983`*^9}, {3.8840153902580137`*^9, 3.8840153920326014`*^9}, {
  3.884024849332213*^9, 3.8840248734477377`*^9}},
 CellLabel->
  "In[2658]:=",ExpressionUUID->"d3ef4b57-c915-44e7-a2dd-e988c9b334d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plot\[Rho]", "[", "label_", "]"}], ":=", 
   RowBox[{"PlotDensityMatrix", "[", 
    RowBox[{
     RowBox[{"Chop", "@", 
      RowBox[{"mat2BellBasis", "[", 
       RowBox[{"PartialTrace", "[", 
        RowBox[{"\[Rho]6", ",", "0", ",", "1", ",", "3", ",", "4"}], "]"}], 
       "]"}]}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"chartbell", "[", "label", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883840105600441*^9, 3.883840120331955*^9}, 
   3.884073126907152*^9},
 CellLabel->
  "In[2660]:=",ExpressionUUID->"d7c1c783-cec8-462f-838c-0b4172fe2dec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "*", " ", "override", " ", "the", " ", "default", " ", "parameters", "*"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"devoptions", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Nodes", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "3"}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", "3"}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"T1", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", 
          RowBox[{"3", "*", 
           SuperscriptBox["10", "9"]}]}], ",", " ", 
         RowBox[{"\"\<Bob\>\"", "->", 
          RowBox[{"3", "*", 
           SuperscriptBox["10", "9"]}]}]}], "    ", "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"T2s", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", 
          SuperscriptBox["10", "5"]}], ",", "  ", 
         RowBox[{"\"\<Bob\>\"", "->", 
          SuperscriptBox["10", "5"]}]}], "   ", "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"StdPassiveNoise", "->", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DurMove", "->", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", " ", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"Shutl", "->", "25"}], ",", " ", 
            RowBox[{"Splz", "->", "50"}], ",", " ", 
            RowBox[{"Comb", "->", "50"}], ",", " ", 
            RowBox[{"SWAPLoc", "->", "10"}]}], " ", "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Bob\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"Shutl", "->", "25"}], ",", " ", 
            RowBox[{"Splz", "->", "50"}], ",", " ", 
            RowBox[{"Comb", "->", "50"}], ",", " ", 
            RowBox[{"SWAPLoc", "->", "10"}]}], " ", "|>"}]}]}], 
        "\[IndentingNewLine]", "|>"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"FidInit", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "0.9999"}], ",", " ", 
         RowBox[{"\"\<Bob\>\"", "->", "0.9998"}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DurInit", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "20"}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", "20"}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DurRead", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "50"}], ",", " ", 
         RowBox[{"\"\<Bob\>\"", "->", "50"}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BFProb", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", 
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]]}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", 
          SuperscriptBox["10", 
           RowBox[{"-", "3"}]]}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ScatProb", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "0.05"}], ",", " ", 
         RowBox[{"\"\<Bob\>\"", "->", "0.05"}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FidSingleXY", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "0.99999"}], ",", " ", 
         RowBox[{"\"\<Bob\>\"", "->", "0.99999"}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"EFSingleXY", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RabiFreq", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "10"}], ",", " ", 
         RowBox[{"\"\<Bob\>\"", "->", "10"}]}], " ", "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FreqCZ", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "0.1"}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", "0.1"}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FidCZ", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "0.999"}], ",", " ", 
         RowBox[{"\"\<Bob\>\"", "->", "0.999"}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"EFCZ", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.9"}], "}"}]}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FreqEnt", "->", "0.1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FidEnt", "->", "0.95"}], ",", "\[IndentingNewLine]", 
      RowBox[{"EFEnt", "->", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.883645591100515*^9, 3.883645620153207*^9}, {
   3.883645676604207*^9, 3.883645687952598*^9}, {3.88364572201855*^9, 
   3.8836457245474443`*^9}, {3.8836458744118433`*^9, 3.883645880777265*^9}, {
   3.88364593134027*^9, 3.88364596277798*^9}, {3.8836459965908337`*^9, 
   3.883646062276194*^9}, {3.8836462563519163`*^9, 3.8836462618572693`*^9}, {
   3.883646365593082*^9, 3.88364637026892*^9}, {3.883646584937378*^9, 
   3.883646608411189*^9}, {3.883646710374754*^9, 3.883646818329224*^9}, {
   3.883646881161366*^9, 3.8836468826312103`*^9}, {3.883738581919825*^9, 
   3.8837387183496027`*^9}, {3.8837387708752003`*^9, 3.883738774640712*^9}, {
   3.883738904207204*^9, 3.88373890447828*^9}, {3.883839054041716*^9, 
   3.883839054402116*^9}, 3.883839095316725*^9, 3.883840020319621*^9, {
   3.8838402823263807`*^9, 3.883840308277609*^9}, {3.88384096476413*^9, 
   3.883840981910185*^9}, {3.884023798882803*^9, 3.88402379906612*^9}, {
   3.884024252189505*^9, 3.884024253657263*^9}, {3.884024407863921*^9, 
   3.8840244399732447`*^9}, {3.884024479676765*^9, 3.884024503421207*^9}, 
   3.884024699750849*^9, {3.884025499468858*^9, 3.8840255481881742`*^9}, {
   3.8840256070017147`*^9, 3.884025607548275*^9}, {3.884025654200087*^9, 
   3.8840256871784897`*^9}, {3.884025724154174*^9, 3.884025727353249*^9}, {
   3.884025786275589*^9, 3.8840257867731953`*^9}, {3.884025828336009*^9, 
   3.884025867809965*^9}, {3.8840259223841133`*^9, 3.884025928582363*^9}, {
   3.88402595880615*^9, 3.884026035068768*^9}, {3.884026085834957*^9, 
   3.8840260902875423`*^9}, {3.8840714332728863`*^9, 3.884071455579875*^9}, {
   3.8840740014402037`*^9, 3.8840740039482317`*^9}, {3.884074048533525*^9, 
   3.884074051815856*^9}, {3.8840740847433863`*^9, 3.884074085232315*^9}, {
   3.884074128250451*^9, 3.884074163890008*^9}, {3.884075973394766*^9, 
   3.884075989493284*^9}, {3.884076218604268*^9, 3.88407625085947*^9}, {
   3.8840763841976013`*^9, 3.884076415664077*^9}, {3.884076445802643*^9, 
   3.884076493690035*^9}, {3.88407691746623*^9, 3.884076944640316*^9}, {
   3.8840770396570883`*^9, 3.8840771440239887`*^9}, {3.8840771845963793`*^9, 
   3.884077195997139*^9}},
 CellLabel->
  "In[2828]:=",ExpressionUUID->"b51ebd2d-ec91-4b53-a690-08d9582fcee9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"round1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TIonDist", "[", 
        RowBox[{"devoptions", ",", "\[Rho]6", ",", "0", ",", "0"}], "]"}], 
       ",", 
       RowBox[{"plot\[Rho]", "[", "\"\<raw\>\"", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TIonDist", "[", 
        RowBox[{"devoptions", ",", "\[Rho]6", ",", "1", ",", "0"}], "]"}], 
       ",", 
       RowBox[{"plot\[Rho]", "[", "\"\<deph\>\"", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"round2", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TIonDist", "[", 
        RowBox[{"devoptions", ",", "\[Rho]6", ",", "2", ",", "0"}], "]"}], 
       ",", 
       RowBox[{"plot\[Rho]", "[", "\"\<deph-deph\>\"", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TIonDist", "[", 
        RowBox[{"devoptions", ",", "\[Rho]6", ",", "2", ",", "2"}], "]"}], 
       ",", 
       RowBox[{"plot\[Rho]", "[", "\"\<deph-bf\>\"", "]"}]}], "}"}]}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.876983759899682*^9, 3.87698379497071*^9}, 
   3.876985488589458*^9, {3.876985524227214*^9, 3.876985555349738*^9}, 
   3.8769863950223417`*^9, {3.876986435955969*^9, 3.876986464965557*^9}, {
   3.8769865456430883`*^9, 3.876986545773653*^9}, {3.8770032151413603`*^9, 
   3.877003255082529*^9}, {3.88243346757747*^9, 3.8824334791260567`*^9}, {
   3.883644486989978*^9, 3.883644499083667*^9}, {3.883644606379937*^9, 
   3.883644646496933*^9}, {3.883644727628627*^9, 3.883644737742907*^9}, {
   3.8836447755040503`*^9, 3.883644778009343*^9}, {3.883644817780237*^9, 
   3.883644828396139*^9}, {3.883645491334634*^9, 3.8836454938018293`*^9}, {
   3.8836456248860617`*^9, 3.883645637821274*^9}, {3.883645690210877*^9, 
   3.883645702222929*^9}, {3.883645812784143*^9, 3.883645819130237*^9}, {
   3.883645884049765*^9, 3.883645906453459*^9}, {3.883646013708105*^9, 
   3.883646024401319*^9}, {3.883646072141158*^9, 3.883646082415362*^9}, {
   3.883646116929978*^9, 3.8836461681336184`*^9}, {3.883646223452014*^9, 
   3.883646225368339*^9}, {3.883646644317369*^9, 3.8836466487445107`*^9}, {
   3.883646903281111*^9, 3.883646905253477*^9}, {3.883647068588375*^9, 
   3.8836470707090683`*^9}, {3.883653341740408*^9, 3.883653437810686*^9}, {
   3.8837385410075893`*^9, 3.883738553468547*^9}, {3.8837387041686172`*^9, 
   3.8837387960125732`*^9}, {3.883738832292583*^9, 3.88373883266717*^9}, {
   3.883738908557166*^9, 3.883739059327589*^9}, {3.883821777363483*^9, 
   3.883821778276778*^9}, {3.883821826723984*^9, 3.883821828697918*^9}, {
   3.883821888492304*^9, 3.883822103230908*^9}, {3.883825869922744*^9, 
   3.8838259187282763`*^9}, {3.8838268239743013`*^9, 
   3.8838268656313667`*^9}, {3.883826926498542*^9, 3.883826958077415*^9}, {
   3.883827725404242*^9, 3.883827809466003*^9}, {3.8840248870129642`*^9, 
   3.884025016729622*^9}, {3.884025108445436*^9, 3.88402520098709*^9}, {
   3.8840255646256323`*^9, 3.8840255652593203`*^9}, {3.884076979251896*^9, 
   3.884076992355555*^9}, {3.884077023006154*^9, 3.884077024955639*^9}},
 CellLabel->
  "In[2829]:=",ExpressionUUID->"f0cc4e96-9a39-48b4-b95c-b540a2ea63f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"round1", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"round2", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.884025180704788*^9, 3.8840252057412357`*^9}, {
  3.8840255745263042`*^9, 3.884025594126245*^9}},
 CellLabel->
  "In[2831]:=",ExpressionUUID->"970376b7-56e7-4847-9e0e-04bb46e278ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.0019745448813353944`}]},
              
              ImageSizeCache->{{18.663498647287824`, 62.54619946161932}, {
               29.28535892585205, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.001975\"\>",
                  ShowStringCharacters->False],
                 0.0019745448813353944`,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.0019745448813353944`}, {
            0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.0019745448813353944`}]},
              
              ImageSizeCache->{{62.86359583902593, 104.931118827849}, {
               21.427327556396833`, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.001975\"\>",
                  ShowStringCharacters->False],
                 0.0019745448813353944`,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.0019745448813353944`}, {
            0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9499999999999955}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               150.05116511087036`}, {-53.633604014384154`, 
               41.8661181593638}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.95\"\>",
                  ShowStringCharacters->False],
                 0.9499999999999955,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.47499999999999776`}, {0, 0}]}, {
           {RGBColor[
            0.2451353303750784, 0.3423899335529134, 0.5672268899263537], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 0.046050910237333}]},
              
              ImageSizeCache->{{145.38992194841663`, 184.58256004788092`}, {
               3.910404527804232, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.04605\"\>",
                  ShowStringCharacters->False],
                 0.046050910237333,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.046050910237333}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"raw\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[
            0.23813894952193496`, 0.34033344158740886`, 0.5746835416405239], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.0025122415921351904`}]},
              
              ImageSizeCache->{{18.658030501740306`, 62.54619946161932}, {
               29.250450907067233`, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.002512\"\>",
                  ShowStringCharacters->False],
                 0.0025122415921351904`,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.0025122415921351904`}, {
            0, -1}]}, {
           {RGBColor[
            0.23773600195480818`, 0.34021500057458953`, 0.5751129979165909], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                1.250000292163378*^-8}]},
              
              ImageSizeCache->{{37.271449295800394`, 78.84553549974096}, {
               12.703298382246217`, 40.34090449434672}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.250000292163378*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 2., 1.250000292163378*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23773600195480818`, 0.34021500057458953`, 0.5751129979165909], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                1.2500002912282536`*^-8}]},
              
              ImageSizeCache->{{45.110637113948684`, 89.52930718322396}, {
               39.172686960494346`, 70.80261328920233}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.2500002912282536`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 1., 1.2500002912282536`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23778186465154455`, 0.34022848129688504`, 0.5750641180509268], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.0002859494565313084}]},
              
              ImageSizeCache->{{62.871577082044155`, 104.931118827849}, {
               21.5359950535788, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"2.9\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-4\"\>"]}],
                  ShowStringCharacters->False],
                 0.0002859494565313084,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.0002859494565313084}, {0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9922414049790569}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               150.2821515472944}, {-57.011899494886556`, 41.8661181593638}}],
             
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.99224\"\>",
                  ShowStringCharacters->False],
                 0.9922414049790569,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.49612070248952844`}, {0, 0}]}, {
           {RGBColor[0.23773600000000003`, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
                3.1249686172074576`*^-10}]},
              
              ImageSizeCache->{{118.79052237841795`, 
               157.22565428293368`}, {-1.2903069303223162`, 
               24.370723483688195`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.1249686172074576`*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 4., 3.1249686172074576`*^-10}, {
            0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
                3.1249675807101807`*^-10}]},
              
              ImageSizeCache->{{132.63487029913225`, 173.42193277834122`}, {
               22.957350933211615`, 52.101991029477674`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.1249675807101807`*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 3., 3.1249675807101807`*^-10}, {
            0, -1}]}, {
           {RGBColor[
            0.23853162114495638`, 0.3404488621247946, 0.5742650373320295], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.004960403972276322}]},
              
              ImageSizeCache->{{145.38992194841663`, 184.2305636896682}, {
               6.5216324821894744`, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.00496\"\>",
                  ShowStringCharacters->False],
                 0.004960403972276322,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.004960403972276322}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
z1RMBh2reZ8s277/lb9+P+x782P/D4WUal4=\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.884025203111146*^9, 3.884025206064527*^9}, 
   3.884025429262488*^9, {3.8840255749804792`*^9, 3.884025611085844*^9}, 
   3.884025937897345*^9, 3.8840259971478767`*^9, 3.884026037813686*^9, 
   3.8840714592482147`*^9, {3.8840731057815523`*^9, 3.8840731323576517`*^9}, 
   3.8840733629019947`*^9, 3.884073462632773*^9, {3.8840739934037*^9, 
   3.88407400727763*^9}, 3.8840740542680893`*^9, 3.884074088985437*^9, {
   3.884074136683856*^9, 3.8840741675684423`*^9}, 3.884075982902363*^9, {
   3.884076228365954*^9, 3.884076255385894*^9}, {3.8840764226627827`*^9, 
   3.884076497861768*^9}, {3.884076923749704*^9, 3.884076948099839*^9}, 
   3.884076995075515*^9, {3.884077026883347*^9, 3.8840771478545*^9}, {
   3.8840771872545357`*^9, 3.884077201035576*^9}},
 CellLabel->
  "Out[2831]=",ExpressionUUID->"750e3487-8c95-4215-ae82-cd11535ed625"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[
            0.2377484505544549, 0.34021865967287085`, 0.5750997303610013], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.00007776605049817677}]},
              
              ImageSizeCache->{{18.682782415758588`, 62.54619946161932}, {
               29.408465914541154`, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"7.8\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-5\"\>"]}],
                  ShowStringCharacters->False],
                 0.00007776605049817677,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.00007776605049817677}, {
            0, -1}]}, {
           {RGBColor[
            0.2377360019512605, 0.34021500057354676`, 0.575112997920372], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                1.250000292850491*^-8}]},
              
              ImageSizeCache->{{37.271449295800394`, 78.84553549974096}, {
               12.703298382246217`, 40.34090449434672}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.250000292850491*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 2., 1.250000292850491*^-8}, {0, -1}]}, {
           {RGBColor[
            0.2377360019512605, 0.34021500057354676`, 0.575112997920372], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                1.2500002913475158`*^-8}]},
              
              ImageSizeCache->{{45.110637113948684`, 89.52930718322396}, {
               39.172686960494346`, 70.80261328920233}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.2500002913475158`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 1., 1.2500002913475158`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23774341557096584`, 0.3402171797072559, 0.5751050965809159], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.000046317715544707095`}]},
              
              ImageSizeCache->{{62.87270945801424, 104.931118827849}, {
               21.551412912239655`, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"4.6\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-5\"\>"]}],
                  ShowStringCharacters->False],
                 0.000046317715544707095`,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.000046317715544707095`}, {
            0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9940454661423637}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               150.29207180243765`}, {-57.15696745405639, 41.8661181593638}}],
             
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.99405\"\>",
                  ShowStringCharacters->False],
                 0.9940454661423637,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.49702273307118183`}, {0, 0}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
                3.1249652865383837`*^-10}]},
              
              ImageSizeCache->{{118.79052237841795`, 
               157.22565428293368`}, {-1.290306930322302, 
               24.370723483688195`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.1249652865383837`*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 4., 3.1249652865383837`*^-10}, {
            0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
                3.12496483551028*^-10}]},
              
              ImageSizeCache->{{132.63487029913225`, 173.42193277834124`}, {
               22.957350933211615`, 52.101991029477674`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.12496483551028*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 3., 3.12496483551028*^-10}, {0, -1}]}, {
           {RGBColor[
            0.23866947448807554`, 0.3404893822592031, 0.5741181150319361], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 0.00583045009156879}]},
              
              ImageSizeCache->{{145.38992194841663`, 184.2379837216001}, {
               6.466582639718439, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.00583\"\>",
                  ShowStringCharacters->False],
                 0.00583045009156879,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.00583045009156879}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph-deph\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfWmQXcd13vV79y2zYhmsAxAY7MBgHQwIAlwfSYAgKe4gKYAACIKbSFo2
KUqmJJuKHk2a2kjZkkybSiKnIi8p2qqy4ySOE8ce02aY2IUfUaJyKpU/KTtO
qlKpSjmpSqUqPya3z9J9uu/pvve9GSp/NFVv5s1993Wf832nT58+vdx7r3zm
uWd+4spnnn/qysyZl6+89NzzT3165o4XXy4uNX8sy37s14rXb8xkefF+MctK
v349y5b6/t/D72a/+LVAr+zPvY8W6BuLS/7oB/hRr/jF9WXNRa4+VyTpLNhv
2J/fwz//TqmnC79zebspbmTRlhyW8m/hd6svSln0RAtqaJjfDadHKKlWx/fh
d6cX1MFSLgTl5gvBTR/IYnIpat8J40uZWRykRoMX1LSy4Qf2Zy9B8Nxzzy08
88wz/WeffTb75WjxvVTxAPMewojKWyzKM3/N/+a9+Zv90hLK30WIUPlcdtNX
A/57ZwnVbIdPW5oaWZu+yXCZn19cQl0zfl1cLtTVdXpZ+Ly6bCPsu0L73rtr
EqqMYxl9ugb/fQuL/7/lr1mpVjgE4H/z80382v9J1LbaV0Z+7X8nvrZWEfIb
+LX/5b7GH9uvbVSE/AX82t8katvkhLS10df+B7Ib2t5WV5G1h5V0a+Y3zVFz
tWGuvohF/veEJGiDTcu7+Zmk+6k8z81h4YqL/CT++W+++FzuLgVesoseFQ1l
tpWSWxVV/lf4nfYGuxX4RjNbZNAn+NXkFfX/ta9yylvsctesaCNwrS3FYLT7
XHHDvGv6IvTsfyhbi7/BL7jhBbz5XZSxn7lOqOcg6IlvZSfhWn2vpFELHkWT
t6Hp4FyVtQPioZeJn+dKqkj3p7F5na+K5/RGnCrW8Hcp1zpWRKWf7NvLrbAf
htYysixqHPPVKDvXhnlLJu7ZW7ss8kKVJp5I5n2V/Q+gydGEJkBWw/DzQ5H6
HQTOflfyJyPMXibitsYCF9pUIrh9TjujhqfdDVia52fzskKVdlaK96r0xI5c
83K5vN0UNaKEbnucTiXGbiKEpMWBs87aUkquplcWtI+g8PcaCqikxrcUNUb9
1tWz0jdjDO102pS68luxBs+3IUPtXuYzZMq0ltCwNQaVfUZI3lT0bvjiL4hr
HgVNRfW9TpESLbfj/V4n01LK0Pq6n8I/GDBFWqDXVbH0vQGE302lBx3maf8y
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\
\>"]], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[
            0.2377436006171357, 0.34021723409908644`, 0.575104899361115], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.0000472438299286113}]},
              
              ImageSizeCache->{{18.683092650499084`, 62.54619946161932}, {
               29.410446464094207`, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"4.7\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-5\"\>"]}],
                  ShowStringCharacters->False],
                 0.0000472438299286113,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.0000472438299286113}, {0, -1}]}, {
           {RGBColor[
            0.2377360020731382, 0.34021500060937104`, 0.5751129977904763], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                1.319944837227844*^-8}]},
              
              ImageSizeCache->{{37.27144929053069, 78.84553549974096}, {
               12.703298337712866`, 40.34090449434672}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.319944837227844*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 2., 1.319944837227844*^-8}, {0, -1}]}, {
           {RGBColor[
            0.2377360020731382, 0.34021500060937104`, 0.5751129977904763], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                1.3199448372420742`*^-8}]},
              ImageSizeCache->{{45.11063710892717, 89.52930718322396}, {
               39.17268691466975, 70.80261328920233}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.3199448372420742`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 1., 1.3199448372420742`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23774208582325881`, 0.3402167888458187, 0.5751065138087266], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.000037828253750357956`}]},
              
              ImageSizeCache->{{62.872749573658396`, 104.931118827849}, {
               21.55195910726077, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.8\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-5\"\>"]}],
                  ShowStringCharacters->False],
                 0.000037828253750357956`,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.000037828253750357956`}, {
            0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9892362070663782}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               150.26563651639793`}, {-56.77038961218093, 41.8661181593638}}],
             
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.98924\"\>",
                  ShowStringCharacters->False],
                 0.9892362070663782,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.4946181035331891}, {0, 0}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
                3.133449055781057*^-10}]},
              
              ImageSizeCache->{{118.79052237841795`, 
               157.22565428293825`}, {-1.2903069303753227`, 
               24.370723483688195`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.133449055781057*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 4., 3.133449055781057*^-10}, {
            0, -1}]}, {
           {RGBColor[0.23773600000000003`, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
                3.1334503915181333`*^-10}]},
              
              ImageSizeCache->{{132.63487029913225`, 173.42193277834778`}, {
               22.957350933156945`, 52.101991029477674`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.1334503915181333`*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 3., 3.1334503915181333`*^-10}, {
            0, -1}]}, {
           {RGBColor[
            0.23945401068521122`, 0.34071998611281296`, 0.5732819665571754], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.010678720849942598`}]},
              
              ImageSizeCache->{{145.38992194841663`, 184.27935745039937`}, {
               6.159631830519359, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.01068\"\>",
                  ShowStringCharacters->False],
                 0.010678720849942598`,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.010678720849942598`}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph-bf\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
MUW6ozHzFkqhjnYSdqqoPby6bYMlwH0fczlhd3jIIRrkMpqA6OV9+3u/un8O
Xu/u29f7xt69td63Z/er+tlLk5N24UZqNHNDhVFBEWAbL66sAPBYDGC+jDAw
a8wxwCTRsHKdEC7MmFTFPd80b7xambV3b4+v3EHb1T0nnwmi7E2wcCDKQv3M
q1NTxEJeovn93fmDvd+67hD8VzPXrr41M2MXO6WSZ0eZw4zlOT7i0eHFJqsq
0LFG6PfGyp2LNvUVzNQzbNkULUtb4pERcu06MPHQx27Q7OCZ86OR/eZeMVuU
o67tX0T9/UPX56jnvzPzwZVfnZvrC/pUIuMeo/+kkc0LR9ZUgH61AP1wwsuw
RkCwsx03XmqmYQIyAf4mrdv8jysmZiEi0YlzG4U27TyU8oPU1PKTPY6cQsJI
Iuc7B+YtOQ1HTqYv6htI5GvwVECEz4+3vnVtBX5WmSgnV77dv2uK74Rs8zAZ
XtKiXNSd2LIrI7RgNyS4mBa4oBQD8sBdEXChG4vmYoBzkb/VH1BrSy0EuSHu
pmz/ezfjAsKfiQoMbCo6Iq0sc0QNqc+tnFOh5N1iCZDiHlyAI+Z4WC8tEjBk
CQCf1a+7igb5d4Xgr68APs8LlLgiUrZs+cORYAJ6sbhL/fKkw70w08Nx5z2E
tnGN84jFvW5wf+ed3Xtt5JaKSLexJCWtgVpZwTVxRoIgCrmheEvkhkayfOSo
XxNbb6GkJPXYwFTN9doRJ5XcETj8IfC1Ic5XMo7S/IwHfPXVc+A8FNQkLMLP
vPRADvDKdCQA3u1Oj04vCNsQpxOwsuNpTBAxOnUXrb9XwdVFd5uTqxv3HUTd
WgWYy1E/2jK+eXHR1grLTWbaEu9FwtVv0oYByCCAOPnVuvyFVaG787bcnI6z
Yc79t19/8/z587R5ktiAGkexXZPz27rvDA6MW5fR0snjU4MK6UjOk9H4Xdr+
gMZbSGHlcuDytoyvudR4rGS+OowIVjsy+47OVlsyG312SKvkxkS5TsanSb1J
DXJF0ZHuUEFaBbne7Hi1Md5mv+W9fvHiRc9L6ZY3hC1PiOz0iLF+FQT8pqru
N/kO/9WlLLcklgEAnZJdKVs/7afhA4dVCQtYLlhA1ZhwnbWAZp9do7SrpC5c
8+hnWT3FHW8+luS7T2yHeQejHyKbLT7p+lKBdAo/4qmcxm51Db52Al2IRLsy
Sfo3Q9qn5h4ieqV9K3U7FpE8Yv5+FdMpDEnNHMXiQtINOErT1yi5pF+5hzBj
t/463xUpt1C4XI95huXM2rFftsvMa84VWNd/e2gmWyuYSVYMgFOjvioBsL+0
qOAYYD8O6ksWAokryrXz5Ot4hfalw9GIwZBvQs2e37C1cxK1oQO+FhVLb0KD
0de4weT/K3Qh2phcXGGsRexEJGvJ35O18DQFuxx8exlz8YGt6MpcOBSkCE4x
mwlCdGM97ZT1wEoDM8mTDMfXqf67lS2y9fzAWU/jTeXCSHitmzxqN8QRbs46
yi0m/3wNs5iZ6y/pDLaN5ptxiymN5rckLKbVZ9ixXBBdYYI9s/NSdcGlDKfN
BLlZyRWsCaZxm2c1Xuy5rcRqeDdkaGxeVS7OVErM+SV7oqmEpWDqVc/P2/By
eWAhRonYNTksj3SsA4FJJAcR20tNoq9eB9SSkv+Qaq7CfM2h3tih3I8NOH1v
4fFuMkJNiXftEXAUBvf9oXLeoHJnMo1kMJLPKFzQoBp/rISB+TLBg1I3LM3/
gXc1mhW7IG/DEZ8sAM3wYW2lQ42dCcoH+qd8WeDXlEUEbDc5/dPqzyDa2iAu
TE7f+Xc2T9/ew32zNKFtUwToGDYZOLyBijEoMRixY350CFeUG5JTxK31NnaR
gbgzh5+kceFuREFf3jF/nmnc+KZkF7RaO1whoXuFBkPKWzo5zuASrADXofDs
Ba4sbE2iDDAR/NXdu4FwjD7V7oRBtBfVLfiLoXBiww62MuYfyBIa/VlCnSwB
fbju+Qd6M0ee6u26/onegVtf1XhMovVSuuIkMwyITU0K33vaiT2kCFvhFVTQ
LDMNHL+bxPfNepecZdILuD6wRct2MSYM22GL+Yg8fqYsPa4NpzDZsG7U04Dp
UZaepu69u292X4LuQaQ7jyJCusWh5zo7WromAjMgsI2TmS+BcvMnPnd1740f
n1NBHqLAojkRIPMWIFiUW72RZZtJGBKbGq7X0nzy/L1HE1tvpmzkB67sxiMp
Bnnvx0dW3uRrUPdAnGSNk0SyeeyiyfPlLJaT25dz33jtrNYtqzmjEDt9Dk46
f02/0y9tvruVn+fF49W7rPV0FE1Ok2v3wsEZd81aAa1g0svAqM1iPs9boYDO
Cc+FGLULrYJEtKa+i7BLWfgxYVgE63mKHaQ01KbDyzXxGrLiNFCdphXgZ6Q6
80PIfP6+wLzLEU98OGQP5wV+CUZpR+56C15E/v7OS1qvSeXv8xnrm3xzUm6L
yKe7/nJodG1v+rrHooTvR8j7nW5ZbdPmQoYrSF34/fF4ddKG++x6V3849NU5
fdBPv2U+aIjuuRJ5XtS+xxFq20dLIGsefg+JZGG7KGTxyX9F4mYpYlpRnaGR
eKI2cX6MyNB7Q8NrMZQ4g5DyTOiiuBrA3/qabm4YFtECQGpBo0nG2DyODaP3
cYqoT9OqHVoEReviEwNBYGN/VvkUzdrM+Uj/PdxohaSVavC19/p1xkqwSG6G
4Xcr5goBaraPewFfJtys6bfm+FL3lbDtLHDENrI/EDSZ9e0uxv3Rtn33gxeh
M0r6nS9b1X/osjZG46gwn5nyfIPYw7K9lCrY2cLzZFqXryq/J35kMSSOwe8m
/I/BzOXpQ0/o3miEgKanCXOG+njKqkwcjlF7ExMTCydOnPAMOwdksRxSsoJz
ODy2wWxyFghcHyNwrM+uq9kPgdCHmbaX6Xaoz3p7vz288urYym1VmVuRdo0U
ieAIqqv81m/an33HnqRGVJrnrQT78gpcmhWuTQpblorG0Xind9WJ63V6m9JM
gkfl3VzKo9YWS+akMhkaaodVyVzj+1IKS7Ry1pcCkwFRQFHiIQ9eQ9zFOfSj
zw+JxsEKOT+V2X0b+NoSY3I80TfSo1M0hXguMiU7qlFGu2+qUjaB7Y97zvx2
8pwEJW5g7jD9FixqWVf5EYvb17zbI8uLNufTZO02kX3kHFS4lKaSFl3bvUh6
aqqZppJ1jl1rg90Umcui83stz8HqI/NyLuyO9mypCNyEBFL8wlJu+tkt5ECz
IlPdEgKDvjJB5UGDE+zHDXmciU1oGyra3iD9iPy4teQQsBaPd2L5uB0xNpe7
7nK3KnaXukWsw/snXRmORbsv42vLVu78/totN+IqqjSVM4cv5eb8NKx0Sg7p
loxEXInojSUOJUikdft8zecAmxCjdVnxxRrSgbi1cn9cYHzu1ldofplvpBOj
ol0+zTDp2uj93vlH2wHh4Isvf37nTupVcecSZVppEIj75Ylkb6fjms2HjZW3
Oc/w0k2TZ140125u6WnKxsCJY4Ev1hb82MmTJz/Ag7M1Y/UltQJg/HCCezoF
mE+hDwgk0yLGgGTpwGB6gGHFbI/ehfqd7XMPick39yyQ7T7dG9Ez53z3/vg3
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
YgAB1fzGX7/v9736qf8LyzzOUQ==\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.884025203111146*^9, 3.884025206064527*^9}, 
   3.884025429262488*^9, {3.8840255749804792`*^9, 3.884025611085844*^9}, 
   3.884025937897345*^9, 3.8840259971478767`*^9, 3.884026037813686*^9, 
   3.8840714592482147`*^9, {3.8840731057815523`*^9, 3.8840731323576517`*^9}, 
   3.8840733629019947`*^9, 3.884073462632773*^9, {3.8840739934037*^9, 
   3.88407400727763*^9}, 3.8840740542680893`*^9, 3.884074088985437*^9, {
   3.884074136683856*^9, 3.8840741675684423`*^9}, 3.884075982902363*^9, {
   3.884076228365954*^9, 3.884076255385894*^9}, {3.8840764226627827`*^9, 
   3.884076497861768*^9}, {3.884076923749704*^9, 3.884076948099839*^9}, 
   3.884076995075515*^9, {3.884077026883347*^9, 3.8840771478545*^9}, {
   3.8840771872545357`*^9, 3.884077201054138*^9}},
 CellLabel->
  "Out[2832]=",ExpressionUUID->"09f777ba-d5c1-46b2-92dd-6613c2ebbcf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"round1", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"round2", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "Input",
 CellLabel->
  "In[2666]:=",ExpressionUUID->"5bd1716e-847a-4f1e-aae9-c9bd7fcc35a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.001974544881335395}]},
              
              ImageSizeCache->{{18.663498647287824`, 62.54619946161932}, {
               29.28535892585205, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.001975\"\>",
                  ShowStringCharacters->False],
                 0.001974544881335395,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.001974544881335395}, {0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.001974544881335395}]},
              
              ImageSizeCache->{{62.86359583902593, 104.931118827849}, {
               21.427327556396833`, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.001975\"\>",
                  ShowStringCharacters->False],
                 0.001974544881335395,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.001974544881335395}, {0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9499999999999955}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               150.05116511087036`}, {-53.633604014384154`, 
               41.8661181593638}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.95\"\>",
                  ShowStringCharacters->False],
                 0.9499999999999955,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.47499999999999776`}, {0, 0}]}, {
           {RGBColor[
            0.2451353303750784, 0.3423899335529134, 0.5672268899263537], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 0.046050910237333}]},
              
              ImageSizeCache->{{145.38992194841663`, 184.58256004788092`}, {
               3.910404527804232, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.04605\"\>",
                  ShowStringCharacters->False],
                 0.046050910237333,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.046050910237333}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"raw\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[
            0.23824874276774982`, 0.3403657138339638, 0.574566525427171], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.0031685808104169357`}]},
              
              ImageSizeCache->{{18.6513548515384, 62.54619946161932}, {
               29.207834588715897`, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.003169\"\>",
                  ShowStringCharacters->False],
                 0.0031685808104169357`,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.0031685808104169357`}, {
            0, -1}]}, {
           {RGBColor[
            0.23773600197219405`, 0.3402150005796999, 0.5751129978980613], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                1.2500002916212768`*^-8}]},
              
              ImageSizeCache->{{37.271449295800394`, 78.84553549974096}, {
               12.703298382246217`, 40.34090449434672}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.2500002916212768`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 2., 1.2500002916212768`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23773600197219405`, 0.3402150005796999, 0.5751129978980613], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                1.2500002911225438`*^-8}]},
              
              ImageSizeCache->{{45.110637113948684`, 89.52930718322396}, {
               39.172686960494346`, 70.80261328920233}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.2500002911225438`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 1., 1.2500002911225438`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23789437321732798`, 0.34026155167519073`, 0.5749442078848686], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.0009786943465845473}]},
              
              ImageSizeCache->{{62.86830316765304, 104.931118827849}, {
               21.49141930324123, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"9.8\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-4\"\>"]}],
                  ShowStringCharacters->False],
                 0.0009786943465845473,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.0009786943465845473}, {0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9834942940633684}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               150.23411691828233`}, {-56.30944510077256, 41.8661181593638}}],
             
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.98349\"\>",
                  ShowStringCharacters->False],
                 0.9834942940633684,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.4917471470316842}, {0, 0}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
                3.12496917231897*^-10}]},
              
              ImageSizeCache->{{118.79052237841795`, 
               157.22565428293368`}, {-1.2903069303223162`, 
               24.370723483688195`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.12496917231897*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 4., 3.12496917231897*^-10}, {0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
                3.124969154971735*^-10}]},
              
              ImageSizeCache->{{132.63487029913225`, 173.42193277834122`}, {
               22.9573509332116, 52.101991029477674`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.124969154971735*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 3., 3.124969154971735*^-10}, {
            0, -1}]}, {
           {RGBColor[
            0.23973585319827526`, 0.340802829925324, 0.5729815824725639], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 0.0123584307796231}]},
              
              
              ImageSizeCache->{{145.38992194841663`, 184.29370194552803`}, {
               6.0532120591418845`, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.01236\"\>",
                  ShowStringCharacters->False],
                 0.0123584307796231,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.0123584307796231}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
vwf9nfzU/wX+mVmC\
\>"]], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[
            0.2378035827250993, 0.34023486503223466`, 0.5750409712106105], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.0003841322292187474}]},
              
              ImageSizeCache->{{18.67966831428665, 62.54619946161932}, {
               29.38858541650488, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.8\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-4\"\>"]}],
                  ShowStringCharacters->False],
                 0.0003841322292187474,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.0003841322292187474}, {0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                1.3391237840587903`*^-8}]},
              
              ImageSizeCache->{{37.271449289085716`, 78.84553549974096}, {
               12.703298325501734`, 40.34090449434672}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.3391237840587903`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 2., 1.3391237840587903`*^-8}, {0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                1.3391237840587903`*^-8}]},
              
              ImageSizeCache->{{45.110637107550254`, 89.52930718322396}, {
               39.172686902104545`, 70.80261328920233}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.3391237840587903`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 1., 1.3391237840587903`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.2378035827250993, 0.34023486503223466`, 0.5750409712106105], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.0003841322292187474}]},
              
              ImageSizeCache->{{62.87111310246033, 104.931118827849}, {
               21.529677753080236`, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.8\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-4\"\>"]}],
                  ShowStringCharacters->False],
                 0.0003841322292187474,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.0003841322292187474}, {0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9045582858614932}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               149.8054155752664}, {-50.0383668885658, 41.8661181593638}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.90456\"\>",
                  ShowStringCharacters->False],
                 0.9045582858614932,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.4522791429307466}, {0, 0}]}, {
           {RGBColor[
            0.2541533503869167, 0.3485359495155177, 0.5500729689174213], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 0.09467344968006887}]},
              
              ImageSizeCache->{{145.38992194841663`, 185.00324578227713`}, {
               0.7903194529123994, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.09467\"\>",
                  ShowStringCharacters->False],
                 0.09467344968006887,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.09467344968006887}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"bf\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All]}], "}"}]], "Output",
 CellChangeTimes->{
  3.884025694593354*^9, 3.8840257465028353`*^9, {3.8840257909081907`*^9, 
   3.884025873837173*^9}, 3.8840259725862303`*^9, 3.884026095704286*^9, 
   3.884073462703203*^9},
 CellLabel->
  "Out[2666]=",ExpressionUUID->"606463c2-9668-4253-beae-1f3e4d2477ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[
            0.23780314167152286`, 0.3402347353904734, 0.5750414412797756], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.00034708372501677154`}]},
              
              ImageSizeCache->{{18.68004491116731, 62.546199461619324`}, {
               29.39098961650089, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.5\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-4\"\>"]}],
                  ShowStringCharacters->False],
                 0.00034708372501677154`,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.00034708372501677154`}, {0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                1.4129974482433643`*^-8}]},
              
              ImageSizeCache->{{37.271449283519985`, 78.84553549974096}, {
               12.703298278466733`, 40.34090449434672}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.4\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.4129974482433643`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 2., 1.4129974482433643`*^-8}, {0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                1.4129974482433643`*^-8}]},
              ImageSizeCache->{{45.110637102246656`, 89.52930718322396}, {
               39.172686853705756`, 70.80261328920233}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.4\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.4129974482433643`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 1., 1.4129974482433643`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23780314167152286`, 0.3402347353904734, 0.5750414412797756], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.00034708372501677154`}]},
              
              ImageSizeCache->{{62.871288182801266`, 104.931118827849}, {
               21.532061553613005`, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.5\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-4\"\>"]}],
                  ShowStringCharacters->False],
                 0.00034708372501677154`,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.00034708372501677154`}, {0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.8226802482999258}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               149.36962767908108`}, {-43.66033266093714, 41.8661181593638}}],
             
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.82268\"\>",
                  ShowStringCharacters->False],
                 0.8226802482999258,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.4113401241499629}, {0, 0}]}, {
           {RGBColor[
            0.2683991937896218, 0.4309809108465042, 0.36822246416985716`], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.17662558425002742`}]},
              
              ImageSizeCache->{{145.38992194841663`, 
               185.722721951482}, {-4.544018546539235, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.1766\"\>",
                  ShowStringCharacters->False],
                 0.17662558425002742`,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.17662558425002742`}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"bf-bf\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[
            0.2397053528841316, 0.34079386476858103`, 0.5730140893106729], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.012090299889841203`}]},
              ImageSizeCache->{{18.560506795071852`, 62.54619946161932}, {
               28.627904450307753`, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.01209\"\>",
                  ShowStringCharacters->False],
                 0.012090299889841203`,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.012090299889841203`}, {0, -1}]}, {
           {RGBColor[
            0.23773600198518657`, 0.34021500058351883`, 0.575112997884214], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                1.2500002909490715`*^-8}]},
              
              ImageSizeCache->{{37.271449295800394`, 78.84553549974096}, {
               12.703298382246217`, 40.34090449434672}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.2500002909490715`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 2., 1.2500002909490715`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23773600198518657`, 0.34021500058351883`, 0.575112997884214], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                1.2500002928247413`*^-8}]},
              
              ImageSizeCache->{{45.110637113948684`, 89.52930718322396}, {
               39.172686960494346`, 70.80261328920233}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.2500002928247413`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 1., 1.2500002928247413`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23795868900633904`, 0.34028045643554217`, 0.5748756609534701], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.0013671381276209589`}]},
              
              ImageSizeCache->{{62.866467147431365`, 104.931118827849}, {
               21.4664212377981, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.001367\"\>",
                  ShowStringCharacters->False],
                 0.0013671381276209589`,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.0013671381276209589`}, {
            0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9770575877254399}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               150.1988378809859}, {-55.79350173812559, 41.8661181593638}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.97706\"\>",
                  ShowStringCharacters->False],
                 0.9770575877254399,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.48852879386271997`}, {0, 0}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
                3.124968062095945*^-10}]},
              
              ImageSizeCache->{{118.79052237841795`, 
               157.22565428293368`}, {-1.2903069303223162`, 
               24.370723483688195`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.124968062095945*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 4., 3.124968062095945*^-10}, {
            0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
                3.1249683656725535`*^-10}]},
              
              ImageSizeCache->{{132.63487029913225`, 173.42193277834122`}, {
               22.957350933211615`, 52.101991029477674`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.1249683656725535`*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 3., 3.1249683656725535`*^-10}, {
            0, -1}]}, {
           {RGBColor[
            0.23928097915243685`, 0.3406691258231291, 0.5734663813142549], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.009484974257097777}]},
              
              ImageSizeCache->{{145.38992194841663`, 184.26916625236473`}, {
               6.235239422448672, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.009485\"\>",
                  ShowStringCharacters->False],
                 0.009484974257097777,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.009484974257097777}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"bf-deph\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[
            0.2378390304590137, 0.3402452844164163, 0.5750031914768589], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.0006373832341066551}]},
              
              ImageSizeCache->{{18.677093935689154`, 62.546199461619324`}, {
               29.372150571430282`, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"6.4\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-4\"\>"]}],
                  ShowStringCharacters->False],
                 0.0006373832341066551,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.0006373832341066551}, {0, -1}]}, {
           {RGBColor[
            0.23773600197006284`, 0.34021500057907345`, 0.5751129979003327], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                1.2500002901250779`*^-8}]},
              
              ImageSizeCache->{{37.271449295800394`, 78.84553549974096}, {
               12.703298382246217`, 40.34090449434672}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.2500002901250779`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 2., 1.2500002901250779`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23773600197006284`, 0.34021500057907345`, 0.5751129979003327], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                1.2500002916429609`*^-8}]},
              
              ImageSizeCache->{{45.110637113948684`, 89.52930718322396}, {
               39.172686960494346`, 70.80261328920233}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.3\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.2500002916429609`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 1., 1.2500002916429609`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23781423003709495`, 0.34023799466626015`, 0.5750296234439708], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.00048395903769846843`}]},
              
              ImageSizeCache->{{62.870641342702, 104.931118827849}, {
               21.52325452835028, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"4.8\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-4\"\>"]}],
                  ShowStringCharacters->False],
                 0.00048395903769846843`,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.00048395903769846843`}, {0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9845582847787231}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               150.23995411095427`}, {-56.394809869330366`, 
               41.8661181593638}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.98456\"\>",
                  ShowStringCharacters->False],
                 0.9845582847787231,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.49227914238936155`}, {0, 0}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
                3.1249630660923344`*^-10}]},
              
              ImageSizeCache->{{118.79052237841795`, 
               157.22565428293368`}, {-1.2903069303222736`, 
               24.370723483688195`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.1249630660923344`*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 4., 3.1249630660923344`*^-10}, {
            0, -1}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
                3.124962875272752*^-10}]},
              
              ImageSizeCache->{{132.63487029913225`, 173.42193277834124`}, {
               22.957350933211643`, 52.101991029477674`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.124962875272752*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 3., 3.124962875272752*^-10}, {
            0, -1}]}, {
           {RGBColor[
            0.2400508322868564, 0.340895413788119, 0.5726458818567604], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.014320372949469962`}]},
              
              ImageSizeCache->{{145.38992194841663`, 184.3104634097291}, {
               5.9288622669298405`, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.01432\"\>",
                  ShowStringCharacters->False],
                 0.014320372949469962`,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.014320372949469962`}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph-deph\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfWuQXcdx3vF97nvxfiwB7OKxi8UuXguAePB5SYIACYIURUg0QBAAwZdI
SjIlSqIoSwovRYqSaFK2KNOGksipqGxVyVZKjpI4Thx7TVthIhd/RInKiSt/
Un4kValUpZSkUqnKj5vTPd0zPXN65py7u1T+aKvu3d1zz53p/r6enp6ex7n3
6iefeuKjVz/59GNXp04/d/VjTz392CemTj37XH6p/nNZ9nO/mb++PZU18r97
WVZ4+60sW+7f/x7f6938bZFe2Z95Hy3SN3rL/ujH5qNO/sb1ZfUeV99QJGkv
2m/Yn98zv/6dUs8Avjfk7VDcYM+WHJbyb/G92RWl9DzRghpq8F5zeoSSanX8
CN/bnaAOlnIxKLexGNz0A1lMQ4radcL4UmYWB6lR/wXVrWzmA/szSxA89dRT
i0888UT3ySefzH49WnwnVTzCvJswovJ6eXnwG/6Hv+F39mvLKH+aEKHyuey6
rwb+99YyqtmBnzY1NbIWfZPhgp9fXUZdU35dXC7WNeD0svB5ddlG2HWFdr2/
tiZUGTFldOka/vd1U/z/LX7NSjXuEMD/4edN87X/k6htja+M/Nr/TnxtvSLk
18zX/qf7Gn9sv7ZZEfJXzNd+kqjtOiekrY2+9t8Nu6HtTbqKrD2solszv2kO
wdUaXH3WFPnfEpIYG6xb3uFnjO6n8jw3ZwpXXORHzK//6ovP5U4r8JJddKho
LLOllNwsqfK/4HvaG8wo8A1ltsigT/CraZTU/ze+yilvMe2uWdEG8VpLisFo
d7niGvxV90Xo2P+MbE3+Br/whmfMzdeMjN3MdUIdB0FHfCs7gdeqeyWNWvQo
mrw1TQfnqqwdEA+dTPw8VVBFuj+NzWO+Kp7TG3SqWMOfVq61rYhKP9m1l5th
P4ytZXBF1Djiq1F0rjX4k0zcs7dWUeTFMk08keDvMvvvQ5NDCU2QrBrw81OR
+i0DnP2u5E9GmJ1MxG21RS60rkRwe5x2oIan3Y2mNM/PNooKldpZId4r09N0
5JqXa8jboahBJXTb7XQqMHYzISQtDp111pJScjWdoqBdAwp/r6aASmp8XVFj
yG9dHSt9PcbQLqdNoSu/zdTg+TbDUKuT+QxBmdYSarbGoLJPCsnrit41X/xF
cc2joK6oPusUKdByh7nf62SaShlaX/cp88sETJEW6HVVLH2nD+FnqPSgw7zT
v8w6tZUSGq4mFiD7tCe6vL2bqV6iYy/7QbOG1U68puN9Ej8bUD8D4OjvgSKm
UMVnV1jsTib68u060qf8y9wniojFhs4DttAVE3QmgeX9hL0MJr64UhXv0tH4
AN0qe/1XVqrO7QllHzT3e/7Tr7iT+eGcyCXwZTEIm/Tr8sKdC05J691eNnX9
YULES+ZrXrf1BfO1P0h87YqiGX3t993XCi74MUXIl8zXfi9R2xOuNisofe0f
JWp72nzNs7Wu+do/TNT2ESekheRF87XvEWuBgT3ryye/8d1iRVaF5+AjDIjo
5st4QenWTuN7O6wXLtrSPqGI/XlZruK8TyZgCJyFkzigneq4SB9lIshHL45D
m9uKwIHe7PolQ885PayNfM7UcUGpQ+vkbkyoxVGrNPiPK6rKKk1v5I0AbNyj
DYIG4f2AL4TXWF9S9Cb3e94g1RX12J45oLAj6u9kbiyvYiJi1wImxgH7kP+i
J04Y7glxGtKiXNAEd2mZ1lS8+SUjh9eOpBwm7ItU3YkAhGSILqngJn7J1OqR
8Zll1Io/+xJqftVU6LXUF0SFxTFADO6uq70ra583xYSqmnyX33zjFcfMLrOg
BLWmYtZfdTpbE/u0rFqNwTt+7Z0sEUUbwyr45mskrmzvz5tvkDvpikrVAb0Y
VEi97nzkkUeyv61ASsU/lNmiuApOf3lxrSnec+5Q9Gh+cSJ/we/s7yjwUSh/
iaTLfOaweJPvGAklP/PQQw+to+KnMtM67p09dAmqApf8DaeUxY1qM11JtwhS
kOuG18uPPfYYVJXVJ1DDc7NHrrx+4JaP9w7c+lxvofM8/D9BVXKdXiukAZYJ
LFoxLUzpdSj5nYXbX+gdPvm53GPDe12rwWt2lGEN25sJbyhYSOlUtzpBfTV8
H+hdf6rbO3rXy70TZ1/rHT/zJbgKksE31hXhxf/GHYuhr2VpPt8/DEagOgoD
guQC5f/Be1MTTCWBs/tCsvzb9pr9MQEAdWNeY3n78ccfL8GsLjHL2uUieixS
n+7F5VofaBo8ubxW2BlAo+sHyCGSEiTPP/Vs7Zqj2AJpEpKNbub7OZdyMhrw
52H6ADUZhPf3mQvPF5Fme6iM9Fi5Dp7PMQFbhcnLdNrDuVrSZcaSdY+vlSRG
apVkZnW5Vl5/0CoyA39TNiR0Dhn9Fmlt3+o8neCCyJQuMiImRi205j/J28rr
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
\
\>"]], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1], Thickness[Large]}], 
        StyleBox[{{
           {RGBColor[
            0.2378003869298909, 0.3402339256712554, 0.5750443772475772], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.00039128635039410064`}]},
              
              ImageSizeCache->{{18.67959559248226, 62.54619946161931}, {
               29.388121159551673`, 59.53262914047761}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.9\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-4\"\>"]}],
                  ShowStringCharacters->False],
                 0.00039128635039410064`,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 1., 0.00039128635039410064`}, {0, -1}]}, {
           {RGBColor[
            0.23773600232125355`, 0.3402150006823012, 0.5751129975260382], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                1.4419977366689207`*^-8}]},
              
              ImageSizeCache->{{37.27144928133506, 78.84553549974096}, {
               12.703298260002384`, 40.34090449434672}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.4\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.4419977366689207`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {1., 2., 1.4419977366689207`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.23773600232125355`, 0.3402150006823012, 0.5751129975260382], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                1.4419977366906048`*^-8}]},
              ImageSizeCache->{{45.11063710016465, 89.52930718322396}, {
               39.17268683470605, 70.80261328920233}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"1.4\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-8\"\>"]}],
                  ShowStringCharacters->False],
                 1.4419977366906048`*^-8,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 1., 1.4419977366906048`*^-8}, {0, -1}]}, {
           {RGBColor[
            0.2377989063490232, 0.3402334904744411, 0.5750459552314087], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.00038228870722290274`}]},
              
              ImageSizeCache->{{62.87112181443952, 104.931118827849}, {
               21.52979637072049, 50.4898968570003}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.8\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-4\"\>"]}],
                  ShowStringCharacters->False],
                 0.00038228870722290274`,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {2., 2., 0.00038228870722290274`}, {0, -1}]}, {
           {RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9671710221424766}]},
              
              
              ImageSizeCache->{{105.06420381260031`, 
               150.14476245232197`}, {-55.00262563251166, 41.8661181593638}}],
             
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.96717\"\>",
                  ShowStringCharacters->False],
                 0.9671710221424766,
                 AutoDelete->True],
                NumberForm[#, 5]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0.82],
               FrontFaceColor->GrayLevel[0.82],
               BackFaceColor->GrayLevel[0.82],
               GraphicsColor->GrayLevel[0.82],
               FontSize->13,
               FontColor->GrayLevel[0.82]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 3., 0.4835855110712383}, {0, 0}]}, {
           {RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
                3.134792425640853*^-10}]},
              
              ImageSizeCache->{{118.79052237841795`, 
               157.225654282939}, {-1.2903069303837214`, 
               24.370723483688195`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.134792425640853*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {3., 4., 3.134792425640853*^-10}, {
            0, -1}]}, {
           {RGBColor[0.23773600000000003`, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
                3.134793605252817*^-10}]},
              
              ImageSizeCache->{{132.63487029913225`, 173.42193277834883`}, {
               22.95735093314829, 52.101991029477674`}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\<\"3.1\"\>", "\[Times]", 
                   SuperscriptBox["10", "\<\"-10\"\>"]}],
                  ShowStringCharacters->False],
                 3.134793605252817*^-10,
                 AutoDelete->True],
                ScientificForm[#, 2]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 3., 3.134793605252817*^-10}, {
            0, -1}]}, {
           {RGBColor[
            0.24301078304308474`, 0.3417654514656331, 0.5694912048396604], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.032055402799853965`}]},
              
              ImageSizeCache->{{145.38992194841663`, 184.46230963817874`}, {
               4.802402354846691, 33.63283679907012}}],
             "DelayedMouseEffectStyle"]}, Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.03206\"\>",
                  ShowStringCharacters->False],
                 0.032055402799853965`,
                 AutoDelete->True],
                NumberForm[#, 4]& ],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->10,
               FontColor->GrayLevel[0]],
              BoxRotation->1.5707963267948966`],
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontWeight->Bold], {4., 4., 0.032055402799853965`}, {0, -1}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, False},
    AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.7},
    Boxed->{Left, Bottom, Back},
    Epilog->InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph-bf\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]],
    FaceGridsStyle->Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]],
    ImageSize->200,
    LabelStyle->Directive[Bold, FontFamily -> "Helvetica"],
    Lighting->{{"Ambient", 
       RGBColor[0.94, 0.88, 0.94]}},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {0, 1}},
    PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
    Ticks->{{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic},
    TicksStyle->{Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]},
    ViewAngle->All,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
3BGIy3/lC9MHokbGxXsnMcN7nN42gw8qGVK1ZL1N0k2FYi2kT7qdVyD+gJLV
HUpWhj5tfI3SDjq1Ju27lLT/NJ7EfQoSVDm9AvtvlXMYWkejEWh4RzwJTzJK
4n4noE1Cm2n8JwYV83Sdl1eamyfx+gO+Nua/s0o633fpeMs04TCnySxfVFTT
NhH7l+bbLAXmvOG6tkiS4jeXFI1vU1J+t3rKNEmTt46RGNyqpPzPq6dMe1Nd
VdC4xelhc/un5rsdpsxF1CSNnU6c8B7A0FWSfNslyTwVksT+Es21ci6Rn9Dv
VEgIvWt2vD11b1KS/IcVkkTvkHsVXpI3Kkn+pvluaklmpnyiA4L9JaPrDUoq
v2auwikktSFXI8OBRZn7fZ5UJ5T0vl2WHtZ67sx66R23kr5lU2nY6oYGMXvS
3nTM/voV5XY039x991rP6+yDf8c+GKnjaPo4FuFJ65bQfL0sFTQ52U9gKp5P
ccSm8rWyVLDScmzI08gtksBpaJVqLLrV7IF5uh226X25enq00vUZRctZm97r
1dN7Av983Mlnm4WDLg/7CI7zpy0KYseRW0/lA0qSL7sko7UWxWNX0mtmtYUf
vQpJfgqT/JSi+H4lyecrJPkZTPI5RXFt8qbJOlWLX8D0Pq1orU17/XhZei9h
ep/xVTb/aQtmnypLD50tHsHz9N2tpPcRm54zID+Dlz7rVLRJaLuBfVhJ4mfx
0guKVtqe6A/bJCIWACdispfsaTWppHe1LL1fxPteVFTcrqR30aXXDNMzZ/8W
3veSou9WJT10CivZgl/CPy8rmm9RUj5fPeVv4J+fVlIWs4msHndXT/mb+McU
RWP7Nirp4WvG0lbr25jQFxQR1ytJvt8lGbUHv4ZJflFJUnsF8ukKSf59TPJn
rLraywm7FRL6bUzoNV82c0l7XYDxalK24J9geq8rurqdco+XpfK7mApWab91
c9vCzJel8l1M5ecU3dyODIdtKs6UoCfOM4A9Jdz63gPKg9g5wMberPTRRoVH
bRL7bBIRm4HdGOuUZ+HyDDGYa1UbscnvLkv++yXJawOxwzb5SZe8bqF+UJK8
WH1kwenY5PkV3hUq/5+WZKSNi7Zd5jat9dWz/PclWWojny0lS6xkaZP0ZyV5
aYOaTSWviQp5/RfMa97l1cto5Rmu5PA2uoOPWeGHhc5cavADfJj1HUMx4cXb
muSDJrNhm37b/hLvV7DK1RVla/YJzgHgOX36NKTe37RpUw1eVB2w2rEP/Ts8
ccSJvZAVF+VYLLR9ZVvKs2YnBdzNKQYIystP8f4DvULKJst2LHNtKRAvJyzA
FGx5weuqASwoI4CTJkY083+Df7jaybTFstZQbS8JLr/yvjHlPvWdU0oe2uLo
ppU/qglvoyKrVv5hCLngZUX0evPz8wu7du2SuS/IpKP7ERN6ZB17Mu0Vyu3B
Wkhzx3hFpFYoqDTKUcF1S82eMPjWgJCxhBpWKFAy6yEFEkdIAhKDpVkira0D
VN9xZZ9o9IqCJBbeduV9bZuKkaBCHeT9owJby+FSmXjLT1yjOIHLoZjSwb4l
iSWGmvpaej15X4sUzJyF62a2RHaVbDy6q2ZjOE1DTa65hylmqa88bCniVETZ
y6Nhi4J2oQKs2juKxFtB7YfKdbegoJZ5XdFukSBG+dB56xbuKwO0FTNBFRqJ
mk1Ae/GYJno0ZbUtKPg6q7qZbnA1xKU184Qow2U2rox3u8igUMq79tq4kLmY
ZCcmi8NWAFLIxii8Il63NZB6BR0GKr4DYiYU1EFaUwbgXxGIesp9fxUh8mR/
7yDy0vhrBpF31/8rpWhRxqnT419VbX7UR6zFLoh2fRkMegWoB2n3vAxIkF5W
gkFa1QBETZNEr8nTJCqQZKFYfLSUKb5bDeTFtJpR90zzStoxVCtIqIGiFQMN
ZOeyRcFLiOZlGUV1IJetrBfKyxwKSuTdP3E3XF8okd5LQxMyqqUWK2klhIgW
H3pXQy9zL0vtZToXtCrdQzaleMsl7WVr08fHfGT+EP9wIFTmpXX1NRaNTObR
qNYBcist76uUJzS9V+i6jSuP+xp5+Yoef7KCavVL2/ct0WJ4eWhhAtnX6xVu
3qxgkIhheFKZQpxAZk6RWuwxmmVeWSt3c7S9WUtii6xDSVAMb+6lbqZBNg2o
btmzJvUEUEcVZdUghAJUW3lWVPJucF+3kEciNFFMoDXIE/GyZZ2THh1N5XFD
TwI1XGNkw+ndTIRkNKRw62w4ZaLS5hcPSgpR8MKwTaURu2VbVD2lTXBZjsTk
o2boptj1eXuBp0KU5bzyh5xVBYfxh5NzdFv+P36vsu/K+7QY+B8ue87aq7bb
P5SctXc9a46FlzPcfcz+2mt/8eyFTG7J3CtmSomZbH7l//8e9Hf2I/8X3CTG
iQ==\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.884025694593354*^9, 3.8840257465028353`*^9, {3.8840257909081907`*^9, 
   3.884025873837173*^9}, 3.8840259725862303`*^9, 3.884026095704286*^9, 
   3.88407346272862*^9},
 CellLabel->
  "Out[2667]=",ExpressionUUID->"fff6125b-69a0-4bf3-b8a7-4f38f2eda3de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DrawCircuit", "[", 
  RowBox[{
   RowBox[{"round1", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.8840252512243633`*^9, 3.884025279043961*^9}},
 CellLabel->
  "In[2668]:=",ExpressionUUID->"24a4593d-398c-4db6-9377-2ebeab0ccedb"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0.125, 0.5}, {0.25, 0.5}}], 
     LineBox[{{0.125, 1.5}, {0.25, 1.5}}], 
     LineBox[{{0.125, 2.5}, {0.25, 2.5}}], 
     LineBox[{{0.125, 3.5}, {0.25, 3.5}}], 
     LineBox[{{0.125, 4.5}, {0.25, 4.5}}], 
     LineBox[{{0.125, 5.5}, {0.25, 5.5}}]}, {
     LineBox[{{0.25, 0.5}, {1.25, 0.5}}], LineBox[{{0.25, 1.5}, {1.25, 1.5}}],
      LineBox[{{0.25, 2.5}, {1.25, 2.5}}], 
     LineBox[{{0.25, 3.5}, {1.25, 3.5}}], LineBox[{{0.25, 4.5}, {1.25, 4.5}}],
      LineBox[{{0.25, 5.5}, {1.25, 5.5}}]}, {
     LineBox[{{1.25, 0.5}, {2.25, 0.5}}], LineBox[{{1.25, 1.5}, {2.25, 1.5}}],
      LineBox[{{1.25, 2.5}, {2.25, 2.5}}], 
     LineBox[{{1.25, 3.5}, {2.25, 3.5}}], LineBox[{{1.25, 4.5}, {2.25, 4.5}}],
      LineBox[{{1.25, 5.5}, {2.25, 5.5}}]}, {
     LineBox[{{2.25, 0.5}, {2.5, 0.5}}], LineBox[{{2.25, 1.5}, {2.5, 1.5}}], 
     LineBox[{{2.25, 2.5}, {2.5, 2.5}}], LineBox[{{2.25, 3.5}, {2.5, 3.5}}], 
     LineBox[{{2.25, 4.5}, {2.5, 4.5}}], 
     LineBox[{{2.25, 5.5}, {2.5, 5.5}}]}, {LineBox[{{2.5, 0.5}, {3.5, 0.5}}], 
     LineBox[{{2.5, 1.5}, {3.5, 1.5}}], LineBox[{{2.5, 2.5}, {3.5, 2.5}}], 
     LineBox[{{2.5, 3.5}, {3.5, 3.5}}], LineBox[{{2.5, 4.5}, {3.5, 4.5}}], 
     LineBox[{{2.5, 5.5}, {3.5, 5.5}}]}, {LineBox[{{3.5, 0.5}, {4.5, 0.5}}], 
     LineBox[{{3.5, 1.5}, {4.5, 1.5}}], LineBox[{{3.5, 2.5}, {4.5, 2.5}}], 
     LineBox[{{3.5, 3.5}, {4.5, 3.5}}], LineBox[{{3.5, 4.5}, {4.5, 4.5}}], 
     LineBox[{{3.5, 5.5}, {4.5, 5.5}}]}, {LineBox[{{4.5, 0.5}, {5.5, 0.5}}], 
     LineBox[{{4.5, 1.5}, {5.5, 1.5}}], LineBox[{{4.5, 2.5}, {5.5, 2.5}}], 
     LineBox[{{4.5, 3.5}, {5.5, 3.5}}], LineBox[{{4.5, 4.5}, {5.5, 4.5}}], 
     LineBox[{{4.5, 5.5}, {5.5, 5.5}}]}, {{LineBox[{{6., 0.5}, {7., 0.5}}], 
      LineBox[{{6., 1.5}, {7., 1.5}}], LineBox[{{6., 2.5}, {7., 2.5}}], 
      LineBox[{{6., 3.5}, {7., 3.5}}], LineBox[{{6., 4.5}, {7., 4.5}}], 
      LineBox[{{6., 5.5}, {7., 5.5}}]}, {LineBox[{{5.5, 0.5}, {6.5, 0.5}}], 
      LineBox[{{5.5, 1.5}, {6.5, 1.5}}], LineBox[{{5.5, 2.5}, {6.5, 2.5}}], 
      LineBox[{{5.5, 4.5}, {6.5, 4.5}}]}, {LineBox[{{6.5, 0.5}, {7.5, 0.5}}], 
      LineBox[{{6.5, 1.5}, {7.5, 1.5}}], LineBox[{{6.5, 2.5}, {7.5, 2.5}}], 
      LineBox[{{6.5, 4.5}, {7.5, 4.5}}]}}, {{LineBox[{{8., 0.5}, {9., 0.5}}], 
      LineBox[{{8., 1.5}, {9., 1.5}}], LineBox[{{8., 2.5}, {9., 2.5}}], 
      LineBox[{{8., 3.5}, {9., 3.5}}], LineBox[{{8., 4.5}, {9., 4.5}}], 
      LineBox[{{8., 5.5}, {9., 5.5}}]}, {LineBox[{{7.5, 0.5}, {8.5, 0.5}}], 
      LineBox[{{7.5, 1.5}, {8.5, 1.5}}], LineBox[{{7.5, 2.5}, {8.5, 2.5}}], 
      LineBox[{{7.5, 4.5}, {8.5, 4.5}}]}, {LineBox[{{8.5, 0.5}, {9.5, 0.5}}], 
      LineBox[{{8.5, 1.5}, {9.5, 1.5}}], LineBox[{{8.5, 2.5}, {9.5, 2.5}}], 
      LineBox[{{8.5, 4.5}, {9.5, 4.5}}]}}, {
     LineBox[{{9.5, 0.5}, {9.75, 0.5}}], LineBox[{{9.5, 1.5}, {9.75, 1.5}}], 
     LineBox[{{9.5, 2.5}, {9.75, 2.5}}], LineBox[{{9.5, 3.5}, {9.75, 3.5}}], 
     LineBox[{{9.5, 4.5}, {9.75, 4.5}}], 
     LineBox[{{9.5, 5.5}, {9.75, 5.5}}]}, {
     LineBox[{{9.75, 0.5}, {10.75, 0.5}}], 
     LineBox[{{9.75, 1.5}, {10.75, 1.5}}], 
     LineBox[{{9.75, 2.5}, {10.75, 2.5}}], 
     LineBox[{{9.75, 3.5}, {10.75, 3.5}}], 
     LineBox[{{9.75, 4.5}, {10.75, 4.5}}], 
     LineBox[{{9.75, 5.5}, {10.75, 5.5}}]}, {
     LineBox[{{10.75, 0.5}, {11.75, 0.5}}], 
     LineBox[{{10.75, 1.5}, {11.75, 1.5}}], 
     LineBox[{{10.75, 2.5}, {11.75, 2.5}}], 
     LineBox[{{10.75, 3.5}, {11.75, 3.5}}], 
     LineBox[{{10.75, 4.5}, {11.75, 4.5}}], 
     LineBox[{{10.75, 5.5}, {11.75, 5.5}}]}, {
     LineBox[{{11.75, 0.5}, {12., 0.5}}], LineBox[{{11.75, 1.5}, {12., 1.5}}],
      LineBox[{{11.75, 2.5}, {12., 2.5}}], 
     LineBox[{{11.75, 3.5}, {12., 3.5}}], LineBox[{{11.75, 4.5}, {12., 4.5}}],
      LineBox[{{11.75, 5.5}, {12., 5.5}}]}, {
     LineBox[{{12., 0.5}, {13., 0.5}}], LineBox[{{12., 1.5}, {13., 1.5}}], 
     LineBox[{{12., 2.5}, {13., 2.5}}], LineBox[{{12., 3.5}, {13., 3.5}}], 
     LineBox[{{12., 4.5}, {13., 4.5}}], LineBox[{{12., 5.5}, {13., 5.5}}]}, {
     LineBox[{{13., 0.5}, {14., 0.5}}], LineBox[{{13., 1.5}, {14., 1.5}}], 
     LineBox[{{13., 2.5}, {14., 2.5}}], LineBox[{{13., 3.5}, {14., 3.5}}], 
     LineBox[{{13., 4.5}, {14., 4.5}}], LineBox[{{13., 5.5}, {14., 5.5}}]}, {
     LineBox[{{14., 0.5}, {14.25, 0.5}}], LineBox[{{14., 1.5}, {14.25, 1.5}}],
      LineBox[{{14., 2.5}, {14.25, 2.5}}], 
     LineBox[{{14., 3.5}, {14.25, 3.5}}], LineBox[{{14., 4.5}, {14.25, 4.5}}],
      LineBox[{{14., 5.5}, {14.25, 5.5}}]}, {
     LineBox[{{14.25, 0.5}, {15.25, 0.5}}], 
     LineBox[{{14.25, 1.5}, {15.25, 1.5}}], 
     LineBox[{{14.25, 2.5}, {15.25, 2.5}}], 
     LineBox[{{14.25, 3.5}, {15.25, 3.5}}], 
     LineBox[{{14.25, 4.5}, {15.25, 4.5}}], 
     LineBox[{{14.25, 5.5}, {15.25, 5.5}}]}, {
     LineBox[{{15.25, 0.5}, {16.25, 0.5}}], 
     LineBox[{{15.25, 1.5}, {16.25, 1.5}}], 
     LineBox[{{15.25, 2.5}, {16.25, 2.5}}], 
     LineBox[{{15.25, 3.5}, {16.25, 3.5}}], 
     LineBox[{{15.25, 4.5}, {16.25, 4.5}}], 
     LineBox[{{15.25, 5.5}, {16.25, 5.5}}]}, {
     LineBox[{{16.25, 0.5}, {16.5, 0.5}}], 
     LineBox[{{16.25, 1.5}, {16.5, 1.5}}], 
     LineBox[{{16.25, 2.5}, {16.5, 2.5}}], 
     LineBox[{{16.25, 3.5}, {16.5, 3.5}}], 
     LineBox[{{16.25, 4.5}, {16.5, 4.5}}], 
     LineBox[{{16.25, 5.5}, {16.5, 5.5}}]}, {
     LineBox[{{16.5, 0.5}, {17.5, 0.5}}], LineBox[{{16.5, 1.5}, {17.5, 1.5}}],
      LineBox[{{16.5, 2.5}, {17.5, 2.5}}], 
     LineBox[{{16.5, 3.5}, {17.5, 3.5}}], LineBox[{{16.5, 4.5}, {17.5, 4.5}}],
      LineBox[{{16.5, 5.5}, {17.5, 5.5}}]}, {
     LineBox[{{17.5, 0.5}, {18.5, 0.5}}], LineBox[{{17.5, 1.5}, {18.5, 1.5}}],
      LineBox[{{17.5, 2.5}, {18.5, 2.5}}], 
     LineBox[{{17.5, 3.5}, {18.5, 3.5}}], LineBox[{{17.5, 4.5}, {18.5, 4.5}}],
      LineBox[{{17.5, 5.5}, {18.5, 5.5}}]}, {
     LineBox[{{18.5, 0.5}, {18.75, 0.5}}], 
     LineBox[{{18.5, 1.5}, {18.75, 1.5}}], 
     LineBox[{{18.5, 2.5}, {18.75, 2.5}}], 
     LineBox[{{18.5, 3.5}, {18.75, 3.5}}], 
     LineBox[{{18.5, 4.5}, {18.75, 4.5}}], 
     LineBox[{{18.5, 5.5}, {18.75, 5.5}}]}, {
     LineBox[{{18.75, 0.5}, {19.75, 0.5}}], 
     LineBox[{{18.75, 1.5}, {19.75, 1.5}}], 
     LineBox[{{18.75, 2.5}, {19.75, 2.5}}], 
     LineBox[{{18.75, 3.5}, {19.75, 3.5}}], 
     LineBox[{{18.75, 4.5}, {19.75, 4.5}}], 
     LineBox[{{18.75, 5.5}, {19.75, 5.5}}]}, {
     LineBox[{{19.75, 0.5}, {20.75, 0.5}}], 
     LineBox[{{19.75, 1.5}, {20.75, 1.5}}], 
     LineBox[{{19.75, 2.5}, {20.75, 2.5}}], 
     LineBox[{{19.75, 3.5}, {20.75, 3.5}}], 
     LineBox[{{19.75, 4.5}, {20.75, 4.5}}], 
     LineBox[{{19.75, 5.5}, {20.75, 5.5}}]}, {
     LineBox[{{20.75, 0.5}, {21.75, 0.5}}], 
     LineBox[{{20.75, 1.5}, {21.75, 1.5}}], 
     LineBox[{{20.75, 2.5}, {21.75, 2.5}}], 
     LineBox[{{20.75, 3.5}, {21.75, 3.5}}], 
     LineBox[{{20.75, 4.5}, {21.75, 4.5}}], 
     LineBox[{{20.75, 5.5}, {21.75, 5.5}}]}, {{
      LineBox[{{22.25, 0.5}, {23.25, 0.5}}], 
      LineBox[{{22.25, 1.5}, {23.25, 1.5}}], 
      LineBox[{{22.25, 2.5}, {23.25, 2.5}}], 
      LineBox[{{22.25, 3.5}, {23.25, 3.5}}], 
      LineBox[{{22.25, 4.5}, {23.25, 4.5}}], 
      LineBox[{{22.25, 5.5}, {23.25, 5.5}}]}, {
      LineBox[{{21.75, 0.5}, {22.75, 0.5}}], 
      LineBox[{{21.75, 1.5}, {22.75, 1.5}}], 
      LineBox[{{21.75, 3.5}, {22.75, 3.5}}], 
      LineBox[{{21.75, 5.5}, {22.75, 5.5}}]}, {
      LineBox[{{22.75, 0.5}, {23.75, 0.5}}], 
      LineBox[{{22.75, 1.5}, {23.75, 1.5}}], 
      LineBox[{{22.75, 3.5}, {23.75, 3.5}}], 
      LineBox[{{22.75, 5.5}, {23.75, 5.5}}]}}, {{
      LineBox[{{24.25, 0.5}, {25.25, 0.5}}], 
      LineBox[{{24.25, 1.5}, {25.25, 1.5}}], 
      LineBox[{{24.25, 2.5}, {25.25, 2.5}}], 
      LineBox[{{24.25, 3.5}, {25.25, 3.5}}], 
      LineBox[{{24.25, 4.5}, {25.25, 4.5}}], 
      LineBox[{{24.25, 5.5}, {25.25, 5.5}}]}, {
      LineBox[{{23.75, 0.5}, {24.75, 0.5}}], 
      LineBox[{{23.75, 1.5}, {24.75, 1.5}}], 
      LineBox[{{23.75, 3.5}, {24.75, 3.5}}], 
      LineBox[{{23.75, 5.5}, {24.75, 5.5}}]}, {
      LineBox[{{24.75, 0.5}, {25.75, 0.5}}], 
      LineBox[{{24.75, 1.5}, {25.75, 1.5}}], 
      LineBox[{{24.75, 3.5}, {25.75, 3.5}}], 
      LineBox[{{24.75, 5.5}, {25.75, 5.5}}]}}, {
     LineBox[{{25.75, 0.5}, {26., 0.5}}], LineBox[{{25.75, 1.5}, {26., 1.5}}],
      LineBox[{{25.75, 2.5}, {26., 2.5}}], 
     LineBox[{{25.75, 3.5}, {26., 3.5}}], LineBox[{{25.75, 4.5}, {26., 4.5}}],
      LineBox[{{25.75, 5.5}, {26., 5.5}}]}, {
     LineBox[{{26., 0.5}, {27., 0.5}}], LineBox[{{26., 1.5}, {27., 1.5}}], 
     LineBox[{{26., 2.5}, {27., 2.5}}], LineBox[{{26., 3.5}, {27., 3.5}}], 
     LineBox[{{26., 4.5}, {27., 4.5}}], LineBox[{{26., 5.5}, {27., 5.5}}]}, {
     LineBox[{{27., 0.5}, {28., 0.5}}], LineBox[{{27., 1.5}, {28., 1.5}}], 
     LineBox[{{27., 2.5}, {28., 2.5}}], LineBox[{{27., 3.5}, {28., 3.5}}], 
     LineBox[{{27., 4.5}, {28., 4.5}}], LineBox[{{27., 5.5}, {28., 5.5}}]}, {
     LineBox[{{28., 0.5}, {28.25, 0.5}}], LineBox[{{28., 1.5}, {28.25, 1.5}}],
      LineBox[{{28., 2.5}, {28.25, 2.5}}], 
     LineBox[{{28., 3.5}, {28.25, 3.5}}], LineBox[{{28., 4.5}, {28.25, 4.5}}],
      LineBox[{{28., 5.5}, {28.25, 5.5}}]}, {
     LineBox[{{28.25, 0.5}, {29.25, 0.5}}], 
     LineBox[{{28.25, 1.5}, {29.25, 1.5}}], 
     LineBox[{{28.25, 2.5}, {29.25, 2.5}}], 
     LineBox[{{28.25, 3.5}, {29.25, 3.5}}], 
     LineBox[{{28.25, 4.5}, {29.25, 4.5}}], 
     LineBox[{{28.25, 5.5}, {29.25, 5.5}}]}, {
     LineBox[{{29.25, 0.5}, {30.25, 0.5}}], 
     LineBox[{{29.25, 1.5}, {30.25, 1.5}}], 
     LineBox[{{29.25, 2.5}, {30.25, 2.5}}], 
     LineBox[{{29.25, 3.5}, {30.25, 3.5}}], 
     LineBox[{{29.25, 4.5}, {30.25, 4.5}}], 
     LineBox[{{29.25, 5.5}, {30.25, 5.5}}]}, {
     LineBox[{{30.25, 0.5}, {31.25, 0.5}}], 
     LineBox[{{30.25, 1.5}, {31.25, 1.5}}], 
     LineBox[{{30.25, 2.5}, {31.25, 2.5}}], 
     LineBox[{{30.25, 3.5}, {31.25, 3.5}}], 
     LineBox[{{30.25, 4.5}, {31.25, 4.5}}], 
     LineBox[{{30.25, 5.5}, {31.25, 5.5}}]}, {
     LineBox[{{31.25, 0.5}, {31.5, 0.5}}], 
     LineBox[{{31.25, 1.5}, {31.5, 1.5}}], 
     LineBox[{{31.25, 2.5}, {31.5, 2.5}}], 
     LineBox[{{31.25, 3.5}, {31.5, 3.5}}], 
     LineBox[{{31.25, 4.5}, {31.5, 4.5}}], 
     LineBox[{{31.25, 5.5}, {31.5, 5.5}}]}, {
     LineBox[{{31.5, 0.5}, {32.5, 0.5}}], LineBox[{{31.5, 1.5}, {32.5, 1.5}}],
      LineBox[{{31.5, 2.5}, {32.5, 2.5}}], 
     LineBox[{{31.5, 3.5}, {32.5, 3.5}}], LineBox[{{31.5, 4.5}, {32.5, 4.5}}],
      LineBox[{{31.5, 5.5}, {32.5, 5.5}}]}, {
     LineBox[{{32.5, 0.5}, {33.5, 0.5}}], LineBox[{{32.5, 1.5}, {33.5, 1.5}}],
      LineBox[{{32.5, 2.5}, {33.5, 2.5}}], 
     LineBox[{{32.5, 3.5}, {33.5, 3.5}}], LineBox[{{32.5, 4.5}, {33.5, 4.5}}],
      LineBox[{{32.5, 5.5}, {33.5, 5.5}}]}, {
     LineBox[{{33.5, 0.5}, {34.5, 0.5}}], LineBox[{{33.5, 1.5}, {34.5, 1.5}}],
      LineBox[{{33.5, 2.5}, {34.5, 2.5}}], 
     LineBox[{{33.5, 3.5}, {34.5, 3.5}}], LineBox[{{33.5, 4.5}, {34.5, 4.5}}],
      LineBox[{{33.5, 5.5}, {34.5, 5.5}}]}, {
     LineBox[{{34.5, 0.5}, {34.75, 0.5}}], 
     LineBox[{{34.5, 1.5}, {34.75, 1.5}}], 
     LineBox[{{34.5, 2.5}, {34.75, 2.5}}], 
     LineBox[{{34.5, 3.5}, {34.75, 3.5}}], 
     LineBox[{{34.5, 4.5}, {34.75, 4.5}}], 
     LineBox[{{34.5, 5.5}, {34.75, 5.5}}]}, {
     LineBox[{{34.75, 0.5}, {35.75, 0.5}}], 
     LineBox[{{34.75, 1.5}, {35.75, 1.5}}], 
     LineBox[{{34.75, 2.5}, {35.75, 2.5}}], 
     LineBox[{{34.75, 3.5}, {35.75, 3.5}}], 
     LineBox[{{34.75, 4.5}, {35.75, 4.5}}], 
     LineBox[{{34.75, 5.5}, {35.75, 5.5}}]}, {
     LineBox[{{35.75, 0.5}, {36.75, 0.5}}], 
     LineBox[{{35.75, 1.5}, {36.75, 1.5}}], 
     LineBox[{{35.75, 2.5}, {36.75, 2.5}}], 
     LineBox[{{35.75, 3.5}, {36.75, 3.5}}], 
     LineBox[{{35.75, 4.5}, {36.75, 4.5}}], 
     LineBox[{{35.75, 5.5}, {36.75, 5.5}}]}, {
     LineBox[{{36.75, 0.5}, {37.75, 0.5}}], 
     LineBox[{{36.75, 1.5}, {37.75, 1.5}}], 
     LineBox[{{36.75, 2.5}, {37.75, 2.5}}], 
     LineBox[{{36.75, 3.5}, {37.75, 3.5}}], 
     LineBox[{{36.75, 4.5}, {37.75, 4.5}}], 
     LineBox[{{36.75, 5.5}, {37.75, 5.5}}]}, {
     LineBox[{{37.75, 0.5}, {38., 0.5}}], LineBox[{{37.75, 1.5}, {38., 1.5}}],
      LineBox[{{37.75, 2.5}, {38., 2.5}}], 
     LineBox[{{37.75, 3.5}, {38., 3.5}}], LineBox[{{37.75, 4.5}, {38., 4.5}}],
      LineBox[{{37.75, 5.5}, {38., 5.5}}]}, {
     LineBox[{{38., 0.5}, {39., 0.5}}], LineBox[{{38., 1.5}, {39., 1.5}}], 
     LineBox[{{38., 2.5}, {39., 2.5}}], LineBox[{{38., 3.5}, {39., 3.5}}], 
     LineBox[{{38., 4.5}, {39., 4.5}}], LineBox[{{38., 5.5}, {39., 5.5}}]}, {
     LineBox[{{39., 0.5}, {40., 0.5}}], LineBox[{{39., 1.5}, {40., 1.5}}], 
     LineBox[{{39., 2.5}, {40., 2.5}}], LineBox[{{39., 3.5}, {40., 3.5}}], 
     LineBox[{{39., 4.5}, {40., 4.5}}], LineBox[{{39., 5.5}, {40., 5.5}}]}, {
     LineBox[{{40., 0.5}, {41., 0.5}}], LineBox[{{40., 1.5}, {41., 1.5}}], 
     LineBox[{{40., 2.5}, {41., 2.5}}], LineBox[{{40., 3.5}, {41., 3.5}}], 
     LineBox[{{40., 4.5}, {41., 4.5}}], LineBox[{{40., 5.5}, {41., 5.5}}]}, {
     LineBox[{{41., 0.5}, {41.25, 0.5}}], LineBox[{{41., 1.5}, {41.25, 1.5}}],
      LineBox[{{41., 2.5}, {41.25, 2.5}}], 
     LineBox[{{41., 3.5}, {41.25, 3.5}}], LineBox[{{41., 4.5}, {41.25, 4.5}}],
      LineBox[{{41., 5.5}, {41.25, 5.5}}]}, {
     LineBox[{{41.25, 0.5}, {42.25, 0.5}}], 
     LineBox[{{41.25, 1.5}, {42.25, 1.5}}], 
     LineBox[{{41.25, 2.5}, {42.25, 2.5}}], 
     LineBox[{{41.25, 3.5}, {42.25, 3.5}}], 
     LineBox[{{41.25, 4.5}, {42.25, 4.5}}], 
     LineBox[{{41.25, 5.5}, {42.25, 5.5}}]}, {
     LineBox[{{42.25, 0.5}, {43.25, 0.5}}], 
     LineBox[{{42.25, 1.5}, {43.25, 1.5}}], 
     LineBox[{{42.25, 2.5}, {43.25, 2.5}}], 
     LineBox[{{42.25, 3.5}, {43.25, 3.5}}], 
     LineBox[{{42.25, 4.5}, {43.25, 4.5}}], 
     LineBox[{{42.25, 5.5}, {43.25, 5.5}}]}, {
     LineBox[{{43.25, 0.5}, {43.5, 0.5}}], 
     LineBox[{{43.25, 1.5}, {43.5, 1.5}}], 
     LineBox[{{43.25, 2.5}, {43.5, 2.5}}], 
     LineBox[{{43.25, 3.5}, {43.5, 3.5}}], 
     LineBox[{{43.25, 4.5}, {43.5, 4.5}}], 
     LineBox[{{43.25, 5.5}, {43.5, 5.5}}]}, {
     LineBox[{{43.5, 0.5}, {44.5, 0.5}}], LineBox[{{43.5, 1.5}, {44.5, 1.5}}],
      LineBox[{{43.5, 2.5}, {44.5, 2.5}}], 
     LineBox[{{43.5, 3.5}, {44.5, 3.5}}], LineBox[{{43.5, 4.5}, {44.5, 4.5}}],
      LineBox[{{43.5, 5.5}, {44.5, 5.5}}]}, {
     LineBox[{{44.5, 0.5}, {45.5, 0.5}}], LineBox[{{44.5, 1.5}, {45.5, 1.5}}],
      LineBox[{{44.5, 2.5}, {45.5, 2.5}}], 
     LineBox[{{44.5, 3.5}, {45.5, 3.5}}], LineBox[{{44.5, 4.5}, {45.5, 4.5}}],
      LineBox[{{44.5, 5.5}, {45.5, 5.5}}]}}, {
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{0.125, 0}, {0.125, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "0"}],
       DisplayForm], {0.125, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{0.35, 0.1}, {1.15, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {0.75, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{0.35, 1.1}, {1.15, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {0.75, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{0.35, 2.1}, {1.15, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {0.75, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{0.35, 3.1}, {1.15, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {0.75, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{0.35, 4.1}, {1.15, 4.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {0.75, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{0.35, 5.1}, {1.15, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {0.75, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{1.35, 0.1}, {2.15, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {1.75, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{1.35, 1.1}, {2.15, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {1.75, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{1.35, 2.1}, {2.15, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {1.75, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{1.35, 3.1}, {2.15, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {1.75, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{1.35, 4.1}, {2.15, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {1.75, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{1.35, 5.1}, {2.15, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {1.75, 5.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{2.375, 0}, {2.375, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "50"}],
       DisplayForm], {2.375, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.6, 2.1}, {3.4, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {3., 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.6, 5.1}, {3.4, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {3., 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.6, 0.1}, {3.4, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {3., 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.6, 1.1}, {3.4, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {3., 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.6, 3.1}, {3.4, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {3., 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{2.6, 4.1}, {3.4, 4.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {3., 4.5}]}, {CircleBox[{4., 5.5}, 0.25], 
     LineBox[{{4., 5.25}, {4., 5.75}}]}, {
     RectangleBox[{3.6, 2.1}, {4.4, 2.9}], 
     InsetBox["\<\"H\"\>", {4., 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 0.1}, {4.4, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 1.1}, {4.4, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 3.1}, {4.4, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 4.1}, {4.4, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 4.5}]}, {
     {FaceForm[GrayLevel[0]], DiskBox[{5., 2.5}, 0.1], 
      LineBox[{{5., 2.5}, {5., 5.5}}]}, {CircleBox[{5., 5.5}, 0.25], 
      LineBox[{{5., 5.25}, {5., 5.75}}]}}, 
    {EdgeForm[
     Dashing[{Small, Small}]], {{LineBox[{{5.5, 5.5}, {5.6, 5.5}}], 
       LineBox[{{5.6, 5.5}, {5.9, 3.5}}], LineBox[{{5.9, 3.5}, {6., 3.5}}]}, {
       LineBox[{{5.5, 3.5}, {5.6, 3.5}}], LineBox[{{5.6, 3.5}, {5.9, 5.5}}], 
       LineBox[{{5.9, 5.5}, {6., 5.5}}]}}, {
      RectangleBox[{6.1, 2.1}, {6.9, 3.9}], 
      InsetBox["\<\"\[CapitalDelta]\"\>", {6.5, 3.}]}, {{
       LineBox[{{7., 5.5}, {7.1, 5.5}}], LineBox[{{7.1, 5.5}, {7.4, 3.5}}], 
       LineBox[{{7.4, 3.5}, {7.5, 3.5}}]}, {LineBox[{{7., 3.5}, {7.1, 3.5}}], 
       LineBox[{{7.1, 3.5}, {7.4, 5.5}}], 
       LineBox[{{7.4, 5.5}, {7.5, 5.5}}]}}}, 
    {EdgeForm[
     Dashing[{Small, Small}]], {{LineBox[{{7.5, 5.5}, {7.6, 5.5}}], 
       LineBox[{{7.6, 5.5}, {7.9, 3.5}}], LineBox[{{7.9, 3.5}, {8., 3.5}}]}, {
       LineBox[{{7.5, 3.5}, {7.6, 3.5}}], LineBox[{{7.6, 3.5}, {7.9, 5.5}}], 
       LineBox[{{7.9, 5.5}, {8., 5.5}}]}}, {
      RectangleBox[{8.1, 2.1}, {8.9, 3.9}], 
      InsetBox["\<\"\[Phi]\"\>", {8.5, 3.}]}, {{
       LineBox[{{9., 5.5}, {9.1, 5.5}}], LineBox[{{9.1, 5.5}, {9.4, 3.5}}], 
       LineBox[{{9.4, 3.5}, {9.5, 3.5}}]}, {LineBox[{{9., 3.5}, {9.1, 3.5}}], 
       LineBox[{{9.1, 3.5}, {9.4, 5.5}}], 
       LineBox[{{9.4, 5.5}, {9.5, 5.5}}]}}}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{9.625, 0}, {9.625, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "60.`"}],
       DisplayForm], {9.625, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{9.85, 0.1}, {10.65, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {10.25, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{9.85, 1.1}, {10.65, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {10.25, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{9.85, 2.1}, {10.65, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {10.25, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{9.85, 3.1}, {10.65, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {10.25, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{9.85, 4.1}, {10.65, 4.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {10.25, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{9.85, 5.1}, {10.65, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {10.25, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{10.85, 0.1}, {11.65, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {11.25, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{10.85, 1.1}, {11.65, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {11.25, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{10.85, 2.1}, {11.65, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {11.25, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{10.85, 3.1}, {11.65, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {11.25, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{10.85, 4.1}, {11.65, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {11.25, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{10.85, 5.1}, {11.65, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {11.25, 5.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{11.875, 0}, {11.875, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "110.`"}],
       DisplayForm], {11.875, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{12.1, 0.1}, {12.9, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {12.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{12.1, 1.1}, {12.9, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {12.5, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{12.1, 2.1}, {12.9, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {12.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{12.1, 3.1}, {12.9, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {12.5, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{12.1, 4.1}, {12.9, 4.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {12.5, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{12.1, 5.1}, {12.9, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {12.5, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{13.1, 0.1}, {13.9, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {13.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{13.1, 1.1}, {13.9, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {13.5, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{13.1, 2.1}, {13.9, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {13.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{13.1, 3.1}, {13.9, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {13.5, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{13.1, 4.1}, {13.9, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {13.5, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{13.1, 5.1}, {13.9, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {13.5, 5.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{14.125, 0}, {14.125, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "160.`"}],
       DisplayForm], {14.125, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{14.35, 0.1}, {15.15, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {14.75, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{14.35, 1.1}, {15.15, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {14.75, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{14.35, 2.1}, {15.15, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {14.75, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{14.35, 3.1}, {15.15, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {14.75, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{14.35, 4.1}, {15.15, 4.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {14.75, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{14.35, 5.1}, {15.15, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {14.75, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{15.35, 0.1}, {16.15, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {15.75, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{15.35, 1.1}, {16.15, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {15.75, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{15.35, 2.1}, {16.15, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {15.75, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{15.35, 3.1}, {16.15, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {15.75, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{15.35, 4.1}, {16.15, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {15.75, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{15.35, 5.1}, {16.15, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {15.75, 5.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{16.375, 0}, {16.375, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "170.`"}],
       DisplayForm], {16.375, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{16.6, 0.1}, {17.4, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {17., 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{16.6, 2.1}, {17.4, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {17., 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{16.6, 1.1}, {17.4, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {17., 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{16.6, 3.1}, {17.4, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {17., 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{16.6, 5.1}, {17.4, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {17., 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{16.6, 4.1}, {17.4, 4.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {17., 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{17.6, 0.1}, {18.4, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {18., 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{17.6, 2.1}, {18.4, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {18., 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{17.6, 1.1}, {18.4, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {18., 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{17.6, 3.1}, {18.4, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {18., 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{17.6, 5.1}, {18.4, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {18., 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{17.6, 4.1}, {18.4, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {18., 4.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{18.625, 0}, {18.625, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "220.`"}],
       DisplayForm], {18.625, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{18.85, 1.1}, {19.65, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {19.25, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{18.85, 4.1}, {19.65, 4.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {19.25, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{18.85, 0.1}, {19.65, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {19.25, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{18.85, 2.1}, {19.65, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {19.25, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{18.85, 3.1}, {19.65, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {19.25, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{18.85, 5.1}, {19.65, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {19.25, 5.5}]}, {
     CircleBox[{20.25, 4.5}, 0.25], 
     LineBox[{{20.25, 4.25}, {20.25, 4.75}}]}, {
     RectangleBox[{19.85, 1.1}, {20.65, 1.9}], 
     InsetBox["\<\"H\"\>", {20.25, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{19.85, 0.1}, {20.65, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {20.25, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{19.85, 2.1}, {20.65, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {20.25, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{19.85, 3.1}, {20.65, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {20.25, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{19.85, 5.1}, {20.65, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {20.25, 5.5}]}, {
     {FaceForm[GrayLevel[0]], DiskBox[{21.25, 1.5}, 0.1], 
      LineBox[{{21.25, 1.5}, {21.25, 4.5}}]}, {CircleBox[{21.25, 4.5}, 0.25], 
      LineBox[{{21.25, 4.25}, {21.25, 4.75}}]}}, 
    {EdgeForm[
     Dashing[{Small, Small}]], {{LineBox[{{21.75, 4.5}, {21.85, 4.5}}], 
       LineBox[{{21.85, 4.5}, {22.15, 2.5}}], 
       LineBox[{{22.15, 2.5}, {22.25, 2.5}}]}, {
       LineBox[{{21.75, 2.5}, {21.85, 2.5}}], 
       LineBox[{{21.85, 2.5}, {22.15, 4.5}}], 
       LineBox[{{22.15, 4.5}, {22.25, 4.5}}]}}, {
      RectangleBox[{22.35, 1.1}, {23.15, 2.9}], 
      InsetBox["\<\"\[CapitalDelta]\"\>", {22.75, 2.}]}, {{
       LineBox[{{23.25, 4.5}, {23.35, 4.5}}], 
       LineBox[{{23.35, 4.5}, {23.65, 2.5}}], 
       LineBox[{{23.65, 2.5}, {23.75, 2.5}}]}, {
       LineBox[{{23.25, 2.5}, {23.35, 2.5}}], 
       LineBox[{{23.35, 2.5}, {23.65, 4.5}}], 
       LineBox[{{23.65, 4.5}, {23.75, 4.5}}]}}}, 
    {EdgeForm[
     Dashing[{Small, Small}]], {{LineBox[{{23.75, 4.5}, {23.85, 4.5}}], 
       LineBox[{{23.85, 4.5}, {24.15, 2.5}}], 
       LineBox[{{24.15, 2.5}, {24.25, 2.5}}]}, {
       LineBox[{{23.75, 2.5}, {23.85, 2.5}}], 
       LineBox[{{23.85, 2.5}, {24.15, 4.5}}], 
       LineBox[{{24.15, 4.5}, {24.25, 4.5}}]}}, {
      RectangleBox[{24.35, 1.1}, {25.15, 2.9}], 
      InsetBox["\<\"\[Phi]\"\>", {24.75, 2.}]}, {{
       LineBox[{{25.25, 4.5}, {25.35, 4.5}}], 
       LineBox[{{25.35, 4.5}, {25.65, 2.5}}], 
       LineBox[{{25.65, 2.5}, {25.75, 2.5}}]}, {
       LineBox[{{25.25, 2.5}, {25.35, 2.5}}], 
       LineBox[{{25.35, 2.5}, {25.65, 4.5}}], 
       LineBox[{{25.65, 4.5}, {25.75, 4.5}}]}}}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{25.875, 0}, {25.875, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "230.`"}],
       DisplayForm], {25.875, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{26.1, 0.1}, {26.9, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {26.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{26.1, 2.1}, {26.9, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {26.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{26.1, 1.1}, {26.9, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {26.5, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{26.1, 3.1}, {26.9, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {26.5, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{26.1, 5.1}, {26.9, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {26.5, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{26.1, 4.1}, {26.9, 4.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {26.5, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{27.1, 0.1}, {27.9, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {27.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{27.1, 2.1}, {27.9, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {27.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{27.1, 1.1}, {27.9, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {27.5, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{27.1, 3.1}, {27.9, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {27.5, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{27.1, 5.1}, {27.9, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {27.5, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{27.1, 4.1}, {27.9, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {27.5, 4.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{28.125, 0}, {28.125, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "280.`"}],
       DisplayForm], {28.125, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{28.35, 2.1}, {29.15, 2.9}], 
     InsetBox["\<\"Ry\"\>", {28.75, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{28.35, 0.1}, {29.15, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {28.75, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{28.35, 1.1}, {29.15, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {28.75, 1.5}]}, {
     RectangleBox[{28.35, 5.1}, {29.15, 5.9}], 
     InsetBox["\<\"Ry\"\>", {28.75, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{28.35, 3.1}, {29.15, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {28.75, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{28.35, 4.1}, {29.15, 4.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {28.75, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{29.35, 2.1}, {30.15, 2.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {29.75, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{29.35, 0.1}, {30.15, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {29.75, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{29.35, 1.1}, {30.15, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {29.75, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{29.35, 5.1}, {30.15, 5.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {29.75, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{29.35, 3.1}, {30.15, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {29.75, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{29.35, 4.1}, {30.15, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {29.75, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{30.35, 2.1}, {31.15, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {30.75, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{30.35, 5.1}, {31.15, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {30.75, 5.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{31.375, 0}, {31.375, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "282.5`"}],
       DisplayForm], {31.375, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{32., 2.5}, 0.1], DiskBox[{32., 1.5}, 0.1]}, 
      LineBox[{{32., 1.5}, {32., 2.5}}]}, 
     LineBox[{{32., 2.5}, {32., 2.5}}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{31.6, 0.1}, {32.4, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {32., 0.5}]}, {
     {FaceForm[GrayLevel[
      0]], {DiskBox[{32., 5.5}, 0.1], DiskBox[{32., 4.5}, 0.1]}, 
      LineBox[{{32., 4.5}, {32., 5.5}}]}, 
     LineBox[{{32., 5.5}, {32., 5.5}}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{31.6, 3.1}, {32.4, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {32., 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{32.6, 1.1}, {33.4, 2.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {33., 2.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{32.6, 0.1}, {33.4, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {33., 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{32.6, 4.1}, {33.4, 5.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {33., 5.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{32.6, 3.1}, {33.4, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {33., 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{33.6, 1.1}, {34.4, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {34., 2.}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{33.6, 4.1}, {34.4, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {34., 5.}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{34.625, 0}, {34.625, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "282.55`"}],
       DisplayForm], {34.625, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{34.85, 1.1}, {35.65, 1.9}], 
     InsetBox["\<\"Ry\"\>", {35.25, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{34.85, 0.1}, {35.65, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {35.25, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{34.85, 2.1}, {35.65, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {35.25, 2.5}]}, {
     RectangleBox[{34.85, 4.1}, {35.65, 4.9}], 
     InsetBox["\<\"Ry\"\>", {35.25, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{34.85, 3.1}, {35.65, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {35.25, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{34.85, 5.1}, {35.65, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {35.25, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.85, 1.1}, {36.65, 1.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {36.25, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.85, 0.1}, {36.65, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {36.25, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.85, 2.1}, {36.65, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {36.25, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.85, 4.1}, {36.65, 4.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {36.25, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.85, 3.1}, {36.65, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {36.25, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{35.85, 5.1}, {36.65, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {36.25, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{36.85, 1.1}, {37.65, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {37.25, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{36.85, 4.1}, {37.65, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {37.25, 4.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{37.875, 0}, {37.875, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "285.05`"}],
       DisplayForm], {37.875, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{38.1, 2.1}, {38.9, 2.9}], 
     InsetBox["\<\"Rx\"\>", {38.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{38.1, 0.1}, {38.9, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {38.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{38.1, 1.1}, {38.9, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {38.5, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{38.1, 3.1}, {38.9, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {38.5, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{38.1, 5.1}, {38.9, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {38.5, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{38.1, 4.1}, {38.9, 4.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {38.5, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{39.1, 2.1}, {39.9, 2.9}], 
     InsetBox["\<\"\[CapitalDelta]\"\>", {39.5, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{39.1, 0.1}, {39.9, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {39.5, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{39.1, 1.1}, {39.9, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {39.5, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{39.1, 3.1}, {39.9, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {39.5, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{39.1, 5.1}, {39.9, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {39.5, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{39.1, 4.1}, {39.9, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {39.5, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{40.1, 2.1}, {40.9, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {40.5, 2.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{41.125, 0}, {41.125, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "335.05`"}],
       DisplayForm], {41.125, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{41.35, 0.1}, {42.15, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {41.75, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{41.35, 2.1}, {42.15, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {41.75, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{41.35, 1.1}, {42.15, 1.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {41.75, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{41.35, 4.1}, {42.15, 4.9}], 
     InsetBox["\<\"\[Kappa]\"\>", {41.75, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{41.35, 3.1}, {42.15, 3.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {41.75, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{41.35, 5.1}, {42.15, 5.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {41.75, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{42.35, 0.1}, {43.15, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {42.75, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{42.35, 2.1}, {43.15, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {42.75, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{42.35, 1.1}, {43.15, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {42.75, 1.5}]}, {
     RectangleBox[{42.35, 4.1}, {43.15, 4.9}], 
     CircleBox[{42.75, 4.1}, 0.4, {0.7, 2.441592653589793}], 
     LineBox[{{42.75, 4.25}, {42.95, 4.8}}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{42.35, 3.1}, {43.15, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {42.75, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{42.35, 5.1}, {43.15, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {42.75, 5.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{43.375, 0}, {43.375, 6}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "385.05`"}],
       DisplayForm], {43.375, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{43.6, 1.1}, {44.4, 1.9}], 
     InsetBox["\<\"\[Kappa]\"\>", {44., 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{43.6, 0.1}, {44.4, 0.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {44., 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{43.6, 2.1}, {44.4, 2.9}], 
     InsetBox["\<\"\[Gamma]\"\>", {44., 2.5}]}, {
     RectangleBox[{44.6, 1.1}, {45.4, 1.9}], 
     CircleBox[{45., 1.1}, 0.4, {0.7, 2.441592653589793}], 
     LineBox[{{45., 1.25}, {45.2, 1.8}}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{44.6, 0.1}, {45.4, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {45., 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{44.6, 2.1}, {45.4, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {45., 2.5}]}}},
  ImageSize->1395.,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.884025279457281*^9, 3.884025429673992*^9, 
  3.884073462858449*^9},
 CellLabel->
  "Out[2668]=",ExpressionUUID->"ea97f29e-d7fc-408b-b644-2e838deb260d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step-by-step distillation process + animation", "Section",
 CellChangeTimes->{{3.88373840369119*^9, 3.88373842780586*^9}, {
  3.884014690771544*^9, 
  3.884014694461878*^9}},ExpressionUUID->"c3f2ea48-ae1d-4efa-8bf6-\
1368070e1557"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Print", " ", "distillation", " ", "step", " ", "by", " ", "step"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PrintDistillation", "[", 
    RowBox[{"nrounds_", ",", "methode_", ",", "devoptions_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dev", ",", "circ", ",", "ccirc", ",", "moves", ",", 
       RowBox[{"show", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"moves", "=", 
       RowBox[{"{", 
        RowBox[{"Splz", ",", "Comb", ",", "SWAPLoc", ",", "Shutl"}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"dev", "=", 
       RowBox[{"TrappedIonOxford", "[", 
        RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"circ", "=", 
       RowBox[{"DistillationOnTrappedIons", "[", 
        RowBox[{"nrounds", ",", "dev", ",", "methode"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ccirc", "=", 
       RowBox[{"CircTrappedIons", "[", 
        RowBox[{"circ", ",", "dev", ",", 
         RowBox[{"MapQubits", "->", "False"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"show", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<initialise\>\"", ",", 
          RowBox[{"dev", "[", "ShowNodes", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"InsertCircuitNoise", "[", 
          RowBox[{
           RowBox[{"ccirc", "[", 
            RowBox[{"[", "c", "]"}], "]"}], ",", "dev"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"show", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"FormatType", "->", "StandardForm"}]}], "]"}], 
                "&"}], "/@", 
               RowBox[{"ccirc", "[", 
                RowBox[{"[", "c", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"dev", "[", "ShowNodes", "]"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", 
          RowBox[{"Length", "@", "ccirc"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "show"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellLabel->
  "In[2669]:=",ExpressionUUID->"83c7d16c-2505-409f-bf3e-e1247161be48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AnimateDistillation", "::", "usage"}], "=", 
   "\"\<AnimateDistillation[nrounds, methode, device_options]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AnimateDistillation", "[", 
   RowBox[{"nrounds_", ",", "methode_", ",", "devoptions_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dev", ",", "circ", ",", "ccirc", ",", "moves", ",", 
      RowBox[{"show", "=", 
       RowBox[{"{", "}"}]}], ",", "format", ",", "noisy", ",", "fulltime", 
      ",", 
      RowBox[{"step", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"format", "[", 
       RowBox[{"zones_", ",", "noise_", ",", "t_", ",", "s_"}], "]"}], ":=", 
      RowBox[{"Framed", "[", 
       RowBox[{"Row", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<(\>\"", "<>", 
               RowBox[{"ToString", "[", "s", "]"}], "<>", "\"\<) t=\>\"", "<>",
                "t", "<>", "\"\<\[Mu]s\>\""}], ",", 
              RowBox[{"Rasterize", "[", 
               RowBox[{"zones", ",", 
                RowBox[{"RasterSize", "->", "500"}], ",", 
                RowBox[{"ImageSize", "->", "200"}]}], "]"}]}], "}"}], ",", 
            "Center"}], "]"}], ",", 
          RowBox[{"Pane", "[", 
           RowBox[{"noise", ",", "280"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dev", "=", 
      RowBox[{"TrappedIonOxford", "[", 
       RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"move", " ", "commands"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"moves", "=", 
      RowBox[{"{", 
       RowBox[{"Splz", ",", "Comb", ",", "SWAPLoc", ",", "Shutl"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"circ", "=", 
      RowBox[{"DistillationOnTrappedIons", "[", 
       RowBox[{"nrounds", ",", "dev", ",", "methode"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ccirc", "=", 
      RowBox[{"CircTrappedIons", "[", 
       RowBox[{"circ", ",", "dev", ",", 
        RowBox[{"MapQubits", "->", "False"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"fulltime", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"N", "@", "#"}], ",", 
          RowBox[{"FormatType", "->", "TraditionalForm"}]}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"InsertCircuitNoise", "[", 
           RowBox[{"ccirc", ",", 
            RowBox[{"TrappedIonOxford", "[", 
             RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", 
         RowBox[{
          RowBox[{"OptionValue", "[", 
           RowBox[{"TrappedIonOxford", ",", "DurInit"}], "]"}], "[", 
          "\"\<Alice\>\"", "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"show", ",", 
       RowBox[{"format", "[", 
        RowBox[{
         RowBox[{"dev", "[", "ShowNodes", "]"}], ",", 
         RowBox[{"DrawCircuit", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["Init", "#"], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "5"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["Damp", "#"], "[", "1.", "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "5"}], "]"}]}]}], "}"}], "]"}], ",", 
         "\"\<0\>\"", ",", 
         RowBox[{"step", "++"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"noisy", "=", 
         RowBox[{"InsertCircuitNoise", "[", 
          RowBox[{
           RowBox[{"ccirc", "[", 
            RowBox[{"[", "c", "]"}], "]"}], ",", "dev"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"show", ",", "\[IndentingNewLine]", 
          RowBox[{"format", "[", 
           RowBox[{
            RowBox[{"dev", "[", "ShowNodes", "]"}], ",", 
            RowBox[{"DrawCircuit", "[", 
             RowBox[{
              RowBox[{"Flatten", "@", 
               RowBox[{"noisy", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
              RowBox[{"dev", "[", "NumTotalQubits", "]"}]}], "]"}], ",", 
            RowBox[{"fulltime", "[", 
             RowBox[{"[", "c", "]"}], "]"}], ",", 
            RowBox[{"step", "++"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}],
        "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{"Length", "@", "ccirc"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "show"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8837383987963953`*^9, 3.883738401478146*^9}, {
  3.883738439977435*^9, 3.883738443439444*^9}, {3.8838142075526867`*^9, 
  3.8838142302616053`*^9}},
 CellLabel->
  "In[2670]:=",ExpressionUUID->"2dc02453-c30c-4171-84c2-3faa7e72a7d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "*", "   ", "Render", " ", "the", " ", "steps", " ", "into", " ", "GIF", 
    " ", "animation"}], "   ", "**)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"picts", " ", "=", " ", 
     RowBox[{"AnimateDistillation", "[", 
      RowBox[{"2", ",", " ", "1", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Nodes", " ", "->", " ", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Alice\>\"", " ", "->", " ", "3"}], ",", " ", 
           RowBox[{"\"\<Bob\>\"", " ", "->", " ", "3"}]}], "|>"}]}], "}"}]}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<distillation.gif\>\"", ",", " ", "picts", ",", " ", 
      RowBox[{"AnimationRepetitions", " ", "->", " ", "1"}], ",", " ", 
      RowBox[{"\"\<DisplayDurations\>\"", " ", "->", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"Length", "@", "picts"}]}], "]"}]}], ",", " ", 
      RowBox[{"RasterSize", " ", "->", "600"}]}], "]"}], ";"}], "\n", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<distillation.gif\>\"", ",", " ", "\"\<AnimatedImage\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87706348871129*^9, 3.877063523331842*^9}, {
   3.877063624751903*^9, 3.8770636394484177`*^9}, {3.8770636844535418`*^9, 
   3.8770636847284603`*^9}, {3.877064470203786*^9, 3.8770644712416*^9}, {
   3.877064720429151*^9, 3.87706472179109*^9}, {3.880183327151959*^9, 
   3.880183328373454*^9}, {3.880183761081605*^9, 3.880183762738824*^9}, {
   3.8801839218959723`*^9, 3.880183922918253*^9}, {3.880184340087482*^9, 
   3.8801843409323273`*^9}, {3.880187617128743*^9, 3.8801876202893667`*^9}, {
   3.880188089384716*^9, 3.880188090402269*^9}, {3.883497219171834*^9, 
   3.883497264048298*^9}, {3.8837391017430143`*^9, 3.883739101743507*^9}, {
   3.8837391558741713`*^9, 3.883739156525214*^9}, {3.8837392062881613`*^9, 
   3.883739217522626*^9}, 3.88382215984439*^9, {3.883839867118671*^9, 
   3.883839867277421*^9}, {3.883841121842902*^9, 3.883841122222978*^9}, {
   3.884014221939262*^9, 3.884014242834508*^9}},
 CellLabel->
  "In[2672]:=",ExpressionUUID->"453edd7e-2e6c-43ba-9600-7935556a2771"],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{Image`Utilities`i$$ = 1, Image`InteractiveDump`play$$ = 
   True, Image`InteractiveDump`hover$$ = False, Image`InteractiveDump`dir$$ = 
   AnimationDirection, Image`InteractiveDump`rate$$ = 1.}, 
   TagBox[
    OverlayBox[{
     AnimatorBox[Dynamic[Image`Utilities`i$$], {1, 35, 1},
      AnimationDirection->Dynamic[Image`InteractiveDump`dir$$],
      AnimationRate->Dynamic[Image`InteractiveDump`rate$$],
      AnimationRepetitions->1,
      AnimationRunTime->0.,
      AnimationRunning->Dynamic[Image`InteractiveDump`play$$],
      AppearanceElements->None,
      ImageSize->{1, 1}], 
     PaneSelectorBox[{1->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
gf3HPveDp2vXfhrFML7x0OU7Dsu3f/HhWz93vTtd+OjXH/9ff/FMFH3J7o8v
ffjPHtOk1JcmOP+lhz/2zfJ3SpdblyQHQ/blkYNNAtSD/c1Bn0tGoVAoaDq5
XG5mZmaIwwCGIob1YLX2nDJIAfFbn73px6556+cf2vnRpT4O4MGnrr7nT0vW
uPu3XVAQ3//olT52p8BVyLZ2ZBfev//ok5evuZcnB0P2FWkO6uVjl5WDtk/N
nYPZbNb/nlA/vdvJlCOi8k1TK5VK0XUBxFPccvDhS1dVJbmjofVHN33q6Im+
9K5UUjnWqSOnu//5w6f70t12/mmPeVlfKkjzjz/r3IUcDNlXf3Owp+2iFprK
Fz/HgRn69wczmYzPf7ZO+LwoEipWOXjl6nOqlbxTycmLu7/3VMiuf1yp2VZQ
P91966GwVeHXHqz6mZp+NCqnKiQHQ/bV3xyMznBzUIGuAfg/z2Zb5CASKlb7
B+84LPtJJSebFGRhul748iP+u3vr5x8K05dyTenmf2rv+dPnN0+RgyH7Igf9
2Nvb00Md7GOiDnIQCRWfevDBp662ptIr3vbBF730la969yfahsWH/+yxwP3u
/2VzdfaPP/3Dl/2T+RdN/NLffMu728bTnfcF3zuj+za19to/+Nr4r/6mZqc5
tu3OKlByMGRfqcrBmE8BiKf45ODd33uqNQte96l7FYJ/5x3/sVPdFPjjox/9
+uNNrb3mk199/fq3prceOHn7R37xH721tS/Vj4Gn2boX8o2f+fFvbn5f3b38
Te9sG/Qaoe7o8xQD5GAnI5ODpVKp66duSCIggPjk4Pv3H20bdr9y7r91ykH9
fOOhNt818MNji+gb7rzvxa96TdvYbfowp08/rtTadqccVPiqAv2Hd+y03vq2
netbYqkHQ/Y1Mjk4sEaAtInP/sH5L7X/hIx3DtonOa0qtAM8Opr+dF+jOOvU
oH5+5mdf2OmmwhPPt/DTa1f9d3f/o1fa5uBr/+BrqgRf9NJXqjZsvfXWz/2k
Tg6SgwNvBEib+NSDc1/oOQcVLtv56zlYKBQWFxeXlpacDUeKdf2pK4+Pj+0a
O3KUrqxWq48+0z4HlUc/O/ZilWmdcvB7j13/RsPu7q41fnh46DRu19ifSkDr
6/z58/rzWw9d8YhddfeSX3kDOdgWOTj4RoC0CZCDFxuaPlpWbQgwACcH37VX
as2C6a0HVDG94m0f1IW2IbL/l0E6Vf3YKQRf88mvqq9OUfh4Nch20fzjz7bW
g7+x8pU3/PH96mhi+l9mfud9rX3pjUGdHCQHAUTMZw5euHDB+aza0dGR6iA7
qrBjZWXF/4H93Zwc/MS3n2gNi597xa/+tV/8W/p50Utf2TaYHr50NUCn9Xax
m/3gp60v/ajf1r4Cf3WiWnuudWq//pH/8ZJXv1bzOnn7R9pO7f37j9bJQXLw
hkql4hy+Jp6IciSUz/2D2Wx2YmLC2eGl0s/JQRWGBw3uIzKpYDw+PnYqRPuz
dQ9a3ZWD3hsP224UDfMBztyft/l4qvfPHYfBv13V+vHUrj+f+8H1Tb7kYMi+
RiYHOR89EBE/9aACbqVBr0S7xp2D9jZ1bW3NOdno4uKi1t57e3v2mf/z589v
bm4qKCcnJ1sbd3+Pvu2mUY+fYBtFzZOXr3U9olpT7AauPeuNTaM9Tc02itbJ
QXLwBnIQiIifHNStCkHF3Llz5+wadw6anZ0d+4yKQlMNum9SIbnc0Hbt587B
7z32rP+DrthmwzB2fnTJfzD90XeeDNndJ779hP/MdU51QQ6G7GtkctDP+eiH
ixxEQvnJwWw2e3x8nM/nnVVKrVZrOmO1ctDqQZWHzqlb7PD4WunZFlHv7aJm
98eX/BzrbOHLj1Rrz4WaeYPSzU8whTlwjVun70g2/bgPXEMOhuxrZHKQ48kA
Eem6f1DvQs+ePWuXVQPaplEl2vT0tMpDZ0upUw9KLpfTXayK1J8HBwdaUl00
lZCm9bxLXy9WvbdYKpWuXO1DCD4/2j9/yjt5w1eCjtq1n3pXhRpJ01mlyMGQ
fY1MDupd5f7+fshGALSKz/cH3VTrKX3sBExN20IDH0DGw8OXrt5xWG4KXzt+
qfPF+T763mPPquWm8L31cz/52DfLrcerIQdD9jUyOTiwRoC0iWcOOhRD33ro
ytcerCo7gh3TrCf5x59VNaofdRfRie8dynr1or6U7O4TDjYhB0P2RQ4C8Bbz
HAQ5GLKvnnJwuELO1JmC97wC39rTHYEEGfrxRQuFwla/bW5u9r3NIfLzMPbU
oD0+TY/S3t6ez6ds84bAM/L/pkv/loF7Mblczmdfxv2ZrsH/Dq9TO969dB1D
4DsC8Tf0ehCAH+VyeVhvVoHRRg4CiRD/79EDCUUOAolADgIRGfr+QQB+kINA
RKgHgUQgB4GIkINAItRqNefwTQD6KJ056HzM2/157+c/AX7j6/NNHwXXA6VH
yc4vH0+tc2m93Prn9PT07u7u5ORksViMui89gIeHh/6/POi/r7af2z916pT/
Lw8CSK0U7h+sVqsbDaurq8vLy1o525fU5ubmKpWKnSxD6+pCoZDJZNx31GMV
2xxUEGhemosGOTMzs7+/r4BTtGk69kW/nZ2dUqk0Pz9/fHysgGi6u94FHRwc
+Oyr2pDNZuuNY7Ar2s6cOaNr1K/aWVlZ2dvby+Vyemx1Qf9a7vuWy2UNzP+8
rK/x8XFNUL81O4vR06dPa8Ca79HRkZ7HtbU1PYl2ni+jKasvchBAVymsB7Xm
XFxc1IXZ2Vm7ZmFhQatNO9n3xMSELmiVO9HgvmOcc1AUOsogpYYFjaJwfX1d
T65FpCW+zctixbljPp93ThHikx4H3csJNVWU+v+xU5AoZ9WvrrcHUIHlvqMe
Q4VmT1+71tg0fvVlJzSxYLUBa45K+ampKevLeULVvh0EXjloJz0BgE7SloOq
iZx6RPGnlbnqPk3fnYNa6yoo9VsLO3esXfupCh+tXeN56Ayt850sU9Bo5a/i
SMnozkE9xZqm/nRvArX6UQv470vNKunqjWJNpaV+K3/VjuWgLujWpaUlhVTT
Y6jLNjB7qP1Q9tlJFtSUCnYN3sLOflsO6nnUexvLSueO+YaxsTH/OdjXY6QF
4XOcfqbgMTXvWffxViAp0paD29vbk5OT2Wx2dXXVVq2avi6ootFqs36j0NBi
ShPnvMP1RhVpd1SgDG30nalAs+HpedRElPU2Tj2zloNbjeOzadaal3tbpYop
3Uv39f8PYB3pt1rW/49asA2S1qzeV1hTZ8+e1TDczerdhbOwT1reuqs3zuel
wdvx36ww15Oys7OjYahl9dV6aLietsFqTT7Ew6l1zRG9e+l6sFlnCk26HjAt
oqOxAYmQwv2DQFvDrWi69h7/8/ACCZW2ehDoZARyEEAA5CBgyMGQqEaRUOQg
YOKfg01fQokbchAJxf5BwMQ8B+NvBKaAdKIeBAw5GNIITAHpRA4CZgRycASm
AAweOQiYEQgRkggIgP2DgIl5DtZqNfcBc4I1AqAV9SBgYp6DfI8eiAg5CBhy
EEinoefg1tZWHp35/Or0+Ph4yI78n+NVK9uQffk/BWH4efk/9dII5CCAAIa+
f9CO/4xOuh5a2Sgvoh6JI3xe9JSDIfsamRwsFosxz0GqUSRUHOrBTjfVSsXy
F+965O479PNo7r889c2vRDqSyz86fuye9ee72/7UM9//RqTdXfo/X390+5PW
nfq9fPGBtouRgyH7GpkcLJVKm5ubgxlMMOQgEiqeOVh94OiRuy7Yz8N//O/1
41wufebjz1253N8xVO79vNNd00/5S31e8zxXqz3+hTubZudMsDXrycGQfQ04
BxVVPZ3sqb+9D9cITAHpFMMcVEw4udDpp1P11Ktrl59RpenR0fWR3H3H1aef
7Et3tcd+4j0v/VwPetcJ3cjBkH31Nwe3t7cnJiY8Fsjn885LSUseHBz0sfeY
G4EpIJ3itn+w/MW73PWRx8+VBwshu1bceIegOwqVmCG7u1p+pGtf9qNROfci
B0P2NeAcdBt8DsZ80y4QT7GqB5/65ld8JsX1n7vveC7cibDLX/nv/rt77E96
OIt6W34y10ne8u7ddi9yMGRf0eWgxra8vJzNZjOZjF5Edlp2Z7vo4uKiGtQy
Wn5jY6MvvUfXyOzsrPOftrKyMj8/H34wQFLEJwefu3L5+odGbk6Eb628b+eD
C/etvr9tWFTu/Xzgfp995C+aGize+ZF7/9O71d3/Xj7btiCtPnAUuLtnvv+N
pjZ/9Ecf3Pvov1F3mmPb7mxjLDkYsi+PHCzfzM+89DJx5+DMzEytYXJy0j7E
4t4/2Gs96B5MsaHpGrXWNOamxQI/NVoDKLjrjW9naNhdD1zTVrlFsMEAAxaf
HFRStGbBG0//0puyv/yfb/unnUrCwP22fjZGkfTb/+BVq+94yyv/xl+/6z1z
rd09/oU7A3f36Panmlq75/fmP/DP3/Dxt7858/Mv3v8PS63dVb52/RkhB0P2
5ZGDJ1p0bc1dD+rC7u6uXdYraGlpqR4uB73poVAvXRfz2V0TvfynpqZ0QYMP
vIukX4MBBiw++wfLu3e3Dbs7l97aMQfvuvDsQ/83WL+lT3+sU5uq1F798l9o
e9NPr10N0Ne1p59o25oq0B/+4e+/702vU/h22hJLDobsyyMHj130QghQDx4d
Pb+JQK8g25YYJgfd41HC6r7ua/b395WDxzfb29vT9e5Z+OyuSaFQ0HRyuZwq
3GAt1G9+PMMMBhiw+NSDWu0HyEFnW6VtnnK33HRN7Ya6bYPtvHvu9acyX/53
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
AAAAAAAAAAAAAAAAAPz6f86PzxE=
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 2->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
VzvGZAC6GPwggImqg165mZycjD2lsJuUSiWlMTQ01NPTMzg4mM/n400JoCvB
D0Jq0cd+fn7efY1wVXB8fHx9fV0T+vpouskccrnc9PS0OydsUeVyWdq3vb29
srIyMTFxeHiYyWSayWd2dlaqWnWUHmkNVbXUew27OwBBwA9Cahl/NRFKmJub
UxsuxZEFkwyF3VyOz5uAVGx4eDhyPtLQQqGgiZmZGamGJsbGxsLm401pZGRE
SjqeJMIeE4Ag4AcBIrO8vHzp0iXpzuLiYoTN4/1HUrK1ubmpCYnp1tbW6cnx
wMBA2HyS9icpQBvADwJEZnd3t7+/f3R0NNrm8YqOvYYpc9rT01OpVGYdwuaD
DkIKwQ8CRGZ/f1/CUSwWo20er+iUSqWxsbFsNtvb2ytvaK+Rhs0HHYQUgh8E
MFElYGFhQVudnhxHrjTy0npcvnw58m2i6CCkE/wggIkqAfri3P/Ag63Ix0TV
QVnCZr7LPEoPKQQ/CGASaYWSlg9At4IfBDDoIECKwQ8CGHQQIMXgBwEs/DUG
kE7wgwCdImmOL4GmGKAN4AcBOkXSRAcdhHSCHwToFEkTHXQQ0gl+EKBTJE10
0EFIJ/hBANMhCWhFfzLNgA5COsEPAphESkBH8uGmWUgh+EEAgw4CpBj8IIBB
BwFSDH4QwJzTQfu2pjh6FzW51P8iZL18/IuNMVuAlIAfBHBxhak9OhgtH3QQ
IF7wgwDnsQJU06/5LGpyabR8WpctQErADwIAQJrBDwIAQJrBDwIAQJrBDwIA
QJqxOri4uJjL5fIAAAApY3p6enZ29vTkeAsAACCVVCqVqseICIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIJQ/D8EqmNJ
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 3->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQtsZfld39OO1ILBaV0olhzVCrFGEYoUqyMeFSYWtBpSTAz1Qq3SiKK4
zQQj5IoJdZiGTtSEqZATRwxRJoSqboKxkphog0lxcIiVYppBmeAlybIhTqhD
DM7uetf78Maz633k9rv3x5yePa/7P497Hvd+Prq6Ovfcc87/d37nnN/jf/6P
75z7j3dd+rsvetGL3vhN+rrrdW/6ocuXX3flJ/6hfvzrhTfOv2Hh9f/hRxZ+
8fVveP3lfzZ3Tivf9Hde9KJ/o+2fXwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIByaAEAAPQx
t27dmpmZeS0AAECfMTs7u76+/ta3vvX69ev3AQAA9Bl33323vKH8oBaqzkoB
AADK5t5778UPAgBA36KUED8IAAB9C/kgAAD0M+SD0Lfc62Nzc/Pg4CB5+1u3
bu3s7Nj2Wtja2rq3Cra3t1W0nlwt37x5U5Iki318fLyxsWH77u7ualnf5Yut
QmVkvJ9aPjk5SZZcZ6oTtO11yvpZvthWtP+66zZIFls3km4n214b+8+6TKQ6
/3V3sfASWwLbLlr2lF8y/qKl/L29vWSx720/FN7uHU8z8gj4QehPzr2QxcXF
5O3HxsbO1Y/BwcFksVdXV6uWMZqONkenVrWMEZw/fz5Z7Pn5+apljKZj4KFt
qu7LHsH09HSy2JOTk/7tkzeOhHwQ+pYTHxMTE3oKkre/cOHCtWvXbPujNidV
4C9aPm54eDhZbG0zMjJi2ys3PDw8rETsQNESe319PVnyoaGhtbU1274mCtdN
olslWeyrV6/KMtv2NVG4FuTjlBUmiK1ztG1sF/3UESqR3F+03NPc3Fyywmdn
Zy9duuTtnrxxJOSDAELPkR6E5G1kljc2NsqRxxE9vx3jfJnlixcvliaSI/IU
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
bLuqeQ==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 4->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
SVK8GQHcqZoH7U7R4GNsU174VT09ssMpmdIUP9Iyx2BGO9fW1pZ+MUY6rDTs
gyLqCWiHy+4RtXjxQeFyR4zKNfzJb91a3TS7DxofN5S8477nwgvPoA+urq4q
ecU4TNSFeO0jSfrx7F0MgEeq5sGlpaXx8fHwmPDeTjE/P6/+v7+/X8sJT2bz
YHhKfT1bi+h70dHRIQe04/XzVSOVOjXe5a+NEh+U4ySxwifOvRJemi8fNMXb
rMf+B1Mz2pvJBjS9D4rCc/H/KNRnYP/qq+GlZdAHj5W06QHwRYNeT+bwyPc+
FHkH6R33PWsPQQnj0QdN0aPf/bnIB0OOfXbnyuu7dJMNHxTaIjF2Kf/mjb93
w+CDfkmbHgBfNOj1RY8c/+VnL4/+tVMXqrR1z99dOHIhfn3Qcv9TFx2vvz3y
6WfvffLof1Iy4oOWDz3yomOU1hZXijxyIfigX9KmB8AXTZMHAz5/9pIi2JF3
87n9r67vPVt4/KWDa6+Vm/04fNAiN3zXyvNHdu8S9s4Hdk5vvVxh9kz5oCke
a/Thx14qt8db21db2Z4nWI5G90EAqA2NmAdzudyKA/f85X13nvzk+NzpO/7X
JybmT+c/tvyZzz5QeZbV1dWEPlhVlTRYYVIVCHN5O0l8cHp62mUVMUh4qasT
J064rEVNZLejHtV0akCXufDBqHD/QcgmjZgHAbyDDxp8ELJKI+ZBAO/ggwYf
hKxCHgQw+GARfBCyCXkQwKTSB+uix/v1ZBKCD0INIA8CGHzQgbTpAfAFeRDA
4IMOpE0PgC/IgwAGH3QgbXoAfEEeBDA3fLD2VVlSOXkVxFd+X5Fe9aLHo1qA
Y4I8CGBS6YMV5FV4NfaMkXwHH4RmgjwoTp48OTAwUHJbjbqzt7en7dLX1zc2
Nhb79m3HxOTkZG9vbwqFmeJtTXp6euLdeyi4PUotB+IpjPSSy+ri6Ykt6fj0
AESFPCiWl5f19vv7++st5HVsbGysrq5ub2+fOnWqq6ur3nJex5kzZyRsbW2t
s7Oz3lpKyeVy7e3tx3QPPgBoPhouDx4cHMwWkebW1tZCobC1taV+T9lEfbJ9
F0oro6OjQ0ND3d3dIyMjpnjJZVmJhpX7jvQ7mU5yHwyE2V06m5ubEqaY2dHR
IavVGA0rqgwPD0tqcGVODWsT9BUpt2S900hXywyjGSXJCrN3Bpd/tbW1TUxM
6NFeT1XvXarUPhKjdGyKHwzJlmC1m4z4yCXLCjVNPFWmeIdKK2xqakoNZYr3
spQAbUo9tbeh1PLla2ofKbfX9NajnUbCFhcXS5apRVl3xgcBwJHGzYPqxtWL
muI9C6zLyCKtX8gH9Y7sZOo/TXHPp3xnp4gscn19vWRpXnzQ8ta3vtU2pjpq
6zJyantLbvXe6upNcZ+P7fllPVq1Om0JK+cpcgov+2ylwVqJVm33Z2qlNtDp
vS8tLZni58HasfxaPm5bTMJKXFizy+vV2lVvmlwVbTVp0HrDwtSA+hljx1hH
06Ma9uDaaxpjValtS250rnbWxjXFnxb4IAA40nB50CJfs0HPFLv34CYR6gDV
M9tQYMdYH9TEchN7G4LV1VX1oiUL9OWDcme5sLlhynZkMCwflAA70t6kSYlV
BhTcIuHwAuWbg4ODyYXJVoK7L0mMJFlh1o713q2jqSXlgKZoQPp1obayLWan
L0HmGLzH2GjVNtbJAYO9rFqd/VUQWLB9VY8SFjRXsJUtakxrf5ry8CYGADiS
RsyD6v1sX21RHrTi1XnKXGweLPFBuUngm0ciH6x8W0MXJCMs7LbbbrMGrWBl
k4tiXYkPSnyFWxfJuyvcoc8dbV/rzpYj86CVKje0b0GPsj87fYkJBk81oFSY
5FCZ6enpmZmZsDBrZOE8GPZBDdxy881nz549UpiWNllEbaumPtK7AQBKaLg8
qH5S1qaO/a4i6re3trbsP1nqJ+3OvcN5UF2inKi3t9dOVtJ1q+eUEWghMp0k
+9PCwkzR/gJhds/t4TxoiuFFfb79GzG8NG0RTSP7tv/cxRZWKBS0nECYbOXI
/wdtHgx8UB8MedDo6KhWXbL7Ucat5DUwMGDlxVMl1tfX9d6tKjm+Cf0/qKaw
eqTB2plkWx/U27F/Bysml1s7+0UBwJ1GzIMAAAC+aLg8CHBM+Do3PNKZ4+6S
aqYWIGuQBwECkpyKHuPVqh5Uez3YImQQ8iBAvUib6eCDkE3IgwD1Im2mgw9C
NiEPAtSLtJkOPgjZhDwIYLj/4I014oOQQciDACaVFpA2PQDNCnkQwOCDABmG
PAhg8EGADEMeBDD4IECGIQ8CAECWIQ8C1Iu0Jb4UhmKAGkAeBKgXaTMdfBCy
CXkQoF6kzXTwQcgm5EGAepE208EHIZuQBwEM15O5sUZ8EDJII+bBlpaWdmfe
dOutbW1tGrCPlsNjAuz92eNx5AJLsNNYVXpUlegpt5C5ubnYwlpbW91bLBJa
cmxVJsqmtG1lm8uR/f19dyUptIC06QFoVhoxD/b19VWe4Nqlvf0zX929f2Fn
4beDeuH0/MuPrl29+FLl+7Il9MHKE2jtl5788u7yqbCwc5+65+Jj63qp8rxJ
fHBhYSH2vJXZ2NhIMvvw8HCFV7Wlru2d11Z74RNz4RbTltX2fXX/YuWFZ9kH
1bDz8/MexQA0MY2YByv44Cs733j+3ny4zzyyLj2xUc4Nj8MHta7L3/ja83/x
+8995LcqC1P3Xk5YpnxQjXDx8S9W3Y7P/+WHtMXLLbwGPtjR0aFvkB0eGhqK
OntVSbHn7ezsDIQBQGWaJg8qOChYVe05v1WLd1/5x68fXo53Hzw4v6Mo6i5M
dnlw7pnDy8mOD+o3g7aOY3Ppp4Xy9ZFpuqoPaltvb2/r8ezZs/F8sL+/f2lp
SQN6HBgYiDp7WIMe9WXc3NwMxsTQo9nVpF1dXS0tLXqcnp5Oomdra6tQKITH
2LYKHsPja/MY9e0AuNAceVCOFsEBQ7X38AMl+cuvD+5//avxhL38lf9bsqiM
+OCFhz4dr8WubD9VsqiqPmi9L6gY+qempvQbcm9vr7u7O94np0RDEj0SIO9b
W1s7deqUwqlUKRV61JOGivp2AFxogjwY22tsXVh73Rv36IPysiTC5NHhpTW9
D+oHyYsPfjx2cykYXn76yfDCq/rg2dcTQ78cZ3R0dHx8PN7WUcceFqDwpUAX
W49kzM7O2gH9sjUO/6Qf1hOWJDGSdDZNRG0TABcaPQ/GToLlHMeXD+6fSeTO
h1Nh0/ugkmDV/0+rVvjvwkj/D1Y+eqocevvt7e29vb0x5jWv/wcwnoAwPT09
KysrGsjlcqurqwcHBx0dHVH1WEkVxAQv1WUA4Dho6Dyoju75v/j95Haj7jf4
r9CLD0pYclW2Dl7Ytstsbh/08rPhei3e/eorl7+5zCg+GI+dnR0Zh0JTvNn9
7ugbGhqyO2lbWlp2d3cnikTVw75HyCANnQdj/5d0ZP9pf3N68cFzn7onebSx
pUXZZTaxD8q5XI7ydSx9KuzCa+CD+XxexqHkFW92v6aztbWlr0ZnZ6d8UNlQ
2mLowQchgzRuHjw4v+PNBIuR8NIT17v05D549cILfoUpK5mm9sGXv/KQ3xa7
dmnP1OS8CX1xBgcHo84VXmnsV8sxMzMzNTUVWw8+CBmkcfPg3sMPVO4Pv/zB
O+fG3/6On+2dGPwppy70o79rfPjguU/+ceW1fOzOX3rPcP9/+Xc/IXnP/PkH
qgrbXT5lmtcHFcMrnyXx1D2//qfv/sVf+fmfVovlx253aTH7h282z6PXt6OB
vssAaaBB8+D1zrNaZ9ja2npr680/0PGdb37jP3WMEopy29vbsYVZH6y8Cjmg
hN3+th+RO0te1/d81zf+7DeqCru2d75ZfbDqkU4fmfzPP3zb97xz4CdV2pRq
MRcr1Cckmz4IAFFp0Dx4cO6Zqj3h/5t/73Mf+S3ZjbsPXnxsPWEerLpTVCk1
MD4lHVmh4mFVYftfe6RZffDlR9cqv/ew62mbyh0UDyvPou3+6iuX8UEAcKFB
8+Dlp5+s2hPaAfngd72x1dEHd5dPJTlHST748iOrjuuSQpU8Oj92e9WJX1r/
TLP6YMllYKv+tpE7VP3loIZ9Zecb+CAAuNCgedDxyAqbB990662uPe1Hfzdh
Hox0bbcHPzChvk59e9Upzz/w0Wb1QcczX374tu9RKT6/c+AnXabXJ6QGx4sC
QBPQoHmw6kEyYR903y+qSpgH3c9n/Ic/fb969fcM97tMrKDarD7o2FzKgArO
P9DxnT/+r77fZXol6PT7YNoSXwpDMUANaNA8uPelz6XUB//yQy5r+caf/YZU
uR7Iig/e2JrP/PkH9OPBpd30SwkfjAo+CNmkQfPgxcfW3X1QPad7Z5twv+j5
Bz5adRXqzGWC7/jZXvdz7V988OPN6oOOvxyCUh68/W0/UvWQ0UtPbOCDUcEH
IZskyYMHN3C8+p+vr5h80OWyovZAFHuwvWMfKxdLmAfV/VaVJD3qye2wo5u/
/Mhqs/pg1Wtrf+zOX5Lr2TD45Q/eqU+Ry3mX1/bOp/84meM4jz4J+CBkk9h5
UPanr4z6sYGBgdbW1p6enqqzePRB9XJV7aO787vDd2xxccPLTz2eMA9WPbFR
vvwd3/6GsLCqe/nsnRSa1Qcr/3Kw2zFoMQ045mhtiL29PXclKbSAtOkBaFZi
50H54C033xw8HRwcXFtbqzyLRx/Uo8v+NJu53JPXtUt7CfOgqXYefYkqR22v
vnK5WX3Q8fp40Tbl4t0mq9eTAYCoJMmDLS0twdPR0dHV1VU7rN/hMlYlxMnJ
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
ALxDHgQwqdwvGgNrPYuLi/H+jPPbCMvLy729vRpYWlqyHprP52NI8qUHoBzk
QQDTLD4o2tralCsVweLp8SipUCh0dHTs7OxMTU3NzMzoaXd3dwxJvvQAlIM8
CGCayAdzuVyM2GXx3gjqWGTK9iCZoaGhzc3NGJI86gE4EvIggEmlD8bQo8yl
uVZWVmLr8X4e/f7+fktLy97eXmxJ8WYEcIc8CGCaxQdXV1eVvGIcJupCvPaR
JEVU72IAPEIeBDDN4oPHStr0APiCPAhg8EEH0qYHwBfkQQCDDzqQNj0AviAP
AphU+iAA1AbyIIDBB4tw/0HIJuRBAIMPFsEHIZuQBwEMPlgEH4RsQh4EMPhg
EXwQsgl5EMCk0gfrosf79WQSgg9CDSAPAhh80IG06QHwBXkQwOCDDqRND4Av
yIMABh90IG16AHxBHgQwN3yw9lVZUjl5FcRXfl+RXvWix6NagGOCPAhgUumD
FeRVeDX2jJF8Bx+EZoI8CGB57drV2g9E1eb31agyvOipMEFsPQBJIA8CAECW
IQ8CAECWIQ8CAECWIQ8CAECWsT44Nzc3MjIyBQAAkDHGxsYmJiYODg5WASBN
rKysOI48pnUd64x1WSxAOXZ3d+t18hRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFpbn+P2IQsoY=
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 5->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ9sNOld348kOHEKFjkprrIoK2HKUqPUFTWCvLrKFDY1CRulYK4miQmp
UzDUCLdsIkemwEkksoiLXGRhqluUVxjq0rgk3OVwoA41kS9RimkcLmHT64Y7
616I717nsrn37j2/53vfu6ffdx7eYW7XOzszO9593p3PRz+tZmefmec7Y+98
9zt/v+09/35q7mV33HHHe1+ll6nZ9/9AuTy79GPfojf/euG9/+5nFn76p96y
8L6f/pmfLr/xPS/XyPd/wx13vF3tbw4DAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtMIAAABkmP39/ampqRkAAICMMT09
vbW1dc8996ytrVUBAAAyxsc+9jG5oXxQA71OpQAAAN3mi1/84rve9S58EAAA
sonvg/fff3+vtQAAAHQb8iAAAGQZ8iCAcPOSpZCW4fPp5NPoayn6p+ekByAV
yIMA5tamuPuddrnHcBy0Idf0QF9CHgQw+KAHPgjZhDwIYPBBD3wQsgl5EMDg
gx74IGQT8iCAcdIHe6InpNOeWBI+CF2APAhg8MEIuKYHIC3IgwAGH4yAa3oA
0oI8CGDwwQi4pgcgLciDAAYfjIBregDSgjwIYJz0QQDoDuRBAIMPenDdBGQT
8iCAwQc98EHIJuRBAIMPeuCDkE3IgwAGH/TAByGbkAcBjJM+yP1ketUpZA3y
IIDBByPgmh6AtCAPAhh8MAKd6KlWq8PDwymKAUgR8iCA6RcfnJ6eXl9ft8Or
q6uzs7MJlaWkx6dSqUxNTaUoBiBFyIOQWU4C9MoHgxqueAQlxZ2hvsjz8/Ma
ODw8HBkZqdfrcedw8lI61CPW1tbGxsaGhoZyudz4+HiHehIIAGgLeRAyyx1N
9FxAh2L0LS4WixoolUrJftmmK2lhYUGbF/lXPp8/ODhYWVnpUE/cyQGiQB6E
zKIts/7/7WuvfPDAw8rY3t7e2dnxJSWYYa1WU+za3NxMthPSrgRfwO7urjYL
QYWx5qZMOjw8LBM8OjoaHBzUGM0wgaTgnynu5ABRIA8CGCePDyZDjjMyMiLr
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
OnyHz+E9eOJa9FS49rmvx+orOjefw/vJSM/hfat3zeDlZ19ytio+6CCuycMH
IZu0zYNbW1vB6yB8TzTepYKbm5sNPhi8Wtx4VxpqDvYuT3aMBuSDmjD8fowN
9+h49vkXfuHPjqOb4Ge/cuJP20ketDx+9fm2eybv/vjj//PwaqyO4qLfA/f+
5VNtl11tnrv+QsO0+KCDuCYPH4Rs4vL9ZJpH3ld75kf+sP1uyYYL9zrMgz4P
XX5u5c/rzdnw5//0+P4vX222nnNCpvzhL1x5xx81BmSN0fhWFy3igw7imjx8
ELKJy/cXPXO8gqFiV3M2fMcDjysH2QOCDXSeBxsEPPr1U3niwRPXvvTkc/WT
G7FmniKyPMn43BPP6bXtNfv4YNuW3beA87ifTCfgg5BNXM6DpVCKP/TD/3Ti
h2x93w++JaxlzKfPTE5Ohnd9OxLLB0dGRtLqd2hoKOZf/qZ1ptW74z4Yjmt6
APoVZ/MgQDfBBwEyi7N5EKCb4IMAmYU8CGCafNC+PdMcgx+l+2lz4wSzPT89
AP0KeRCgGRd8MNlsu6MHoJ8gDwK04sUbYWfhdvJplAZxp+qJHoA+gDwIAABZ
pr/z4MzMTPA5ULcR0jw/P5/L5fTXuR31l8vl4eHh8fHxVB7KnIw777xzc3Oz
V70DwO2Cs3mwVqsdelgX0OZUY+ywXuv1uj7yt7EaE3zro/HT09PB+7x1Wby9
hF/CNGxvU+OL96/ul7zgW4sa2zFbW1tzc3PdFG+VaxHs+pQSDfv3FrDLElRr
3565kjVtoVCI1btm5a89c+sv63dn/8r2I7+93jb3vr29rf9qfBAA2uJsHtzz
UKCoVqv2Ib8XL160T7jQ+NHRUb2WSiV9qk2lmq2vr8vymrd7ioTdz1NW/NLS
0uLi4v7+vsRXKpV8Pi832d3d1YBep6amtFzGu2hd4hcWFvRXaJ6VfWxxN8VL
lS9eRia1WvNa4fYJkvoTSJI+ss8NkTZFv5WVldKtx0r62JurxzVx/UOq942N
DXtDIYVKrbqJiQn9TpOYwcFBfbS2tiYB+nTBY3l5WSszOBPZota5JsEHAaAt
zuZB4z3qwt7gSxtDO0Z+od/52k5qw2u8G3Bpk6jEpI3hrkfz3dhkjj3ZryjX
sGJkBPaO4nIT6ZdI63da86urq/pITm3FayPfMBP5prbn3d+1KFVWvF29xkt2
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
nEKhcHh4GHdyJT7btTxUr3Kx0dHRxHrm5uZWV1ftgFxDAxMTE3H1+JLE+Pi4
nLR4FlawfW0eExwfMnmrCc+c3I6Mu04AokAeBEhMpVKZmZmR76ytrSWYPN0j
krKtnZ0dDchMlQpPT0+Hh4fj6nHtIClAFyAPAiRmf39/aGjowoULySZP13Ts
PkyF04GBgXq9Pu8RVw8+CBmEPAiQmKOjIxlH4jMz0zWdWq02MTGRz+flg8qG
dh9pXD34IGQQ8iCASWoB8hpNdXJykrjTxJ+2YmlpqVwuJ9aDD0IGIQ8CmKQW
oC9OstNEo5DMkhQJ+S4DxII8CGCcjEKu6QHoV8iDAAYfBMgw5EEAgw8CZBjy
IAAAZBnyIECvcC3xORiKAboAeRCgV7hmOvggZBPyIECvcM108EHIJuRBgF7h
mungg5BNyIMApkcWcB73k+kEfBCyCXkQwDhpAa7pAehXyIMABh8EyDDkQQCD
DwJkGPIggGnyQfv2THMMfpTup82NE8z2/PQA9CvkQYBmXPDBZLPtjh6AfoI8
CNDMizeu9+TTLveYTAxAn0EeBACALEMeBACALEMeBACALEMeBACALGN9cG1t
bXp6ugwAAJAxZmdn5+fnT09PdwEAADJJvV5vuIyIoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoijV/wesyH/l
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 6->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt3Q9sNPld3/GjAYvi6AmYxIUluIoDBhdkZMrTxqIWuMJERrFIt8RpcE8B
ExPhUiMt4MiCJ0UBXOJ22xpwTr4WUyzdgiO440lyT6ghi87gAE55csmdCYvi
EO5pfJzvzonvOd/d4+fJs/08+8szzP12d7wzOzv78877pdVqdnZmft8de+ez
v93587qZn8r++D+65557fvordZf90XeN5XI/uvhvv1oP3jL/0z/xzvnZd0zM
/8zsO2dzb5h5hUa+68vuueffafo7w2UAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAgxXZ3d7PZ7DQAACkzNTW1ubn5nve8Z2VlZQ8AgJR58MEHlYbKQQ20u1cK
AEDSHnvssXvvvZccBACkEzkIAEgzchAAkGbkIAAgzchBwHJPO4QqKfKzoWY8
F8UAzSMHAUvyG2E2+0AbkYOAhRwEUoUcBCwpz0GKQdqQg4DFqRykmIRbRAqR
g4DFqa09xSTcIlKIHAQsTm3tKSbhFpFC5CBgcWprTzEJt4gUIgcBi1Nbe6eC
wKligLiQg4DFqRwE0GrkIGAhB4FUIQcBCzkIpAo5CFjIQSBVyEHAkvIcpBik
DTkIWJzKQYpJuEWkEDkIWJza2lNMwi0ihchBwOLU1r5jipmamlpdXY2xGCAu
5CBgOe/R40+cfD4/MzPTxmI8mUxGW5uwc5GDSAA5CMipT1ty0F/AycmJ/2HY
pentPDc3p4H9/f3+/v6jo6NQs5++XJPF7O3tZbNZldHV1aX7hYWFZooJ2zrQ
CHIQ0Lb6npdLuIB7AoVdmt7L4+PjGpiYmIjwvo6xGBPE29vb6+vrk5OTx8fH
vb29zRQTal6gQeQgoI7Grk9bctBrfWdnZ2Njw19P2KUpfTKZTKFQUEcsQjG7
L6diVFK0YmZnZ5eXl83A0tKSBsbGxpopJtS8QIPIQcDi1O+D0XR3d6sjdnBw
EO9iwxoeHt7a2tLA4OBgsVjU542w/UEgAeQgYOmAHBwYGFhZWWl7MZOTk9q2
HB8fd3V1HR0dzVW0qxigHnIQsDiVgxGKMV/tmo5Ye4splUojIyN9fX3KQfUN
8/l8jMUAcSEHAct5z8FisajoUS/MhWJkcXExl8vFXgwQF3IQsJz3HGxS7MWM
jo5G3ryQg0gAOQhYOiB6mnFeigHiQg4CFqe29k4FgVPFAHEhBwGLUzkIoNXI
QcBCDgKpQg4CFnIQSBVyELCQg0CqkIOAJeU5SDFIG3IQsDiVgxSTcItIIXIQ
sDi1taeYhFtECpGDgMWprT3FJNwiUogcBCxObe0pJuEWkULkIGBxamsffEH2
yM9Gu867U8UAcSEHkWaLi4vmqkD9/f0zMzMas7y87N8UDw4Ojo+P+x9ubGyY
4ZOTkwsXLviflaGhIbMx7+3tnZqaOjw81MhcLqd3WUAZwRt/p6LHqWKAWJCD
SK18Pj8wMKC3gBKtVCqZC9eai/ednp5qWCmmlFSieQ/11P7+vpm9UCj09PR8
xSte4Y0pV3JwfX1d02vk8PCwydb5+XkzUI8W0rqXCSAYOYjUmp6err4uniJM
qaQ01LDeFHp3jI2NeQ8Vi96U6gkuLCxcvHhxaWnJG6nsUw6aYeWsni3X6Q8q
KLUEJamy2MtBta4uqjqn6mlq3qOjo5hfM4Aq5CBSa3V1VX093etd4B+vVDLR
pn7c2trapUuXlpeXzUMvzg4ODjTZ1atX1YscHBz05jX9QQ0cHx8rQBW15Tr9
Qc2lyFPwbW9ve8lrgtV0MDUm8rV0ATSOHESaFQoFpZU6XwpE871ouZKDExMT
5Urnbm9vb2tra3Jysvzyvp6C0sTf4eHhl335V5gUM9OYpXV3d2vJJtH8AWpo
ek1mvm41LWoaDah7uLOzk8ALB+AhB4Fy5TtPxZm6ZuVKKimk1BfLZDLlSs9O
uXZ0dKTxpVLJTK8Q9L4OHR8fn5ubM8PqDypP1Vv0Mq5cKwevXLni70Vqydls
9uTkRAOat5UvFICNHAQME2HlSip1dXUtLy+bbqCYHwFNLJYrvTlNo75bb4W6
fho2wefvM3qqvxcN6A+aLAaQGHIQqaXUu3z58uHhoTpihUJB2We+3lQqjY6O
KuDy+byZMpfLmeMgzEP1/jSBZjyo2N/fV6iZd5DC1DuwwmP6g2pFwWfuy5Ue
5aVLlzS8s7Pj/31wZGSE3weBJJGDSK3NzU3FmSJMHTp/fimVFhcXvWwyU+qh
6S0qudRrs94vSrpsNluu3x/U7N7N9CtLpdL4+Lha7+/vN/uL3rh1WwtXFPb1
9Wm8ApH9RYEEkIOARamkSIp3mcELPPP4QX+MVk/c+LOhZjwXxQDNIwcBS/Ib
4QZbNGFaL1KDn21mRveLAZpBDgIWZ3MQQCuQg4Al5TlIMUgbchCwOJWDFJNw
i0ghchCwOLW1p5iEW0QKkYOAxamtPcUk3CJSiBwELE5t7Skm4RaRQuQgYHFq
a+9UEDhVDBAXchCwOJWDAFqNHAQs5CCQKuQgYCEHgVQhBwELOQikCjkIWFKe
gxSDtCEHAYtTOUgxCbeIFCIHAYtTW3uKSbhFpBA5CFic2tp3TDFTU1Orq6sx
FgPEhRwELOc9epQ4KysrZjifz8/MzLSxGE8mk9HWJuxc5CASQA4CFqdyMAK9
nefm5jSwv7/f399/dHQU48LDKpVKk5OTKqOrq0v3CwsLbSwGqIkcBPb29pRE
/lvCBVitN1nM5cuXx8bGNDAxMRHhfR1jMSaIt7e319fXlYbHx8e9vb3NFBNq
XqBB5CBwcnKy7dOWHPRa39raWl1dLRaL3piwS1P6ZDKZQqGQzWYjFONfFSqj
mWJmZ2eXl5fNwNLSkgZMQEcrJsKqABpBDgJ+N27dbuP3omo9lgV2d3erI3Zw
cBDL0spRCxseHlasa2BwcFBhenp6GrY/CCSAHAQs5/33wXIld/L5fLzLjGBy
clLbluPj466uLt3PVbS7KMBGDgIWd3IwWud0d3dXc5mOWIzFBD9VU6lUGh0d
7evrUw6qb2i+I42rGCAu5CBgcScHg5+qp1gsZjKZyLuJqsV634JGWzOLi4u5
XC5yMdFmBBpHDgKW856DTYq9GHUJI29eyEEkgBwELB0QPc04L8UAcSEHAYtT
W3ungsCpYoC4kIOAxakcBNBq5CBgIQeBVCEHAQs5CKQKOQhYyEEgVcjBljo6
Otrd3W13FQgn5TlIMUibNOfg3t7e6empf0yxWJyZmRkaGpqbm9vZ2fHGR7hu
mrG9vd3f3x9qlv39ff0tZmdntQU4Pj72P3VycrK2tjY2Nnbx4sWlpSXrQOn1
9fWJiYnx8XENRKsWhlM5SDEJt4gUSnMOXrp0yf+wUCj09fVtbGwoARUlU1NT
yh3zlNaSxkdo4sqVK2FzULMohZVo1Tmo7NN4lacEn5+fn56e9p7K5/PKR3OB
AA1EOIEVPE5t7Skm4RaRQqnNQZN33sPDw0OFYMCFXXK5nNV5PHP56lf29PT4
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
v14ZWkKZHAxUKpW6Xy5sQ1q94+PjGpiYmIjwVrJaV9mKsGjFmCDe3t5eX1+f
nJxUIqtXGGMx7RXqhQANcjkHP/Tp52PJwe/7jY+Hatp8mA9YoLJPvcLXvekd
d/qD9b+T9H6ba8bi9jNnrgT1B0fzW/WeXXjkzje05GCAk5OTrZcL25DSR3FT
KBTUEQtfZtnf9JUrV5aWlnSv4WKxGLaY2dnZ5eVlM6DlaGBsbCzGYtor1AsB
GuRyDj7wV8+1JQfP7A8qdL55Kvea4THdB3wh+b6Pf75cWcPZu05Pv3Qgg7ZU
ZoxWvteuN9na2poZc3h4OPmbV4NfnWr4mm/5roAJfuIP75xWjhxsNfVW1BG7
du1aYi3WpBVu8mJwcFDJpX+53t7e9pYEOM7lHGxkP8m29Ae924V/+s/+1fKH
6z27/tidPFWqPnaX14S6D2bM3t6eN9KbzNvBVf2UH//QEwEFfMu/X1SfNLhI
s8cOOdhqAwMDKysriTVXz+TkpN7O+q/r6urSf/JcRbuLApwWLQfvrZifn7fG
a7utvozX62mGcrDeLiJt7w/+Qw6+7ttHfumhes9+5LMnza+HX/7zZwN6gmeG
oG5aQpkcbPFcu7u7mivyF3cx7i9aKpVGR0f7+vqUg1r5+Xw+xmKAjtRgDuoN
7t82qsOit5vea9Zkh4eHWprSsPnClIPBZ5L5jvmV/n8zp/fs6970DnWLAqZ8
5+8+Hqppk4Nv+2DtoxW+/rt/8Bu+54fU6Nd8y3cpBwN+H6w+yWcEH6jzI6le
vnnt35T9Sa2Hf/mffrteGR+onFSHHGzpXMViMZPJRN5NNPbjJhYWFnK5XOzF
AB2pwRzU1qy3t9cfcBoOux9aKOa4iXph9KbKj3Rv+IX3a/uv+4BOmW5/+vhn
QjVtcrDeGdXU/VRzalQFBPw4eO/Dfx/Leqh3RrXv/bU/UQ3mppUwtrpTrxJz
djVysNVzNSP2HFSXMPIvHeQg0qaRHFTkmZ03tre3/SP9Obi/v7+8vLy0tNTT
0+N9L6ppFGfmo6n36XR2dvZSRfCxxiYH6x010PjtzQ8dRDufzI2bt5tpd/NT
z4VqNMDCI09HLsPsLFomB1s/VzM4rxrQRo3koBJQz5pQ80bW6w/29/d73cbx
8XHvWvAmXLa2tsxO3eXKoccBJ7vw2qp5yd3Gb+rWRT6vmrIsWqNxHURvhL3S
hP/mHcNIDrZ6rhZxqhigIzWSg9qUbWxsKMIuXLjgZVxADnr9wb6+Puu3QvUB
tZDe3l51G7u7uwMa9XKwkaMIA27lJq43cePW7bd9qO4XswG32C9SH3AJ4ICb
OYLeIAcBoKYzc/Do6EibsuOKS5cueXvENdIf1Iz7+/v+Z9WKd3BcMH/fs5Fj
yWvezKk1m7nu0nMvhb704dbfxrCbULWwK8G6KDA5CAA1nZmDS0tL6gyaYQWc
/5jcoaEh85ugf3p/f/Dw8FD9Pk2zsLBgzjpVrnxZmsvlCoWCtpABR1hY16MP
OOF2vZt3xYcmr0f/ws0vBuyuY90+9eyNUG2FUu+Up9U3TWnNSw4CQE0uH0dv
jbnv443uM5P9/TuXHfRmbDIHjTNPbqOkvnGzJVei93v88KV6l58wNz37ycMa
5zUlBwGgpnOUg+XKt5Q/9gdBHUMloLkGvV8sOWhs/e2J8u7NDx14t7d96MmV
v/x8LIcKNq707Eu5P35akeeVoWGNCeiNkoMuc6pOp4oBEnC+ctBQ6KhvqEB8
2wef1PZf9/c+/PeL28+YCwxVizEHzy9ysNVzNYPjJoA2cjYHZ2ZmLsYnVNMx
tmtRKMQyTQTFYrFdayDkX77NrZcdix6nigE6krM5CLSLU9HjVDFARyIHAYtT
0eNUMUBHIgcBi4LAf4v8bKgZW12M9Wy0YoCORA4Clhu3bruTg3EVQw4C9ZCD
QE3mZET1xkd4NnjGc1QM0GHIQQBAmnV2Dg4NDfX09MRyXeCEHR0djYyMTExM
XLx4MeCqHM7SP5WKHx4ejvFgwLAuXLhQKBTa1TqA88LNHDw9Pb33rr29PY1Z
WVmZnZ01V3EqlUqbm5vz8/MaaabXNHNzc0tLS9YJS/Vwamoq4CymrXD71k2v
eHORqY2NDRVvrt6oUrWqFxYWtM5NYQcHByreOnRdT5n41lxaTpL1a8Wa4s3q
LRaLKn59fd08u7a2tlBhHqpIVa5ZDg8PqxelV9Hf3x+qdf0RTevm8pT6W2vA
rEa1lcvl8vm8mjPnOjDnftfD6lMlaEqV6p0aFwDqcTMHy5V00KY1k8moZ5Sv
0CZxYGBAG8OdnZ2xsTFNYK5/oYHx8XGTLxpjLUc5mHx/8KAim81euXJFVSlH
VJ6K1NpWrKiLp2e1bTcX79CL0rPmRVUvSlty/XWSLP6wwmSf1rmq0r0emp6d
+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
AAAAAAAAAAAAAAAAAADt9P8Bu48y2w==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 7->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
fl2/7hU4YX62/f3VF1vVgyFPqf2T//V2bTNo4yFkx/7fJ88l34PliZNPLpeL
84EBSBVN6sHwpx+pyoO5e8/E9ODtVf61v+tn3/bPfuANFWf78CMvtaoHx++v
fJUQVYKSwi/NPxS+Y+9/5mKaPZjJZPTVdpgMQAsTfv/g5OTk8vKyfzefz8tH
AwMDnZ2dR84/PT3d19dXi300Wu9ju1cqjoRv/bOvqnz44bf+pkSjiaE//UrF
RT748NmYHqx4WtGfes9HVdr8wse+qLDD+7/9H5+smNiJJ/da1YNSfPnXru6y
vaQ30cavLH6zYo+duXi1Dh7s6urydTMyMlLt4hVTqnaRjY0NdWlPT09bW5tu
p6am3KYE0JKErAcPDg5kH32zCh7f29sr5UG1vLCw4CzRAMpk99LViiPha970
43ZwsxHm58evn7kc04MHh9fKr+LnP3JKNeCrb36tUnpD35s1vL/9r3fCJNaq
Hqy45fD9bTcH30fFT//uXRV7bP9q5f9NzAeI5sGhoaGlpSVN6FbTEXogmMPE
xIS2NoMpVdXU1taWvqGrq6vHjx+XlPXdlKbj5KNNWQ0O80mi2pcDEIaQHtSz
GkszmYy+XMHHNdSU8mDtsOeTCXlkpkKiCeMaxUv7h7X+H31xbhXnecffPHfl
6nfjDAJJ9qAKt/BvYsi38tb7zpgQ55Pp7+/PZrP9HpqIkL+0pe+OvhS9vb3R
PjnBBKSt7u5u+0iEfI4dOzY7O2snZmZmjKfpOPnoRenb3f9K/PSOvA3zVJmJ
iktV+3IAwhDSg/oQ6muuoXhxcTH4eHE9uLOzo23R4eFhfQcLNmg1LqkdyTTr
oTnt49qC1Xaslurr65ubm6uYs/XgF591cGGjYNgLEcb3oPOzZdqzhLWqB3Vb
1V8Iw4TKZ1OX86qp8hobG5N3or07bvdI6ju1srKiCX2PNHFwcFBtPZjAnaQA
dSDM/kF9odrb23Ur62ki+FSZenB3d7fgO6U5/WFTz6pBTWxubur7a8tMPSJ7
rq+vl8/ZevDg8NroZ10Ons+cu55PfA9eCXHOt6pCFZNpaQ9WPLVataG3wNTF
g3r5co227qIt7lY62pK0xWlbW5tuJzyqzQcPQgoJUw8uLS1NTk7aaStE/6ky
+wetB68dXrV3t7a2jvyKScFy38wNNDBWHPD96y596VkHF+G14V+sx8l1l05+
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
3UNJoto+AQgD+wcBIqPKa2xsTN6JdlCK2z2S0tby8rKdWFlZOTg46Orqqjaf
pO0kBagD1IMAkVlbW+vs7BwYGIi2uFvp2N8w9/b22traVKJOeFSbDx6EFIIH
ASKzu7srcayvr0db3K10Njc3BwcHu7u729vbVRLa30irzQcPQgrBgwAmqgLk
mptuuml/fz/ySiM/W4opj8j54EFIIewfBDBRFaANyOHh4VrkY6J6UCUh32WA
qqAeBDCJLIWSlg9Aq4IHAQweBEgxeBDA4EGAFMP+QQAASDPUgwCNImkVXwKL
YoA6gAcBGkXSpIMHIZ3gQYBGkTTp4EFIJ+wfBGgUSZMOHoR0Qj0IYBqkgFqc
TyYOeBDSCR4EMIlUQNLyAWhV8CCAwYMAKYb9gwAGDwKkGOpBAFPkQXv3SDkG
n3L7bPHMEZqtXT4ArQoeBCgmCR6M1mx98gFoJfAgQDHXDq825Nk6rzFaMgAt
BvsHAQAgzVAPAgBAmsGDAACQZvAgAACkGevB+fn5XC43CQAAkDLGx8cnJiYO
Dg5WAFLM8vJyo1MIRY3ybJaXD1Aj8vl8wd+ICIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIJQ/H+p+U+/
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 8->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ1sXed537VMUnfRVWu4lG2JhWiDgkiJjhiLsQnK1Z3cOpLZCBnYKljB
1kDoOqoQzMLYMN7MFG67lgbClFuiZYnZqp0ChwGXL7sG7VkInXCB0MpB2Lgp
nZi10liJadOiZYmyPkxJOfvzPuabV+fjPe/5/vr/cHFx7r3n4znPOef5P897
z3nfnx49MvzeN+zYseP3/hneht9zz96xsff811//UXw4ePfvHT50912/c/vd
77/r0F1jbx/9p/jynn+yY8d/xPxb04QQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGknDiEEEJIgzl16tTBgwdHCCGEkIYB+Zubm7vv
vj84evToMiGEENIwHn74YaghdPDzn/980VUpIYQQkjff+MY37rjjDuogIYSQ
ZqJ0EIVh0bYQQgghecN6kBBCSJNhPUgIIaTJsB4kpLF4nx02P1mc5FeSukvp
8LRgPUhIY2HwzBOqVWlhPUhIY2FYzhPqYGlhPUhIY8k6LDPs6+Sgg3R4PFgP
EkIygmE5Z+jweLAeJIRkBMNyztDh8WA9SAjJCIblnKHD48F6kBCSEQzLOUOH
x4P1ICGEkCbDepCQxsLyIU/43ERpYT1ISGNhWM4T6mBpYT1ISGNhWM4T6mBp
YT1ISGNhWM4T6mBpYT1ICMkIhv3kdHZ2Li8vW85Mh8eD9SAhJCMYlhOysrLS
0dFhPz8dHg/Wg4SQUA4ePHj06FGZnp6eHh0dtVmKYTk28/Pzg4ODXV1d0MGe
nh7LpejweLAeJI1lIgEjIyODCUB8GxgYiL348PBwPLPHx8ex+NjYmHy099Xk
5OShQ4cwcfr0aYTl9fV1m6UQltWmsVFsGgbEsxy7HNtdcDUcHntxgMMdz+zD
hw9jcfXR0tuIxv39/WfOnEFwRtZx6tQpywV1h+N47d27N57Z4Pb9+2K7C8Z3
d3cncTiMj225pa90WA+SxjKUAFzpnQlo7d6FPD/24r29vfHMRnDD4niXj/a+
QmTGUuK0ubk5y6UQloM2HRWIb4EOx+GOZO2BAwfkfbCd86jvLf2GnRXtw8TJ
kyftD5M4XLbu2nRUIGSx3QVXt1qt2IsDGB/bcnt3KVgPEtJY7JvRVlZWEFRn
Z2dRl2VqUo2xvF90Y2MDs21ubqLohnxjYmlpKQfzmgzrQUIaS6S/k5Dho0ZY
XV3Nzp56Y//cxJ49exYXFxGTBwYGoIYojrK2reGwHiSksUTSwZ6eHnWrDImB
vQ5CAXt7e6WBESI4Pz+ftW0Nh/UgIY3FXgeXlpYw84kTJzK1p95EfY4exSAV
MB9YDxLSWOzD8sLCQldXl+VtojHW3wQi6eClS5darRYdng+sBwkhGcGwnDN0
eDxYDxJCMoJhOWfo8HiwHiSEZATDcs7Q4fFgPUgIyQiG5Zyhw+PBepAQQkiT
YT1ISGNh+ZAnHH+wtLAeJKSxMCznCXWwtLAeJKSxMCznCXWwtLAeJKSxMCzn
CXWwtLAeJKSx7LgZy58i/ZrtDlSKtFxKh6cO60FCGgt1MGeog+WE9SAhhJAm
w3qQEEJIk2E9SAghpMmwHiSEENJkWA8SQghpMqwHCSGENBnWg4QQQpoM60FC
CCFNhvUgIYSQJsN6kBBCSJNhPUgIIaTJsB4khBDSZFgPEkIIaTKsBwkhhDQZ
1oOEEEKaDOtBQgghTYb1ICGEkCbDejBT1tfXl5aWiraCEEJIIE2uB5eXlzc3
N9XHtbW1iYmJ/v7+2/fvO378uP4TvBRvEydPnuzu7o60CLYlZgwPDwcdlJmZ
mR07dpw6dUr/8tixY7B8aGgIE/GsJYSQBtLkehByo6ahelCQ8fFxlG/Ql717
90Jr1K/wEpQxxibm5+cj6SB0s7Oz8+jRo7ABItjV1TU3N+edp9VquXRwenoa
Ni8sLCwuLmJiamoqhrWEENJAGlsPQtcgKOrjmTNnoCwrKyvycXZ29sCBA/r8
Y2NjeoVos/6+vr6Ojo4dGqFiik0oG5y2UqMq1GdYXV3t7e3FenQdRCW7Z88e
VbRiAh/xpb21vkDEDx482NPTgzMEW9zY2Ei4QkIIKSGNrQdd+gIBGhgYQA0o
YgeHoMLSZ4Bo6hViKBAs+HZychI13Te2wZeRjERZh6OjPl66dAnCBHFcX1/X
dRA1IKpITECqMA8msFF8abOJQ4cO+X7E4tgEpBBm431kZERPGwghpDY0sx5c
WlrCLru+RCEGNYEaShXmLX90SbIEZVTU/wcVEDtUlPpxgarCMCgdbNN1cG5u
bu/evZi4ff++2267TSa8Daq+HD58WE3DA0r9URHDGyiT4xlPCCFVoZn14NGj
R13VDZQFpRCEBrUPJnp6ehYWFlxLoSaKuqEgHRwbG4MA6e++86D6Ux9xgHp7
e0WYgnRwoo3T1kEIWah5ED64QrdWuQWbwInRarXwfuzYsdOnT9vvdVXQDwHy
n9BUEHMODQ3J/AcOHIDPvccxh3fYgOMr08iL9JPEF2R9/f39OKsxP95lOn+z
sVHkdcoMTIfefjbcRhbHLsPn+ZuNd9n0kSNH1AlgNhuXHk4nWRyXDxxeiNnY
tDJjdHQUDg/9Z2dwcBBRThbBNE6tQix3meFqmvOCuI2L0RBLQ2lmPQixcAX2
qakpnCrqI9QQEuBqxoSHUaNF2hCUpaurK56FOLLqPz6cwKjOdnqQElW1iyos
20Vhnn6zDc4iaVZV4PSACOKcxLZshLVaYL/u2GbPnj36fVO+IKAhFZH5cXni
40gbfNRXlTXYNOKbbBETrkPvBUcZh0/mR2RDYob3/M2GoqlNAyRyoTFH2mdk
cXhbwmMMs/WlYuwybFCbxgmAj2azcR11dHTIshBQ7HXULaYCNi1/7ss0HG5u
3kGQwTwQfdlT6CZCUJ5niAJOVmYglIVmetg7zKZMNc/sSzPrQeQPy8vL+jdI
UPWsAwKE0OF69A/zRLpVxmnrKdbjEhen7falm1E/YWYRQV2FsV0YrP5nRNUm
wiRqDnVGxFArwQQuQ5dkH2vjMkO/+Uf+fFQ/uZqFUTbGbuCtBLiUxsfHzfMg
qpTtmZSFhQUkbOZ5cOwQ0/Kxxx4bZ7Z27/I2yxSLjTORMIeG7vwJdebKygqi
StR7GLLG1SzmC4r00CTWTDPrQeysS/chWMgo8CWUBYqDkIiExKVfesFoCU4q
hCkoLLQJm1A1GiQMWbr+Lt9DfbAVnI2Y+dQ23jMTGod59FIOlydSVuijPDeh
t3Y622c4cKk/zh+1QmRT+g7i3IPuy30y2BDmxAkZdfcrBI646w5hF0gYEEks
7z7KDZyuOKzmPL+cYTk08ShnWN5KPHbvMs+TPCxnARIP851+uNj37NmTmz2W
2CQeSNHjPdemaGY9iLDvbUZGiIMQoCS/7bbbUDC6njuAQsUTAmgTohBWC1kJ
TTagid7GT+9SXh102s1f0G68vGk2YvihNno9K7fIYpcRjuANxFJIoRJQbALr
kb9KsU58761q6wR2FntqmKGcYdlp5/knTpwwzIDDV8KwHJp4lDMs4zLBaWD+
uzx5WM6C4eFhcwRDuh7a5Js/oS0eiGPeYBiVZtaDjt9/YWYgBPn3kBa1GTYS
OPSusrHJIAuCoBgcXs6wDJAtm49jOcMyahMkh4YZEJb7+/tzs8cehGVD4pFK
WM6C0MQDSW+MWwGzRhIPQ4sH4hhmiHrnhnclDawHnXaDkr0KSD2VqT35gwqI
fZ8q5B9hvRMDF+XMlp12C7bhHjkke+UMy6GJRznDstO+XcoQOpaXl+Hw5L1Y
pE5oi8fevXu9T5MVztb/EcbEY25uLvRWsVAaWw867YzUck5cs65/1moATq1M
683KgXLPkA2WNixPTEyo/3m9pJItZ8Hq6qo58bh9/74ShmWnfZuxIfFAIO3o
6MjTHksQxOBwwyXv24tjGTAnHlNTU4ODgwk30dh6kBAXKPcMTyqVM1t2wvpq
QFhOni1nBBKP+fn5oF9LG5aReECjg35NJSxngbnFY2Njw3uHfEkwt3iMtkm4
iSbXg4To4EIwtH6XNizLQzRBef7k5GQ5w7LTzvODEo8yh+XZ2VlD4pFKWM4I
Q4sHXA2Hl7MPYXOLB07v5MMKsB4kRMBVIN3yeClzWJabh4P6ZilzWB4ZGQlK
PMoclk+dOuX7ULCAsIzcI2eTLDG0eEDc4/X4kQPmFo+Ojo7kRRzrQUIElHtB
oUBCXznDstPudyXo+k0lW84IQ+JhOBaFY048DMeicAwtHoZjUThy9fm2eEhj
b/KbN1gPEiIYapAyZ8uOsQZBtlzaS9sgdmUOy05b7Hwbyc0SWTgGr5r/FCgW
g1flT4HkjzazHiREMDR+ljwsBzV+ppUtZ4Qh8ShzWHaCEw9zk2nhGBIP801i
hRPU+JlkQB8d1oOEKBAlfLsTN/yTVQaC7lE030JTOIbEo+RhGSeDb3/OaYXl
jJCHaHwTD/O9u4UTlHiYb6Gxh/UgIYqghyNKHpaDHo4oeVh2ghOPMjfnOsGJ
R1phOSMk8fB2qhD6LGfhBLV4mB+psIf1ICGKoIflS54tBz0sX/Kw7AQkHqF9
+xRO0MPyaYXl7PBNPEL79imcoMQjtFNBS1gPEqLw7TxNsuUyj0Qsnae5hpZ2
qhCWfROP0J5PCkc6T/MmHmmF5ezwTTxmZmbMXa4VTlDi0Wq1UhmZq4r1IBKD
tcwwD2FjBlVDwq0j5Ab9lOT6wrIJDQsiYZWEaiUjw0CM2xV8O9OWoXbKHJad
dmfa3jy//GHZN/Eof1iWzrS9iYe5J8wy4Jt4hHbBXTi+vbaGdsFtTxXrwdD+
MZ584cpdj6/9hy+s4vXOz6/KBF7v/qvVuW+GPAKWUAfNMzzx3KU7Hn1RWaVs
+81HXnjk2VfNyyYJaNkNN5CwA+fh4WHzDA8+fWH4oVXvoTx8Ym1p7ap52Rg6
6Du4UujICGXAd8y7tLLl7PBNPMoflp124uEa4CzFsJwdCCPexMNmEOpi8W3x
QMqBMzyVBLWK9aDhDvaP/e15CZjmF6LoxtUbvmvIQgcvX7sx+Tcvmw2TX9//
pbOY2XcljdJBHJ3Rx14M8pj6HhMPPHU+aOUxdNB3sN1KhGXvYLs2Q/QWjm/i
gbOi5GHZ8Us8tsJy2BC9heObeCDNsx90oCi8w4chJKY1Mldt6sGnXrpqo4B6
LP2LvzvvFZ3UdRA1oB66bQz73DMXvetpiA7iiHz0a69E9djyWZ/aMN5jXN5h
u8ufLTt+MUGy5aLsscQ38QgdOb0MjI2Nuc5em5HTC8ebePgeghLiTTy8uV9s
6lEPQtHsFVCPn+/74ppLClPUQRXSY7w+8OWzmze+r6+tCToIj6FUj+cxb4t3
PB30qh7CsqsFrIR4Va8SYdnxqF5VwrLXvSmG5ezwute3JC8hXvf6/hcQjxrU
gx//ehwRVK+7Hr9JCtPSQZu2ULNGu9pIa6+D2Nk72//qxvbY8b+/oK88ng66
WkGrEpa9raCVCMuOJ/GoSliWu6f0b1IMy5niSjx8W0pLiLfFw9tSGpuq14OP
PPtqEhGU+HnP4rpSnLR0EDE5uWFQUrXCeusg/I8SOKHH8HriuR9oXzwddA3b
XZWwDBCW9ZsVb9+/rxJh2ZV4VCUsy10x+tM0KYblTMFFNzY2pj763rJbQrYS
D63FQ27ZTRh/FJWuB5+7sJk8cspL3a6Zig6unHstdl0TFNjrrYMPPn0hLY+9
9Oo1WWc8HXQ9U1yVsOx4npKwCcuIJN5vdFL8NQjX7bgp3vyQNQjL6rkhm7Cc
ukvjOdyVeAT1HVE2XLfjBvUdEY9K14Pv/1IKFYQqvs5due6kpINphXS8RuZf
lFq1xjoI5UrRY6o9OZ4Ort3cmQmy5aqEZf2pebnPPPToeIOn+S70JL8G4Uo8
qhKWnfY4wuqq9H3AzYWvWuXvcFeLR1BfgmVj6x8K7fHMubk5374E41HdevCp
l66mFTnlJXfgJ9fBpbWr74xyu2OoQMsdIDXWwdh3EwW9nruwFR9id/uvD9sd
1KNyCdF7UbPMlu2LiOxwdW5ZlbDs3Nz7elCHJzqRqrbscHXX09XV5TuGVAnR
WzwmJydDHyS3p7r14OTfvGwOhj8zfPcbf3YAR3zXj7zRMn6ijkiug+/+K9Mm
fuXPvvamvl/a/S/eBMN++Cff8q9/90O/9tnvmq0afexFp746uHH1hjln+Pn3
z8Bjb/ihFl6YuOV/PBGaOfzBya34H1sH9V61KxSW9V61g3redpF1WLZcv959
a4XCMhKP2/fvk+mgDjB1ctBBm/XrLR6GIT9KiN7iEdTzdjwqWg8ieIaK2ptv
ffdbf/uDP/4L++x1cOXca8l10BzVoYPQvl/608f//f/8CiZwEr7tDz8TGthh
WF118CvfvWzefWgfjiPkDy85mqGZg6Q0sXVQz/MrFJb1UZbSzZZjYxn2VeJR
rbA8OzurEg/E5DK0G9gnHlL4GIaALCF6iwdOb+Qeaa25ovXg0+u2N6L89IH3
oviy1MEHnjqfUAejttaiJPypX7szdLbPPXOxrjpo2QWQvN5xfOtfmLf/0WdD
M4dzV67H1kE16m61wrI+bHe62XJsLMOySjyqFZb1UXeDBsjLmaiJB6Q8aGTe
EqK3eASNzBuPitaD0klL6jo4+tiLCXXQ/q8uFDX/9t5PvuGHWv9u6v+Gzvzh
r56rqw7evfCSfdqAahpX+q2feNIsgnhHmRlbB9Ww3dUKy44WHNLNlmNjGZZV
4lGtsKwnHp2dnWUIoZYOR8yXxEN5vhKoFg9p2l1eXk5rzRWtB4//ve1t9pF0
EK+EOniX3ZPgKAPlzwKb/wfxumdxva46OPyQ7aGBo974swP/4mf+jc3MDz59
IbYOKvmrVlh2tKok3Ww5NpZhWSUe1QrLTlv+YLy0G4ggFkvUxEP/C6D8qMRD
BDH2Be6lovWgfR8yOeug+SYZ9do/+w/vOL78i/c/gnrw598/Y54Zwoqiqa46
+E7re2vffOu7cSjht9A5scKP/e352JeJag6tXFiW5tDUs+WsUYmHqlOqgiQe
egNpJVCJh35LWCWQultvIE2FKtaDt9xyi31vLTnr4J2PR+ses/u239rZ+ueh
s33gy2cbroMQQTjKRgTlhTMkSVySYburlS0727fH2GfLZbiN39ESj8qFZbk9
BteXTbtBSZ6bcLTHavQ7dSuBNPjrN8ykQhXrQejgiX+07U4tkg7+5iMvJNTB
0Kc5XC95hsI8j3SwVlcdvMsic9gSwZ077UXwne1+eJLooDwuUbmwLI9L2GfL
JQnLznbiUbmwLI9LWIbl8uigJB4nTpzQn9ysBNLioT9AkQr29SAOtx5OkUsg
iB04cCDo6VFYi7M6i3sMoIM2t2X+8kf/3y/96eNdt/z6rh95IyZCnzvDC3KT
UAdDb+B5629/EDXg2/7wM3j9+C/sw3loc5/Mg09fqKsOhmYOWyVz+x5RHER5
2QjiS69eS6KD8vh85cKy9GoyNjZmmS2XJCw77cRjfHy8cmFZHp+3DMvl0UGn
nXhAvrd68rl5XJuSIy0eek8+qWBZD25ubuLK8koeQk2QDkIo0+oE1QV08NyV
66GRUN2LIthUhZDX5M8Pmjdx6yeeRHUDaX7DD7Wgg/hoc58MDKurDiJzMLeL
wlGufhRt/lFN8vyg0+5Ora+vb+fNHSmXH+lODYFC70jZQHnCMhIPSKHewVol
kMTD1bNrEKXSQXgbVYzes2slkBaPVqu1sLCQ4mot68Fjx47BAKQQrvrOoIPZ
AR3E+90LL4X+rwSJsVEZ9dq4mkJ/Mvabs3wNP7Q12EFddRCFW6gH5DjaH807
H9/q5jGJDqIMxLVWubDstLvXxnVaknFs7cM+Eg9Yrvd7WQmke23XSB/pgrBv
f8uTvcOReEAE9Q63K4EkHjtvHmIsOZb1IBKe1dVVhFPX9QVZdOng2tqaasJ1
HRTMDKVAdEFVi6VUpo1NY07Mj+vXJo+VjjLsHyG0fN2zuNUZV3IdnPvmRopW
Qes/+rVXnPrqIN7v/cp6uofy6fXXnGQ6KMMtveUtb0myd4Vw+/59CMvpZsux
sQ/LW4nH7l2ucZkrAaJW6mFZgfMwUqERKfHAml1DTpcfafFIPUG1qQexaUR4
bFdscP0UdJik+1z9m51+47jJTWLqI/KT0DFP1a3slg8pWL6kc+bkOnj5WkiH
mVF1UAbCqLEOQrZSPI4on5OMNyFInl+Grsmigss5i7CMI6XOwKmpKcvOauzD
siQe1bo7V0D4yqK1E4kBTj+ILAKsfZkcKfHAzCVpN4gEHJL6U7029SCiKM7P
020Q6vXw4q0HFS4dlHrWO9vExAROpEPbQONCA76KTk++cCUtrfnwV8/JOlMZ
dynFWvUv/u68rLPGOuhY9Jpu/1o595qsM1QH7zCCnBOXW9CvOFGlHc/1bjmB
U8V+Zu8ELoEgwzAPLrSgX0dGRrA43uWj/ZFCiBCRwgWCNViO+6Zb4tq0F8zc
29uLCXkYwQV2OarDUc7LNI6jODzGkZIJHO4gs7f+rtq9K+hXnOFYg/po6e25
ubn+/n64Gosg67C/ynSHo6bQN60DD+NXzGzYr76+vtint8h3VCer44X3oaGh
IMtbrRZWfkfAeWLvZB2belB0aqLN7fv36QFZSkXfpUQHVfUKDfXVQRzlqLW5
/D8opDJkz28+8kLq49FH6i4s6IWVqBXWWwfhfxyF5B772N+eVysP1cFDRkQH
g37Fddp7M4gb9hOS5MdYUCYgCkGG4VcprHxB6BCtkY/2RwrxQcZWwI5HesZK
bRobxaZhQJBhcsNJkOXYZeWESD4HcDUcHvtgAex1kGE4SXCqBP168OBBfacs
nQaD5crCxMmTJ+29rTvctWmvYXA4jmnQDAj7sT0GIUN6EOPEVtOIDEGGIczi
aAb9au9kndB6UCo+FVJcVZ6MjSitna4GW2+7KDyzsLAgs+FXURzoI461+q/Q
23DqRW+tQvxMMhovKsHhh1afv3hNrTAtHYRhdzz6YpKQ/lvzL2xcvaFWWG8d
BM9d2LTvY833hTNBXznbRUOJ1G4pj/hl9BdepdtFoYMqkTZgeb+oPNyHMxBF
t/wRlkVP7/KHbLpPH+QDdCS7dtGgenBmZsZ174qrqwoIqLQbuGbz6iCOr7R4
o+THhJI8HGX5BiDvCm1ycXV1hTPwA1+OKYWoQf7x/E3ynZYOimE2D4nbiKDT
AB0EK+dei/2fL84BVyxKfp9Md6p9N+UDMnx5RNpm5kh/bCHjhUNsMtUYIP4g
LFfu9kVn+z4Zm+drLHUQwofSY3FxET6ByK6trWWRj8l9MpbP15QHdZ9Muqut
Yn8yvmdFpOF75HX3wktyC4pOijoINm98P8Y/X39wct2bXjZBBwGOyPu+GC15
wHH/+NfPe1ee/LmJ8jztZY/8O2N5tkTawZ6enuzKh4o+N/F6WG61bBIP++cH
cfrBFSh8IFUId1l05nComs9NSI9w2T03UaH+RYO6Pn56/TXLNtI7Hn3xkWdf
9V1JujooPPnClcMnrGL76GMvPvGcf/RuiA4K/+dbG5Z/F+KIqxtjXKTyHH21
ujeR5lxcIJa9TtnroHSFnd1TcgjLUslW64FNuf0PgpLFc/RQwOzCsjxHX7nE
QzrwsUw87KlNPaiAGqIE8/1vbvih1Xu/sg6hMTTmZ6GDAtQQhvm2++FL1IBB
Cig0SgeddqvyiX989Z7Fdd8y/7fmX/jwV88tn71qWHnCftVGRkbUsN1VQbLl
LPpVW1hYQJlpeZtojPVXtF81nB4Z9auGs7e1e1d2DsfRRNivXE8R0q+aZQc+
9lSxHuzu7obBoa/3feD3f+13/8utv3PPL995DybuHNu63zV0qYQ6aG8YrFKG
3bdFyFJJjjvkxsawGK+ENzYgkbbZClwkxxHv8BgcqP16X5D3GtjP9tzcXKR+
trMmUliufT/bOWDpcPaz7aKK9SAhWYOwDE25o2rD4enjLpUhz48UlhGLKpd4
yCNs5Rmv2dLhasDHyrV4yICP2Y27VC1vEJIdVR+HVw3bXbQ5kcNy5QZ8lOHw
yjMOr6XDlXBXLvHIehxe1oOECCosq2G7q4KEZWc7XBRtTuSwXLnEQ/xcucRD
+blaLR5ra2vYweXl5dRbPFgPEuJChWUliEVbZEtHR4fInxLESqDCcrUSD13+
IIgwvmiLbFF1d7USDyV/qScerAcJcaGCg2ogLdoiK1S27Gw3kIYuUpIHJFVY
rlbioTeHyv9W5vnLM/6gag6tVuKhN4em2+LBepAQF/q/VHIfY7H2WCLZsoRl
uWEmdJGyhWVJPDIavzt19LAsN8yY5y+PDqr7cuVBm6okHvrtMTaJhz2sBwlx
od88IA9QFGuPJXpYlmG7QxcpW1h2KpV4yLgDMi0PUJjnL4kOSo+X8rhEtRIP
/XEJyxYPS1gPEuJCD8uH2gMlFGuPJXq2LP2chD6FXbaw7FQq8dDDsjxQb56/
JDq4uLioPz4vjwgVa5Il/f396jFqyxYPS1gPEqLjCssoDPVxosuMHpal38vQ
IXt23ozlT5F+DTXbFZalJ5/QpcqAHpZtEo+0XJrQ4TMzM3p3ahVKPPTu1Cxb
PCxhPei0E2kkRWW7bwrXlAy2hbRnbW2taHNuAr7COVlCw5xtIYtt2MLCgh6W
URiau8srD319ffrw4t3d3TYNjIabz833pSf5VccVlpF4QF8sly0WPSzbJB6h
PsnH4ePj43r32lVJPM6cObNT615bEo+04k8V60EIBHZf3uXo4yTEtPq3FxNy
b63uJfkGeE8YuPTUqVPJdVA3TL4JMkzPG72mKqtkMBdE5tAmFzPKKrUVWKIb
Jm5xGQbjXd+4wDmZJCVTO67vvhimHkkOMkw33oWMARq1Y0bFsWPH9LAsAzCV
UO69ICzjVFEfh4aGkOAVaI8lrrBclcTDFZad9omXXUe+KQJv60OfV6XFAykH
znAVvS1bPCypYj2Ikw2JLuIV1AFisbS0hAlc8qrX97GxMRlnGdImbciImYiN
+H50dNQ320xFB2fbwDAZHgvHSDqzVRcIti4jRMMGaYsQw2A8UrKgvt9x6BEZ
YvdWgcXFMDgH68EW5fm4qakp+E0eCsC+w2OHDx+GefLcGSKq9OMadF8WpAHL
JrnpGlIlhmErsh74AZ7BOwyTlkkZtx3fwEvynx3ecaBlTm+fqziZcUrH6BFa
4QrLWyNN7961uLgYcyfzAimTKyzjaB48eLBAkyxxhWXZkYxGOUyRrbB88yh4
VUk8cPno7QZVSTxwsSM66d+kmHhUsR502tEJ17gcTZx+Kg3GAcVPiADqIWI5
V5Hz4BRdaIP5vWEtFR0UcHQkS0HolssZ0Uk0DgoIlZTZpMSDMXNzc2JYUNEH
+U5+fUFGYYOIi3jJaSuRFHTYd2nhwQySOeCUQ2oER4lhLhWGmOJqwgqT32kG
GyBbUvkqucdG5XBg01L3YTaYJCmBuEvGaNNXBbfLH2RJdNAVlp32uHt63Cgn
rmzZaceNSjQwwr3qonC2Ew+9sC0n3rCM69QwfkpJ8OZ10uJR/sTDm9elmHhU
sR502oWDGkkZF7u6q0EC4JEjR9SBFh2EA3HentrGGyTT0kFcCHLL/db51mrJ
l2oaOqj+UJAcDEEA8VwZ5lobFsSeJu/4COvRxzJTAVNGvnbaOiilBN6lkURG
xA4yzLVfsYHqwTDxCfROVZf4XqaVBMuveMc3yirXE+7IQLAqKcNjD1vgVT2v
MpYQr+qJMhZljyW+5barYCkn3rDsVcYS4lW9qrR4eFUvxRaPKtaDqIX1livY
L9UxDq5EdfhHHVa5gWp2dlY96ePbwJiKDqII1f9xRlySwhArlxgFRVPxWXQQ
36gY6zJMClsl90nAVvS2TVWoQkcQc5y2DqrSVXQQ36i7qV3/jqksAqqEKyhJ
gy2Ond62Cf0SOcaX8nCQSwfFeKXLrr8Ij26DpbC/Mbof9I0JrpbScuKNCd6W
0hLi+/crkslUTvtM8YZlucOqKHss8W0FrUSLh7cVNMUWj8rVgwjCONlgszxH
iYsdVzq8gdMSIV2aU3ARuXQQ8Q0XFyI8AhpmdsVPrA2JnNyZGbs9TbY1uo3T
1hSYhC3iXQTRWw8CCDS2C/NcxxRHRO7JBFCl2IZB7OAxsQoGQFbwDU4qbBHn
v8iftx6EY2EPbMPLNcQJkgosiNkgTEnaJeATCBZMEsOc9r3QOBDYHDYt+wvV
c+kgIqfMYxh1PXa7qG8bkevOmXLi20ZU/gZGnOTesFyJxMPVnOts3zkjLfyl
xfd23PInHgjg3rtiUmzxqGI9SEhG+GbL8oDb5Ws3gpbamQtmy33vGQgdttu7
WvNGk/zqi+/NilETD3urkhssBN2sqD9JEWRnbONTsd/3KYmoiUeeBgvS/5sr
uU2xxaNy9SAh2eEblqX/asOw3TtzwWC2ZMvev3FDh+2OGqmS/OqLb3c9rifr
Q7G3KrnBQtDDa+bEI3WXxrDf96n5JIlH1gYLQU/N4zwxJB72sB4kRBH0TLF5
2O6d223v8jGLCXPQ8M2WnZt7WjNY7kuSh77tJcw3LNskHuma5P3V7HBES9+7
u82Jhzn45+Nw317UQhMPX7PTferf7PCgXtRCWzwsYT1IiCKojynzsN2RMtt4
mDeByOabLYcO252D5WaCOre0STwyxbyJoF61zYlH1CIodYLGEYudeKSIeRNB
vWqHtnhYwnqQEEVQWNZHYvJSeJQICsuhw3Znbbl5/YbhHUueeASNsjQ7O2tI
PHLQQfP6DcM7ljzxCOrNI7TFwxLWg4QIhrBsHra78CgRlC2nPmx3VGKHZQSl
MiceQWFZH5m3EMxmS0dSvj+VPPEIGnU3tMXDEtaDhAiGsGwetrvwKIGwrDpQ
ctHR0VHgpR07LJtH1Snc4UFhueSJhyGdK3PiIc22y8vL3p9CWzwsYT1IiGAI
ywaJdIqOEo5R7AwSmQOxw7I58SgWs9hBIgsczs/scEPzvrnFo1hE7Hyr7LQS
D9aDhAiGUGBoMnWK1kFDtuy08/wUh+2OSuywbE48isXc+BnUZJoPZocbGj/L
nHiYGz9TafFgPUiIYL4ZBlEiaDi/YnXQkC07JWhgNGAIy5J4JO/FPQvMYTno
v1qnBPeLGm6GKXPiYb4ZJpXEg/UgIYL5VgHDsN3F6qA5LJuH7S48LBu6Qzck
HsWCsKw6K/YSdO+uU7QOyvjUQQ9HmFs8isX8cIQh8bCH9SAhgjks+/Z8IhSr
g+ZsWXo+CepttbRh2Sk68TBgDstBj9g7Revg4uKi+ZaSYls8DPiONKowt3hY
wnqQEMciLBuG7S5WB81h2Txsd7Fh2dyHSVDfPk7RDjeHZUPiUawOzszMmDtP
K22Lh7nXVnOLhyWsBwlxtgfNMYRlw7DdxUaJ0K6lDMN2F/hYd2hYNoyqU+aw
bEg8in2OPrQz7XImHqGjeEingt6+XiPBepAQx6KrYcOw3YWHZfPgSikO2x0V
g9mho7cj8QgaVafwsGwe48A7JFMSUOwE3QzsxeCZ0OGky9nisTW4knFUR3OL
hyWsBwlxLLJlw7DdBUYJm6FnUhm2G2tQVefU1JTlnQkGz0CdzWFZdq1siUdo
WHZSTTyggEH/Nvpi8Exvb695sN1ytnjgrOvr6zMva2jxsIT1ICGORbbsBA/b
XXBYDhuKNJVhuxEi5KESaC7CjuUwxwbPhBZNl6/dKOE4wjZhGYmHudS1Aao0
ODjY1dUFHbQfFCnI4YYsTmFo8SgQmywueeJRxXoQJ8aQERlFXV77f/XW/b9y
q/poXhAkGdUR2VTo+l+38B3vUIZZLpJkeBEZwD0LEt6p1dnZabmhrUP5K22P
veMdlouEdvM43AZXGd5x7EIvJbgREUmWGhgYwEeZzkcHh7eBqKlNYzr0JgGk
ympxyD1CK97lo70BiA/SyQAca58z62ZjQX3T+Cm03xVc6dhBmR+7rKaTq0wo
wxqopHC45TzBCRCaVCChwukky+K8xV5HNRsexlYQixCcp6en7Z+j1B2O44VN
i9kwI7TdQIb3whWt9hTT+XjbudnhSLRgvFybOL1tdDCGk3WqWA+Gxt6rL3zn
4tKXX37kz9eO/7F6vTT3389/5aErzz1z44opPCbUQcOvNzZfu/K9Zy/89aNn
P/+/Xvzf/029zn726IWTj2wZtvmaYfEkOpiw0cBAwmZ580mLI3XluW++8qXP
4tgpd609eP/6ww/g+OIomz0WqoNjY2MIWWNtcFKFXgJITRHGZSmJLbJsPjoo
25L2W1z4yoygexsUuMYRxmE85se7TMva7A04ffq03FcfNc4os1FO6mYgzod2
h3WwjRwj7DI2rQ5ZJBtioMzGOw40Ni3TcP6RI0fMy0LfcTrJ4qOjo9hrdZpZ
bh0aJNqHiaiX2Ng22DTMkE3D+XB4aD+cUB/IgViOZXFqRT1PYqPMlk3DDLEc
JoWGvsnJSRwjmT+0VceXKtaDQTqIqHjpmaW1T30IoXIrYGoi6HptnHr82sXz
vivJQgdvXL386t+d/IFhwe8I70EyXU4dTNjjR1BQvXbhHHKD149X2zm6Dqp3
6COOeJAa5tbtf+H9i+azWpzeSNTL1m5WISzvF5VH2qFZa2trcg9zOR9vrxNV
rAd9O4HcPPs8ouJNshKsg1uvT33o0tNPeteTug6i0HMZZn7BsMvPPuVdT3N0
cCtn2HaX8liQA/EN6mscfe96qIPprha1SSpjfzcW++cmOjo6FhYWUJsg54ca
Jn9OnJipRz0IRdNjph42DVKIGV55Ys5VTaSrg6jvvHHb8K4mUA25VtUEHcSx
wBFx6Z2hHtQ/ojB0rZw6mOJqpf9Jw3NzeVJRh9vrIKJxb29vRxuEu8KDc0Ud
bk8N6kGUD4bIGVIVHv/jc4998vvXr6m1paiDF/76UUtFFlF2hfdXvvRZfW21
10GI4Mvzfxl0KH095pJIV4FPHUxxtShPurq6LG8TzZqKOjzqc/RlUEChog63
p+r14JVvL3slz1tqmTVIV5y0dBAx+aYqJkyOfaUQSqpWWHsdlErwpirPwmnq
D0R5v/LcM2qF1MGiVpv1+ivq8Eg6iLO31WpFTTzo8HhUuh68vvGKQekiyRD0
VNaZig5eu3BOD+m28dyjhnhXgb3eOqjShqjuch1rLK5uNKIOFg7Dcs7Q4fGo
dD147oufDikcolSFclNxKjr4gxtjoof0H0hh236sStZZYx28funC2qc+ZF84
G441XudOvN5nPnWwcBiWc4YOj0d168HNs88b/jyKURVe/PpWZwvJddDSMMvA
jgn526vGOih3E8WrBL2HG+uBsDrUwRJQUbOrCx0ej+rWg+e/8pBZaJ6cGrv3
N277ue6f+MW3/pTV8xQP3n9j87XkOvjSpz9s2NB3/uy+D7/nXe9628/BsDt/
9e3f+ti95pCO9/UvfNyprw7C56FpAzyGg4jXn4wMheogXjg3HOpgCaio2dWF
Do9HRetBCZ7mCqK1e9dPvnFPT9ePvelHfthcFSrF2Tz3UnIdNAnug/cv/NH7
fv4t/woCjdiOiR07dnzjo/eEFjgwrK46ePV7/2AWQRxBHEcoIF5wF/IHm5Jw
q1MF6iAhxIIq1oO33HLL5tnnQ1sdv/cXf4h5fnffIHTQ53k9TxGB7zdOPZ5Q
B82GubQYE29+04/CwtBFLj39ZF11ED435zOnP/FB5TfkDFAE5BLhOnjlEnWw
qNUSX3IYf5DEo6L14JVvL5tF8PV4ePyPRQf1etB9c772vv7QxxPqYGhUd71g
29H3/nqopl84+UhddfD1ZwYtSjy8f+tj9yKSPPr77w39U/jq89+mDha1WuIL
dbC0VLQevLj0ZUuheb0e1L8M6NxMvk+og+tf+LjN7TFv+Yl/KRfFu972czbz
n3vsk3XVwa1uVy2OoxyjPxkZkqwmdP6LX1+kDha12qypqMOrq4MVdbg9VawH
oYNbZVdsHby5xNDLt+Q6KJ1ph1r15NTY5+4ZhQji6BtulVGvlx/587rqoH0n
AygDpVHU5ubSC3/9KHWwqNVmTUUdTh0sdhMGqloPfm0hoQ76vx68P6EOnv3M
RyL1HvOLb/2pnq4fC13k5fm/rKsOWvoK8ocrBcmD5QMpOEMK18G+vr6dGrfv
32dYSVdXl8GZ2emgjuVPkX7NyOwsVpv1JtJyKR2eOhWtB7c61s5CBz/1oYQ6
eO7ErO222i+UhK3du0ID+ytPzNVVB89+9miol0QEH/zPv23fQdClZ5bKoIMz
MzOXNAwrKUQHdYIGpwsdtC72grGJ5A1Etp0WY/4m2UQMDM6pusMFxKvQ8XMT
biJFktSDi21Onjy5srJicwjS2lPo4NXnvx0aCb/zZ/ed/sQH7/zVt0MHMYFX
6CLnvvjphDq4NQCicROoaBb/5D/BmG997F6Ed4jgvb9xm011U1cdhMTbiOCH
3/MuOYj67aOGpa5vvFIGHTx27JjrSygjCkNcdDK6/cLCgtMe4RdnQmdnJ9TQ
u4hhE80kkjf27t0rI9Jmt4naE8MbIyMjkUJWSXQwaj0I4YPlExMTMpZ3b29v
aNhJUQe3euIK0w51L4rwk2/cE7rI1e+uJH9+0LwJxPM3v+lHEfR27NgBgYZM
21Q3MKyuOmjOHOAc+MrVKCR32Jr9VobnB/v7+311EPPLIOPz8/Pd3d3yPSaK
rQdrCVL0jo4OnAlIMDiabQ5sbGwgqYMc4IzFKX3gwIGSjFFiJnY9CB1EgFIf
EdAkszWQog7iff0LHw8dXtB1O2io3EBeU9BBC6u806ZX+6nwuurgVmfp1gfx
pgdegpc6+5mPOCXoTwYVH06Jjm2QNDptHdRrEywrgaLwdtFaMtYGE3A+Al3R
5tQciMLAwAAi1enTp3HC4yN0UE77kpOkHmy1WjJ9+doNBDRJcZ12F52jo6Nw
CL7UL21cy9jKYJvZ2dnYNksYQR1h37OojeKsP/yAk0b/ovb3slq+pJewuuog
3l9+5M/NaUDUQ3nluW865dDB6elpnFGrq6t4R6qML1EhIjioeZBMyinHejB1
cAIgGi8vbw0lAycjXuFAFG1UnUFUHxoakgm5KwzKUon0I0k9iGtzampqcnLy
0KFDSvSR3Kp/PVZWVjo7O5EbyE/ybzUWxNmI7FfOzxhIP9sokbZ68gyrpGzK
B3ltrm9dI8l18PvXr6XSZbR6XTt/1qm1Dpr/7fX2eBB60HFuOOXQQd92UX3U
xV27dklwpg6mDpyvl95VqU2qC0pv8TAUAZritC/wJIErNxLVg7t3IcDiZBsf
H1f1IPYaTlCz4aO0Szg3X8uIBocPH45nszq3Lz/7VFpac+6Ln5Z1pjLu0sWv
L6ZlmBqKt8Y6CGzus7UsBq9+d0XWWRIdhBm4WOTd8daDrZaccgMDA4ZGEupg
DOBS/cyfn59HWp7bWdFApqenUQZevnajv7//xIkTcD4msruLNUUS/T+43S4q
6xF5Gm+jvoe8qrtn9WsZLopdL6txeB0ZgjC53GiDt6Y1Hr1lxzLm19nPfERK
G6fuOnj94vlUiuhXnvjB7fFl0EH99p7e3l7HUw+qdlFcKV1dXR0dHb4Hmjqo
Y+MNnJmYDe7deoH2O76B/9PaRHOw9AauuJGRke7ubngbZzsKIvkvIMVNZESS
enDXrh/cJ7O4uCjyhNMPl7/KAYaGhtSa9T1FqhZ6X00QelvHjauX1x9+IEnk
3Bpm4uzzaoVp6SCE1bLHMIM6S4uoUG8dBK+tnUkogsg9VNrglEAHq7WJChHV
G6hQst5EvYnkDVSCKAMz3UTqJLxfdHJyEsseOHAAOYC6LRlfwg8TExNQRqQH
ShOR66JqRrUIIRsdHY1ts14POm3FSSKFV1/4jr62tHQQXN94RcYijGEVFtw8
95K+ttrroBP2R2GICD78gCrqBepgXaHDcyaSNxD5Y/znVRIdjNGfzHwbqD9W
4oo5q6ur8ny9/iViJmaDXLq+j4r3kVhUAaGPY3tfZz/zEZfWOKnqoNMuV889
9skYdY2MqK7TBB0EOCI4LlE9dn7xc3olKFAH6wodnjO1d3gV+xd11YOKrWrC
uvi6uPRlb+R00tZBp337qM0oUep16ZklX8MaooNOO3mw7z8WhTOOu+/KqYN1
hQ7Pmdo7vIr9ixq6SILoICpuPWIfFDkfvP/S00+6GtB0UtdBAdJ29bsrpkrn
wfsvP/sUJCBoDc3RQWFrIF1jL7LrDz+AY+2bMwjUQUKIDXWqB3UgKNcvXdga
jPWZpcvf+io06PrGKwb5U2SkgzcZdvH81e/9w1ZH0M8sbRl28bxB/hRN00EF
jhqOHWpqHEekCjimOLIG+VNQBwkhNlSxHlzPjLW1tXIaBpJEdX0HU3wXSuux
JIZFgjpISKWpYj1ISKmgDhJSaapYDxJSKqiDOUOH50ztHc56kJCE1D5KlA06
PGdq73DWg4QkpPZRomzQ4TlTe4ezHiQkIbWPEmWDDs+Z2juc9SAhCal9lCgb
dHjO1N7hrAcJSUjtowQh9Yb1ICEJoQ4SUmlYD4KlpaXjx4+XzQObm5uLi4vH
jh2DYWUbPBQmwTDkTiUcZBO+mpmZydNj1EFCKg3rQXCojU13bXkCEYRVkBsc
oLLZhhMGmcPhw4f7+vqKtsXN0NBQq9Wy6U/m9v37Yr+w452dnR1t8tHBjm2w
3Z6ennhm40TCGvCeZN/jvW655RZYHnvT2GXZd3FC1g5Xrpb33t7eeGYPDg7K
eHP5vwYGBmB5vGVxEcmo0OKBrL2tHK62CONj73iMrVeuHkQBcmCb1u5dp06d
Wltbk/Otv79fxkBEfJ6amsIVh0MJHZGloCmYB+7FznpXi/Uk1xqxCqeQBMbV
1dXBNtjo8vIyvhkdHRXB7e7uPnHihCw1MjIixk9PTwetGYE9doGzsbGhPAbD
IBCnT59GGBfbRC9g0uTkJD4i2kB/xXjlVfnGC5ZNco2cOXMGvoJViJDSNSs2
hM1ho/heDMP6JyYm8A0OpXT9CuMHt/H2bgp1Pnr0KGa20UGsGSdDvHdcNTAA
fsN7PjqoNof3gwcPRjVYXuLM8fFx9ZNhwvxuv6C8sFEcaPv1u96xy7oHsna4
vi28S5CM4fMjR45gDTZOS93hCIO4hON5W0aVVbuftbeddgjSfY44GfvajLH1
6taDCHdQEKctLjMzM5hYWVlBAITkjY2N4aqR2aAgTnuoRHwJKYEowMmiSjqp
6KAw3sZpX0qSXSC8y7kEU+UnqAyk0GmH4tnZWVgF24K66cahgS4kNwzuks66
4SWoCSYWFhZk5GjRQUycPHlStoV3mA3DYKp4VV8VvkeGjMwNxie0CmvGtmQ9
8ImMTYk0RobyhA5KwqAOELYL4+EunLpIMPRVISPCPFgh1sP+RWsMHZ4ztXd4
5epBAbERMVCCMyK5GtgXERvBECEUEV6+Qc3otCUAyji2TXY6iHpEFeYiwU47
1IvGIcmBIsuX8g0iNr5UhgXtafKojkOMDSnDxHVQEynosO+ijKi5RFygcXAj
VFsM8/0fECcPHJ7QMGzlvvvuc9raqtampmGeFMLyDd5hvHKXK/dDsiE1o2U9
mBa1jxJlgw7Pmdo7vIr1IFSvp6dHBTrojjTcXb52A+KCUIkIqZryRAellcCw
zlR0UHQBZshHSIkMYCElleOngwjd6hsvSE5U02USUG3BS0rLsGklLjDSaesg
jHQ0HUTZJY3MZqBKWElsw1DIq8od5inVQ1kqFTS+UZItZSkOaNAWDxw4sLcN
rMLiud3DU/soUTbo8JypvcMrVw9KXXD06NH5NtAIlH6oqhBREQClQIDkIZDK
/OJeLIWIiuoGCyJaugLpsWPHsAi0dXp6OklUR4iem5uDVeJMTEBNsEXEZGmQ
HB0dVX8Lig5CfTABs8V+fW2Qcvl3bLpNbMNQ6GE9kELxGNRBTMJeY5dFhbFp
qaSUDiIvglcx5+TkpKtVFqZiR2AzlpJm1XhI2oANwV3iFiQw2Jb8wScq7KoH
nXbFDbMxjyG3YT1Yb+jwnKm9wytXDyKMn9QQdUD0RkGnWjsR+ZVqKEHEN6fa
SAOgDkKuWmGS++11w5QlmFbNtphQ8VnNg2/EMNcQwKgl1dqgibGrG+y4Wgne
ZT3wlW4YTgNVdmFavoRGi2GuYRkxj3hMLRUP7LiySnlDDJPi1NG85Ghj/opX
YUNQbpBwdOCo1D5KlA06PGdq7/DK1YOElI3aRwlC6k3l6kFCygZ1kJBKw3qQ
kIRQBwmpNKwHCUkIdZCQSsN6kJCEUAcJqTSsBwlJCHUwZ+jwnKm9w1kPEpKQ
2keJskGH50ztHc56kJCE1D5KlA06PGdq73DWg4QkpPZRomzQ4TlTe4ezHiQk
ITtzoei9LBG6N8xeMvwaumBGxleReA43/FQ2h7MeJCQ5qn+57CaIL6H+CZpB
+sP//vVr6dtUa2I73GbZomA9SAghpMmwHiSEENJkWA8SQghpMqwHCSGENBnW
g4QQQpoM60FCCCFNhvUgIQmJ97RUvOfaiBPd4bGPBWkIrAcJSQh1MGeogyRd
WA8SkhBz8DQ/O1zFh44LJ7bDkzwDTmoM60FCEsIiImfocJIurAcJSUgOYZmR
X4cOJ+nCepCQ8sOwnDN0eKNgPUhI+WFYzhk6vFGwHiSk/DAs5wwd3ihYDxJS
fhiWc4YObxSsBwlJCGNmztDhJF1YDxKSEIblnKHDSbqwHiQkIQzLOUOHk3Rh
PUhIQhiWc4YOJ+nCepCQhPCx7pyhw0m6sB4kpPwwLCcEga6zs9N+fjq8UbAe
JCQ3lpeXOzo6ZHpjY6O7u9tyQYblhMzMzAwPD9vPT4c3CtaDhOTG5uZmq9Va
W1vD9KFDh6ampiwXZFiOzfT0dF9f3549e7q6uvr7+y2XosMbBetB0lgGE4BS
DpXdnm3sN4qYfLINYrL9KD8Iy3s0ENLjmT0wMIDF8Z5k3wvZNHZZ7T5yCUu/
HT58eHR09NKlS1h8aWkpUuKhO7ynpyee2TjKWDzesgnBmYZTNPbinZ2dusP3
RAHzuxwYld7e3tiWWx5iHdaDpLFMxQUlBqq5A22G2thvFJfb0aNHER4Rlu2X
GtLARhHbp9tEtXxychKL43qPve/xgKnYKDYNA2KYDbDLyuF4t3HamTNnEMyR
bKyurop0Li4uRnW4bFSK9xhMTExg8XjLJgFOHh8fHx4ejr34wYMHlbeVH/SP
yj/ed1Fh358M7/pHGB973+0vKwXrQUISEqkNDdcpsnRc5tnZU3ssHY6YJtXB
3NycTCC8Z2sZqSasBwlJSCQdnJ2d7erqunTpUnb21B5Lh6PiRj24trY2NjaG
ugwfe3p6sraNVBHWg4QkJJIOSqtRdsY0AXuHT05Odnd372n/owrPLy8vZ2oY
qSisBwlJSCQd3Lt3L4JzdsY0gUgO39jYaO3ehffs7CFVh/UgIQlh9yY5E8kb
CwsLfX19mW6CVB3Wg4SUH4blnKHDGwXrQULKD8NyztDhjYL1ICHlh2E5Z+jw
RsF6kJDyw7CcM3R4o2A9SAghpMmwHiQkIawdcoYOJ+nCepCQhDAs5wwdTtKF
9SAhCWFYzhk6nKQL60FCEsKwnDN0OEkX1oOEJGTnzaT1q3nBJpOWwyMtSGoM
60FCUsQwtG7oqLtBM9gP19tAYjs8yZEiNYP1ICGEkCbDepAQQkiTYT1ICCGk
ybAeJIQQ0mRYDxJCCGkyooNzc3MDAwO379+3d+/e26zBzGoR3+mgb2yWSus9
uzWXZ7uRDlYZDK6KJfbvymzdeO+v5mskaNnQ66icZHpixHCay6qoC5K6gqM8
ODg4MTEBQVxbW1tvIxPmdy9B35vntF8q6pqLIk8bLA9ZVaiWtQaSXCMxriOb
CzbP90zx3YR5u65f7eNPaT3M9yzOWMfzACkhhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGl4v8DeyFbDg==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 9->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
hYVQlPZr5972I2+5FW/5lz8eUjL4WL0o2CcQDRixPt9cLpdWuyMjIzE/eVMo
FNJqPZaUcGgMIJs46welg+fO/+b1Zz/60NMrn/jG6z90Gowf/+ij7//Ly7X6
teZVGh5o25bw51Bcv/ncQ5evffbrz/zFo1e/+NgzT157NlblKXL61I0HLt5K
4/jrVzUdXjiWDq6urnaW2l8zPT0dd5UUv4qOWyrX0nPQFAP0AJf9YPPMe2tP
veUjjzYoYEO86zOPP/r09eBaaemg5Gb9z+vNCfzCn1764Jefkj7GaiUxkjwp
vnT/3H8CrQQRHXQQ19JDByGb3Cl+UDZQchOugMGQS/LX7VwHJaz//pOPhbf4
1vselVFNvL1RkNRK6d70P9psu8o0izI66CCupYcOQja5I/ygRnWpTHQRtCHz
aFfvUAcfuPhMWxPqx3v/d+OD7NOifnbz7R+/GDENlVT54OrooIO4lh46CNnk
jvCDP/EnX48rgjbs4cJOdPChJ67FbfRdn3k8rU7wkR2O2wkqr7X8GtDBtiW5
nww6CNnEfT+4/uf1ZCJow3Sgg9KRN9+bpNE//PKT6fbG6mHjeUFRQmv5NaCD
bUu6JgGd5DM7O7u5uZlgRU6ahQziuB+8fvO5TkRQ8b7PPZFYB//Dpx5P1qjU
M8Wu+OT/O0u8+VrXVoIOti05SDo4Njamn3aKyQAMMI77wWQ+qCGS6aDMYCeN
prh3tPnU0Ojx4x/9uq0EHWxbMoHujI6O+nJTLBbjrt42pbir1Gq1N77xjRMT
E0NDQ3pdWVlJNyWAgcRxPxhygsrIK//+tw+9SGPFj2x/LlwLKkcPxmra6uBO
9cq5tX3P/OoLvnPkxd/9yrtf9OKxV7+5VaNvve/RVPqhVj//AOX3/5v32jTU
CeqKkM23B0nRwWY2AiTTwUKhUKlUNKHXmZmZBBkGc1haWiqVSsGUYlUlEZT2
HRwc7OzsSJT1NZZMd5KPvgYaHDY3NzecIe7mAETBZT9YP7sZMry/9vcffF3l
4Sg6+GO/90Cspq0OtqpNjfoT3/GS0de875MtfWi7a9ujsPvFJ8+tfGbni+oB
TRQ/+FUp8j98506rNFSDQQfPY/r5JDg0try8rN+OvjCTk5MnJycJMgwmINka
Hx/338atanFxcX193U6sra1pIp/Pd5KPNmpkZGTaJeJuDkAUXPaDUY6LyQ21
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
qKxsT9ruNZ6zU09qwuqd3mpC6VlNP7fnrVza1WOhyiW71odavRMjIyOao/8S
xusWNWeL2dYbdsAuLCzoLToIAFFw1g/6OiJ8gdCwpnFVOihBMd6+Lwmilcuq
R/MzLPriBzVESyDsI+mVgN2Pp+QlfBq07QOnlKq6XeZLIl69TUMl6oGGmb1J
XipjZUVWy/5BUh9aBZTE2LfKTWVkZs9N3kf+MW7/q2b7OapzlIBtzuqg3cuq
CSt8dneB/dyDrejPg74VCdwoAGQQN/2gfbihxjd74EnCIb3TW/3/19sGHVQZ
jYcaM7UtDQ+B0ioavbUoeESpByif+++/X4nJuahjpR3KZGZmxmbo66Ad5OV2
laEKBA9maTMlRrKQmt/j5O3uZZu8feKkcpCgqLfN83XQJrm/v69idqmP/lZp
Y7VFce+zXSqV1D+nHsbrHNszmt+gg5ooFArqXrXe8C/uyEPfjXN3NQMABHHT
D2rkX7iNNRoSvqWlJXtATeOe1Tslb4dfzdE4ubKy0uBK/EqsbvaGZ69f89u1
j2uUrCh5m7MytEfW7I474+3lK3kERVxL/UrCH1icOg3t2gOUvkZLmo2ng75T
04QKNHx/tra2JJ1aFNcMytrb1q2V0yeryu1ucFVl95M3t37u3ld7qDFiuw1X
lPcsomcVnnCKS6P3UvSlXM4PLuOmHwToMXYEDl5R3oPXtmN+jy+cbytDiRtN
vCKyCD3ATT8I0GP64kRcG+QdtGOu5QMDCX4QwKCDHuggZBP8IIBBBz3QQcgm
+EEA46QO9iWfkEb7IknoIPQA/CCAQQdvE/LUCSQJBhX8IIBBByPgWj4AaYEf
BDDoYARcywcgLfCDAAYdjIBr+QCkBX4QwDipgwDQG/CDAAYd9OC6Ccgm+EEA
gw56oIOQTfCDAAYd9EAHIZs46wcvXbpUq9VOPDqfiNV0Ki26NhHruQ/JGmp+
TdD5tvW0tj166+igQQchqzjrB5ufb97AczdvPHvt6s1vPql49vq1kJL2SXbR
uXLlSqzydwSx/ufYxxulQtznD4oUv4rRR1EHdZD7yfSrUcgazvrBVjooybv6
8Jcf/6PfvfiBdwXj0u//xlOf+8SNy99oXiVdHVQCN5984kb94vXHTtXczbOn
Y1WeIvoD8K006hc1HV4YHWxbEh003E8GMsmd5QevPlS9uPvuBgVsiMuH9zaI
Qlo6KMW5/On7Lv7erze0KFFWYuGeNEVuPH3l6c9/Srrf/E9A87X03LXQwbYl
0cFwOslH48zo6GiKyQCkyJ3iB6Uyj//xB8IVMBjPfO1Bf93OdVDiUv/YH7Rp
dPfdMqqJtzcK+q8uz9t221WmWZTRwbYlB0AH5+bmNjY27PT6+vrCwkLCzFLK
x2dra2t2djbFZABS5I7wgxrVm+1P2zj7vw/Y1TvUwWsXv9rWhPrx5F98vPNt
P5ebZ08/ft92xDRkURt22KKDzZycnOi7oddHHnmkXzro56BX/Rir1ao/J0E+
+iEvLy8bb9MmJibq9XrcGoL51Gq14+PjTvIR5XI5l8uNjIyMjY0l+DIE89Fr
ggQA2nJH+MFv/PfNuCJo40b9oulMB1VD3EYvf/q+tDrBR/8EHvvQb8dKQ+WD
rhAdPHdpQ6TVbkSaE+gwGXVdoVDQRLFYTPaLTjclibKGl7Ozs/HxcUmqLGqH
+cRdHSAK7vvBW4fkEomgDdOBDkpHojvBYHzzi0fp9kb9Y7sJ0tBafg3oYDPW
CVr66Af9HKQU+j36bxNUKAcn27W7u5tsJ6TtBD8lmVOl9EiAWLWpntHRUYmg
foDDw8PP3bxxcHCQIKVgF8VdHSAKjvvBW0rUgQgqnjzaT6yD7Y8JhupvWlx9
+MuJ07j68JdsJehgCBqiHTw+mIyRkZGJiYm433k/nxRT0ueYz+eN992zE+Vy
OUFKaeUD0ArH/WAnSuRHMh3sUIIvH96bVlck3i2s0Lq2EnSwbcnB0MGpqakE
cmNJtxPkJSXK9Xq9VCrpG6W3k5OTCVJKKx+AVjjuB0N2S75u+lUv/a7v1M/k
r37rHeFa8ND/+kSspq0Otjoz89f/9Rte/pLvesXLXvK3R17882/It2r00u//
Rir9cP2x03Pr3/n5f/XKl7/0FS/7m+qE4vSrQjZfNRh0MELJAdDBo6Mj1bm/
v584n3RTWltbkzkdHh7Wa7FYrFarCVJKMR+Ac3HZD948ezpkeP/Ury1/aXN1
6AV3t9XBv/qv/ylW01YHW9X2ld/55dP/9quaUOvSoKP/UmpV8tyL+uPSSo7v
//Wf+8LGO5TJV7d/ZXjoBR9550+2SuPpz3/KoIMRSrqmgwnyOTg4GBsbS3Ca
qN9i6veTOTs7GxoaSnyPJnQQeoDLfvDWVfPt9vtF0UHpRaymw3UwqEQSoJDW
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
S6qnoZf6+xp3cwCigB+EzFJ4PglqWF5e1vgsxZEFOzk5ibu6HJ/fumRUKjY1
NaWJZPksLi6ur6/bCWWliXw+HzefYErT09NS0oIb2G6J2ycAUcAPAiRme3t7
fn5eulMulxOsnu4RScnW/v6+JnK5nFzh2dnZ6Oho3HxcO0gK0APwgwCJuf/+
+6U1Fy5cSLZ6uqJj92HKnA4NDel1ySNuPuggZBD8IEBiTk9PJRzHx8fJVk9X
dGq1Wj6fHx8flw7KG9p9pHHzQQchg+AHAUxSCZDWvPDuu8/OzhI3mnhpK1ZX
V0ulUuJ80EHIIPhBAJNUAvTDSf1yCZ9kkiRL2MlvmUvpIYPgBwGMk1bItXwA
BhX8IIBBBwEyDH4QwKCDABkGPwhg4dAYQDbBDwL0C9ccn4OmGKAH4AcB+oVr
ooMOQjbBDwL0C9dEBx2EbIIfBOgXrokOOgjZBD8IYPokAd24n0wnoIOQTfCD
AMZJCehLPpw0CxkEPwhg0EGADIMfBDDoIECGwQ8CmCYdtG/PFcfgog6Xhu+E
bJVPeLUpZguQEfCDAD6+MPVGB5Plgw4CpAt+EKABqz6tzFr3lkbJ59x1ky1K
nA/AgIEfBACALIMfBACALIMfBACALIMfBACALGN1cGNjY25urgQAAJAxFhYW
lpaWzs7ODgAAADJJvV5vuIyIIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAjF/wfme8+U
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 10->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnX1wbGd9352YLCCSWypaMepQzaAZTemmcf5Qq6J2lkKVVgNipyihmrrk
lhEDyqCkCtm0YlTSOhXUARWRBoES1LEaxGgIGurYGAEVGYXIIIJSBAYMiGJr
PLfIll/WV9cXXV/fa59+7z7c0+N9OXvO2bO7z93n85nf7Jw9L8/zO4+0z/d8
z9vzyrf95i9P/fRNN9302y/Sxy9Pvvt1hcLk3K+8VF/+5cxvv/PXZt7x9tfP
/Lt3/No7Cq9+282a+e6fuummf6X1r00DAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1MIDAABwmL29vfHx8bcAAAA4xsTE
xMbGxm233ba0tHQ/AACAY9x5551SQ+mgJtrtSgEAAFrNt7/9bXQQAACcRZbQ
6ODdd9/d7lwAAABaDX4QAABcBj8IYAh/mCitpYlTalm2AK6BHwRoF7ZpELII
boIfBGgXtokOOghugh8EaBe2iQ46CG6CHwRoF7aJDjoIboIfBPDaJAHhNbYl
H3QQHAQ/COBZKQG25QPQqeAHATx0EMBh8IMAHjoI4DD4QQAPHQRwGPwgAAC4
DH4QoF3Y5vgsNMUALQA/CNAubBMddBDcBD8I0C5sEx10ENwEPwjQLmwTHXQQ
3AQ/CODxPpnrNaKD4CD4QQDPSgmwLR+ATgU/COB1nA5OTEwsLy+nmAxAB4Mf
BPCS6mBPT49+QWY6n8+nnlLibXt7e3WIm2IyAB0MfhCc5TRAMh0cGRnZ2NjQ
hD5HR0cbzOGkRDCluKUdHByMj4/39/dnMhl9zs7ONpKPSenUJuLuDkAU8IPg
LDc9nwQlzMzMzM/PSywGBgYODw8bz6GRfJSAtG9nZ2d1dVXmVFnJrqaYjw3E
3R2AKOAHwVn29/f1/+9/JihBiqOfz9TU1NLSUoLN1bHvlzAJbG5ubm1t+SnF
LU1pLCwsmAmps1eyq3HzMSmZHCSp6haCGbb9M26bAEQBPwiQmL29ve7u7uHh
4WSbp2twBgcHJaOayGazkrDT09O4fhDPBW6CHwRIzNHRkTFQyTZPV3Ty+bx+
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
00IWhaOtggO5+vZZmff09JQdCXQYpodv/Wey3EJWiL4oQSaN59PIhgBNwh0/
KB2sOr9SB42BkvxJd8bHx09OTip1UFo5Pz8fK4FaOiiLN/N8gnpn8jEurK+v
zz9cMWKn3Mz9M0EPG7IonLJ9lOkLJtnb2zs4OKh/FTnTDjODAOAyjvhB9dvB
YcSD1DovGhzIW8oiKQxuVSwWzbnHWDkk84M+Gxsb8mVGg/yTn4aq50UrF4UT
vH6qHZybmwsu1Rxze202mx0ZGYlSIACA/bjjB2td0at6n4yclD+gqnRHRqzs
LOjh4WGZTERhYGDAv/3GR4Ky/3z8ZwwlYUHnpb9RJpMxc5SwDJq/VMUqZ3NC
qeqiYI1SNBnGsptINVP/Bv7XssupwSdHtGaDgg4AYA+O+EGvmg5q33UYII+j
Xl3dvqZ9DygpkfMKPjdRtq1ksVLR6jI/P5/L5SRAKlabG3FRvevr6/rqf/rX
8uRhR0dHZQPNcxMyYrfffrtf2sTERPDhiKBShyzySnqqXZa4By/EqB18z6sV
JNnB1tBXHRhoQo2mia6urignWgEA7McdPzg7O1t2Km9oaKjs/rTgNURph3mO
XuJV9hy9kBlMcGJQHk2lqUypm9q87rtltL7kb2pqyn+OPmgPlZUp7ezZs2VK
5y+q+hy9zGw+ny979EPra/fVStJ9KZ2Oi8wNomapJFW7rLSViebra9x9BwCw
E3f8oNxN5Z0tye5PkxhVfRTxhiZ4VwwAgDu44we9Bt4DU4bsUucZos5TdgCA
KLjjB73S+UD/OfRGWF5ebrwQq9DhAe9eAwA3ccoPAoSQ1jtSYr1BJXpKLcsW
wDWc8oMAITTy6pVkS+tqUJNeFBOSD7IIDoIfBGgXtokOOghugh8EaBe2iQ46
CG6CHwRoF7aJDjoIboIfBPAYf/B6jeggOAh+EMCzUgLakg9jHoGD4AcBPHQQ
wGHwgwAeOgjgMPhBAA8dBHAYa/3g8PDwZChnz559/cTZX3rztXjzv35ryJq1
RqKvhRokvOobkVh/32w2m1a93d3dMf/y3sjISFq1x5ISLo0BuIm1flA6WHX+
j5959nMPXpz90mNvvPMoGG/93MMf++b5HxQvV25Sd3ijMipHWQry9JVnHzx/
+euPPP1XD1/67uNPX7j8bKzCU+ToqSv3HV9LQ5+aDl85lg4mGGK4FoODg3E3
SfFf0XJLZVt6FppigBZgsx+snHnXD55682ceLlPAsnjfV594+OIzwa3S0sH9
Ry4tfK1YmcBv/fmjn/7+U89cfS5WLYnR3knx3/q5RyqOBB7R/FqCiA5aiG3p
oYPgJjeKH5QNlNyEK2Aw5JL8bRvXQUnPf7z38fAab73nYRnVxPsbBUmtlO5N
fxqWhpZqnUpRRgctxLb00EFwkxvCD6pXl8pEF0ETMo9m8wZ18L7jp+uaUD9+
/38XG9/3qhRPr/76nx1HTENrav3g5uighdiWHjoIbnJD+MHKc4ARw1wubEQH
H3zyctxK3/fVJ9JqBB/Z4bd9IV4jqNG0lV8COlh3Td4ngw6Cm9jvBxe+Vkwm
gia8BnRQOjJ+V5JKP/X9C+m2xtxO+X1BUUJb+SWgg3XXtE0CGslnfHw82WjR
3DQLDmK5H3zm6nONiKDiI994MrEO/qcvP5GsUqlnik1x7/89Tbz72tYUgg7W
XbOTdLC3t1eHuCkmA9DBWO4Hk/mgskimgzKDjVSa4tnRxKeF31g6O2oKQQfr
rplAd3p6eny5yefzcTevm1LcTQ4ODuQEBwYGMplMf3//7OxsuikBdCSW+8GQ
G1TOvPLv/XTmReorfumOb4RrwcbeA7GqNjq4dv9J1dJe9Za5F3SdeUnvK29+
0Uv+Vm68VqW33vNwKu3wg2L1C5S/+G9/36ShRlBThOy+uUiKDlayFCCZDo6M
jGxsbGhCn6OjowkyDOYwPT1dKBSCKcUq6vDwsK+vb2dnZ3V1dWxsTP/GcoWN
5KN/A3UOy8vLS9YQd3cAomCzHyyeXg3p3l//yQfesPFQFB38lU/cF6tqo4O1
SlOl/sQLX9rz2o/cW9OH1nu2PQrr371QtfB/vvZdtYAmxj59Tor8D96zVisN
leChg9UYfD4JLo1JtvTb0T+MLJhkKEGGwQTkLiVk/te4RU1NTS0sLJiJ+fl5
TeRyuUby0U51d3cP2kTc3QGIgs1+MMp1MbmhujqoFWJVHa6DfuQWt9TNSo9q
rfCZHz7VeDvUfW5R8eK/+bdDdFAleOhgc5Dz0s9HupPMqqSbnpp6a2vLK70W
T67w9PQ0rh+08CIpQAuw2Q/WskLB0M/2n63e12Id/IV3Lpge45/8wV+ErPZH
33xS5RwfH29sbNxZQl2TqWJ3d9fMDPb5+mpm7u/v+5m85dM/CN87GVIdDISs
8OtfPPbQweagv6Mck/5Xk91mmW56+XzemNNMJqPP6enpmZmZuPmgg+AgNvvB
P/lefR1sox80RixECj/2zfNe6amNlRLyDr4O6rjdzFxbW/PrXbmODub9TMJ1
8HV/+JdqAf9ULTpYRrN7dR3kqAr/uCUu6aZ3cHCgX01fX590UM1uzpHGzQcd
BAdJ5gcPr1O5SD1DKokNDQ1FOS/aFj/oR/fPv/rV/3mj1tJmnxd97Yf/4uYX
vSRcBN/IedHIayaQgMXFRW3lH97EpRnP0etvVygUEueDDoKDRPSDxWJRR5v+
1+3t7c3NzcqrD1pHM1ORwrr3yUjdXvfRr+hn+49/77OyRSFrpnufzKveMpdb
3HrtR+79+bf/l3A32tT7ZMy+KxNNKEIuU67df2130MG6ayaQAP1wkt0mGoVk
kpTL5RJf4+AhenCTiH5wZGSkq6sreNyb4Cp8LOo+N9H/L6b/+t/5+yZCnl94
Y/znJiT6Xu3nJmQAVZ2coBIIUZ9mPzchFfZ3X8n8wjsXamXCcxMR17TNCtmW
D0CnEsUPSvKkSuobg5awTAf39/ez2aw6vUwm48ulJswNdTMzM7u7u2amvOT0
9PTU1JQcZUhiRgf/w079uyXrRjOeox/79LnwSnmO3oAOJsa2fAA6lSh+UIIl
OTs8PJycnPRn1vKD/f39vg4WCoWVlRW/Iq904tR/7YbqDVEoo4MNvtRF8eGv
x36vmvGDXrRnFqrG+F1HKQ5HyHvVEoMOAkBdovhBSZLcnHTwzJkzQa9XVwcH
BgbKxjCanZ1VdfqURI6OjoZXaiZ4z7aX1BfPfon3bEeVEi6NAThLXT8oUZOc
zZSQNvlvU6ylg1rZ18FsNlumQcvLy+ZR37oEx12KO+SQH8nGXfL9oFf78lxI
NGPcpQuXk4y7pK38EtBBC7EtPQtNMUALqOsH19bWFhcXzbQs4cjIiJmW2Mn6
ySf6D7sZgn5wc3NTpk/rSPvMI71aJHHUV+lp+Cs4Gh+H9zM//Mno8A2Ow7v/
yKXorvDDX38yVl3ReSzWOLxfPH6McXjtE5oybEsPHQQ3qesHNzY2gs9B+Jro
lXyTVLJMB/0LggZJp0rY3t4OnlCVDq6vrwfvuqkkqINe6RTlb/35o9FF8Ks/
+v+3tjbiBw0PX3ym7sgXb/7Mw//r8GKsiuKi44GPffP8m/60zr5rnaevPFu2
LTpoIbalhw6Cm9j8PpnKmXf94Km61ux9X32i7MG9Bv2gz33HTy98rViZgGya
vGel9DQJifId3zq59bPlBllzNL/WQ4vooIXYlh46CG5i8/tFq86XMZTtqvSG
t97zsHzQg09ertykcT9YloBqkSbuP3Lpu48/XXz+6cdWIskzaeiz7jP76GDd
NVsvAc14n0wjoIPgJjb7wdHR0Xw+X/k5VmJk9A2/+JpRE//wn76+1sqjJWJV
bTapVZoNn2PPJ8pWsXSwv78/rWzPnDkT8y9/7ZV6abWS5ToYTuvz4aZZcBNr
/SBAK0EHAZzFWj8I0ErQQQBnwQ8CeNd10D8xaL5WFcfgonSXVq5cNZ/wYpuX
D0Cngh8E8J5/aUzTrdHBiNfjyvJBBwHSBT8IUBUjUrWkqnlLk6XUlnwAOgP8
IAAAuExn+0HtWnAcqBsI5TwzM9Pb26tduBHzLxQKPT09w8PDqQzKnIzu7u71
9fV21Q4ANwrW+sHD6xgVUHfqT+uzWCzqq9/Hak7wq4/mT0xMtF5H/OTNI/wm
W/OaGj95/+l+k3zZw/5a2czR8cnU1FRbkjftqUyCbasJJaY5wfU1p2oja9uB
gYFYtZvCDV5F45hMgrWb9Str39zc1H81OggAdbHWD+7s7Ozu7mazWSm1ktTE
6uqqLIZZpK9aOjo6qqXqAwcHB5eXlyV5lf1eW/zUTonZEnt7e8p2ZWWlr69P
Cri9va0JfY6Pj+/v73ulETqUvNyf/gqVRZlhi1uZvBJW287NzcnTSciUrVpe
SZr3wcqiKiUtMuOGKDdNLywsVL6swLxcPa6I62+tplON5oVC+our6XK5nI7T
lIzc/dra2tLSkhpWS80wKPPz82rMsnLU5toEHQSAuljrB73SUBfmBV9G/rzS
sE06zlc/qa7PK72AS13ixsaGeuPtEpVvY2uLH/RKDWuSkRBoWhPq25W/kjR6
pw5/cXFRXkbtb5Lv6uoqK0S6qf689acWlZVJ3jSvyUQtqQkzjLKaVMKnmUbT
9RepbHnNlESazWMhvdNe61PKa/ROnDlzRnP6+/tNMqrOrKZalMDQ0FCwlSYn
J7UOOggAUbDWD0o75ALMtC8Q6tbUr6rrk6B4pXNfciLSF+V/f4ngGTNDW/yg
sVF+Aua0npKX8KnTNgNOKVWpuSyhRPz+65QVohYom9ma5KUyJmdlaA6QjPB5
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
yG+ZR+nBQfCDAJ6VVsi2fAA6FfwggIcOAjgMfhDAQwcBHAY/CGDg0hiAm+AH
AdqFbY7PQlMM0ALwgwDtwjbRQQfBTfCDAO3CNtFBB8FN8IMA7cI20UEHwU3w
gwBemySgGe+TaQR0ENwEPwjgWSkBbcmHm2bBQfCDAB46COAw+EEADx0EcBj8
IIBXoYPma1VxDC5qcGn4Scha+YQXm2K2AI6AHwTw8YWpNTqYLB90ECBd8IMA
ZRj1qWXWmrc0Sj5Vt022KHE+AB0GfhAAAFwGPwgAAC6DHwQAAJfBDwIAgMsY
P7i0tDQxMVEAAABwjMnJyenp6dPT020AAAAnKRaLZY8REQRBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEASh+H84zVoo
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 11->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
aavPi772Q198UfdLvEXwDZwXbXrNABIgrdFWjs33SyvG0etvNz8/HzgfdBAS
SJN+UOom7XO+ys5ofR15Vq2mI9Le3t5IpPDE+2SkbjfcUNeZX/qjT//KR3Me
a0Z7n8yrpxdfs/K51374/p9/x5JkyOMunZbeJ2P2XZloQuFxmfKOvRu7gw6e
uGYACdA/TrDbRJshmCTJEga+xsEgekgmTfrBsbGxVCrlPu7VdIC7spvnxHET
A/9i7u8M/iMTfb/0ax466HfchNHxRuMmZAB/7jVvkhNUAh7q0+pxE1JhZ/eV
zC+8a7lRJoybaHJN26yQbfkAdCrN+EFJnlRJfePe3p57plsH8/n88PCwOr0z
XV2OXGpifX1d5Wcymd3dXTNzZ2dnbm5udnZ2a2vLIzGjg//+vpPvljwxWjGO
/sSzkRGOo3/bZxhHHxB0EABOpBk/KMGSnElNZmZmnJmN/ODAwICjg/Pz887N
IeaxGwcHB855JNXroVBGB0M+1EXxoa8Ff65aM2MW6sab7j6M8HWEPFctMOgg
AJxIM35QkiQTVygU0um02+udqIODg4NV7zBaWFhQdfMVJIjelZoJnrNdDuqL
F77Ac7ablRIujQEklhP9oERNcmaUS9rkPE2xkQ5qZUcHh4aGqjRobW3NDPU9
kRjfu+S+z6fR5TmPaMV7l56+fN1vI2h9beWUgA5aiG3pWWiKAdrAiX5wY2PD
PKyp/PyzmhI7Wb/d3V1nsJvB7Qe3tra0vtaR9mUyGbOVxFFfVa/30wLDv4f3
kz/48dvhQ76HN//opeZd4Ye+9qSvuprnsdK1d9/b9Ht4773wGO/htU9oqrAt
PXQQksmJfjCbzbr9kaOJ5YpvkkpW6WDVW8+kQSpB67hPqEoHNzc39/f3PRKr
ekbHj65c/92/LjYvgl/54U9ubQ2pg+KRi1dOfPPFmz/5yPbBRV8V+UXHAx/9
xlMn7rvWefbq9apt0UELsS09dBCSic3Pk6mdeff3nznRmr3/K09UDdwLr4OG
By48u/zVo9oEfvvzxXv+9mKt9LQI7d3t3zx+y6erDbIss+Y3GrSIDlqIbemh
g5BMbH6+aN35MoayXbXeUCogH2QuCFYRlQ46CTz05GVpYv7RS995/Nmj559+
bCeSPJOGPk8cs48Onrhm+yWgFc+TCQM6CMnEZj84Pj4+UcGZcDM2/vpfHB03
8Y9/5XW1KzsTY2Njvqoer9CoNDceq7V/wjtnX3/fgYGBqHJLp9M+//I3pDOq
2i3XQW/anw83zUIysdYPArQTdBAgsVjrBwHaCToIkFjwgwDlmzronBg0X+uK
o3tRtEtrV66bj3exrcsHoFPBDwKUn39pTNPt0cEmr8dV5YMOAkQLfhCgLkak
GklV65YGSymWfAA6A/wgAAAkmc72g9o193ugThHKOZPJ9PX1aRdOY/7z8/O9
vb0jIyORvJQ5GEpgc3MzrtoB4LRgrR88uIlRAXWnzrQ+9fXw8NDpYzWnUCjU
jpfX/Onp6fbriJO8SUl5Kj0zPN9J3snWJC/cJWhls4KOT2ZnZ9uZvDIxyZvm
VSbOtLMv7mzN17qNrG0HBwd91a69dlqvXPOXNdPu2s3X2tr1e9avGh0EgBOx
0w+qWzNP8Jah2NvbMy/5XV9f1xF+ufIm36GhIa0wPj6upVpZq62trU1NTdX2
e5rZfh00yS8sLMgWKXllq+QHBgYkIprf39+vz4mJCS0qV97QoeTl/vRXqC3K
vLa4nckrK1W6uLio5CVkylbJaxfMW5hlUbVUi8x7Q5SbppeXl50HsDuYh6v7
FXH9INV6qtE8UEh/cTXO6OiodE3JpFIpLVpdXVXbammmgmpXY7oLMT8JbYIO
AsCJWOsHy5VXXZgHfBn5K1ce4r21taV+cmlpqVw55leXmM1m1RvvVKh9Glss
OiikGuq9NSEhMAqyXkFJmuQ1c2VlRa5HjtUkr06+qhDpZiynFpWVaUnTvCYT
5akJozhqUgmfZkrcG7W8/kySSLO5L6R3OuzR5/7+vtE7kU6nHXepelWdvkqd
ndrdraSftL6igwDQDHb6wbJLR4QjEOrWzNsrzFstpImSEomL8t+rUPsOi1jO
i6qLdt4/pQTMaT0lL1lR8uaFU9IapS3zJRHfu0lVIWqBqpntSV6yYnKWZDsH
SMbxzczMlCs6qNykNRKmusk7yD/6bX9nr9U45pih/Hwd1IQ5PDCnC8zf3V2L
ZFQHUQHcKAAkEDv9oHm5oTo39caalnAsLy+ru9Pxv77ed999jg5qvtZRf6g+
U/tS9RIobaLeW4uqrr61GuWTy+XMFUw1rLRDmYyNjZkMpd3lmzpYrrhdrawV
1HW7W0BipDma3+bkzellk7ySVNrKQYKi1i4/XwfNnm5vb+svZZY66LBKza5y
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
LS3Jj0xOTnoPxmwpar32HN3Z4AeLxWI6nT44OHDm6JczMTERVz4in89Li5XY
/Py8BFpf1VAR5gMQFZ3tBw8PD9UVn0YdlHzoT6NPdbDmjR6ni+MKhUIhwNm5
SMjlcgGeahsMG/zgysqK1k+lUme6uvTZ3d2tCc3Z39+PJR+DDod0IKp89Glu
4IkqGYAIsdYP3lNBh/TKUN1pT0+P/qf6+vq0aGdnRz2POetiDoDV2WoXtHLt
iaDp6en266BJXimpbfW/r7Q1ba6VKHlNZLNZJW/6KO2LjpbVS9T1FLu7uzMz
M+1MXm1okjf1KluTvBmS1t/fb54uK6EpV8a860hDSq05VeXoryZL6/e9k9pf
1S79Us/p1K5KVZ2EVX27ynQGyJva5+bm9FeuKkebmHICtoIfbLhf1ON8Zrzo
N6+/WoynBQBOxGY/KMlQbpow8leuHPSql1ZXabpBdXRra2vKXH2j/tGKxeLY
2FhVIeqfY/GDUg1zFki9tDkMXq+gnTLJq+VXV1e1mmyLcU+1r6ZS5kNDQ8HG
RIdBLankzYPTjZRojtEao2vKVgKkmUrPtHyt3m1tbUncjVz6RSqmMnWQ43jh
dDqtiow4apGOIpSePp3anae7lysPeFejtVMHLRk/GJJWjJvQDz7MOQHuk4E2
YK0fNF2xmdbxpJmQ5Klnkw6qfy5XelopoHkCW66CdqeqnFh00NylYOpVAqaL
lgeUjqtbMHcLyAyatNXV6zNfoaocybp2ts3JlytX1sybs5ShY7HNMYYxidq1
0dFR8zdS2qbx6xalYxhf7a+VJWqmKbTvajEzXwcJkjzzkzAv+ZLSmVd9mdrd
tUgfNV/bvu997wuw+36xwQ9GAu+jh2Ripx80A47U0ZUqLC4uSqbV6+rA0pxa
dOugXIP6vWIF930C5YqYGtvS5tMykgz1wyZ5CbfyN5moY3froHlbcU9Pj0m+
SkokB5LO9icvAyt3Y5LXXhgd1y/EeCujg0rJ3AGoP5PaXCtUXYeSBdZMbe54
+SZRRWofU3u5IqMqR+2mNKp0sFzRa1Wkr1UXnrYrqKj23GWEH2wdtuUDHYmd
flCd6vBNjDrMz8+r0zPjj9S7mj5ZX03/o72Q9Eg4qtyTU0g777pUB24qVcLS
FM2RWEupzZGGdsfkLMNlTITkXpkrf/ehiGZWFdI2nEZTm5crHlw5GMkuV3TK
7KMjiPr9SBOrbolXg2srreNXxHW04Ox4ufK3VtPNzs6aSs0NkJowJ2lVuKrQ
CnVvyNfPQ0dKvvffP/jB1mFbPtCR2OkHAU4RNtwvGlWN0T5PJjzoILQBO/0g
wCnChvGDkeB90ymSBJ0KfhAgJB3jB72xLR+AqMAPAoSkY/ygN7blAxAV+EGA
kHTM/aIAyQQ/CBCSjrlfFCCZ4AcBQtIxfpBxE5BM8IMAIekYP4gOQjLBDwKE
BD/YOmzLBzoS/CBAYA4PD6WAPT09k5OTAV627g3j6OOqFJIGfhAgGOfPn09V
UF99pquru7vbeRFYJKCDcVUKSQM/CBCAtbU1o4DukBr29fVF9Vx0nicD0B7w
gwB+KRQKcn9VIuhIYVTvTbZNd2zLByAq8IMAfpEZ/JnUi+vqoEKLIqnFNt2x
LR+AqMAPQmIZCUpPT08jETQxNDQUoNje3t7+/n7na7xtcvbs2YGBgXQ67c4w
xnxibBPoePCDkFhWgzI2Nnamq8tDB5eXlwMUOzs7Oz8/73yNvU3ULahzcM+J
N5+42gQ6HvwggF/0z9Lo+qCir68v7gQDwvhBSCb4QQC/lEqloaGhuiLYfUvX
5uZm3AkGBB2EZIIfBAjA3t5eOp2W6lWJ4PT0dNypBQcdhGSCHwQIRrFYnJiY
cKSwt7c32qerMY4+rkohaeAHAcJw/crlfD5fKBQiLxkdjKtSSBr4QQA74Xky
AO0BPwhgJ7bpjm35AEQFfhDATmzTHdvyAYgK/CAAACQZ/CAAACQZ/CAAGBg/
CMkEPwgABnQQkgl+EAAM6CAkE/wggJ0wjj6uSiFp4AcB7AQdjKtSSBr4QQA7
4XkyAO0BPwhgJ7bpjm35AEQFfhDAThzdqXrFYe1qTS71tWEb8vFe6m1OASIE
PwhgLW4tMNON1MFjaeANW5RPmGwBWgF+EAAAkgx+EAAAkgx+EAAAkgx+EAAA
kgx+EAAAkgx+EAAAkgx+EAAAkgx+EAAAkgx+EMDQnsekBE6pbdkCJA38IICb
dj4mpRkNakM+zgrIIiQT/CBAXFglOlJDdBCSCX4QIC5sEx10EJIJfhAgLqwS
HfwgJBb8IEA5JivkXaNt76MH6FTwgwBlKyWgzfnwqiNILPhBgDI6CJBg8IMA
ZXQQIMHgBwHK6CBAgsEPApS5OgaQYPCDAHFhm+Oz0BQDtAH8IEBc2CY66CAk
E/wgQFzYJjroICQT/CBAXNgmOuggJBP8IECZ58ncrBEdhASCHwQoWykBYfKZ
nJxcW1vzuxU3zUIywQ8ClDtOB/v6+vSvHWEyAB0MfhCgHFQHe3t7HbmZmJiI
PCW/m+zv7996660DAwOpVEqfCwsL0aYE0JHgByGx6Ge/tLTkfAY4Kzg2NpbN
ZjWhz/Hx8ZA5TE1NzczMOHP8FnVwcCDt29nZ2djYkCgfHx/LFYbJZ25uTuVU
tVK8n353B6AZ8IOQWMaeT4ASMpmM+mcpzuDgoGTI7+ZyfO4EpGJDQ0OB85md
nV1ZWTETykoTo6OjfvNxpzQyMiIlHQuHDg+cT+91aqdr1/HbJgDNgB8ECMz6
+vr09LR0Z3V1NcDm0V6RlGxtb29rQmIqV1gqlXp7e/3mY9tFUoA2gB8ECEwu
l+vp6ZEABds8WtEx5zBlTlOplD7nKvjNBx2EBIIfBAjM4eGhhCPwnZnRis7+
/v7o6OjAwMCZri5J8/LycoB80EFIIPhBgHJQCVhZWdFWpVIpcKWBlzZicXFx
fn4+cD7oICQQ/CBAOagE6B8n2G2izRBMkmQJw/wvM5QeEgh+EKBspRWyLR+A
TgU/CFBGBwESDH4QoIwOAiQY/CCAgUtjAMkEPwgQF7Y5PgtNMUAbwA8CxIVt
ooMOQjLBDwLEhW2igw5CMsEPAsSFbaKDDkIywQ8ClGOSgFY8TyYM6CAkE/wg
QNlKCYglH26ahQSCHwQoo4MACQY/CFBGBwESDH4QoFyjg+ZrXXF0Lwq51Psk
ZKN8vIuNMFuAhIAfBHBwhKk9OhgsH3QQIFrwgwBVGPVpZNZat7SZfOpuG2xR
4HwAOgz8IAAAJBn8IAAAJBn8IAAAJBn8IAAAJBmjg6urq1NTU/MAAAAJY2Zm
Zm5urlQq7QAAACSSYrFYNYyIIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAjF/wcFwUTa
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 12->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnX1wbGd9352YLCCKkiqtMspQzaAZTanSOH+ovUXNLIUoVQbEtqBQTV2F
MmJAGUSikE27jAZap4LeOCoiRYNKrI414Xo0YA0lNkYQYUYBGUTYFIENAotg
axwV2TL22vf6Wtfyvfbp9+4TnTl3X86ec/bs7nP3fD7zm52z5+V5fueR9vme
73l7Xv3O3xub+ukbbrjhD16mj7HJ978hm52c/c2f05d/N/MH7/ntmXe/640z
/+ndv/3u7GvfeaNmvv+nbrjh32v9q9MAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1XAAAAASTD6fHxsbmwAAAEgY4+Pj
a2trt9xyy+Li4i4AAEDC+OxnPys1lA5qotWuFAAAoNl897vfffvb344OAgBA
MnF18O677251LgAAAM0GPwgAAEkGPwhg8H+YKK6lkVNqWrYASQM/CNAqbNMg
ZBGSCX4QoFXYJjroICQT/CBAq7BNdNBBSCb4QYBWYZvooIOQTPCDAE6LJMC/
xpbkgw5CAsEPAjhWSoBt+QC0K/hBAAcdBEgw+EEABx0ESDD4QQAHHQRIMPhB
AABIMvhBgFZhm+Oz0BQDNAH8IECrsE100EFIJvhBgFZhm+igg5BM8IMArcI2
0UEHIZngBwEc3idzWiM6CAkEPwjgWCkBtuUD0K7gBwGcttPB8fHxpaWlGJMB
aGPwgwBOVB3s7u7e3d0105lMJvaUIm/b09Ojn3aMyQC0MfhBSCzHHqLp4PDw
8Nramib0OTIyUmcO54t4UwpbmkR5bGysr68vlUrpM5fL1ZOPSenYJsLuDkAQ
8IOQWG64lgglzMzMzM3NSSz6+/v39/frz6GefJSAtG9ra2tlZUXmVFnJrsaY
jw2E3R2AIOAHIbHs7Ozo/9/9jFCCFGdiYmJqampxcTHC5urYvTmsr69vbGy4
X8OWpjTm5+fNhNTZKdrVsPl4U5KkqlvYKeJtqBZ+hm0TgCDgBwEik8/nu7q6
hoaGom0er8EZHByUjGpiYGBAEnZychLWD+K5IJngBwEic3h4aAxUtM3jFZ1M
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
aD66tZQcvTQt/FNy/3n8twq4KOzSWPKJMVuABtFOflDd7/j4eMVF/jqoX7cE
tOS8qJAfDDuitxREFYU9qDBbKfr6+rwXASVMm0W0SDplRrsrVxmp55kzZ4JY
OSUmue/u7laBr3z5S+fm5tzSShadPXvWW5F8qPcSpJrLTGgdJVnRg19fmB6+
+Z/RcvNZIfiiCJnUn089GwI0iHbyg7u7u9WGAvfXwdXV1f7+/vKbPFWglCJU
DtV0UCo2cy3r6+vuUv3w9YeQzCl/+UFXCqVKEkGlIRuoT01LB0tK1oaa6WN1
vRQKBWWiT+NeVZccXM1FTnH8WW853rO12pHe3t7BwUElrxKuRzMIAEmmnfyg
ZKLa6G8+OijNktxUvKolUSg3if5E84NepDiuyoyOjnrPRpafF5U4SsHd64lh
WVxcrHii1SwaHh52v7oG0Ck2y+zsrHdlo6FGxLVVxVPTAAB20k5+UDLntTBe
qumgFKT8eQqX/f39kg4/CBKmc+fOlcyUNOxci2s/SyQ4l8vpL2KmJUbea5TS
R81xv6oQ1VXtZh6ZSv1ZvWdZndPrjN66XM31WSSZ8xpt7Z33v8X7vInWrPMw
AACgybSTH1RPXm7f5Ji0j3Ir6p/VgWvalYaFhQXNlI7kTylRja2trXJFq8nc
3Fw6nda2kldtbmRC9Upz9dX9NPIn4ZCHkttaX1/XJvPz8+ZSoLtHUjppnyRP
n96Tt+aioXne0CRf8uChhEwreBtEdakE/a3NNUdNdHR0mLtr3EXmKqR3kVM8
qevqrzROa7oNpX3UV9lwTaipNaENS5oRAMBm2skPCtdJuQwNDZXchGbupTGP
y5VEifvT1win+CR8Z8+eHRwcHBkZUcPWfLeMqpAiKysJotxfiTk1z9HfdNNN
3ufoT05OypPv6+vzbig5UwIlD1MoGbcuia/XivoskrKPjY1JWDVfSqdDJnOD
qFkquVRDqS6zYZDbVgEA7KGd/KBTvHOy/DG6ijeh1bznTVrjvShmG9HuPIyG
964YAIA2o838oFM8HxhLOeZcXyxFXe/YfDwAAFAnbeYHneKbYWK5X7HaLTdJ
Q77YvV4JANB+tJ8fBIhGXO9ICfUGleApNS1bgKTRfn4QIBr1vHol2tKaGtSg
F8X45IMsQgLBDwK0CttEBx2EZIIfBGgVtokOOgjJBD8I0CpsEx10EJIJfhDA
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
u1NSTkt0UDXKQD13+QWTgOmi5QGl49JByZ++ygyatNXVm+R3dnZKykmn0xF0
pE4kQ3LWxv3Jg7sW2xxjGHOqHVRu2i/9jfKnVCxNxzBhr89K1ExT6IBHLWZm
6iDByK5TVGFlqMMDfWpNU7u3FjMEmLYN/l61ljgRqzp59zRsqxO5BtvygbbE
Tj+oPk1H/uqK1d9qenZ2VulJGWWO1Aeqe/TqoFZTv3dUxPTeLtpkbGxM85t8
t4YkQ/2wSd6MUKxMJIjK3NVBpWpGK+7q6lKGWsErJdpQzkvSafxOM5OXgdXB
hklee6EGVA76DzHeyquD7p/JeDdvIfq/0kxt7nr5gKgi6ddxEad4VlblqN3M
LTdeHXSKd8LIa2uFkrenbhRRUcHvMkIHHQbdgKRipx+UV5LkqZfTp1GHbDar
r2YcQ/WuZlRfGcOVlRWnuBeSHvkIdZjectxCmnnXpTmZKW666SZpiuZIrN17
F7U75qKVhMNcEJSvUebK33soYu4wMck3+T4Zt161uVP04PrqGiszIZEygihJ
0v+PjkOMuLuowbWV1gkr4tI703pG6fS31oRpRlWayWTMhLkgqMJVhWp3baMX
/XsE/69GB/GDkFjs9IMATcZCHWxJPj6VtkSS0EFoAnb6QYAmgw7WHHcJSYJ2
BT8I4KCDAbAtH4C4wA8COOhgAGzLByAu8IMAjpU6CADNAT8I4KCDRbhfFJIJ
fhDAQQeLoIOQTPCDAA46WAQdhGSCHwRw0MEi6CAkE/wggGOlDvIcfasqhaSB
HwRwAuvgzMyMWbOjo6P+t6DbpoOO79P0SBK0K/hBACeMDk5MTEgsCoXC9PS0
GQeqnkojL62GMkylUo0Yq6seHVQ/093dHWMyADGCHwRwwuigOyyyzKA2MS8S
z2Qy3nd9DwwMmFfB16w08tKKHB8fd3V1KcPZ2dmw29akHh1cXl4eGxuLMRmA
GMEPAjhhdNCMRyz507TrccyoHGZ6d3dXYhRk1MvYdVByI0VWAkos9mE3o+ng
4uKijgo6Ozt7enrcJgKwCvwgJJZBD2GvDyokdu44XycnJ/pqhkHM5XJTU1NB
ElAh3hx6irhfo+2ROaBNp9NmVK8IJbj09/dLv7xzwpZmTiNLkXt7e3d2dubn
5+vJBxmFBoEfhMSy6CHU9UFNHBwcDA0NmfGgDdPT0+ZspPr8ra2tIAmoRjcB
FaUSstmsOyfs7kiUJaPmRpfV1VW5sLAlmEZw89HuqHPQRLSU9vf3lY+OENRW
HR0dSsyMHxo2Je+fKezmAEHADwI4ka4P6rcju3R0dGS+5vN5KaC6+uA3z8R7
B6b5IZtpqU93d3dY3Yn34ZH19XUdKjjFk8byp5qoOFxyzZTiygegGvhBACf8
9UHD6OhoLpdzvw4UccUoSKUh06xKoVCQ55IFc+cosUwmE6qQeHVQBwbSYh0n
yOTKWu7s7PT394ctBB2EJoAfBHACS4C6dK8OynDJEkqDzNe5uTkVsre3F7zS
CKlWZH5+XqWlvLzkxlDJOA14mcDZs2flkdVE8sjmBp6wJaCD0ATwgwBOTBKw
uroa6l4O256jb8T7ZI6Pj6XJ7qFChJSibQgQHPwggBOHDqrDHxoaWllZCVVp
5KUNIvb3ycgyR7hjB6CZ4AcBnLp1UL19R0fH6OjoyclJqEojL20+tuUDEBf4
QQCH92wHwLZ8AOICPwjgoIMBsC0fgLjADwI4VuogADQH/CCAgw4WYRxeSCb4
QQAHHSyCDkIywQ8COOhgEXQQkgl+EMBBB4ugg5BM8IMAjpU62B7vk6kTdBCa
AH4QwEEHT4n9fTIA9oMfBHDQwQDYlg9AXOAHARx0MAC25QMQF/hBAOdUB5sf
/ilVS88nef/9CrU0lnxizBagQeAHAQzm0ljzP6NlGHxRnUuj5dO4bAFiBz8I
AABJBj8IAABJBj8IAABJBj8IAABJBj8IAABJBj8IAABJBj8IAABJBj8IAABJ
Bj8IYIjrHSmh3qASPKWmZQuQNPCDAF4a9GKWiouCaFAT8nFXQBYhmeAHAVqF
VaIjNUQHIZngBwFahW2igw5CMsEPArQKq0QHPwiJBT8I4DD+4GmN6CAkEPwg
gGOlBDQ5H8Y5gsSCHwRw0EGABIMfBHDQQYAEgx8EcNBBgASDHwRwuDoGkGDw
gwCtwjbHZ6EpBmgC+EGAVmGb6KCDkEzwgwCtwjbRQQchmeAHAVqFbaKDDkIy
wQ8COLxP5rRGdBASCH4QwLFSAurJZ2xsbGlpKexW3DQLyQQ/COC0nQ729PTo
px1jMgBtDH4QwImqg93d3a7cZDKZ2FMKu8ne3p6cYF9fXyqV0mcul4s3JYC2
BD8IiWXOg34CEc4KDg8Pr62taUI/n5GRkXpyUALj4+OTk5Pu17BFSQSlfVtb
W8vLyxLl8+fPyxXWk8/09LTKmbOGCG0CEAT8ICQWKZeEzHyKCCXMzMzotyPF
6e/vPzg4CLu5HJ+p2uQgFRsYGBg+JWxpU1NT8/PzZkKqoYl0Oh02H5OSyWdw
cFBKOhwH3qZ2GzzU5marsG0CEAT8IEBk5LwmJiakO4uLixE2j/eKpGRrY2ND
ExJTucKTk5Pu7u6w+dh2kRSgCeAHASKTz+e7urqGhoai3WkZr+hkMhljTlOp
VKFQmC4SNh90EBIIfhAgMoeHhxKOyHdmxis6e3t76XS6t7dXOihvuLCwECEf
dBASCH4QwIkqAdIabXV8fBy50shLqzE7O5vNZiPngw5CAsEPAjhRJUA/nGi3
iQYhmiTJEtbzW+ZRekgg+EEAx0orZFs+AO0KfhDAQQcBEgx+EMBBBwESDH4Q
wMClMYBkgh8EaBW2OT4LTTFAE8APArQK20QHHYRkgh8EaBW2iQ46CMkEPwjQ
KmwTHXQQkgl+EMBpkQQ04n0y9YAOQjLBDwI4VkpAS/LhpllIIPhBAAcdBEgw
+EEABx0ESDD4QQCnTAfN14ri6F1U51L/k5DV8vEvNsZsARICfhDAxRWm5uhg
tHzQQYB4wQ8ClGDUp5pZa9zSIPlU3Dbaosj5ALQZ+EEAAEgy+EEAAEgy+EEA
AEgy+EEAAEgyRgcXFxfHx8ezAAAACWNycnJ6evrk5GQTAAAgkRQKhZLHiAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCUPx/7K/Zdw==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 13->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
RVEURVEURVEURVEURan+P5Iy4bY=
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 14->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
d+/9dOSqCinLwfSvfCVSYUdHh179xt8OUDcyuj4Yvu2qNgdj9oMh99j5C0tf
UTOouFHb9aq5z1S8vlIsZg6+de18yB2c/tTtH7y15SU/+657wvwi5KBpa2vz
wqV2v1ScCnd2dlRYV1dXU3Ozfk5PTydYGJBpWewHBwcHw++y7Jj7wTd+Nuig
EuXjR175mpaXd1RMqNu/cCFmDoZsVBWCiuafeefHQ9af6Ry862ZxUmZoaMhe
Sern8PBwtI3YWwT+kvTE1N89foUKQWXfxsbG0tKSHvP9/X11hYlUKDE/Mww4
l8X1QeVg+K/CVZWDr/3kuZj9YFXLcIo/5WDFj7Pa/sBj5uA7NirvU/QVv/dR
hWCY9UqrSg9XpnOw42ZxcnBqaurUqVO5XK67uzvyfyFLGX9JLS0t6jTjVzgx
MTE/P28nVGeh+CRKpEKJeSxmwLnw/eDc3JxeT3r/1FO+r0jP00Ovr6dbf39/
LT6roKfw351/ruJE/QtLX/n5Dz7woz//OgWNTvyHD29XvIlSLGY/uPrYs8F3
8W+nFjQGFzY0/s2b3v3CW65/LLNiDqr/jfPZBuVgxQNMKP40xakkPVY2wnxv
4vf/4svXDq5GLqxu3hdVn6XnkVImzsuV2u1PRs/TtbU1nejt7V1fX8/n8+3t
7bWoEMiikOuDeuIo1PRat+T8/f39o3Jwc3NTm9UNE6v1BuVgmH22eJ9FsdHy
8o6KN/l/37kSsx+8nK+wZ1HFTVvPK29teYkSsLWrV5n46j9/vOL7oiosZj/4
xX+o8Alb+zKjfygTg9NZPzWp1k0OxrG1taUnwqFHxgyvdimjx1mvdfVsbWpu
1ivYyaII2yEHUZdC9oO6VK94Ozo69FTyn6+p5qgcrB17S6ficee97+h5o2IO
5q4cxOwHC5W+Rx9hqO1SvMbsB/MH14IP0VjVw2WXvvaT59ifjNnb21NAbG9v
x9lI7b6ivrOzo4zu7OxUDqo3tPdII+BL9KhLIdcH1QyqUdLTp6RtLO8HlSND
RXrelbx01Lxkn1jr7e3VFTR12PmaS/XcHBkZ0b2cPn26Ys32qvv+b1Q+sFFV
E/vb/vJ6PfH3J7O4HffARiXDDkQYf79qFQ87WO3LhoUHnyQHjZ4a+t+e8m8s
zs7O8jFRoFyYfjCfz2uG13M8l8uVLCsE9IMKxJIc1MvR1dVVO624sUlDJxSL
lom6I2VcxS832f5F1SJFOAZ9QAR8/YnnC0nkYMW3Rqsd39q//t5y/Bzcfaby
m8nhv2OoB1/dATlo9AzSC7lju7to9OS65557XFcBpE6Y9UFdNDU1ZadbWlr8
S34B64MlOah8OXRlQXetXFtcXNQ8r59hdnbhrcKEaQlDDvVKXp3B9x7AO+5S
+K/5VxzeMYITOe5SVR9nDR4fffj6O+TkIICsC9MPKneGh4dHi3p6evyJWbEf
9BYUdEeH5qDuWiG746OuM7hm/0e+k5rYc1cObIOJ5KB+61/7dAJH+nvD6ne9
BzCRHNTWQn7TP3jot7MN1lMOpv8TIOmvEMiiiuuD9qao9/EYxYRaQv+lRy2L
lL8vqn96a4K6od1KBShbq5qy/J/Ku5z/nsIi5qxu74h6v2D4Skp4OVhI4pD0
Y/d+59yz3/8oZiI5KBcuHcQs7DV373rpTA4miOPwAk5U7Ad1vq7gP6fkiTA/
P6+WcGRkpORqJf1g4cZbowqL/v7+9vZ23bV3F03NzUNDQzq/o6PDy8qjeMej
NzGj8O/OP+ffWlI5WIh3QN7/+H+uHwTKv7WkcjBmYRr+vyk5mCByEHAio/sX
LT/z7euh9htW0nCVZE0h0RyU565eq3ZPa79cfNdR4V6yqQRz0ERIwNd96lzJ
RsjBBJGDgBNZ3L9oST/o+eI/XA7/CdL/+beHr0Imm4PmvkefUX8XsrCPnNk/
dCOJ56B86KtPhSxMV7v/G4fECjmYIHIQcCKL+xcN3muHpmu1YEdN7+poFref
DPg6cC1y0Nz9yDNq9I4qTBfZJzCPUoscNEregA/PqDDl+FG3raccdC79KZP+
CoEIstgP9vf3P1z00JmvlfwUJbuduO+Lf/v7f/Hl//pnf62hEytfeHB7e/vh
G0pu5YmZgw8fxitJJ3SP5YWVl1EuTg6eOnXK/4ufuZlXmyrxF6Y6rTC7jveI
+cfKykrkqmR4eLjiLx5Z5nIw/XtrSX+FQARZXB8EACApD2ewHwQAIClZXB8E
ACAp9IOASf8nQNJfIZBFrA8CxnnK8L0JwAn6QcA4n+HJQcAJ1gcB43yGJwcB
J+gHgRI223vjeC496iYRiqx1/SErBLKC9UHgUPad8aO+OV6jS6v9onrFTTmv
EEg/+kFZWVnRgzA7O+u6kJvs7+/bgYlVmHfcq5TQf5jR0VEVlsJ9tuRyOdWW
tkcMQGqxPlgo7n5zaWnpqN13u7K1taUmXX+ghYWF7u5u1+XcZHNzU6+gVF5X
V5frWkr19fW1trZWPJozAJjM9YP5fH72hpaWlu3t7bNnz3Z2duq30Jy8urqq
60xNTU1MTIyMjOicycnJQnGXy/39/WoTFHaH7ttZoRM/B62qmZkZW0PZ2dmx
wvRzfX1d56gq3YsK0zlKXrtVT0+PShoYGFDrd9SW9ZtG7rx0Q+8RU2FqlPTL
tre3j4+P6+fu7m6heAgP1akyVJjtMlT/MRS+OlM/j9qJ6N7enrYQrSq7uR4r
VaWHpa2tTefoMbE7VRlWmM5XbXpkFG36W+sc/dSf1f7c5W/m63+y/g/o5hWP
YgkAJrvrg9PT0/ZOpiZJK14zvPJCQakc1KV2tabm5kKx45ubm8sVaba3GdUv
kRw02o4d30FTuh7eQvFB7u3tLRRzcH5+vlDMJksQPfgbGxuqSsUflSnqB5VZ
8QtT1K6trRWK4WLtkr2E0InBwUELOz0y9jjoyjqtqymPVJgeVf+mdH5r0cM3
DqYcmbasVwJqMHVad2T5pWLsVYFKtT2fqww1ejrR0dGh0ypALzPsUfXomvYi
R78U/SCAkDLXDxoFjdfWaXr0DhJhjYBy0Pqvwo0c1KSq3/GuG6zX8EsqBxXN
llma3hXKdqZ3WjloSVS4cZAmZeXp06e9wso3qBZpeHi4JIYi0F/ZO2KFvVqw
wqwR0+9uj6F+2mGtdL7CyKrSiUMLsDSMWZi6Y2uNtTVlnJ2p1wl2WmVYI6zX
CZZuXmH6WfKfVnlq8Uc/CCC8LK4Pqk/xNwIKRC9c7P1D5aCaLDvH3qJUBOjX
DNhmIjmo8PWvl1nnUii+QWoLfIrIkhz0UuBQi4uLCsGYVRWKx13yd5ReuCg1
rAnV726lKgf7+/sLxVcX3mN4lPzBNXujNXJh+o+nP5b3Tz0mtrXV1VU9Mlaq
RbDloE7rHo/KuMnJSf2a+kNrO3rlE//FA4BGkLl+UFO3ZkLl2mKRZm/9Cmr6
NAdqSrc39/w5+MJbmwo33odUp6OLvHcFPTMzM5p1dQU9FHHeT/MXVii+xlAu
6x41LVuvV94P2glFua7m9Y9GfxFd9PobIhdmZSzeoIdCNegRs3VMawP9OWj9
oF5s6FLFigKl5MMwc3NzOkc1a7NxXjxsbm4q2qwqNcW2ZZ2jP6XKs8JK+kG7
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
GAwGg8FgMBgMBoPBOObx/wFjhfr0
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 15->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
Aj16dHos7oNfvQEz2TZWzxn02Ds7O7VScR8NALuixnJQE7um5fzthw8fzs/B
iYmJsbEx5ZdSsuD8r5R0zwVdUztzfX1dd6S40cqTWS63PXjw4P79+9W6qkez
c7Cnp8ccF/OgtK6sNBctLy83NDToTncqvqCKB1xZWbFfJtUDjF5T7e3tVbbq
kWr36qmF1isIUwDYLbWUg5p++/r6Cl5UMAcVgpr5TdfW3NycvwfUD2r+L7cG
jVbWzlRtjY2NiiGt5+SgyjuYpTF1BRVTX19vUkZ3UVdXt2/fPl2kFbV1LulT
8YAKPvXa0a9RU6nraISCPTgAeKGWclCPRQ+k4EUFXxdVR2PeE9RkvrS0lH8F
DaiesawadspBhc7IlXSPmeyrqerRFH/manYOaig1icoslaGuTT9NbJlL1dBp
zHQ6bfrQ1tZW9WIla6t4QBVsD2W/uKpbadi2trbx8XENTjMIwC+1lIOakOfm
5gpeVLAfzNHb25vT1ygaRkdHy6qh3H5QBee8n2iW9fX1TPZlTPvVSA2rLQXH
UYBGr3AWUfGAdg4qK3M+RKQt5kO5Ss+uri79WrISAEiIWspB8/5UwYsK9oP2
O4nKL3U0OTGq9KzgU6PNzc35caz7Wr+SuXcV9qRFd6dg0or55KrCyP4kj7qw
qHPMeRt0bGws5zM/6nZ1WO2/jKh4wJzg06Oz/7XYH7LVNct9WRgAdlct5WDB
9s3ki7oVzc+awLVuomFtba2xsVG5qXBcXFzUnN/e3p6TBSsrKzs1mEVMTEx0
dHTotroL3dzEhO53Lmt+ft78NB1fjpz3B1WPUlUbdWX91Lr5WwbFjdbv/OQn
Dh48qDtSSNXV1enu7KG0K/SQc3ZIZQNq70VxqX8numYUr9p7TU1NBw4c0Ioe
o1Z0Qz4yCsAjtZSDoseSs0WRlPOSY39/v7lIWaAJv7u7WwmoPZD/53K6tOCn
T4tT8CkKNaZGVrKU9Vd4OTmYyf4lyMjISGtrq37an1TRsJOTk3osumh4eDg/
ehRnKiD/cz4VDKido+2KVN1ESbe0tKSnDdEVFJemjdUN1WAWzHcASKway0G1
WkU+4Xnxwnn3oba3txUHcRTlPftTMQBQY2osBzPZN7ZiGce81hfLUL7j+QCA
GlZ7OagHUsGLmflK/hlCINQXm79tBICaVHs5CACAO3IQABAychAAEDJyEAAQ
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
xZWDmth/8+Fj1RSmXDh97uVowNrOQTl2+ryORTV7bHItHT2fyZCDANyUzEH1
a+Pj4/YWpZsdeSsrK+3t7com+68LM4VyUPPS0NBQW5ZWovcKDx061N/frxG6
u7vHxsbKzUFNfSX/er1I1jx/6rw9Wlw5KEqxij/UesdDx+wQzASQg5nsielv
X6owCqceuSIEM+QgADeefq9a/sb7Nl4s99MpE995wXwExRZjDhoVvHL7+fUT
OVN6JowcFB2Rcht8Hff7nz2VPzg5CMBFzeRgJttNOL4rpzbw0SNnCg4Sew5m
sp+H/Mi3jju2gU8fP1twkEBy0Pi7zTOOjeHkWjqno4+QgwBc1FIOGkpD9YYF
P3TxvsXn1Wo9lXqpyM2vRg5Ghak3LDi9/+JfPf/Fx06av3rbSVA5aOhI6XgV
bPOHv3FURzn6aGhB5CAAFz7moOKmZ2fdl1du/Q/vfvOtP/NTb3/nLW9/55s6
fuZt73h3d/elC83PnVSZgzmV/HgxrMJUzy1XFpZfU/eVSzU52NraWuQhu+i2
2Ns7OjoqrkoaGhoKPthop5mLtIt0HH/qbZcWHVPtwGKlXr4tOQjAhY85CABA
XMhBAEDIyEEAQMjIQQBAyMhBAEDIyEEAQMjIQQBAyMhBAEDIyEEAQMjIQRka
Gtq/f39XV9duF3KFw4cP9/X1NTY2trW1mXNUJUdHR4f2mAqLTpiVHGtra3v2
XB+dzQQAivMxBxct6XRaWzY2NpaWlqLvutSD0vaVlZXl5WX7zInLWTnnScxk
T/yk21afg6ohKiyqROvm/IyZ7FkXNzc3VdjBgwejwrRFVdlboqp0kblVfX19
xd8SphtGValCM44er9ajwhRn2j+qQbVFN4z26k53rawp/pWqxelA2IWZjaYw
PXbzqzle2mIHrsq2D3fOg21tbVVGk4MAHPmYgyY1FhYWGhoa1DRpSmxpaTlw
4EBPT485VeLIyIgalqmpqdHRUfUsmWwINjU1TU9PT0xMaJ7Mn9hjycGoMJMO
2qW697m5uc7OThWTyTae2qL1/v5+FZnJNn2qZ3Z2VoWp9Ss4rIKgmrjRg1VV
qm1mZkZ3oV8nJyf1YOfn53XX5rjr1+7ubu2faB/qUWijilfNptScMbXHdKlG
qLgwPS5TmP75mXF0R2qBdShVp4k5PXAdSu2f9vZ2823hWu/t7dW69mHOmTFF
Fym+dXPzBAkASvIxBzPZeViztGm7NIFHXYymTc2uij/N+WbLDXv36qce4MDA
gAJIEaAZVdNvzoCx5KChZsT0WSrGzMZq60zGDQ4OKn2iUjPZANJkbgorGHZ6
pKo8ejgVM88EzLeIR92l9pWeS5gyzD5UiJjTeeiphSlM6urqcp45mFMqmzCt
sjC1fs3NzabzjQrT4TDf4L1v3z6zRfWrJK2rGFOVnjnoEdlDKbu1USva2/SD
ABx5moMKFAWHWVeHpdnbrJsJUG1FlIwmBxUlanY2Lst/aTSuHNTsrdnYvutM
NjVMxik71P6YjWaLIkClRoXljKYb6uiYub0aGkd7KdonUa5FhemxmyRSUOp5
QiZ7Jgjtk50Ksx9XNad1ULqpMNP66aDoKYTZHq3bkW26PG2JqopePjV0E+0r
84xC/6Q53wQAFz7moCY65WD0q8LFnJNIj8VMnnYO7tlzfSb7zp2Z3jPZGfUq
vS6qSrQno181oNmraj9Nd6Oyc3JQPZcy2mzJeSlPRfb29lZzuqWIebEx+lWB
YqJNxZjdolJNqxjloO46akJz4iY6NZWecuS3iu50Q/Xy9j889XemldZuVFOf
ycaxnYOZ7DOH6CYmuyPR+7O6VfWNKoBAeJeDCgtFW9dl5iMxmrTbs8wsmt8P
ai5V4rS2tiqP8s9M19PToxlYU3pLS0s1r6fZhWWyMaEVVdXZ2WlyJ78flOHh
YfVEuo7KsEfTEVHxLZdVXJgiXuNEhSlQlGu6R1OYCd/8flB3Z/aq9pgqtAc0
b8g2Z1UTNzpG2gmmKvPYVao5jrpr07Pn9IOZbPbpCKp+FbZTp8zrogDceZeD
AADEiBwEAISMHAQAhIwcBACEjBwEAISMHAQAhIwcBACEjBwEAISMHAQAhIwc
BACEjBwEAISMHAQAhIwcBACEjBwEAISMHAQAhIwcBACEjBwEAITMxxxsamq6
y82dn/zEJz48puXOj33U8SaHDx+uuLD6+nrXwj720XILm56erriwvr4+x3sp
19DQUMVVSUtLi+MdXdpjH/rgJ8c/5L7HzInsAaA4H3Ows7OzyKUvnzu7vbF+
4pv3phY+d3TuU9Fy7Kt//MLS3IuPrVx48WSRm1eZg8UKO3vm9DOPpJfnVUlO
Ydp46slVXaHIzavJwbm5uYpvW9za2lo1N1dAF7n0/KmTLz76sI7a0a982t5j
qXundXy3v/v4xQvni9ycHATgopZyUAm4tbaUM2cWXJQ759JHCw5yNXLw5TOn
T357sWRVWjS968oFBwkqB3V0dIxK77GvfHpr7a913AsOQg4CcFEzOXjmuWdy
+qySi6bQ/HFiz0E1py7RbC9qWvPHCScHf/SdB8raXWr8X/rBP+SPQw4CcFEb
OahEK2vmjJbj99+T003Em4MnVu6rrDB1QzlDhZCDOhbHF2cr22P5Tx7IQQAu
aiAHKw7BH3cT907bURhjDjq9srfz8sLSFeFV8zmoo6BjUc0ee/HRh+3ByUEA
LnzPwdPPPFLNzJmfOHHlYJXpbJaTf3NfNGDN5+Clz8NUvcfOPPdMNCA5CMCF
1zl4Ln20+pnTLMpTM2YsOXj+xPG4Ctt+9gkzZm3n4IuPrcS1x6LPA5ODAFx4
nYPH778nrsnz0vx5+keZmHIwxqqO/cUfmTFrOAeVXDHuseOLs2ZwchCAC39z
8OyR78c4eR69/PHR6nMw9sJOPbmaqekcLPcDoqWf0mRbQnIQgAt/c/DEN+8t
Phl+487/+gv/vm3Pnutf/S9f6Th/vnzubPU5WPwuvvfFj432vuMNr21QYR1v
/LePf3asZFWphc9lajcHtc+LP/zn7v649tjNN9W96sZXaOUfv3RnyT1mPm27
tbUV06MEUMs8zcGSk6cWxd9PN71Oi3sOnksfvao5+Pyf/d7Kp+54z1vedM8H
+ud+Y0ArSsO1P/yt0oWlflirOfjSD/6h+GPXcwYdRO2uuz/Qryj8NzfXOz6l
oR8E4MLTHFQuOEbbcM+t7jm4tbZUZQ6WfFFUUWj/+vpX3/xL73hrycJOPbla
qzno8qLokcs77anpD+uZgzr90jl45jQ5CMCFpzl45rlnrkYOpu6drjIH3d/q
0tz++GfHbr6pTp1OySuf/PZireZgWX84756DajPJQQAuPM3BFx99+GrkoJYq
c/D417/gci9qAzWfa/kv3be6XD/94JdrNQfdv3ROzxy0u7TrXK6sfyHkIAAX
nuag+1+pX+McPPYXf+RyL+oEVz51x2jvOxSFWil5/eP331OzOegcgp8f+vkb
9u51eTtVixrzkjnYXaOqOSJAgDzNwcT2g+V+M9h73vImlw9+vLA0F3IOKgTv
/kC/4yuiZnHpB8fHx/Uvv/Z+VnNEgAB5moOXTuJwFXJQ3VyVOXjy4YVyc/BV
N76i5NVOfPPeWs1Bl1eS78mG4P0f/VX3Hbv97BO8LgrARcU5ePHC+ckszc/L
y8suc46mskrLvIJy0OVv1Z+a/vDjn/mdX3rHW2++qe7xz465/KXeiZX7qszB
kh/guTv7FxNrf/hbWswLffpZurt5bKVWc7DkKTlMCOqnjqY5js/d/fGSe+z8
qZPkIAAXFeegJhnN4fPz8wcOHBgaGmpsbEyn08VvElcOdnV1uXwTl/lb9Whx
efnx7Ob3rvbf0SsEf7rpdTf+ixtUkir8g9ve69LdqLBazcHt7z5e/LHrn5l9
HLW4PHPg7wcBOKomB+vq6qJfBwYGlpaWit8kxhzMOHy56PN/9ntmOXLln+wV
mzzPnL7aOVjJ8pVPq/uu1Rx0eUpT7nFM3XtpX5GDAFzElYPKJg0VjdnZ2dne
3t7W1ra4uBhdRzk4NTXV2tra3Nxczbv55nvV3P+E0HExX8ZVfQ6eenI13sJ+
9J0HMrX7vWqZqk/UmL+cPfL9DDkIwE2Vr4tqHuvt7VUIHjhwwGzf3Nzcv3+/
ycRUKtXY2Bjl46XvEMtOm+l0WlG4urpaWc0mB9UipRY+F+PkeS59NJO8800c
vfyt0TWcg/F+M3l0hg6+XxSAiyr7wbWshYUFpaFp/SYmJoaHh6Orzc7ORr/a
r4sqNwcHByurOTrvUsmvpnRfTn77x31rLDm4/ewTcRUWnWO9hnNQTv5NiU/L
uC+mGczQDwJwE9frohqno6Mjk/2brLGxsWi7hh0YGDDrdg7a+Vgu+3z0yq8Y
Ooiv/vHLZ8+YAeM6H30s50aMTqWXqfUcfPncWR2F6veYOXmWQQ4CcBFXDh48
eNB8kYUGbGxsjKag9vb25eVlsx7loC5tamqqeAq1c1Dz5wtLc1VNnv/9D86f
PB4NGFcOKlirnNjtdM7Ueg6KjoKORTV7TP8S7MHJQQAuqnx/cHBwsL+/f39W
lCCadZUImuK00e4N9WtLS0tvb+++ffvUNlZcs52DmWwUVt58XRmCmfhyMFNd
FF4KwTOn7dFqPgflXPpoxVGYfvDL+pdgj0YOAnBRzffJpC/bzrIv0q9bW1s5
G7Xl4oXz+dvLlZODPx58bancmfP4179gN1xGjDmYyWZ0yfMFFyjs/ntypvRM
GDmYye6xcr+b7qj1LqqNHATgwtPvVSu4/cLpH7n3X9vPPlFwkHhz0Dj3wvPu
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
4G1vb/u7AqBiCsH/D68KIHY=
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 16->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
GqXRH/zqGV0KW14HsRewL1LvR3jsyP+74eJvOh30tYLWJSwHW0FzzJYLxZd4
1CUsy91T+i+333ZrXmG5UHytoKEtpQ4SbPEItpSmpu714CPPvpxFBCV+3rWw
qhQnLx1ETM5uGJRULbC1dRD+Rwmc0WN4PXbqh9qXTgd9w3bXJSwDhGX9ZsUc
s+VC8SUedQnLcleM/jRNjmG5UHyJR+gtuw6ymXhoLR5yy27G+KOodT146qWN
7JFTXup2zVx08OT53AxTgb21dRBpQ+ra2fc68/IVWWY6HfQ9U1yXsOwFHl6z
CcuIJMFfdHL8Nwrf7bg4zn1pv7PoT0nIDY3m0yF3l6ZzuC/xiOo7wjV8t+NG
9R2RjlrXgx/86pm8gide5y5d9XLSwaGHcrNqeO5FabZtYR2EcuW4H3FUyMLT
6eDKjZ2ZIFuuS1jWn5q3CctemA6a70LP8m8UvsSjLmEZ3HLLLeqsDH3AzUeo
WpXvcF+LR1Rfgq6xeYVCSzxmZ2dDn6xPR33rwW+fuZxX5Hyndgd+dh1cXMnZ
sL96evMOkBbWQblBNEePnXppMz6k7vZfH7Y7qkdlB9F7UbPMlu2LiOLwdW5Z
l7DsNXtfV4lHVE9rOomqtuLwJR5dXV2hY0g5CDJSFQajelpLR33rwU98/Qfm
ePhzQ3f+6M/9Ag687T/yRsv4icoruw6++29Na/n1z37zTbf8yo4ffRMMe8NP
3fwff++ed3zhX8yGjXz5Ra91dXDt8jVzMfiLH5qCx173+gZe+LDrTx+L3ZUf
/9pm/E+tg3qv2jUKy3qv2lH9UPkoOixbLl/vvrVGYRmJx+233Sqfo3re1ilB
B22Wr7d4GIb8cBC9xSOq5+101LQeRPCMDYY//bZ3v/k9H/mJX7rVUgfxOnHu
1ew6aI7q0EFo36/88aO/9udP4MNNN930lj/8axvDWlUHY5+vhPZhP0L+8JK9
GZs54LVx7XpqHdRHWapRWNZHWco3W06NZdhXiUe9wvLMzIxKPBCTXWg3sE88
pPAxDAHpIHqLBw5v5B55Lbmm9eBTq69aXlH62T0fQPFlqYP3fetCRh1M2lqL
kvBn3vE+8zTyZH2r6qC5CyDf6zePbF6FeesffSF2ynOXrqbWQTXqbr3Csj5s
d77Zcmosw7JKPOoVlvVRd6MGyCuZpIkHpDxqZF4H0Vs8Ojo6cqzdaloPPnZq
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
EEIIIYQQQgghhBBCCCGEEEIIIYQ4xf8HdWGGQw==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 17->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
EnQQ/BLtw7uoko4t+EGAkKCD4Bd0MFbgBwFCgg6CX/h+MFbgBwFCgg6CX9DB
WIEfBAgJOggxpLUHzPT0dN0eNhslnazDFT8IEBJ0ENqH1EcaZIb39/eHh4dN
711Nae0Bk06nJRaWMydUB/GDAIFBB6F97O7uSvs0IPkbGRkx/Vra0JID5uDg
QCo8ODh46tSt+l1cXLRMOlmHK34QepaxEIyOjp45nTpz5kwqleqYDipFoUQ1
kMlkAmd+YGBAVWuYzQ+ManJlPvDiqorN5gf7VWXuFGCw38DlZg4Y/Zq/9vu9
WCwq2xpYWlpaWFiwX7Cq3GTonL+Wazg8PNSCEuL19fWpqanj42MdOTs7O35T
97W9kYAfhJ5FFctyhQADunScuknHdNAkl8vl9Ds/Px84/6aze2ek+7fuSPv1
ey8lVNUo837z7KBsT4VgtIIpwGC/MkTBMq+/WlyHjRnva9dLwra3t4eGhqRE
9ku5M5DP51XPO7myXIM5xsyAcq6BiYkJaaKv1ANsb+fBDwKEhPui4Bdfe1MC
KiO2tbXV4aRl3qW/Gshms7KB16+9pmwcHBy0JBuxAj8IEBJ0EPzia2/Kjjmv
ynQyaVlgSYNM6KlTtxaLxXyFVmUjVuAHAUKCDoJf7PdmqVTq7+8/e/Zs55M+
PDwcHx/PZDLSQXnD+N/eDAx+ECAk6CD4xX5vmrdTdnd3W5WE3wNJEuzr/Zwy
74sC9B7oIPglQe3JyBL6VYeE6iB+ECAw6CDEEPqjtwc/CBASdBBiCDpoD34Q
ICToIMQQdNAe/CBASNBBgESDHwQICToIkGjwgwAhQQfBL/RHHyvwgwAhQQfB
L+hgrMAPAoQEHQS/oIOxAj8IEBJ0EPySoO/ogyWdrMMVPwgQEnPWdyCi3lBo
GdqbpWuve+xf711vOTVY0m1NPZ7gBwFColql3QPQrTTaxU13ffhjw3sNYaYm
DvwgAAD0MvhBAADoZfCDAADQy+AHAQCgl8EPAgBAL2N0cHl5eXZ29mwDFhcX
nd+mNJrZPd5yVZ0kthnzIKrcdqCskrg72kTMTxzwS90daj8y2KosV9imDYk/
8xVKpdJ2ha16bNdQdzbvmWvHN11VJ4ltxjyIKrcdKKgk7o72EecTB/xSd1fa
j/ReW92lfK0wzLZ4px5zisVixz4EJgiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAgicPx/+/C4ig==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 18->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
eIeibLV0LVKZW3hPDKnEuhh0EFpF+v3gr/7fCCJo8cZPPlTvOV1s7tx9IlIe
ZGFUh9+7901vgg664x2K/+riQzFE0FyhHQBUYl1MpnUw2ZuWSSWdWlLuBz++
83i8mvCtd11tYX4efPwwagbsVt4//99X7P4AOuiOHYoX/uQb8Xa9xbs2H1XJ
c8p3Mehg5pJOLSn3g/Fui1k8+lTL7o5KVWNn44P3Xiujg1GwQ3H89ivN6KDi
G888xynfxaCD8ZLIdLm1iTT7wXpmcOS//P7f/NF/+vLXfK8+f/y376tXDf7K
+sMtyczewbP1kvjb/+a9f+3v/OgrvuP7Q2rjN9xxpYwORkGH4u1/9ni9d2O0
91/5wz+tvf+aN7wlXAff8/lStk5GiESm63N0MFWk2Q/Wezw0/J/vUGX4o//1
85KhW1/y0tf97tfq1YQtycz65SdrrvwnPnr5Va+d+J5fWrj1RC68Qr537yl0
0B0divWaCkocX5r/Th0A2vt/4+/+5F8dHA4pds2crZMRIpHp+jxzOjg+Pu5e
k2RUB9PpB11uikoHf+T9n6v3b0ve3a3XaNFidPHuhjq48MXH0EF3dCi+8ZO1
L4EkbZ5PfO2Hto4dO1bPNtqc2ToZIRKZ1sEO0Nqc9/X12SDIjklnq9xS6wcl
YSHK8kPv+ri8gETwlT/80yGNy7zXNZshXONcdPDtf3AVHXRHh6LLJdD3/dry
y1/zvSF7Hx3sbo6IDur8HRsbs++qGQYGBmyY4Ia0JOc7Oztnz57t7+/PnTiu
z5mZGcekEy+3SKTWD5aevh5eDb7ud7/2mje85WWv/q6QmtD62rIxOo/dHF7T
KBQKNtFG5zR6e3tt4oULF2zK5fsfaF4H33oXOhgB7a+GIvgj77v7RS8+LksY
IoL6DD8ZZ2Ohk0Wf09PTw00wODioWqWZNYyPj8fO/JkzZyYnJ+NtfpNYuXk5
ifpFlZVXAh3TQX+xT01Nxcu8DWSvzbef7nnY2NiQ9unLc9ef1dm0ubnpuKC/
2CcmJlTReT8d17C7u6ujdH19fXl5WYvv7++rCtXPhgvKxXhpRd3eRMioH/RC
rlC+IOV+8N/djQ5GoKEf/JH3f+7YsWMh98Nf73ZftNAEo6OjfU3Q09OTy+Wa
WYOUNHbm8/n80NBQM5sfm5GREWU+9uI6nLwS6JgO+otdWhYv57r20OL6tJ/u
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
dHZony4tLdn38+fPq5ZTHRWSc82meW6//faLFVSjrqysJJJ5lZtqm3jLKueq
kLW4Sj7ep3REFzPNrKGZctPitgv0vdFJ8ALy+byWkiSF7+Uq/Emr3BYWFryf
jmuYmpqan5+3L9p8fdHxr1VFTT3q9naerPhBOa+G1aA0SJbhuaefbF/GJLUu
2dDnMw9/3b8gOuiO/1CU03/4I/NWpI7xzEOXvcXdb84oUV21hjx50V+aYXV1
NermtBu79g4/f1X5S+g7liVoSKTbhrpCkxFrlZq4J62T16riwcFB2UCdAsrG
9nYn7EaHyYQfDLGBNY1hyAOjZnj8S591z4bC70/RQXe8Q1GXNHsX3hOpzC0O
S3u2BvdTXlfackwh93z0V0PblRQTExOTk5MhM8hKxDgMoH1E0kHZ2IY3K9qR
tBKVRbJTQ5/FCq3KRqpIvx8s3XkhajX48Ed/o95zutg8+dU/ilEhe64QHXTH
OxQfue0DkZzgX8aF99gBEKm2kWOSb6r3b5ot1crKSsgjQp3jKofd3d0O5gga
4H5kyoX19vaqiu580js7O8PDw/bWt05ku0falaTcDx78yaU41eCHf13q2cL8
yGDGy4bMqa0BHXTHDsUn/uhz8crc4tpdtx1efz6SDi4sLMg31ftXf2mGqNvS
GW68SnHieL03CXV2Dw4OdjhLEE6kOxW6yNnY2GhVElHf5FRtEHJ9WC8J3hdt
Hk8H490Ws2jh3VHH9zSCITvzjS98powORsEOxWZ2vYW9JOmerhyT5q/5+EMX
xmm2VFL80dHRentNl/QtdBPQEjrTqUvNcQCjJj0yMhJVHTKqg+n0gzKDNW+L
XZp789v/yd+f/LEf0OdXfvNtdS3h2odbkpl6ZvDB337n77z5Z6dfP/Lzr/3B
hpYQHXRHh+LBn/5hvfLU3n/bT/+49v7i1Fj4XdNrd38i6sk4MDAwNzcXnD4/
P3+j/XKKRxdVDmuavr29PRVCa48oyASMR+9Omv3gI7d9oGb9JvVRHbjyyz8j
DTr5ipfd/6H/UK8mbElm6j0ZvPzf/v3rv++7fuUf/nDuxPFwY/LMQ5fRQXd0
KNZrKijhe9W3vXz+5/6R9v7fG/hbKv/wko9xC0hXv8HpcluOLYiTwhyrPqum
Ly8vN2xdCF0JOuhOmv2gy52xb33Jic+9+5fr/duSt2VCmm8rlHpDHdy/51Po
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
benc3Nzg4GCxWLSZVYHoX9V1wfZWKpnO66AMiHKuT6t+lVvJmQ3nsbu7qyyN
jo4ODw9bbkulkrbF++lhP1UTepvpiNZmqZscqNCUuve8TCU5XMF+KvWRkREt
Um/cc5d2B34KhYK37/RTha/UrRcC1edDQ0NSWG8cE33K7+hn8CmY1rNSIVLq
KjRt+Orqqn+ifkpSQ9ripUQHtWu01f4pyrNy3mWnNkDL6W4/aIMeSkEWFhZU
J6g63draUrU2OTlZrmicFHB7e1s/9a/q0uAgOyqZzuugVbkSQamYavLZ2VlN
USaVW2XSXgLUjjOrZX1/SRFqKo62MYYnKldMkJKTl5TuaP3S4uXlZUuuXBl/
WbWupkukDisE+0+TkKn87d3FqGhHWLatMbi2WjW8dFAiVa64Xavwlagmaoaq
gdf39vbskI667Wagqp4GKonwjmVSooPexZKfoL0FgCq61Q+WK+2nzKR45mVj
Y0NbKh206tH8gipM1XI2yE7wPfNEdNDyZqIsuTEpUT2szGuLvEZh2nE25PqL
Xnwj/8Hx5rRPw2/o1UMm2tqg2aWCTZQJLVc6PdPnwcGBitfe0reiE/47cuXK
kzVlTw4uauoqcMu2vniveUh/pUem9WYMpcVK2tt3fkNq6hxDB60bmeD08I5l
0qCD1o1M0JWrBMI7luHuWSJQ7KmiW/2gzIs2yr7L0Vjf+6oTNL1KB4Wuouu1
Qk3kvqh2iveuvneJYvmUFTKFKld0UJ+edldtgvSr6i6ZI5Jd7+UKpWhlJdEx
BfTroJnQsGGvK89Yq/QxnG+us1Jvq1a3tx/tdmWVDmq18oM1GxH3VLCOsiNt
u3UjE5wuOQ65wZsGHdTRXrNL84Ydy1AhJwLFniq61Q+qAlyuoOtkVQWqjWWj
rCqr0sFy5faajZzoSYyhKartJaMxuqqOjb31Z5mXB5QAKdvyhvrUhgR1UGKn
HNr46d5KNJtWovx7NxjdkeJI/iz1cuUBn1Z+8uTJK1eulG/qoJTIlFqqYR2Y
VL2XaOPAatmGjdCrkMCpSvd2jVTenu3qQK3SwXLlyamlXlMCovrBkAZ34R3L
pEEHvW5kgmhPBW/4O64W2gTFniq61Q8CRMXfjUwQKXI9TU9cB/3dyAQJ71gm
cQU/mlDsqaJb/SBAVPzdyAQJ6VgmcR30dyMTJLxjGSrkRIhRJgsLC+Pj421N
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
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 19->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
5fZNW03rqK2pra8G3J3F7e/vSxE0RgqoM3PZ/3IvqfO3agYzAp04yVpqt9GS
NbvJhMpdWVnRv+7vQ6Wbznab0q4oCg10dXW5x1a1RtoDFxYWNLH+akqnVhE/
GRIyrXKoQqrNFZ2Gas/JpTROUzp51amF3WbVgKpaA5rR/2VGgMR0jg5OT0+P
j483v2gVqqbAOvxRE6E04l4fywvt5AdFeR9HdgcwGO5ZGjXdsjzSBc1lpz0h
ZAYT3OHVbmOvDuksThVb8660JpAkTU5OKhPtaaHTrXOl1951Yqa/ocsLET8V
SyJ+7Nix8u6qqs0VkYbdPLXbmktLSzovVb09dP3hMcm9VlNlaUaND757AtA4
8quDL1y94r9YexQtwYWpavgXrRPao0eP2kMyajF83szKKe3kB4ulbv0qXvxM
8CS/ZonuKbdzCD4VA5AR8quDxTjJ67xaOuj/mGjNIuKukSQ4rg3MxbMxQdrM
DxZL1wPrspxqktqBcD4AGaRDdLDuRcQtuvwBQp+ic6qD7eEHi6UbWHV5XcW/
84T2Rr644kVjgNaSax1sAi3MPHf11n5+EAA6AXQwGnTQn/bzgwDQCaCDmSV3
3zfEDwJAHkEHoV7gBwEgj6CDUC/wgwCQR3Ktg629edeqojMLfhAA8gg6mLui
Mwt+EADyCDqYrIhc11uDwA8CQB5J2dL29/fX7CgDHUxcdE51ED8IADmivKU9
derUwMBAV1dXT0+PfQA3YvaW62D0R/qiv9/n+Wu1oq2D0/TLT1B6NsEPAkAe
CbW0Z8+elQKurq7aR0WlidGfvWutDhr2nl3F3o9tZLUX8SJmjJjLf/mNLj1r
5NEP3tpI0nxDdmpqqnGJpencrHFZ3Vr2gY/sJJagc3XIESGFWlpaGhoaKp9s
eXl5dHR0cnJyqIT7nLrpoI53mcfe3t6eElpm8HuaufM1kIw8+sGRkRGfybYe
f/au7Usf/MrFpQcvrnztqc1HL+8fPF9zrjSfTu7u7k48b01Cn9mNhc9XFKUa
952//Nf/9JRqTKGq+8pjzx5cfSF6rpRdkbtvYEWgrXbm289oC2o7KrG7H76k
Leuz8P39/TS5QcYJKZSaMvnBubk57ZPBTS991JQmf/pJYmfnutLBzc3N4BLU
EoZ2SHSwQ8ijH4zWwU994+nf+PRjb/nooz99V4X4pbXvvP+BixGC2Gk6KKW7
46t7U5/arVhdqsbpe3elidVmD7UkcYnQQW0jbam3rn6nWmLayp/5ZpTSoYPt
TblCSea0R8ncSRCnp6dtBwj5RLUeKysrxbLrojq+BgcHg2awiA52DO3kBze+
9cwvfKJys1neip68/0LFhXSUDsphVTthKK+xTz7ydPkSGuQH3/Plgmdit95z
Xm6x4kLQwfYmQqHOnj0rmVOzVizp4NjYmPtJu5x9TzboB+UW5RO3t7fLi0AH
O4H28IMyNW//whM+zWYwJJrfuBi+hdQhOii35XnOEAzZxtCV0rr7QW2Rn//4
+biJ/f4Xnyi/hIsOtjfRCjUzM2N7l3RwYGDAjZc3DPlBHfKykKurqxWLQAc7
gTbwg2rSf/GTsZt0Z3Me2H3RzaZO0MHzT1/xdFsVayyoOPX1g3J2ybJSaB8I
Xe5GB9ubkEJJyCR5On4PDg50etbX1zc/P1+8fn9weXlZ46WAofuD2kmGh4fN
OVYsAh3sBPLuB9UmJxZBFw8XnnMLbHsdvPDs1ZTVJSl0S6ujH/zKY8+mTEwO
N6jR6GB7U/7exPj4uN0clMbNzc3ZeCng2NjY8ePHdXjKGIaeFxVajubqK6GB
4G7TzPfoE7+yFz1jxaIb8a5irs8Z8u4Hf/+LsS+HVgypgy2w7XUwwVXHCCms
lw6q/hNb1GBof3ALRwfbG89WV35Q+pi4CHSwo3Qwj37wM9/cr4sIBtvP9tbB
ep02KFa+9lSxfjqY4PZutbj/O5dtmehge+PZ6soP5kIHDZ9X1Cv+Gj1jqOiK
r7qnf3c+v2/s5tcPqs7r4iBc2NXRNtbB3f0rdawuu1FYFx3cfPRyHRNT2NVR
dLC98feDPq+pViuiyTrYhCKaU3S+vGF+/eCnvvF0dGP4X+/42o+/f/PHbt8Y
fd+Zn/zrczUbz9/49GPFttbBmp7rTSsPW42p6nzk5v0PXKiLDv7W+mPRBR37
i68oK4UGfBKTsBbRwXYn1+15a3Ww0V2f5VcHc+cHq7367eIlN77ixu97TfcP
vPZlrzz8XV0vVwtfs/288OzV6L55o8myDta0zzpb0K6ritLf//g/3ukjN5Of
OJ9eB79x8SC6lJ6BNygrbccbv/8HlduRn3tbzcRuved8ER1sd3Ktg02ghZnn
rt5y6gdjXeL7qQ/vqC19Rd9/8PER7eoHN75V45UEWWZJoQZ08uCpg4q/+/zf
p1kp6eAnH6nh63/ov7/dDb/+HXfq+PKxq/sHz6OD7Q06GA066E9O/eADu/Ge
sf/347/io4O3nXmyXXVw/h+e9Kwr2S5/Hfzzj3/ePWqbAOmg6tx/O0oBdXy9
4bb/U3PKRy9dQQfbG3QwGnTQnzz6wdHR0bsfvuTTbMo+/PCv/YlE8CU3vsKn
8fzZj51vVx182+cer7sOvuWjj/7nP77Hp/fyakgHf2ktxuuf/+l/ffS7ul7+
ppWHa075qW88jQ62N+hglsnX15dy6gc/+JWLPs3mkZ9726vfOH6o/4f19yf+
930+s7Tr/cHpe2vcTk2ggwrpYJqVkg76i+Cxv/iKRNDn/qBCewg62N6gg1Av
8ugHpYNLD3rpoAtZwu4feK3PlO3qB/Oug/KAL3vl4R/8iVs8p3//AxfQwfYm
1zrY2ouWrSo6s+TUD6587alYOjj6vjMvufEVPlO2qx/8jU/XeDehVTro8xLo
T/71uVgi+NOl1/zRwfYGHUxcdL4uWjaBxH5wb29vusTs7GzFCWSsTp8+XY8c
w0gHaz79KPvwUx/ecf++5kcnbvy+19RsPCUW7eoH/XuSiXV/8Gfe/5k0KyUd
rPnyoLbjy/7tv3v1G8f9RVDxlceeRQfbG3QwWRG5rrcG4e8He3t7p6am3L8H
BwdnzpxZW1vr6empOP3MzExXV1fou5Z1QTr4zxeei24Gf+z2DRnAnoE3fP/Q
qBp2ZSLn4mMi2tUP1nTQ8lyqK4W9rKeBH/61P6mpg3/+8c+nWSnpYM1bvUpG
x5TlZuHzyNOFZ6+ig+1NrttzdDBTePpBuSTpmiQv1IOcmppqOlgseca6JRpg
dHRUadRsCSWFajB/5Pf+Qn99njBU7OwdtKsffPRSjTcuZbt+5Hc/GIwf/bPP
1tTB9N9duu98jU7VXv+OO0OJ+XSJcHD1BXSwvcl1e547HdShuri46F90TnUw
2g9OT09vbm6Oj4+HPtkspQvp4O7u7miA0HLkttSe29KC4+UrpbP2jbCaOVt/
Mifvv+AjbbFCjWe7+sGiRw88cWP63t30/cnU7OgmeH3bM9775WsfmEMH25tc
62ATqG/mvb29Egv/ovNVb55+sL+/v1Ao6ORfEwfHl/tBNWvnStiHvYI/LSws
aDnr6+sqVKrnnNexY8fm5+f1r9RQE9R0kaaDDxdqXBqNG3dtXyq2df+iWsH6
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
3FzB4Sb/7SrhhvW3ZlUoW5tSc9nsh1pBynpT2qEPvzY5XB0m+GuzWyXU3Hsd
hUJBc2lgfn5ee6D/jCrFygrtMP6lqzGU9kmIl5eXpYZ7e3uHDx9eX1+vOaMO
Tyvd4Z92S8ijH4zWQTXghb+7c/eOd4XiO3/5h/r72Ok/e3ZnO6J57zQdVFVI
XB6/a7G8xiyeXL1DGlRNdzY3NxNnVYzUQSWmLfXYh95TMSttzQvrp5VYxMJr
6uBagGPHjo2NjdXMdnR0dHV1VdPreNFRY8PNZ3FxcWlpyYbVPKqJUxsVvaaa
Rue6NsvCwoJ2iZZkfvr0aSWcuN6Utma/7bbb3pkInepISpLNa6ysrKyWiJW2
zWJ2w8ZE72kh+vr6NMuRI0eit3KIYJISMjUgLhnPJUxNTam2gwPa/7WouKXH
Xd/m005+8OCJbz/2N39qelcznnn4wYpte0fpoITGp66uxZ3vllyWL6ERflAK
uP/1+32y0rZ+/CO3V1PDmjoYRLqmzRdhMw8ODnRaq2bcf5lNQyf50eexavxr
qjw0k1iXDbXttIn99ateRQ8NDZn7GxgY0IAOAfnBra2tuqSRKdrDD6rl3PvS
Pb5N+vV44u6lq/tPhRbVITr4/HOX5QE9zxlcXPz8XSErXXc/ePXSxQhzWi2e
uu/eco8fSwd1pi3HFHHNRz/VtF2tYnJyUkdxxAT9/f3+D/tBE4ilg7JjPncQ
6l60CpU02IVZ7fnTJeqVRqZoAz+oBvDJez4Yt+V0NifkJjpBB6/sFbTicUXQ
Qv5LGuoWVV8/KMupxJJtysLf3RmSwlg6KI4dOxZx/0U/aYJYC2waKysrEbcI
dYyr6UuzY0Pd8RcjuTBt3Lm5ueYXvb29ffTo0b6+PumgvOHCwkK9csgaefeD
qUTwegSlsO11UBbYtCaZDioe+9B7nOLU0Q8ePPHtxCJo8eTqHUEpjKuDckzy
TdV+1U9pNkFDsTP2attifn5+cHCwySlBNP5iJCMmHdzY2KhXEXGf5JQEx3o+
p8jzok0hqIMXv3B3ShG81rD/zZ86j9P2OqiVTV9jOvewpdXLDz5/eV9OM7E0
u9j70j1u4XF1UJteB2/F2x86MdZP+ptmZRuKDopqlkGn9DrAm5wPRJOj/mS0
a8V1SfnVwTz6wRiPedQK6akts711cO+LH0uvNRb7X7+/WD8/eOGzH1Fidcnt
2fPftGXG1UEh32TPxYVYWFiwd7gyizKsaPp2d3fVIqXcTJBH+B69P/n1g88f
PFcXB+HCro62sQ5euyJap7q6Fne+u1gnPyjlqmNi7rJtAh2Upar4NPLo6Ojs
7GyaNW005ljL915t+ppvF0Jbgg76k18/+MwjD9XLQVg8uXpHsa11UJ6rnjp4
x7suPfC5uvjBwtpf1Tcxs4QJdFCyruO3UCgER+pfjUxwg6bJVLyDqRqemppq
ST7QWtBBf/LrB5+4eym6MRwZeO333vQ92hw33fiyN79+8LyHYj7/3OWdnQpv
yXmScR2Mfgpl6/bfGx183atfdZNq7H/e8iafEwz58fR+8NrDq5GlKJmh177G
OhLRwMffMVU7sbuuvSOQQAft2bzQ47XRT2Nmh/KXBLU69vp8q1KCziR3PRDm
1A/6XOL7wK/f8vd/9Jtq3tVyShAlhbV9xKPn2tUPPruzHS1tW7fPzU38lw//
zltVV546qGnObHwuzUpJB2u+Mv/jg6/TprzvvSe0Naff9Ead1Tz6wdtqn9Ic
PJdAB4UOh8nJyeCYmm/nZQQ51tAbjmulbmSS1QNA55BTPyjBqtkSBkMt/A9+
36tqTnbx83e1qx/0f7BWFSUd9Jx4/dT70qyUdFB1XqOU6zZWsiuxliuUWNdM
7Oqli8na/1DHMuYQs9mNTAhLNXhCK4c4Pj7ewpSgGnyPPlPk0Q+Ojo569rul
kHeQH3xl98slhTUnfuxD72lXP/jk6h2N0MFP/dHb0qyUdDBW7zFyhddebbj9
92pO+czDDybTwVDHMhpQidnsRqYcWdfjx4+7f/v6+paWllqYD1QDHcwUOfWD
l+5f92k2h177GrtjO/2mN3q2tO3qB2veTk2mg59856+mWSnpoL8Iyg/+0GsO
a5v6TKw9JPH1wGDHMlnuRqac4K1MupHJMjl6fzBZ0flS2zz6QengU/fd69MY
ygzufOAPZB/Ufo4Ovq5mM7t757vb1Q/6265s6qC2zsjAa1/9qpu0QX2m3/vS
PYl1MNixzJEjRzLbjUw59mirPbw0Pz8/NDTU6oygMuhgpmhvP+herDjzx791
040vq62D+MHm66BHX2raNDqNeWX3yyWCnm/KXPrHjcQ66DqWyX43MuW4jmXo
RibLmEyEPm4YmqDaT/6/Jiu6oaVnk5z6wWceecizobb4wK/f8r03fU/NyZ74
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
3t7h4eGanzxoJgcHB3JGPT09Ssw+sJUp7MnJ3d3K/cdWw56rjHhJ8IWrV6p1
LNNaHSzvRqacunQso53QPXq6t7fn80UqgwY5Dapqbb6BgQFVo+p8fHw8upc/
B9XuTx794JkA1lfGuXPnNKzj1Nox/atd5ezZs5ubm65l05T6VyPLu9fY3t7W
T+l10GXlbIWWrH/doxcaUPscSkxjNE1wjJvYPtGon9TQJf6WjWYM1pgtR3UV
TEy7gasfV5DVqn6qVrTSS/Ox1/39fasrS8xSVWJKw13E07BNFhRct7krLnNw
cFBZ+ejgqQBHjx4NvYRejibQZDb94uLi9PS0DTdNB1227yyhAeny7OxsqBuZ
ctbX1zXN0tKSzaJ2VfbQFhUrBy3EKlbrXvMzHEFc5sF6S4AKnU6BtqDOLdMs
wdVbXJaXlzW7bQL/atcRMTQ0pErTPm+NwNjYmOcXzEP1Njc3l7ja0+O/q7SE
3PlBnZYr1dXVVTuB1+6hY1ynSdpVJGR2bOow17BW6vjx4/IsxdJVr76+Pv2q
kWonyxv2uuigslJuSsy+UKx/dRanxJSDXdBQPtqrlYOOR3sfTa2KdYas1qza
CbaauGirEo1mvLuEMtFytDQVp/Zch6RKtA9Eat11fKl+rN40RudFmkazqN2o
eNdMe46m8TcF5Uh5rcZsoxRLG05pqFC5YHvqQwmrxpSwJrB+UXRMydpomooN
grKVuGtb+5wz9wfQJqv56XlTHJteRdiwBpqmgy7bnhJuuOZWsK9mK1WbRS2q
atiGY+WgbaHzFh0sFd/RiMBlrnJdHSZAK9uVguD3apMtwdVbAoKbwLPe1Jho
P7cBc/Ta5z07RgjVmzZ64szTE2tvaT559IPF0nGtvcIaRg04/6VtrXZeDZq7
kG6SpBZ+ampqucTIyEh53yB10UFDu7qZF+dK5Js0UgPKwZ0amZNS8srNEqv2
uQqpZ/qbO3Yhy3yWqaGNtDS07lYnEhF7GkS6o0JdYiG7oRmlOBLK9KdPqhwl
pr/WCZgVpA1qaWiM+Xfpmk4q7BrgUonyxzuVjH151lMH60XL7w82jcnJSZ2B
SASrPZsK9UVNme3S8pJ21qdT6PJegyAlufODhgTFXZbRUemu76kBlPRo53HK
aDpot5i3rlN+abReOqiFmNLZGbiNtNbb0l5bW7ORNkYtuVJ1iYWWphklgp6X
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
4MOT
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 20->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnX9sbGl93imw8ZUTHOpQJ7IUq1iqq9umk1ZubuumtYqTOhCnjuSA1cQl
1BSM/Ecc1URGRq02NQmNHOISE5My7VrlUifUwCoLMYlL6u6a1IEBvLBgkjih
Llzhxbt7Z9e7rO/63ut9++y8+PTsjOfMmXfOzLye8/noq9GZ8/M5Z2be5zxn
zo9Xv/kXx6Ze+pKXvOTtV/QyNvmO18zOTs7/zCv15g0zb59+28xb3/K6mV96
69veOvsP3/wy9XzHX3nJS/6Fxn+hGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAcBgAAIMXkcrmxsbEJAACAlDE+Pr6+
vn7vvfcuLy/vAQAApIz7779fbigfVEezUykAAECj+fKXv/zGN74RHwQAgHQS
+OADDzzQbC0AAACNhjwIAABphjwIYIm+mCipoc6SGqYWIG2QBwGahW8ehC1C
OiEPAjQL30wHH4R0Qh4EaBa+mQ4+COmEPAjQLHwzHXwQ0gl5EMA0yQKil9gU
PfggpBDyIIDx0gJ80wPQqpAHAQw+CJBiyIMABh8ESDHkQQCDDwKkGPIgAACk
GfIgQLPwLfF5GIoBGgB5EKBZ+GY6+CCkE/IgQLPwzXTwQUgn5EGAZuGb6eCD
kE7IgwCG+8mcLxEfhBRCHgQwXlqAb3oAWhXyIIBpOR8cHx9fWVlJUAxAC0Me
BDCuPtjV1bW3t2e7R0dHE5fkPG13d7d+2gmKAWhhyIOQWk5CuPng0NDQ+vq6
OvQ6PDxco4bjAmFJ1c5Npjw2Ntbb23ulrU2vc3Nzteixkk58otrVAYgDeRBS
y0tejMMcZmZmFhYWZBZ9fX0HBwe1a6hFjwTI+7a3t1dXV0dGRqRKqTBBPT5Q
7eoAxIE8CKlld3dX3//g1WEOcpyJiYmpqanl5WWHydWwhzVsbGxsbm4Gb6ud
m2QsLi7aDrmzOgYHB6vVE5YkS1WzsFsgvKGa+FrtNgGIA3kQwJlcLtfZ2Tkw
MOA2ebIBp7+/Xzaqjkwms7W1dXbntKurq1o9ZC5IIeRBAGcODw9tgHKbPFnT
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
B+3SlYmWl5fVzPb29mazWb2qEdaGUoeGDg8P26dvSIyWPjExsb6+XjorNciz
s7NOm8ERK14L1ccqmwjE2xu6dnd3a58n2PPRNlT3wsLC6OhoqXJtAQ1tpHh9
ISVen7W9oZA+cYkfHByUWhl6e3u7BulDmZub09CZAouLi0XiZYv6wmiS0u8D
AEAR3uZBU3jUhW2Erf2ZwmOb1DirnVS7bQo34FKTKPdRY7hVoPRubPJBt8OS
2jL2RjRqcu1DhK19yAftzcZtMys9GsEuXa100Uzkm3LJxh+YlWB5hzqCT1a7
DfPz8+qQfdtxtPNgH55lxcs4imaintPT01rBxmp/IcBqo+lVxm39TnR0dKiP
3NwU4rk+aDuaFa91CR8N0Fda42jFyYMAUBE/86BQ0LMtuSncasx2yHfkemrS
ZYimEFhkSdYu9wqUPsPCLQ+qjQ2erigvsAfiNjc31SxrQ9ml660WLUnSsHdO
eCZqimUujb+7qV2uPSor77MPfJQ2e3hWudWOZr2mr69PG+3CTWex1tNI9Llb
MYrbdodHezLWB+3NV9VhjU+vwZYPP3BKq28PR09NTTVYPABcOvzMg3IuNb9q
3GQi6lbos16jZlBvlQfDPqhx1B6qzbSH1MLz0SQjIyO5XO7GjRtVCVACVVOs
OavJle2OjY1pVnpVd5EP2ucU26WHt6F90qL6aMLw/1n1RpahxCdtEi9DDIu3
GyfwQesp9hivVjac+7TWWk37jEhN2DDxYnZ2Vgs9LGAKH4TEazurf9gHbfBX
YNcWlviiI9Jaa33o+m40+KAuAFxG/MyDMo7Jc2zIkvVo397+H6d2b2tryxTE
27CjPmonFdaKElkwk2w2W5WAYEK1wHqrZlap0C5LGoKlW2eR2tkC9vCpRR4U
zMT6ZmOw56mGxcvgJD74fAMx9jCpxtenr+gU9kGZqcxIG3xpaanBB3Ulxoq3
UU6frMTbA9FSYjVLnjU49dEgjXDhP7P6pGSI8Red1LXhVV05Hl9Sw9QCpA0/
8yBA46nfpejl+lf0oIhryeuhFluEdOJnHgRIA76ZDj4I6YQ8CNAsfDMdfBDS
CXkQoFn4Zjr4IKQT8iCA4fmD50vEByGFkAcBjJcW0BQ9POUBUgh5EMDggwAp
hjwIYPBBgBRDHgQw+CBAiiEPAlj4awwgnZAHAZqFb4nPw1AM0ADIgwDNwjfT
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
4GEc800PtCTkQQCDDxbAByGdkAcBDD5YAB+EdEIeBDBe+mBT9EQstCmWhA9C
AyAPAhh8sED06bJYErQq5EEAgw/GwDc9AElBHgQw+GAMfNMDkBTkQQCDD8bA
Nz0ASUEeBDBe+iAANAbyIIDBBwtw3QSkE/IggMEHC+CDkE7IgwAGHyyAD0I6
IQ8CGHywAD4I6YQ8CGC89EHuJ9OshULaIA8CGHywQP3uJ6N2pqury3lygLpC
HgQw+GAMatGTzWbHxsYSFAOQIORBANMqPiivWVlZsd2Li4uTk5OOyhLSI5aW
ljKZTEdHR3d3d39/f4J6AJKCPAipZeEcff+b5YNadKBhfHxczhW8dZihJpye
nlbHwcFBb29vPp93mEOAZjU6OhreStXObWZmRs3LyclJT09PLpeTNTvoCW+i
aicHiAN5EFLL8PDw0NCQfW2WDw4VGC4g57p69arVIxxmqF+xnXBkZGR9fd1B
j5VkNSi+KcQFb6uVJC/W5DLBw8PD9vb2szunW1tbDpKC7eO2TQAqQh4EMF4e
F3Vgf39f1rO2tub2Z1yyG2FjY2NgYEAdcuTBwUFTOEbqICkpPQDlIA8CmFbx
QdHR0aFcqQjmpidBSbu7u11dXfl8fnZ2dn5+Xm/7+vocJCWlB6Ac5EEA00I+
KK9xiF2WxDfCwsKCTLm9vb2np2d0dHRvb89BUoJ6AC6EPAhgvPRBBz3KXJpq
c3PTWU/i19GfnJxcaWtzOGOnloUCVAV5EMC0ig9ubW11d3c7m46JvJTebftI
UiaTcdYD0ADIgwCmVXywrvimByApyIMABh+MgW96AJKCPAhg8MEY+KYHICnI
gwDGSx8EgMZAHgQw+GABnj8I6YQ8CGDwwQL4IKQT8iCAwQcL4IOQTsiDAAYf
LIAPQjohDwIYL32wKXoSv59MjeCD0ADIgwAGHzwn8fvJAPgPeRDA4IMx8E0P
QFKQBwEMPhgD3/QAJAV5EMCc+2DjK1pSOXkR4qPXq6qhieipRW3EQVqABCEP
AhgvfdCE/q3zwQfd9CSoFqBOkAcBzHkL3/hXB3lVDXWesE56alELUCfIgwAA
kGbIgwAAkGbIgwAAkGbIgwAAkGasDy4vL4+Pj88CQGqYmZlptgQAL5icnJye
nj67c7oFAACQSvL5fLMunqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
n+v/AXa6FPg=
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 21->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
1zxC3cgSo31EvfrWxmcMWAV3igFiQQ4ClkY+1Z7kEgPe5eXdoZGProedMaCe
5j9HH1cxQPPIQcCScDOSyvdXA/CQg4Al+VRyKgeTb4cDOLVl0K7IQcDiVA66
05wm37fSKSMZ5CBgcer4YCrFBNzkzpYB4kIOAhZ3uh7XTn3rVKcMxIUcBCxO
jfbu5GBaoZzwEpFB5CBgcWq0dycIOFqHduVsDppvl7p27VrAz/U/+vyvPlTU
z4c/98WAu0U7A8KZS2/8Z/C5yC29vb0xLtqRn6G+O3ptbS2u5UYbtzkKBmSK
yzlY8/rrL7zyE7/3lbd9/NoPPWBf3v47j3/iL79WPUvqJzMNlYN9fX0Bt56+
8vWHvnSy+shXf/nPrt9/8Ezx6Rebri6iR7/ywtqjN8pQMX/4tyfBdw6Vg5ub
m82V9g2RczCuAhpBnwWkq4VyUBHw4//nK9XxV33REO2fMfUT2cSSgx/7/LP1
1nf8t6/p5UFMxZ7h2rMvBWx5ZXTtuchBx5YIwNMqOfj0ycuNJKB3+cBnr3vz
tnoOqulrZJXVJuulQqyFv4oe/J4HHz+zDHXlykprXnLQtSUC8LREDoYNQXNZ
ePgpM3tL5+An/vJrja/yj37i8XNqDL/y3EvqOhuv5E8ff94/e8vlYJaPD1IM
ssb9HDx56ZUIIWgu5nBh6+bgH/7tSdhVvnfriRdeijkKla3q8sJW8hdPf2Pv
dMvlYFwFNMKpzw+2SjFAjNzPwQaPCda7KEZbNAeDj8QFXO576Ml464/8FHjN
KTkYeYl8n0ySi0M2OZ6DV49PmwlBXWY//WSL5uD7/ujpyGttvVOoGdt/9Vzk
MtYe/ap5EHIw8hLd+Rx9k8WMj4+vrKxEKCbyEoEGOZ6D79w+qjfGft/yQ//8
PevfNX+/JoJH47+++uV01yVCDtZ7ATD2W3/1ve//31rrN733Y2/9X18KSP+4
iv8Pv1v7KXjL6v6bfu4jqqSRlrDlctCd44MRVsGfOIVCYWpqKpZimtxLmcvl
NNqEnYvjg0iA4zlY770ZioBvfcOb7/7Bd9ydn37dt77+DT/+iwFD8a8+VEx3
XSLkYL1PSfyj7/mh17/xLb0/PKPV/4ff/p1nBlCTAuJYS1clt3a+LjgHzRtm
Wi4H4yqgEbEfBdO/88zMTLnyXRC9vb2lUinGBw/r4OBAuawyOjo69HNubi7F
YoCaXM7BBneK/rO5DyoUAu7w1v/xSLrrEiEH7916ot4LAG/iNa/tHPvwYb21
3v6r55qvfO3Rr9Z88B/86FX9/P77P6cagp+d9/zBjXftOp6DxWKx0yeVXZFW
Abffdqv3a9hH0//yxYsXNTE2Nhbh/7rz1ZopxgTx7u7u2tpaPp9XIqsrbKaY
UPMCDXI5B8/8yMB3zd+vTlCNyRve9f6Au/3LX/9suusSNgdPX/l6Iy8AXnPb
31dfVu/W1Ue+2nzlwccolYNn9oO6lJ3PwZOTk22fVHLQW/rW1tbi4qJ+eteE
fTSlj+JmfX1djViEYvyboslipqenl5aWzIQeRxOjo6ORi4mwKYBGuJyDH/rz
4+AB9p9OL/b+m//4Ld8x9OZf/FQ75eD1F87+qMjr3/iWu/PTAXco/OmNvWHq
dMZv8r5fTi/OzTWTk5Peci9dumSuXF5e9q78V7+213wOKtYdz8HquVr9XZFq
ndSIpf4OscHBQRNe/f396gpPT0+7u7vTLQmo5nIOBnyTmP/y5qVPvu5bX99O
OXjmRyZzIz9851v+XfB9fvnPbnyjzvHx8WM3aRQyi9Dw6F3pLffg4MBco27C
u/Inf/dvstAPxjJXZOb4YLzJq78i/+uZtOTzeY0t+iPs6OgolUozFWkXBdii
5eA9FeogrOtPTk5WV1e98bYZysE/ffz5hnLwFz8VPBq3XA7q55khGPBmUXNR
N9185e/fLzWZgz+29USZHGxgiTG+X3R/f9/saI1cTISbaioWi/pH7unpUQ6q
NywUCjEWA8SlwRzU/9T8/Lz3q4Y1/YXrz9u629HR0eTkpNKw+cL07xPQFn3f
8kPf8h1Dd//gO5QIGoqD3y/6ro9+rvl6mhEhB+sdmPvHY/e+5rWdd+ene394
Rpcf+J//r95ax/IRwp2/qfvhQS1dxWiY0kTA8dn7D54pk4NNLDFCMTs7O3fd
cWfkt4nG/mFGDR2zs7OxFwPEpcEc1Gu57u5uf8BpOuxbv0Ixn5v40U/U/jov
dUOKwjf93Efe9N6PvWV1P7glefhzXzy/OhsRIQc/e1S7F1bz+93/5be8S733
yZgurHmnr3y93kdX/GW8eemT9Tb+1eMbOwdaLgfdOT7o2ocZIxQzMjIS+bAL
OYgENJKDirzx8fHV1dXd3V3/lf4cPDw8XFpaWlxc7Orq8vaL6j6Ks7m5udkK
c+X09LReHy4sLAR/vNfk4Oojtd+33/jlbR8PdxLY8xAhB9ULh/pea+viP91G
kxYefipyGYpjcwqMlsvBuApoRPDnB90phu8XRbtqJAeVgLpVoTY0NORdeXx8
XLMf7O3t9drG0dFR71zw5srt7W3vGIEWGvD9Et73i9Y85W7jl4e+dNKKOVgO
3CcZfHn77zx+Et9XbV9/4ZXIT4G3b5YcPHOJ5/FVZrFzqhggLo3k4ODg4OXL
lxVhnZ2dXsbV2y+qHPT6wZ6eHutYoZpBPUhXhSYCFurlYKgTD1Vfyq18von7
HnoyWvTHW/9HG3vjrnUxH9wwyEHXlgjAc2YOlkol5eBxxcLCwtbWlrk+IAe9
7NOM/jfhlyvfdLG2ttZIYf7zD/7MbsRdcxF2yp2HyDmotq7eEdJ6lxj3iPq9
5w/CPQXv3D7ynxS45XLQneODAM7bmTm4uLioZtBMK+D8H4MdGBgwxwT99/f3
g0dHR+r7dJ+5uTnzRU/lys7S2dnZ9fV1pWTAJyys89EHfOF2vcvTJy+beVs3
B42f+L1GT3tkzrd4Tho/Vmu+S82v5XIwrgIawVEwIF0uf47eukadToPjsHWA
rNVzsFzZORz8tpl7HjyvM9H7XXv2peAT8qrIP/zbGntlycEzl8hZFYC0tFAO
ilq8eqcB8hKwuidqgxw0FDHqi7WOipu3ffxG6Gj6/fslr/NNxtXj04WHnzJl
mIum1bR+9uj5erOQg64tMQDFIGtaKwcNNT7qDe/demLywSc0Av/oJx7/sa0n
7nvoSXOKn2ptk4Otq+Vy0J3jgxST5OKQTc7m4NTU1FB8IhQQ49IXFhZSWa7f
4ODgmdecH+8rvpPfAuGfebeOD1JMkktENjmbg0BanDo+SDEJLxEZRA4CFqdG
e3eKSaU7IweRAHIQsGjsTf7SYDFWpxb8IAHz1psx+PBfqMWddzFAXMhBwJJK
DtYb800XVjNcrJusB6m+tcEZA1gzBi+uwciOXAwQF3IQsGgcNkNxMhON1xNc
aqhbQxXQfDHWWsdVDBALchAAkGXtnYMDAwNdXV2xnBc4rFKpNDw8PDY2NjQ0
ZH3JaksYHx83xe/s7KRdS0QXLlxYX19PuwoArnMzB09PT++56eDgQNcsLy9P
T0+bszgVi8WNjY1Lly7pSnN/3WdmZmZxcdH6wlL9OjExESEHvaWbbwXX4rR0
8x3jqkHbanZ2dmlpydxZ9Wjp2obWor1TTQWfaTF2XvGrq6v6VWWreO/5XVlZ
WVhY8E4HqSLNCSKPj4+rH+ro6Gh0dDSxysuV77M1xZuNpm2rCbOpVarqLBQK
eupNtea73/Vr9ef0dU+tvvfVuABQj5s5WK6MwJLL5dRYFSo0JPb19Wkw3N3d
1eCsW+fn55UyGgMvXryoKNQqVH9iPVoO6sH1sOqGtH20OD2Ilq4WaW9vT5mo
xekOGml1kznXsJauSpSG1Q+l3PHyOhmqXOVNTk5qg6hCla3y9NOcRrmzs1P9
qdJc20phrU26X2F95Fw3aTX7+/u9M4wkQ0+3ilcamqeyu7tbxSvOTPapeD0R
WhGtnW5Vx6ppPUfWtw/pQRT9m5ub9IMAzuRsDorGOrNTTqOfuWajQkOfOZmv
hmhNqGXTYD5aoXHbehBFWMBZLQKoBzH5pXQzOzaVdGqdtKEUbWbpWrRGWm/p
1e8VV74k3E8ZqkrBoQnzUqFcaZnNNQpEcx9tK4V4R0eHKb76LFrKI21/rXKy
td8oVRGsZ01bzzubif4GlIPmS+c0oeBTebpSlY+MjHR1dflbQnOmMD1B9IMA
zuRsDiprvD2N3smedKUGNzVlXhIprTTm654a0jX0Vbd+0fpBNR0aXc20gkBb
qVz53ks1KV4OKl+Ug7pSNRzfZD2Imqzkj04qR5QO5q133jOrTFEmliuvLszd
THPd09NTs3iP7pBU4TeoJBWmhq5c2YBeCvtzULdqw+pX5Z153q3iFYsDAwM9
FUkWD6AVuZmDem3f29urZkStnwY9FalhbXV11QSirvTnoBoH3apVUPtm7RfV
3TRU6nrTEzVOXdJuhYZiNYMqRkvXoKoexMpBs2tRbYuW4v8+bXPuRbWrJrtj
2CiNMdGmJZritSX1q4rXKujX8qtzsFzZtTg9Pa0V8a43xet6bVvFjXXc87yp
E1S1Kl6vdsqVl0DagHpNotcb/n7Q7MVVh6uyVbx3dkvDJKNeIDV40mcAWeZm
DipcNIArgPTT9FNKw6tXr5pp0wL4J8z9vTt7zJV6HNNfNM4sWsyMWoqmrYUG
L9270hyta257hKMNZdbaezOJN12uZFz1hLd2HnNlwpWb5Xobv3xzM3pleDs/
reJrPr8nFZErieu7U4JnbPATc5G/qiVUMY1UArQfN3MQcETkD6qXfR8er3d9
5M+wR3jMyGsBtD1yEACQZeQgkC6nzrLnVDFAMshBwJJ8EAQcKEylmISXCKSL
HAQsTkWPU8UAbYkcBCzJn/onOAeTL4Y3zCBTyEHAknBDFHxIzqligLZEDgIW
p4LAqWKAtkQOAgCyjBwEAGQZOQgAyDJyEACQZeQgkDqn3gzjVDFAApzNQZU0
OTmp2iYrzMQ9rzZ5U81b/SIU4H/8RhYRwJynKexywy4xVKmTVby5qm8KUHNZ
1TeFOt9HvQobXLol/DPv1kf2nPowI9CWnM1Bc4K5AC89U3r+iwcnxSsnh4++
eHQ1YKzwn6k8FaFGY3OKvTYT6inY3NyMa7nRhnSnPrLnVDFAW3I2B4eHh2te
r/h7+ncvf+XDv3R0//usy1O//YHn/ny/epbUc3DSd4rbMwXn4I0z6n3hkeM/
+dQzew8++5mdF7582HR1Eb3wpc+rAFOGXooE9yzkYOQlNlPM+Ph4qH0R3hL5
PhlkSgvloP43lYDV8WddnvzIsoZo/4yp52As/eDXHtvTqmkFn/iN9/rXVy8J
9AJALw9iKvYMp09+WYvzF+DV8+RHf0UZXXOuts/BiYmJ5eVlM10oFKampuJa
YjM5mMvl9A8edi76QWRNq+Tgy88da8C3IiDgcvzHn/TmTT0Hm+wHXzy6WrP/
tS6lT94fa9U1WAlY73XIy89et2ZsuRwM2xDpP2hmZkYTh4eHvb29oY6Hxl7M
wcGBOkGV0dHRoZ9zc3NxFQO0pZbIwVeef85qPRq5XP/9DTN76jnYTD+oDqvx
VVZcntMeLfM6pPFKrB22qeRg44e6isXiBZ/Ozs6wy9K/z+joqCbGxsYi/CuZ
hXpLV9n+X0M9lAni3d3dtbW1fD5/fHzc3d3dfDHS1dVl/fTuWe/WajXv2fjP
UCsCNKglcrDx4dfaX3dSvFJ2IAcj94NKk7BrrXbsHNagHKoZN5fT60fe7I73
gwqL7e3tra0t81PCLkjpk8vl1tfX1YiFL7PsLVe0+vp/3PIJ9VDT09NLS0tm
YnFxURMmoMMW45WkYlSS/0rvp3VP6w5+1vU1H62Rn6FWBGiQ+zn45Ed/JVoO
mkvZgRyM1g++9Ewp2irHvoP0qY9/QCEYNgd1eeXF580jOJ6DsVC3okYs9T+2
wcFBkxf9/f07Ozunp6dh+0EgaxzPwZefO24mBI8qbyJNfWiK1g9e//RHIzfC
Lx5djav4k8NHI2/8Zz+zYx4kCzmo3CkUCoktrp58Pq9/Z3W4HR0dpVJppiLt
ogCnOZ6D9ZpBDfVf+MB/fnT5Pl00ETwap56DEfrBes3gl9f+61+s/IzW+rFf
mdd0vVV++sG1uIqv+RRo+39xdcFs/+BENi2h48cHLRHm2t/f11yRd9zF+H7R
YrGo/52enh7loHpDs480rmKAtuR4DtY7LHX113/urm/75uG+b//e77j79ttu
/eC7fyRgNFZjdfLSKymuS4R+8Lk/36+5LmNv7NeKm59afW2HemsdyxtmAuK4
s7NTNbzu9tcG56B5w0xr9YMR5lIC3nXHnZHfJhr75ybm5+dnZ2djLwZoSy7n
oAbhgMNS5iZdFIJKw3pD8eO/8V61TqevfD3FdYnQD9ZrhL0eUCuuFwABvbB5
j1CTnv3MTkDGqTMNzkFdStsfKmcgB5txHt8nMzIyEu0/mu+TQQa5nIMayYPH
2E+/791b73mn2qKfffvFgBx8dPm+dNclbD+osSh4xU0MKYO+uLpQ7w7P7D3Y
fOXXf3+jyRw8Cv9WJRdy0J2v9HTqy06BtuRyDj772YcCRld1Ru/6ge/5F9/5
T9QMfua//3TAPVPPwbD94CsvPn9GuPzmL7ztu98w9sb+gEOEzzx8I02KxeLU
TUdHf/dBhvX1dXPN9PS0t9z5+Xlz5erqqnflHxeCNqxysLOz09kcTPL44Plx
qhigLbmcg197bC/gvfpeBHzsvnvvuuNOl3MwQj8Y/CEF9b9K/4AQ9PrB4+Pj
x246OTkxi1AqeVd6y1VimmsOD7/xEfirD6wG5+CZ/aBWpNxq/SCATDnXHFTf
4Y29YSkHX/jS5xv5zNqn3/fu4NE49RyMcHwwYHXUBSsEA94hYy7eZxaa8cxD
H28yB7/y4V8qk4MAHBYtB3d3dzVLoVAwH9Std7eBgYHI76BTDgbsHtz7bz/5
tu9+w/I7xn/27d9/17d9c8DxQV2+8GvvSfd9MhHeL1rvwJzW9B+8tmPp3/9r
rbsuAccHYzkVRcC3umnp75t86+233aqJ9Z/6seA4JgcBOCtaDur+Gxsb+/v7
isKAQb6/v7+ZHCxXPjdRc3RVN6SxV+OwLuoHA0Lw8d94718/UuNkTEmK0A+q
F665Oh98948o+pWG5lIvB00X1ryAd+xUyvi7y8q73l7vbubb1Vrr+CCATImc
gwpBTSjmFHbmypWVFfPWC91qrtFNsxUKNf9Rp0aYHHxm78GAjPM+OhG0a+43
fyH1z9FH6AfVC9f87GSDX24Wy5tFjdL2hxpZYs3Lkx9ZNu88pB8M5lSdThUD
JCByDo6NjWl418+Dg4Ny5fs0Ll68aG6dmZkxjzYwMGBuPTo66u3tDVWYdz56
BVnkcViXky88knoORvt+0ZPilQjf6qn7K0C9L/ZsXjNfbeftm22tHGyb8/BG
Qw4iayLnoAYrtXh7e3sm/paXl70zX29vb5tTnvn3i4Y9Z4r3Pdv1vlmloctv
/kLZge/Zjvb9ojfOO/zgWthVvnGWjTonw40s+AMs9S7X/+/HvEcgByMvMZVi
+PwgMiVaDi4uLpr9ouXKIK9A3Nra8j6MtlxR9r1P5uTkJGwOev1guYldc+bd
qqnnYOTzD5q9o6FWOcY9on5hn4KnfvsD/rG0tY4PtsH3yZxTMUBbitwPFgoF
jVfm2J+uOT09zefzykd1hSMjIyaA1A+Oj49vbGxowuwgbZx1PvpGzoRuXU6f
etzMm3oONnM+ekXhU7/zwQZXWb1z3LV/w/GffKrRTvD3N6wdsy3XD2b8+2SS
XByQumg5eHR0VKywxjddr97Q+ySFphWI+hnhXaP+ftBocBw2B8hefu7YmzH1
HGzmfPTlykv0M3cOa5VfeibiW3Mbd/rkl888XHty+Gj1jC2Xg/6L/ybTLtW7
1Zo31IznXYz/1sjFAG3J5e+Tqb5SQ/2TH1k+syeyXj+nnoPN9IMerdTzXzyo
Xv1nHt58+dnrMVXakNPrR9W7SdWwB3xisbVy0IoJ68+p8WBqfMYEirHmJQcB
j7M5WN0Pel558fnqz1M8/eBavXE49Rxssh+spgHNXJooKgamgEbKaK3jg/5H
qLd23k017xB5xtiL8a4PrjP1vyUgRc7mIAAACSAHAQBZRg4CALKMHAQAZBk5
CADIMnIQAJBl5CAAIMvaOwdHR0c7OzvNl7wl7Pj4eGxsbGho6OLFi0dHR8kX
0KTJyUkVPzw8rL+QtGuJqKur6/LlyxFmtD5jnswloJ7I3xtTfWuoGRvcPukW
AzTPzRw8PT1dvsmcuHBzc3NlZcVMX7t2bW9vb21tzfvAta5fXV3VKnhf6eY9
jsbzCDnoLX1n58bp1LU4Ld18tXixWDRL97aY6tHSNzY2/I9wUmEq976BPBle
8dvb2+XKKbFUvGo2t25tbalU1W9+1SZaq6i5lbRhvdNpJUNb1RRvTl+ibasJ
s6lVqnJN0161+rm+vq6NX/3FfUtLS3qQyDno/4B5AhNnDvvNfFK+5lxnznge
xTRSJ5/oR/LczMFyJW6kt7dXI6HGbUXJ7u6uftXQpwm1KrrVXKkxcGRkRIGl
oa9QKFiPMzExESEHzdLV0Ck1lCN6fC1IPw8ODrSh1CVpYmpqSuGiwXlwcFBL
16i7uLhY/VAaqL0TEyfDFK/yFBB6fk3xao1Njnd3d2tCm9ScE0TFP1ChO/gf
ROs1OzurK6NFSWRKXhWv51H1m2q1befn5/XkqsVWd691UbXmpYWeXJWn58gq
Xs94Pp/XKxBt/Ag1JNyMcIoHIF3O5qDMzc2ZQdg7Z5NpB5Q+GhXLldZGA6bG
Og2D5sT3GtWtB4mWg6Kk0ANq4tKlSxqZy5XzKmpANg2LWbrq0d3UMZmld3TY
o5niUqFpdakJUG3my9wWFhY0Xa480WZ1FBDmPgMDA+Z8WKb46hMlq3h1XtUv
Lc6botCcskQ1q35zpepUDpoi9cpHW1U/c7mcV7z/q9v0jOjOysFm+sFY1qXx
JSa5uGDJr34Ap7YM2pWzOah6ZmZmzHRXV5eZUIOjwU0dgdlpphFegaixTvVr
GDyqsB5HORghhjQUe5GqYdacNEqLMzlolq5YNHtHVYOWe62i+kE0IIddepO0
XC98lSNm77F6QJOD3pd+9/X1KWuUIGa71fsK0J6enqQKv8H01+Z51GbXBjfX
mxw0X76qiaGhIeWg7nntJv+zrHzUaurVUc1vaz9T8mNvwBKdak6d2jJAXNzM
QQ1xGp/V96k8DXpKnPHxcY3nGpM13Fk5qDuotTGtmYLS/zhmH6au984a3CCN
uppFS1emaDTWqKulm52x/hzU4lSPSjWNqte8lCtjtUZjE5Rhl94M1aOtoS1j
ilfBXvHmHS/+HCxXzuuhbaj7+4vX9ldoqtHWndUOJ1Z8ufK6RZv3sYpyZb+o
NqDZx2vlYLnyBeam4bWK1IorGbXxTecellOjPcW405yiXTmbg5s3mdZAUaLh
zvQsutW8YcacBtFcs11h9YPeg4RNIm9GMxorCrV0syzV4C3dTHhL97dUarUi
L70ZykFruSpSxXvnQfaKMW8B0v014a2d9yC6mx7BHABNrHhTlVd/+eZfgnmT
jyox7/wxr4W8Cf/a+XnPVFi0YDWvT/44JkdOkQw3cxBIkVPHB1Mppt4Sndoy
QFzIQcDiTgsWfFPynCoGiAs5CFicykEA540cBCwcBQMyhRwELBwFAzKFHAQs
7BcFMoUcBCwZz0HXiuHzgzhv5CBgcer4oDvFpHIc06lQRrsiBwGLU8cHnfoK
F3IQbYkcBCxOjfZtU4z5xrxQs/BOWiSDHAQsrkVP2ObUnzjeGazSKsaTy+Ui
nNOZ44NIADkIWNw5JBetGP07m3O1HB4e9vb2Vp+kOJpo3VmxWMzn8yqjo6ND
P+fm5mIpBogROQhorO72SeX4oFVAV1eX92vYR/POqjw2NraxsRF29u5Xa6YY
E8S7u7tra2tKw+Pj47CPYBUTal6gQeQgoPFZf/+bm5sPVKSyX9QsWjWsr6/P
z88rv7x6wj6a0ieXy+lxxsfHIxTzgI/KUDF6KO+aUA81PT1tTpmticXFRU2Y
gI5WDGMUzgk5CFicOj4YTWdnpxqxeudWTszg4KA5VVZ/f//Ozs7p6Sk9HRxE
DgIWp44PRtPX1xftHMTxyufzGlvUbnd0dJRKpZmKtIsCbOQgYHHtlH9hH21/
f19zmUYsWjERbqqpWCwODw/39PQoB9UbFgqFGIsB4kIOAhan9otGKGZnZ+eu
O+6M/DbR2D8/OD8/Pzs7G3sxQFzIQcDiWg469eU2EYoZGRmJPLyQg0gAOQhY
3Dk+mPwXqrTKl50CMSIHAUurHx88P04VA8SFHAQsTu0XBXDeyEHAQg4CmUIO
AhaOggGZQg4CFqeODwI4b+QgYMn4flGKQdaQg4DFqRxsg88PnlMxQFzIQcDi
1PFBiklyicgmchCwOHV80LXmNMlKUlkiMogcBCzujPapNETkILKGHAQsTo32
usl/aeZWf8tZb8bgRjjGYhq5iffQIhnkILJsfn7enBWot7d3ampK1ywuLvqH
4r6+vosXL/p/vXz5spk+OTnp7Oz03yoDAwNmMO/u7p6YmDg6OtKVly5d0n9Z
vRqCmz5za80sKwcmXfWtjc+YQDEBoUz8IWHkIDKrUCgo1/QvoEQrFovmxLV7
e3sainWNppViSkkl2unpqflVNx0eHprZ19fXu7q6/NeUKzm4urqq++vKwcFB
k63BOVg+64ikbqp5q7kywq3BMwZzqhggFuQgMmtycrL6vHiKMKWS0lDT+qfQ
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
AAAAAAAAAAAAAAAAAAAAACBN/x/Did8e
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 22->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ9sJOlZ5vcuFxyZnHcMigUNMsJghCwuIKNEkeHwxSALHxghc87lZELA
h4MMnMkZDLIi9i6XRHsYqU/xYUUOmVyGi6PEkE2Is9kwyzYyyXpjQjrJbbwR
Dg5JJma2d9e7s55Zz0zPzH73TH2Z2tpud1V1VXV3ddfvp1el6vrz1VtfdX1P
PfX3+2d/Z+pN//Kuu+763ZepM/Vrf/DaxcVfW/6lM/oxvfC787+xMPfrEwu/
N/cbc4uvmX2JBv7Bv7jrrtdr+tv9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAALUwAAAAGWZ3d3d6enoGAAAgY0j+Njc3
77nnntXV1T0AAICMcd9990kNpYPqabUrBQAAaDaPPvroG97whne84x3oIAAA
ZBCrg/hBAADIJvhBAADIMvhBAIv/w0RJjY2cUtOyBcga+EGAVpE2DUIWIZvg
BwFaRdpEBx2EbIIfBGgVaRMddBCyCX4QoFWkTXTQQcgm+EEA0yIJ8F9iS/JB
ByGD4AcBTColIG35AHQq+EEAgw4CZBj8IIBBBwEyDH4QwKCDABkGPwgAAFkG
PwjQKtLm+FJoigGaAH4QoFWkTXTQQcgm+EGAVpE20UEHIZvgBwFaRdpEBx2E
bIIfBDC8T+bOEtFByCD4QQCTSglIWz4AnQp+EMB0nA5OT0+vra0lmAxAB4Mf
BDBRdbCvr29vb8/2T05OJp5S5HlzuZx27QSTAehg8IOQWU48RNPBsbGxzc1N
9ag7Pj4eM4djB29K9ZYmUZ6amhoYGOjq6lJ3aWkpwXzSQL2rAxAG/CBklrte
TIQSFhYWdAwpsRgcHDw4OIifQ5x8lIC0b3t7++zZszKnykquMMF80kC9qwMQ
BvwgZJZisaj/v9uNUIIUZ2ZmZm5ubnV1NcLsati9OWxtbZ0/f77oEOGsptJY
WVmxPdqj1TM6OlpvPsLNR5KqZsHNJw3deusEIAz4QYDI7O7u9vb2joyMRJs9
WYMzPDwsGVXP0NCQJKxcLvf19dWbD54LMgh+ECAypVLJGqhosycrOlNTUzqg
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
Vgf/zfzKS1727T+58kCYiX/if348zkpJB0NmVa8O6h9yfHwcPpMU6iDvk2nV
QiFrtKkf/D9fCqWD3ub6pS8/E2bKTvWDIXXwRxfeKRFUdYWv2DgrJR0M+Urt
enVQ/5B294Od9D4ZtTN9fX2RZwdoKG3qB+t9/chr3vbhl7787sDJXr91sVOv
D4Z5f7UVQdVV+Ip93Ts/FvO86OwDfk9zRNbB8/90BR1Mljj5rK+vB35rEqBV
hPeDi4uL58+fd38eHR1Jj0ZGRnp7e0+dfnl5eWhoqK62KCRa7hefCHg/2Ni7
PvMDU/9FbmV0ddue6Atzn8zbHznqVD+4svu0/7r/+NKfqqFTXb127WEbP/uB
rwTW2Fve/1CclVLbGOZ9p0pG21Hp/cib7lV/4AMdisPLNzKog9PT02tra7Z/
ZWVldnY2YmYJ5WOc/63aAe0auVxueHg4wXwAkiKkHyyXy1KfgYGBiuHHx8e1
dFAl6yAwsUQ9KJPAN4uqDZfwvew7v9s+R6/m/ec+/M3AxvPvL17tVD+4c3ji
v+7fM/ofrBa4IdEJtl3bD8dZKemgjFvgUioS0xFO4CwnIZ4fXPXQKh305jA/
P6+jTW9K9RaoHXlhYcE4r4MYHBzUwWq9JXjz0aGsGoc4+SgZlaAN0d/fXywW
Jc1x8omzCwD4ENIPaqzaUh3RVdx74KODjcO+Tyb8jR/h4/jarU71g+Wbz4e/
M9N2A48cXr91Mf77ZAIf8K9OLHDKN37iognxPplhD63SQW8OfX190gv3Z4QC
tZ+Oj4+rZ2JiItqVDm8+UlLt3d4hdRWlXUlrpK1weHjY3d2tf2ChUIiTD3YS
GkRIP6h/oP7Va2trGxsb3uH6k1fooP7zk5OT2g21P2o3915218QqR2I6NDSk
HvfOzO3tbTlNzaXh+Xw+MGergw9+LdhH1BUSVtPR71WL/O3dWvHuL1xK5D3b
IR8hDB/y9cY5SAufSQrPi0ZA/17tX9pJo12MS7YStra2RkZG1LO5ufmtdyGG
2LurU0oqH4BahPGD5XL59uFcuayGRT3eUT5+UDJX8R/WlG6zeXR0pALVs7+/
L/mzTZaGjI2NFYtF/5ztPnVy41ZIgxMy/vHp66ajdTDBz1Qppj76zzrCT0QH
A1+tVm9cu3H70yHtfn0wGvoT6qgy2uM/yVaCdmT5Qe3pi4uLy8vL+imDGSGl
pPIBqEUYP6jDOf2Tbb/2Mqtflmo/6GJ10PWD0pdT/9KSYGnfO+6ghjGwwXe/
u5TIR3htuB/r6WAdNIl+qcp+niOR702Iul534x/up3izqYMhT6qcSuKVoD1a
oqyD5/7+/snJyb29vQgpJZgPwKmE8YMjIyP6D8/MzGhK7WXeU6Ph/aB2gVo6
uLS0dOyghktdr86eivd79Ek17Pbjg6bTdVAOLpFPEKoQW2BS3+FV/ctgxk/s
7Y+8cGdIu+tghHy0OTSX977uevNJ/Dl67dFdXV11naOOv1CAugj0g/akqPs3
rlA3jdXPUxucCj9onL+0e7pGM9q59vf3dcQYqH1evDooQj6A5hNfvfTC0jtb
B41zPjm+3LilJaWD4rGn4n5Q8g33P+59mDGDOlgoFHK5XITbRC0+D9FHy8em
pIPnaPkANIdAP7i5uTk3N+cdot3hVvm6+3NtbU3t/9jYmAyjd7Lq64PaPbsd
tF/09fVJAe1wHb5qoFynhoe5tFGhg2rY40ihml9vaR2vg8a5UBjZfP3iR/7Z
W1SCOig+Xwp4LNQn9B84uXHLW1oGdbChpC0fgKRo0/fJVA+McDPkGz9x8fBy
5QFwFnTQRD1B+lt//UTF22OS1UGhLaLtUm9ib334qerC0cFkSVs+AEnRpu8X
PXX4zuFJyCZUbujdX7h0aiEZ0UHLn+09G/KeW4lm4evPVZeQuA5a8p99JqRj
VWJykacWgg4mS9ryAUiKjvGDLmquFx56olbzPvtASY3/tRefQPOSKR20fPDL
l+cfPP3E8i9+5PY3Gc//05Va8zZIB43jWN/76LO1znhr+2or68jHp/B210EA
aA7t6AeHhobOh+BP/+L+hfWP/eo7P/zL/+vDv7n2kfwHth745F/5z1IoFGLq
YJjEohFHB5eWlgLLV+X87w9+XBWl6lKlqer0M7DGYr7qSoc0YRLTtvMmpi0b
psbQwXrh+4OQTdrRDwIkDjpo0EHIKu3oBwESBx006CBkFfwggEEHHdBByCb4
QQCTSh1sST6Jv08mJuggNAH8IIBBBx0a8T4ZgPSDHwQw6GAI0pYPQFLgBwEM
OhiCtOUDkBT4QQBzRwebH/4puScq/ecKOaresYnkk2C2AA0CPwhgUqmDLlKf
NOhgtHzQQUg/+EGxvr4+Pj5e8VmNlnN8fKztMjo6Ojs7G/nzbQ1ifn5+ZGQk
hYkZ57Mmw8PDEb49ZM1O87vRMgw/KubYaPnEz9b7URuAhoIfFFtbW1r9sbGx
VifyInZ3dwuFwuHh4dmzZwcGBlqdzovY399XYtvb27lcrtW5VDI0NNTb2xv5
G3wAkDXazg+Wy+UVB+Xc3d1dLBbVJqvdkzdRm2zXYmFhYWZmZnJycnBwcHp6
2jivXJaUqH9iYuLU13RLdOLroJuYPaWzt7enxGQz+/r6JLUaon5ZFSXW39+/
trZm51LaylZL93l/uNa0rrdletGMSskmZr8MLv3q6emRp1PXvk9VS5+amlL9
KBm5Y+P8MZS2Ela9SYhPLblUKmmaaFnZ2W1ii4uLqijjfMtSNaNNqZ/2M5Tq
ka7pL6rM7Tu91VWSmkaJbWxsVJSporR2KgQdBICQtK8fVDOuVtQ43yywKiOJ
tHohHdQa2cnUfhrnzOfq6qoaXjWPau13dnYqSktEBy2vfOUrbWWqobYqI6W2
n+SWrFj5U6q25VcyWrRNrJamSCkSOWerHKyUaNH2fKaWaw2d1n1zc9M4/wcr
x9Jr6biysmJXocKaXVqv2r5w4ULMrFQVki0t1yZm9UsVqKMF9WjRSsCmqpRs
vZUcVLcVHzpXPdvDHnQQAMLTdn7QIl2zLZ5xmnf3IxFqANVCSgdlCuwQq4Oa
WGpSKBTslwiqG8mkdFDqrKWbO6JsB7r9cjFauh1oP9IkxyoBOu986sId5UW6
KQ8bPzHJivv1JSWjlIxHjrXuVtHUldyo58yZu70fm7DTVyBxtNUbBy3a2jpt
FG0+O1CLs0cFSs9KsJTXqpuGuNXlbmWLKtNuWfs3iJkYAGSEdvSDav1sW22R
H7TJq8G0LXy1DkpNXN089eq8dND/s4ZhUBrexOQH5VCMc4LU9YMVOqjkfT5d
JO32+UJfeLR9JdDuz1P9oD0PqSOKkZER4/hBaY2dvkIE3Z/qkSuMc6vM0tLS
8vKyNzHXD9oVd62o1UHjbFD3sKciMRVlj0NUtzrkOFW7AQAqaDs/qHZSLaEa
9nc4qPWW1qi1VLundtK9PujqoL1UpyZRZkEtvJRILX9F063pJQQqRG1vnPNp
WtY77mAc+bOX2LREe+a22g8ax7zIrGlUxXlRrYumkXzbK3eREysWizo8cBOT
rFRfHxwfH7c9qs9Xv/rVxvljSJVmZma06IrTjxJuVaZmselFy0rs7OyoZmxW
UnzjuT6oqnCvD1booFbHXg6WTa61dPwgAISnHf0gAABAUrSdHwRoEEk9G17X
k+PhU2patgBZAz8IYGnco+i1xgZqkM+z5A3KB1mEDIIfBGgVaRMddBCyCX4Q
oFWkTXTQQcgm+EGAVpE20UEHIZvgBwEM3x+8s0R0EDIIfhDApFICWpJPhK9O
ALQ7+EEAgw4CZBj8IIBBBwEyDH4QwKCDABkGPwhg4dIYQDbBDwK0irQ5vhSa
YoAmgB8EaBVpEx10ELIJfhCgVaRNdNBByCb4QYBWkTbRQQchm+AHAQzvk7mz
RHQQMkg7+sGurq7eIM6cudt2z9x9d09Pj7o+4Z3RfpY9Gu6C/HPTZKd2/Vld
XY2cWHd3d2D5br2dugq3h1eFhqvkyFmZcJvSPzEf7IfsQ5JCCeB9MgDNoR39
4OjoqP8EN587Pjn4f0cPnCude7sbT330XZc/v33j8iX/eWPqYOR5A4mjg+fO
nfMZq6ZP1XLl0YdVRW51Pf6+tx1tvefkH4qqTJ95d3d3I2clpqamfMbeKl9X
YtpqT374T7ybUltW2/fW1Sv+hWdZB1Wxa2trCSYD0MG0ox/00cHrpQtPfCjv
bTNPjece2631hdNM6aAUUIISWF2ljZVrh189tYQG6aC2zpUvPRKYmPSxVmKm
KTrY19enPcj2T05O1jt7YEqR5/UmBgD+dIwflHF46i/X5WKCW3W3bf/mV6rL
yY4Olp+6GLauzr394vveJtGpdtON0MGr39jX1gmZ2G3fev97T7X5gTqobX14
eKjuhQsXoung2NjY5uametQdHx+vd3ZvDupqZ9zb23OHRMhHs6tKBwYGurq6
1F1aWoqTz/7+frFY9A5pebfe1QEIQ2f4wdstp9Mkhm/YbTz7mQcqisqIDl7+
4qfrrStbvfKP3nIS18FLn/pYvYnZqDaGgTpotc+NCJfGFhYWdAx5fHw8ODgY
7Z9TkYM36i1KCUj7tre3z549K3OqrOQKE8wnDVHv6gCEoQP8YKgze7Xjme0X
rXgWdPDZnfvj1NjJPxTdohLUQcnQMw99KHJWkumrX/uyt/BAHZQNtGbQdiPk
L8WZmZmZm5uLtnXUsB842BwedXB/1lua0lhZWbE9OrI1Ia6kV+djU7rgIHcp
P2iT8VZUq7rRthFAIO3uB6998ytxmvRqV9jxOnj589vxa0wG3JaWoA7KCUZw
9BVxvfRCU1nX9cFoaPV7e3tHRkaizZ6swRkeHj5//rx6hoaGCoVCuVyu1w/i
uSCbtLUfVEMX5q6YMOFeK+xsHazrmqB/3Lp21SSngzFN/QuxsWITM03RwVKp
JOGQaYo2e7KiMzk5aU/SdnV1HR0dzTvUmw86CBmkrf1gIg7ihfbTuYO0s3Xw
yT9/Z1I1drT1HpOQDkq5kjqeUehfYQtvgg6urKxIOCIvKFnR2d/f167R398v
HZQ3zOfzEfJBByGDtK8fLD9dSqrltPHcY7eb9A7WwZN/KCZbY9oEiehgIqdq
3ZDQ22cem/DchHaciYmJeufyLjTy2FosLS0tLi5GzgcdhAzSvn7w2c884N8e
3v+Hb1r+pZ/5lde+St2/++PF4Cb0/feajtZB72Py1XHxfW/789//1TdPjv76
z7zmPb/9+oshbKMsYXwdfP7mDf+nJKRrD77tt+2mVE8YKbQXfLP5HL32jjj7
Mu+TgQzSpn7wVvm6ZMu/Mcx9R8/rfuLH/usv/LvxH/thNSlq2wPbz5uXL8W5
Jy3NOiiL5H9GVArY3d0trZEO3t39suEf+N5gKdxY2dnZibNS0sHAO52Uhjbf
D+Vecdddd/3fN/9ySFd4+xUBmdRBAKiXNvWDYU6Kus2+GlIJohrSwFmuPPpw
p/pBrZq/Dn4u/3uqqMedkH1WIxwoOofvfeunP7kVZ6Wkg/4nRZWMsrpw9r8r
wqTkznXr2lV0EADC0KZ+8OrXvhzSF9iQJZTBCZzsaOs9neoHn3noQ/466I61
UihLuD7/Ov/pFQ+tr8RZKelgxWtgq5citX3ckULpwrnfmQmpg9dLF9BBAAhD
m/rBK1/42zDtoWyg5O/7XnFG8difLAfP8v57O9UPSuJD3imqyd7z269XIxxY
Y5ryk/9tPs4VJelgmFeouToY/ryobGa9t3FyaQwgm7SpHwy8ScbG1lvm5CB+
5bWvekXPy9Vih9HBTvWD/jfJeOORP3qzFGfljb8QRjdVq3FW6rYOhpPmuvxg
yblVpgnPTcQkbY4vhaYYoAm0qR88/vuHQraHrsGRFAZO1sF+MKQOfi7/e11d
Xcu/9DOP37lW6F9jzdFBBTrYBNBByCZt6gevPPpweB1U/N0fL3Z3dwdM9v57
O9gPHt3/3sBaeuxPltUMvnly9PC9by2FeG+5faIhzkpJB5/883eGOZKpVwef
e2wXHawXdBCySRw/WL5DrW/5VZDULiYdDLzZXk26Ws6Lzt2Giu97xZkw94se
PXCuU3Xw0t/8hb/QWBH8lde+ynWCwedF339v/Ptkwrxb26uDVqMD48blS+m/
T6YRz9HHAR2EbBLZD0r+tMuoHRsfH1f7Pzw8HDhLgjp48/Il/2bwkT9687d9
27e5n2vJfUePGtLAxvPqV7/UqedF/V/g+bjzaEnFN27CXCLc3t6Os1L6/8i4
BW6XisTkWAN1U8dm6ddBf5qfD3cKQTaJ7Aelg93d3e7PiYmJwCYxQR00zqsy
w/gI2Qc3Aqe/+dxxp/pBdf3fPGANoK0oa6IDLeETH8rHf59MyEdBKzalT2K3
R23cdqnoIACEIY4f7Orqcn/OzMwUCgXbf3x8LGGVQ1xYWDg8PHSn0X69t7cn
xVTrF6f9tDoYxkd8q+V3LvwFTixhNR39XjX/J/Xc6gp7UtT5dGMi7xcNdQ+P
uylDiKb9WDA6CABhiOMHpYM7OzuSv5WVFfcDOho+NDS0ubmp/mKxKGkolUp2
lPZrLUgTSGt6e3sjK47VwVtXr4RpFcOH/XRdB+tg+I8uhXzS8PmbNxLRwXrf
ihComPbTS+ggAIQh5vXB5eXlxcXFsbGx6elpqyBnz55Vge5kEj5NY/u9+/Xa
2trS0lK0nN3vLoWyhOHCfkXIdLQOmjCW8I6UBErhszv3m+S+P6j6T2pTWjNo
6tTBiktj3suRFVNWXKxMcKwP4YttTj4AnURMP+j+VHto5Unq5gqf2Nracts6
7462sbExOTkZLWfv9+jDPA4Qptm/efmSLbCzdfD2+8lDvL8lMOw5ZJOcDt6+
SphEYvo/uIXHfG7CKmOtW0fijw15l3XIYhuXLUDHk9T1QVcHC4XC7fdgl8t2
uAqXQ7T9Xh2UCEZ+YtGrg7euXglzw4x/XPvGvltgZ+uguF66EF9u3G++J6WD
JolP0uufoP/DCwWm/vlBAEgDMf3gfQ6afWhoSNbPjpqfn5+enpbjW1hYkGa5
zZFkYm5uTsPVHR8fj5yzVwfFjcuX4kihexrN0vE6KAKfvvSL99974453Nonq
oIn3pWD9B256EjPoIACEI44fvOcOmte9GcZSLBbX19e3t7ddY2icc6FHR0fq
uneWRqNCB8XN544jnCB94kP5a4dfrSgqCzpoop6HfOqj77KfendJVgfF1W/s
R0js6IFzXidoQQcBIAxt+n7RU4ffvm0mdBN66VMfO7WdzIgOGuf6VMjXldu4
/PlTng9NXAeNc1TzzPZ9YRPbWNF2P7VwdBAAwtCm7xetNUqmQK2i32nSjRU1
/nJDtUrIjg5ably+dPtLuLWfQFFlXv7ip90LghU0Qgct2kbP7tzvb061rWsl
ZtBBAAhHJ/lBLzcvX7r2jf0rX3rk+O/+SsJ35Qt/e/VrXy4/dTHwJr2s6aBF
1SLdURWpolRjiiuPPqyfN5898p+xcTpoef7mDW21q1/9kjcxbdmKS4Gngg4C
QBja0Q8q1S0Hnx4f/OfyXtCsl4pFVHd9evy7Io5Ax6mxwHkjZ+WfWCD+FdtG
/2cAaC3t6AcBEqfiifKmRfis/BNOcGz4Wgo/lsf5Ic20ox8ESBx0MEIthR+L
DkKawQ8CmDtNsffNKo3u3ipfD9PmN+hFMdX5mNAvWU1koSHHIovQBPCDACaV
3+FtMhKgFNqxtOUDHQl+EMCggw7oIGQT/CCAQQfxg5Bh8IMAJpU62JJ8fBba
EklCB6EJ4AcBDDoY4rtLSBJ0KvhBUSqV9vb24jyo3iCUkk0sztP9jUAp6Z+T
wsSM8wZ45VZvYuhgIGnLByAp8IPGeVHb+Ph4mNe1NZNCoTAyMrK0tDQ8PDw9
Pd3qdF5AEjM5Obm8vDw2NqbcWp1OJTMzM11dXRUfQAkEHQwkbfkAJEXb+UE1
wkN30I65u7t7fHw8Ozs7ODgoIbOebmFh4dy5cxKRXC63vf2trySsra3ZuU59
2abKUaseMzdvYvqpxKRfSmxiYsI2y3Nzc6pqacfAwECxWLRz6SDEzuXzjrLu
7u7Ib8s8OjryJqaslIxWVolJzmyx+rmxsaHENM3+/r5N3taqqtEOqUbT9Pb2
RstKqFiblWrDvppVQ2xiqiibmMpXYnYyrYhdnampKU2jQ5dqC6+DBwl0f3+/
nTg8KdRBAGgO7esHNzc37cd8pXorKyvG0TK1qHaIWm9z52PB6pEaqlXXT7Wu
au2r289EdNCyvr5uXx8tlTl79qxx3qJpU1XzrjTUs7e3p4ZdPfl8fnV1VVkp
t1qv6VbyidiuRQf1uCosibFrra4qTT3nz59X2uqRgqtfiamuJCsVRWm4Zunr
65Osx09MdaJ6MM6BhE1Meeo/qR4twtahm5iqQrWnBDRlhYWXLmusRqGD0eB+
UcgmbecHLWoD1WZay2AbRjtcDaDMjpp0NZt2iNVBraMmkxhNOFR/JUFDEjkv
urOzYwXu+Zs37KKNoxpW46SDrumzQ+RrJCg2K6uVFWgDqcD41y7lgq2OGMdd
2stnSswaOuVgF6Gu1VwJkFtdotqNqgRVsl3ZOOgYxh4bSMW0UDtQKmbFV+nZ
RWushqirWnWz0mb1FqUVtP8EdDAa6CBkk3b0g4eHh3I06tqfasOlPrZfzaaa
SumgezrUitHS0pL1F7VIxA9KRLznCaV0SsY49+Hkcjnj6KAr0FYHJTpuqqdm
JaFx1zQy1lHaZOyiXXGx0qNjALsUda0Oqobdowsf3HWMhv51brVbR2wT09/S
puHVQdWh+n1OEY+MjNgzqNroOsCo60wyOmjQQcgqbecH1VqqiVtbW5MltBcH
Nzc31YzLZ805GOe8aIUOqnlXgy9PJBlaXl6uaLoLhUI+n1f7qUqI89E6NeMq
f9fBOCdIZak0ZHp62qqwjE+FDkpr1NRrFTRcYu0tTZtGo1TIfQ6RE5MKa91V
P8pKlaYKVP0oE621NEg1aTx+0NVBLVeyYhdtT5m6bGxsrK6uKmcN17aIlpVx
DhuUmNKwiRnHtlsvr22h4cbRQWtdrR9Uj/6rdnMrDXs+vBr8YDTQQcgmbecH
JQcrDlIuda2LkR9Uy6xVsG2mmlD3RKK98GQcOVDbrslsA+vl7NmzboFxdNAt
xF2omnQt0T0Xqp9uYu53dTVkzcF1tRZJZP4OKjOy7VIVuYm5K6i60hC3KiRq
tnx1pS92oLRJSarSKoyhJEZHFJpdU8apLq24m5WtMW0+m5h74lrVYrepulay
jWNvlZi2Wq3Txcq53sRSqIM8R9+qhULWaDs/CNAI0EGLz9P0SBJ0Km3nBwEa
AToYSJx81M64N0EBpA38IIDpFB2cnp52z7e7N+ImRZz6cR8mAkgh+EEA0yk6
qB3Z3tR0cHAwODhY781C/kSrH3sH2pkzd+dyuRS+fQjA4Achwwx7aJUOenPo
6+vr7+93f0Yo0H0OZWJiItoe7c1nYGDgzN13e4fUW5pEWc2LfbNBsVisdX9v
yHyQUWgQ+EHILKseWqWDdulra2vqzs/PLy4uuilFKFA2ULZrY2Mj2klIWwlu
PmoW1Dh4aylCMhLBw8ND++oGn0dlfVJy83FvGAZIFvwggEnledFo9PT0eN8y
UW8+CaakJsW+3tA+4Ws8DzHVlVJS+QDUAj8IYDpIBwcHB6N5SZN0JRSLxb6+
vlKpJJO7vLysnxHeuoAOQhPADwKYTtHB3d1dlem+syhCPsmmpIbFfkykv7/f
fftrvSklmA/AqeAHAUwqdTBCPoVCIZfLRb5NtBHvk7GvRo/8NiR0EJoAfhDA
dIoOxifx98lImuN/lASgoeAHAQw6GIK05QOQFPhBAIMOhiBt+QAkBX4QwKCD
IUhbPgBJgR8EMKnUQQBoDvhBAIMOOvAdXsgm+EEAgw46oIOQTfCDAAYddEAH
IZvgBwEMOuiADkI2wQ8CmFTqYEvySfx9MjFBB6EJ4AcBDDp4h8TfJwOQfvCD
AAYdDEHa8gFICvwggEEHQ5C2fACSAj8IYBLSwYODg66urroWGnKsTc+N6inD
jKp3bCL5JJgtQIPADwKY2jpYLpeXl5dzuZwErr+/f3Z21qeQCxcuJKiD1diL
d6dewvMZFXNstHziZ3urfL3efACigR8EMLV1MJ/PDw4Oajc5OTnZ39/3/9R7
o3UQABoBfhDA1NbBmZmZxcXFU4fPzc2NjY298pWvVPfg4MB4dPDo6KjvDr29
vbX0Dh0ESAP4QQBTWwfX1takZepqTynffN4dLh3M5XKlUkn9Kysro6OjpoYf
1P41NTVVa6FJ5Q8AkcEPAhjf+2Q2Njbk+Hp6eiSI7nlRr088OTmR/B0eHlbr
YD6fHxoaOj4+rrXQ5NYAACKCHwQw4e4X1T4imSsUCsbRQdlAd5Qkcnd3t0IH
t7e3NXx/f99nobETB4C44AcBTOjnJmTurCWUDs7Pz9uBR0dHmrfCDx4cHORy
ua2tLf+Fxk4cAOKCHwQwtXVQqqddo1QqnZycbGxsdHd3y/cZRwd7e3uLxWK5
XJYgVlwf1MDh4WEdXgYuNPk1AYA6wQ8CmNo6uLm5OTIycubM3T09PTKDkkI7
3F4flPxpePX9ojs7Oyot56HWQhu2QgAQFvwggKn/fTLSwXw+H3+hgRM04kUx
kV/bErnYBuUDkAj4QQCTVh00DXtRjHeUO0HISmjoa2QqxiKL0ATwgwAmxTrY
NCRAKbRjacsHOhL8IIBJ5fcmmg86CNkEPwhg0EH8IGQY/CCASaUOtiQfn4W2
RJLQQWgC+EEAgw6G+O4SkgSdCn4QwKCDIUhbPgBJgR8EMOhgCNKWD0BS4AcB
DDoYgrTlA5AU+EEAk0odBIDmgB8EMOigA89NQDbBDwIYdNABHYRsgh8EMOig
AzoI2QQ/CGDQQQd0ELIJfhDApFIHeZ9MqxYKWQM/CGDQQQf/V8rEyUftTF9f
X+TZARoKfhDAoIMhiJPP+vr61NRUgskAJAh+EMB0ig5OT0+vrq7a/pWVldnZ
2YiZJZSPyOfzQ0NDZ87cncvlhoeHE8wHICnwg5BZ9LfXEaDttkoH3QTUlYpJ
udwhEQrUXPPz8+o5ODgYGBg4OjqqtwS76P/hoKImJye9tVRvaQsLC2peTk5O
+vv7i8WipLneErz1E61OAALBD0JmGR8fHxsbs91W6eCYg81ByiXrZPtFhAK1
F2t29UxMTETYo20luPnIvsnEuT/rTUlarNklgoeHh93d3eVyeXt7O0JKNgGb
Q72zA4QBPwhgUnleNAJWejY2NqJdjEu2EtSkjIyMqGdzc3N0dNQ450gjpJRU
PgC1wA8CmE7RQSHnJV8pCxYtnwRTKhaLfX19pVJpcXFxeXlZPwcHByOklFQ+
ALXADwKYDtJBaY17q0y9JF4Jalgkyj09Pf39/ZOTk3t7exFSSjAfgFPBDwKY
VOpghHzkuTTX+fPnI+eT+HP0x8fHXV1d6kZOKdqMAOHBDwKYTtHBQqGQy+Ui
3Cbq4vMofbT6UUpDQ0OR8wFoAvhBANMpOthQ0pYPQFLgBwEMOhiCtOUDkBT4
QQCDDoYgbfkAJAV+EMCkUgcBoDngBwEMOujA9wchm+AHAQw66IAOQjbBDwIY
dNABHYRsgh8EMOigAzoI2QQ/CGBSqYMtySfx98nEBB2EJoAfBDDo4B0Sf58M
QPrBDwIYdDAEacsHICnwgwAGHQxB2vIBSAr8IIC5o4PND/+UaqXnk7z/etU1
NpF84mTrc5IWIEHwgwAmlTpoPFfr0qCD0fJJMFuABoEfBDB3Wvjmd6Pl5jNB
+FERMomfT5wZARoEfhAAALIMfhAAALIMfhAAALIMfhAAALKM1cHV1dXp6elF
AACAjDE7Ozs/P18ulwsAAACZ5OjoqFUPTxEEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRBEmuP/A0PTLr0=
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 23->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
FAqFQqFQKBQKhUKhUChu8v8B8cDVFg==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 24->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ9sbOddpgu0ozYVZuuolmrVd4UlgqxFwwqj7HphLWGouyXIggGsVU3b
ddkaWWK9Wre4wggFud2oMuCyputViozI7RoitwkE1aWmyJu6rGnd1mnTmMKU
7KW16vTeJJPrJvGN77253745X316MuM5c+abMzOf5zyPfhqdOXP+vOfMzPee
9/z9wXf+18LU977iFa9496v1Uph870/Nzk7+5i/+C7355Zl3T//azLv+81tm
3vOuX3vX7L995/ep53u/5xWv+I8a/qVuAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGoYAACADLO7u1soFCYAAAAyxvj4
+Pr6+t133728vLwPAACQMR588EG5oXxQHe1OpQAAAK3mK1/5ytve9jZ8EAAA
sknogw899FC7tQAAALQa8iAAAGQZ8iCAJf5iorQ+dZbUMrUAWYM8CNAufPMg
bBGyCXkQoF34Zjr4IGQT8iBAu/DNdPBByCbkQYB24Zvp4IOQTciDAKZNFhA/
x7bowQchg5AHAYyXFuCbHoBOhTwIYPBBgAxDHgQw+CBAhiEPAhh8ECDDkAcB
ACDLkAcB2oVvic/DUAzQAsiDAO3CN9PBByGbkAcB2oVvpoMPQjYhDwK0C99M
Bx+EbEIeBDDcT+Z0jvggZBDyIIDx0gJ80wPQqZAHAUzH+eD4+PjKykqKYgA6
GPIggHH1wZ6env39fds9NjaWuiTncSVMf+0UxQB0MORByCzHEdx8cGRkZH19
XR16HR0dbVDDUUBUUr1TKxaLhUKhv78/l8vpdW5urhE9VtKxT9S7OABJIA9C
ZnnFy3GYwszMzMLCgsxCpnNwcNC4hkb0yAQlY3t7e3V1VeFUqpQKU9TjA/Uu
DkASyIOQWfb29vT7D18dpiDHmZiYmJqaWl5edhhdDXtUw8bGxubmZvi23qlJ
xuLiou2QO5sgrtarJypJlqpmYS8guqLa+FrvOgFIAnkQwJnd3d3u7u6hoSG3
0dMNOIODg7JRdeTz+a2trZOTk3rzIJkLsgl5EMCZw8NDGYdzTknXdMbGxvRH
Pjo6yuVypVJpOqBePfggZBDyIIAzi4uLr/q+71Pychtd46YoplgsDg8P9/Vd
kA8qG9p9pPXqSVcSwLmAPAhgXC1Afxy300TDmTp/Wo25ubnZ2VlnPfggZBDy
IIDx0gLc9CgSOm/TXr95y21EgHMNeRDAdJAPAkC9kAcBDD4IkGHIgwAGHwTI
MORBAMOhMYAMQx4EaBe+JT4PQzFACyAPArQL30wHH4RsQh4EaBe+mQ4+CNmE
PAjQLnwzHXwQsgl5EMC0yQKacT+ZRsAHIZuQBwGMlxbQej2cNAvZhDwIYPBB
gAxDHgQw+CBAhiEPAoSEOwatLZ5pjtGP0v00oZ74yTZVD0BHQh4EqCTmSJn9
qNoAjXxaU0/8ZFupB6CTIA8CAECWIQ8CAECWIQ8CAECWIQ8CAECWIQ8CAECW
IQ8CAECWIQ8CAECWIQ8CmIoryltWyVXFC07x0+RrKfmnXM4PPkMeBDD4oNNa
Sv4pPgg+Qx4EMKdNcfT+Ki14rdnmx9zvpRm3talpQ84zdR4RW4QWQB4EMF4+
f7D1eBjHfNMDHQl5EMDgg6f51CtJxrNVBJ0KeRDA4IMB+CBkE/IggPHSB1us
p2YebIsl4YPQAsiDAAYfPCXmGUxYEnQq5EEAgw8mwDc9AGlBHgQw+GACfNMD
kBbkQQDjpQ8CQGsgDwIYfDCA80Uhm5AHAQw+GIAPQjYhDwIYfDAAH4RsQh4E
MPhgAD4I2YQ8CGC89MG26OE6esgg5EEAgw8GxFxEb7Ak6FzIgwAGH0xAI3rU
zvT09KQoBiBFyIMAplN8sFAoLC8v2+6lpaXJyUlHZSnpCVlZWZG2FMUApAh5
EMB0ig/qjzwzM6OOg4OD/v7+UqnkLi4NPWJxcTGfz3d1dfX1XRgcHExRD0Ba
kAchs4xGaJcPRjXIuWQZ4VuHCWprdmRkxASL5rZlG9Uj25J5RfvUOzWZsjLp
8fGxprO7uytPbESP2zoBqAl5EDLL3RHa5YNRDYVCwf4ZLQ4TLBaLPT09a2tr
bjsh7UoIBUxPT8t6ogrrmpoyqcTIBA8PD3O53MnJyfb2toMkZwEACSEPAhgv
94u60dXVpVwp63HTk6IkNSlDQ0MmSKnDw8Mm2EfqICktPQDVIA8CmA7ywYGB
gaWlJbdx010Je3t73d3dpVJpdnZ2bm5OTY0M2kFSWnoAqkEeBDCd4oOyHk1z
c3PTWU+6khYWFuR99iSZsbGx/f19B0kp6gE4E/IggPHSBx30bG1t9fT0OJ8m
2oz7yRwfH+dyuaOjI2dJbiMCJIc8CGA6xQcbpBn3k5E15/N5V0UArYA8CGDw
wQT4pgcgLciDAAYfTIBvegDSgjwIYPDBBPimByAtyIMAxksfBIDWQB4EMPhg
AM/hhWxCHgQw+GAAPgjZhDwIYPDBAHwQsgl5EMDggwH4IGQT8mDq7O/vu93l
GNqIhz7YFj2p30+mQfBBaAGdlwcPA6JvFxcXR0dHR0ZGlpeXz7y/0+7urv5u
Kysr0Z5aM24CNK96V+bJycnFixfHxsYGBwf1XRSLRRPckMq2S2UVLp0Gm5mZ
0SjT09N2lCRUG0vdZTNaX1+vaynONfigac79ZAD8p/Py4MLCgmzFdssy8vn8
/Pz89vb21taWHGp2drZseA0zMDBQ6YNaJ+F06kJzrNcHZUyyaY21s7Mj/fY5
a5r7TgQtgl2WUHZ/f7+cfW9vT0af8FE7MWPpl6CVsLGxEc7x4OCgviU/z+CD
NfFND0BadFgeVNNd9oyz6C3utYz6L0fvQiyvmZiYkLmMj4+vrq5GR5RTlDlj
PEqaCllylrJUpVgXP6IMLsm9kZXO5ONhntViTk1NhZ8q3CV5uFvMWDK+JGor
kZPq96NlHx4e1pp0ztHtBR+siW96ANKiw/KgGvaYWKRImMvlok293WUqcykU
CpWuNzk5mXzWslStTPvgm6WlJXXYt/H7mszpU9FN4KTV3FAL1d3dvbu7G/aR
bPuV2eVVt/rUFBkz1ubmpmahlaNtiUo3lFlHd5NqvYX7VDUFeasWVvK0DtXt
lqPbS1N9UNs5+iWcOdN4SeGPp2zjqnLIJB/V+2kqelJUC9AkOikPqvlVrIsZ
QC4Z3S+qll/xze79O9MH1Uftf70a9P+ta6NCmrX+Z2Zm5NEaV28rrVxKyhZN
nrUV8KrgeXPS2dXVVdOAzhzLNm7SLAFqsfXRbbfdds8990SnFjU+E6zJcHk1
isNzxn0j2vBq/WsBe3t7tUL0C9G34/zYIIsm5eCDIfYLitmgqvlRtQFqTrkR
PfEzTVEPQIN0Uh7c39+3wepM1tbWoofD1KqrAZcj2Ldn+qAmWG8Lb09uqVyZ
Mp2Zl7OxsWE/GhoaUnurATSu8qA+mpiYiI6rZkHKy6ZpxUuh4phe1S1HqynP
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
J70=
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 25->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
KujFWuUPbj15BmvgTX413leg/RbFWH/ypvHBqakpM2Zra+vQ0NDu7u7ZyWuI
L4cstCGWhA9CCrifB/9y52k7EzTlnVsffObk2ru+XONkaHndds8v7v7upWT1
/8X/rXFUtloqVIo0c2gaH8zn8/o2T05ODg8PJycnu7u7z06enQXIqVtaWqz/
5/2vLCk9Bu1vd3R0WE8OcKY4ngf1q6zHBFUff/Dpc+qDK48clVyLEr0SvI70
+xdPrDf+137yvJlJ0/igXGZ8fNx0KwxqkqOjI3WPjIzMz8/7o/X396+trdUp
z8J3jo+PZTfmFx132prU44NLS0ujo6MJigFIEMfz4Ae3op6TCqnz6IMXj6/W
s8oJniiMeHlSxbr9C/vmmpnm80HZn7r9jKOfj7zPdOs31d7eLkuqU56F7ywv
Lw8PD5vwFUVALOx8ULsHfX19bW1tnZ2dAwMDyUoCSATH82C1uyR+d+2nr3rt
619985tU6viND38ppDVe23m0seti4YNf/9nzFdflV2654+Utr3nNG9+szzf9
1u0hBpSI8mdOKufx69u/7eaXvbJFGz/cCi1O0abmgwsB4p4fVMnstra2TP+T
kxP9qV+TuqenpycmJiLKC2qYnJzM5/NBSVFmEkRebLbe0NCQPDHu5N6N22Rm
Zkb/uvXo0ebSHOTIXV1dOzs7c3Nz9egRcScHiILLeTAkE912zy9u/eye6Xjr
n36s/R8PhjTFv//phxq7LhY+WC2F/YuVR+RBxole2fq6f/nf/67a9gneOWLN
PT96ttpWHf5vhVs++XBNH/zotw89V32wP0Cs84Pq2NvbU7pZXFz0B6nNl3Go
Q22+74815fkCNDeFOE3r94kyhyAyGmUu0726uqoUFncO3uk2kRh96l9R5m66
LSRpE2mNtIegb7+1tVUdETdLuR5fVdzJAaLgch6slolKSrHoHw6/O2SE31l+
sLHrYuGDUc4MyoNCfDCRq2XCr5CRKdf0QSV6z1UfLBkz7vlB7UO2tbUdHByY
P2VDcrHNzc3oF88kezFk8LSgTEceJDGx5pDsfRP6Hs1RnbW1tVwu5xWPkcad
CdeLQgq4nAc/+4NnQhpYNfWveeOb9TPpeNstJiI1jQ8+/+K1mj74ljtmtPoh
o5kgdnh4qFZIX64+/RNG+tJNn+CXvrGxYfqoPfd7/vHnL9Tpg1LoNakPiuHh
YZMBDb29vUph0a9RSbCR1xetzKUI5veRMMmLNZNkfXB3d1deLGEK0RKjP2s+
M7CipKT0AFTD5TwY7oOmjVX9+vs/8Ya3vK3JfDB8xd/6px97VdvN4e5vfFBp
ZekUc2Wj2N7eNn2Cp5BkgqZnMEQk4oOXr1xrJh8MfptbW1uKhGrqzZ+zs7Oa
iTlLmKy8mihqaW4tN6I+hUIh+kwSv49eG0TpWJtISXlkZCT6lglKSlAPQEXs
8uDeKeWD/MNEdRLxuKia2bcvffvlLa9pGh9Upgi/W0Qm+Oqb32ROj4bU8sNH
9SvnuGgsVldXqz0fvtpCrYeeBWdxH/3x8bEc2d9VsJBkNyFAdCLmQf0bB3cs
FRnW19f9k/I+Gkc9E7HC8Otkfntx+9cmPqzPoY9+TWHwV265I6QpPo/XyUxt
Vr5O5p9MLbzslS1aa627KiQSJnKdTEgk19J/48Nfkg+qQ7si1Ub7y52nvWz4
oBp8/dPGukrTNR8MuYnes9WjtsLuih2A1IiYB3O5nLniy++jX325DyZI+H0T
SkNvuWOm/df+ecfbbvn1938i/GxaM9038au3/bF8369bPvlwxdFu/8J+eJsW
kWr3TaiCMkKuU3L5vomSMevxHbX2+oEMDw8HfyNRFmo9NH1c0wOQFFHyoH7a
cqXp6elgJCzxwd3dXe319ff3t7S0+NdjaMKlpSXNf2pqant72/RUizE5OTkx
MaFEGSLs9D76p0IMzpwfDD8u93vcR18f3Ed/duCDAC4QJQ/KsGRne3t7wSvl
quXB7u5u3wfz+bwm9BfkFQ+cjoyMmD5abkjzaHyw5hUjNWvhgfP6XLXlh2u/
5KjivoHcp+aLcaNz4cnL1ht/Y8/mlR/4YJSh6eOaHoCkiJIHZUlKc/LBtrY2
/7BPiA/646hJ969RNChUanH6lEUODw+HL9R08JztuD7oyHO2J7/ahM/ZThac
BcAFauZB+Z1aZtnW1NSUvMnEOi+aD/b29pY0gIuLixsbG1GE8d4l79y+d0le
3KzvXUoW13yQ9w9CNqmZB1dWVvynQBQKBf/OXJldV1eXcmLJs5KCx0XX19c1
vsaR98lGvaJ7yhz1p/w0/GmB5e/hjfvyhS/+XZO8hzf6O4gV3F68+lLS8q/z
/IvX3nd/1BOF7904kIMHJ8cHqy005SWGgw9CNqmZB9fW1oL3QQSfjKT+cskS
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
lPU8/fV7a67y8aMPJ6q6AnLAmjKOvrVRbsrN6oMdHR36BZnukZGRuJPXlGQ9
bWdnpy8MAMI5F3lQ7ariRkQH/Htf+PFDZvJz7YOKgU+u/eeIq6wsnLT2X3J9
P+RvPh1RxlP3LpYEQzd9cG9vz78cy84Hc7nc2tqaOvQ5PDxsoVCL/vnPf26U
yLn0e/T7WOgpFApKgt3d3S0tLfqcnp620GO2iTRobru7u6bbSIrSYSYv/wyO
WW0ONWcYd3UAonAu8uCT93w8rgmakol459kHpT/uDoDc6gzWwHvqvrtjyZB3
B49Ou+mDxvv8sjg1ls/n9ds5OjrSt2bRSmuJJRqCFXduEiDv29raWl5evu22
26RKqTDuTEL0uFBxVwcgCu7nwaP/8yU7EzTlnVsfvHbyQvQkGKxnH9hMVv+l
CEdlKzjy+idfunrFzMFNH/TvrTDRw2L+chx9uRMTEwsLC3bygrd4KHyZPGgk
xZ3b+Pj43NycOqRndnbWK8bVuHqCkpQHd3Z26r5zJTHsviOAmjibBwcGBrzi
4bh6TPCgeLrqnPrgsw/eb73WNS/gjM6LT+7baXj8U3f5pyzd9MH6kU20t7dr
n813/FgkK6+/v39jY0MdfX19m5ub+u10dHTE1UPmggzieB48/Opn6/RB1Xn0
wavPP1PPKj99/+eSEl9+i0r0euIzHzHXzDSrD2q9tAjlOLvJk5U3MjJiDtK2
tLToc7JIXD34IGQQx/NgtbNjP1/+UM+b3tj5hrabX/dadXz9P/27kNb4/33z
/saui4UPvvCTCxXX5c9Gc1rrN9/8eq24uqsFMW23RJRfO3mh2lbVZn9966tV
4ZFQcdJrXh+cn5/XImI9LSdIsvIKhcLQ0FBXV5d8UNnQHCONqwcfhAzich4M
yURqYH/wXz9ouu965625vn8U0ho/8om7GrsuFj548SsrFdflf35o8keLf66O
h//LB9Tc/WTpzoobR3X5pz+sX3nIjRLa9/jO/PvCfVB16W+/6J0HH7SzAP1w
7C4T9RdqPbQaMzMz+XzeWg8+CBnE5Tx4/a75CAffxnMDtw/2hYwgy2jsulj4
YJQVlwc9evd/rDb0mW9/rX7lT9//uRAB2hWp6YMmmTarD54pdnoUCev5LfM8
GcggLufB5x7cCm9je970xpZXvuI3e7srxqLz64MhRyP9mn/Pv+p8Q1vIgwVM
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
HPBBSAHyIICXkAWsrq7GuiQyC/fRHx8fy5TN3SV2kuwmBIgOeRDAS8IH1eAP
Dg7GukrTNR/0Qm+lt9OjyGxxxQ5AmpAHAby6fVCtfWtra9wLGh30wRBc0wOQ
FORBAM/J52y75juu6QFICvIggIcPRsA1PQBJQR4E8Jz0QQBIB/IggIcPFuH9
g5BNyIMAHj5YBB+EbEIeBPDwwSL4IGQT8iCAhw8WwQchm5AHATwnfbA5nidT
J/ggpAB5EMDDB09J/HkyAO5DHgTw8MEIuKYHICnIgwAePhgB1/QAJAV5EMA7
9cH0K1xSNXkh4sPXK9bQRPTUozbkIC1AgpAHATwnfdALnK1zwQft9CSoFuCM
IA8CeIEWPs2OeuRVHGo9YVxJ9czWWi3AGUEeBACALEMeBACALEMeBACALEMe
BACALGPy4MLCwtjYWB4AACBjjI+PT05OnpycbAIAAGSSw8PDRt08RVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEu1/8Hi6Wf6g==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 26->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ9sNGed3+GALS5iKY5YiYhzdZYOy+rJV92L3Lp3PunwUTf3niXqu7Mq
DAFzxSdLrasunJFBp6BwlpAPQ1tTVzHCOpf6iAzkCMKACXIDXF0wnAMBAw6X
mmDhsPmzeTfJ68Rv3jfTb/bJO0x2veOdP955dubz0U+j2fn3/GZ29/nOd2ae
Z37tnf9pdPJXXvSiF7375RqMTrz394rFidk/+if68CfT7576s+l3/fubpt/z
rj97V/FfvvMlmvjeF7/oRf9Oyz83DgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAANAIBwAAIMPs7OyMjo6OAwAAZIyxsbH1
9fVbbrllcXFxDwAAIGPccccdUkPpoEaSdqUAAACt5vvf//7b3vY2dBAAALKJ
q4N33nln0rkAAAC0GvwgAABkGfwggMG/MVFcc0On1LJsAbIGfhAgKWzTIGQR
sgl+ECApbBMddBCyCX4QIClsEx10ELIJfhAgKWwTHXQQsgl+EMBJSAL8S0wk
H3QQMgh+EMCxUgJsywcgreAHARx0ECDD4AcBHHQQIMPgBwEcdBAgw+AHAQAg
y+AHAZLCNsdnoSkGaAH4QYCksE100EHIJvhBgKSwTXTQQcgm+EGApLBNdNBB
yCb4QQCH/mSul4gOQgbBDwI4VkqAbfkApBX8IICTOh0cGxtbWlqKMRmAFIMf
BHDC6mChUNjb2zPjIyMjsacUel0lpr92jMkApBj8IGSWYw/hdHBoaGh9fV0j
Gg4PD0fMoVLFm1LQrUmUR0dHu7u7Ozo6NJyZmYmSj0np2CaC7g5AM+AHIbO8
6IWE2ML09PTc3JzEoqen5+DgIHoOUfJRAtK+ra2tlZUVmVNlJVcYYz42EHR3
AJoBPwiZZXd3V79/dxhiC8vLy+Pj45OTk4uLiyFWV8XuzWFjY2Nzc9P9GHRr
SmN+ft6MSJ2dql0Nmo9wE5CkqlrYreI9UAkOgx4TgGbADwKEZmdnp7Ozs7+/
P9zq8RqcCxcuSEY10tvbKwk7OTkJ6gfxXJBN8IMAoSmVSsbThVs9XtEZGRnR
H7lSqeRyOQ2nqgTNBx2EDIIfBAjNwsLCy17yEjmvcKtr3RiT2d/fHxgY6Orq
kg7KGyq3EPnEmxJAW4AfBHDCSoD+OOEeE3ULDT23EbOzs8ViMXQ+6CBkEPwg
gGOlBITLZ3BwMPQ57ZWrz4ZbEaCtwQ8COCnSQQAICn4QwEEHATIMfhDAQQcB
Mgx+EMDh1hhAhsEPAiSFbY7PQlMM0ALwgwBJYZvooIOQTfCDAElhm+igg5BN
8IMASWGb6KCDkE3wgwBOQhJwHv3JRAEdhGyCHwRwrJSA1ufDQ7OQTfCDAA46
CJBh8IMADjoIkGHwgwAu7oVBI4uniqN3Vrxzm8zHf7Pnmg9AKsEPAtTjc6fM
zGq0QJS5Z+bjv9lW5gOQJvCDAACQZfCDAACQZfCDAACQZfCDAACQZfCDAACQ
ZfCDAACQZfCDAACQZfCDANYSuhX8OTWfP78+BGjODwmCHwSwFnQQoAXgBwGs
JXRvMOFWPFOGzq8vHZ+UfPIBiAX8IAAYLLRjtuUDqQQ/CABO1Yuhg5BN8IMA
dtJ6CfDXwUQkCR2EFoAfBLCTFkvAmX4QHYS0gh8EsJNEJMDnHUxIEqQV/CCA
ndimO7blAxAX+EEAO7FNd2zLByAu8IMAAJBl8IMAAJBl8IMAYKD9IGQT/CAA
GNBByCb4QQAwoIOQTfCDAKGpVCobGxv6+ywtLe3u7sa7cfqTSapQyBr4QYBw
6NQxn893XEc19sWLF0ulUlzbRweTKhSyBn4QIARra2svfmmu5p16uVyuq6vr
+Pg4liLoTwagNeAHAYJydHRkDGB9SAqnp6djKcU23bEtH4C4wA8CBGVlZaWR
Diry+XwspdimO7blAxAX+EHILMNh6erqaiSCJgYHB0Nstru7u6+vz/2Y+DHp
7+8vFAreKcnmk9QxgdSDH4TMcktYJBD+OlgsFkNsdnR01PwZDYkfk6mpKUmP
d0qy+SR1TCD14AcBgrK+vp7L1T4k44Y8VNIJhoT2g5BN8IMAQTk+Pm50aVT6
uLS0lHSCIUEHIZvgBwFCsLOzU28JNaWt72Ghg5BN8IMA4Tg4OBgYGPCK4Pz8
fIzbpx19UoVC1sAPAoTmytVny+VyoVCYm5vzaYEejtZLgP8uIEmQVvCDABHp
6elZXV2NfbO26Y5t+QDEBX4QICLSwZWVldg3a5vu2JYPQFzgBwEigg4CtDX4
QYCInJMOAkBrwA8CRCQ1Oki7Ccgm+EGAiKCD54dt+UAqwQ8CRAQdPD9sywdS
CX4QICKpeU6GdvSQTfCDsbO3t3d0dJR0FtA60MHzAx2EFpA+P1gqlbwypI/z
8/PDw8NDQ0OLi4uVSsW7cLlcnpubM2+Lq5mrIxMuAW2q+YN5fHx8anfNStvM
VQU7Pj7e19c3Ozt7eHjoXbHRLB8ODg5qClpfXz9zFviTGh2kPxnIJunzg9I1
aYQZl5oYmdja2trc3JRCFYtFd0mpXn9//+TkpJk7MTGxsbHhztUxOTk5CZGA
SmxeB1XE9nV2dnaUiUnY1EjjVZSb5k5PT0uvXaX2meXD7u6uajPtpluoK6A+
s8Cf1OigP7blAxAXKfODMjU1fR3v7e2546rk9V+WBzQfZQDHxsYabUq6sLy8
3HzRRlVVJda4KleUm0EWTGLtKtr+/r67ulRJW5M8nTnLBy3TKCWfWf7IfZtX
00qLpeChfXT7gg4CtDUp84NTU1PmiuKpyG11dHS4KuMaNynjqWZKDrH5ouXs
dDDl6VRdLCwsSEb1UcPmu19W5oVCQVs4da7kRls+da7PrBrkH1WExE7SWSN5
PrOc6qHzXibVDkqIzbiEW57a7PvS0pLGw/no9iU1z4sCZJM0+UFVv6Ojoz4L
SCVnZmbMuIRP2qF6e2RkxBg3HYSa+l9+UPV/oBzM/b5wJxX+/lQ1rTzXqX7N
Z1YNSkxnAtI7JamRubk5V7N8ZjlV4ZPXdj/qSJoRLaNV5MGzpn1e0EGAtiZN
flD7otq70dzV1VXVV65bNNcSBwYGtJbqcPMuuZoLoXt7ez4bPJVGOii3Nf1C
vPcinaqgKL1G34KSzOfzp1759JlVj3Zfmcj/qjh5VTli9+XpPrOEEvZuR6bP
u2uSQgmxfkU6bcigIFqlg/qmcrlcuCeWz6/9oH6l+pGEWJGLsdAC0uQHVSE3
ev2N9EV/Q1Xv7hQjWF75ULU/Pj7uXUuiUFP/n4lUIJwflOZqRa/n8s5STbu2
thZoVjPIgQ4NDTUzyzWATvWwzM7OehfWFB18/Yp6e3u1ls+l6VRijw7qV93Z
2fnWm99R8wU1yfnpoM4w/a/VNAIdhBaQJj8oUfNaGBfJhESw3jGpulhYWHA/
6iDUqJ5USRODpnHq2+gkDbsvpOaM3VyWrDdTWlIbPPWJHZ9ZTvVBGiXv3sVz
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
VIZO6nTw8PCw0f1BTQ902mMV6CBkE5v9oL8OmjpW8Vvv+fire95gsw4G9YON
7sq58c+n/9vL8jf4q7/RwVKptHydSqViitje3jZTvL2gSATNxK2tLXdiLDoo
e5syHXSqlvBUKSwUCu5xbjvQQcgm4fzgwcHBYZX6Wap4Y0msyeuiqmaHlr/9
K7kOm3UwqB/0uS5q7oe+/IYbb7r9wP9p0k/cG0NtzHVRH3QW0VHF2MAXvzSn
H63+GnFtn3b0SRUKWaNJP1gul/f3992Pm5ubWr6rq6tmMS2j8+FYpND/OZnf
W9r+jckPaTj4ka/KDP7qm8Z9quLEn5MJ8bxoo9YKcoKqb7XX2neFjyWM5TkZ
H0uu0n/7Q1+QDmpEpyKNFvurnceclOqgU71Aura2Nj09PT8/7/XRsYAOJlUo
ZI0m/eDQ0JDOe09OfvlWo+PjY0ne+SXm325CbqhnfLbzN/5V4Q1v+q33fNzf
GSXebiLE86KNvPCvXfxT6b4bb1q599TFRj935NMxSPP4XKH1puHznJLN7SYs
h/5kAFpDM35Q8idVmpmZ8VpC6aDXD+7u7ppnxXO5nPs8hlZcXl7W9nXCvL29
bSbqtHlqampycnJjY8Mnsevt6B/xEbiaV/80isTb0Yfwg6YdfeiIsR19k6/5
aCTHqWxH3xpsS962fADiohk/KMGSnB0eHk5MTLgTG/nB7u5uVweLxaJWdAty
qjcWh4eHzRSV61M9Gh0888nJM8OGftXC9S/6iXvPfsnRqfHmvz0688W4zbP3
8NOhD/7mQZhXfqCDBtuSty0fgLhoxg9KkmTipIP5fN69NOqjg+4yqtLL5bJ3
rkyliitWkSD6F2pGUtDPdrj+RcP1s62IvZ9t/6dlGsXUXWnuZxsAUsOZflB6
p5p5enpayiVtMrZOVCqV+udknBfqYG9vb00FuLS0tLm52Uxisbx36YePWvHe
pdDvHzTvXQq0yza8d+niZ3+ehfcuAUA6ONMPrq6uuu8Y3d/fd69qSuykg9vb
2zWPyXmvi25sbGh5LSPtk5I6VVWVOOqjyvXvLbDmPbyNHpjxic//gy3v4Y3y
Pvr7yifNv4NYxi2Wx2PquXzlWqD38D5Qycp7eNME7Qchm5zpB9fX173tILzv
3db0tbW1Gh1cXl72PlZ6eHioLUv43Ika0Uet6H3qph6vDjrVejjQAxveVgOJ
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
G2+80U0MAPxpCz+oelV2o0kF/KUu/OR7ZvW21kHZwIfX/0uTuywvHHfuz/Pc
eciXP9lkGo/csVRjDO3UwUMP4XRwaGhofX1dIxoODw+HyNCbg/6Me3t73pSC
bm1/f19y3N3dncvlNJyZmYmSj7a2u7t7aBNBdwegGdrCDz782Y8FFUETEhGn
nXVQ+Qc9ASh/Ze0c9sB55M7bAqUh7fZenbZTB432uRHi1tj09PStt95aLpf1
rYV4NlUl1uTgjaBbUwLSvq2trZWVFalhpVKRKwy6EZ98bIiguwPQDPb7wcr/
+UI4ETThtK0OXjt56qHPLDZ/KdiNJ/5+K978LzVxVbY+Ht1YefbqM2YLduqg
adNhhuG8hhRnfHx8cnJycXExXHreHGS+9H90PwbdmtJYWFgwI3NzcxoZHBwM
mo83JfnBnZ0dNx8bhkGPCUAzWOsH+/v7nerluCgiWKrermpTHXzinrtD7/WZ
D3A2z5WHj8LlIAV3b1naqYPRkUx0dnbqnC3cc0rxpnfhwoXNzU2N9Pb2yhWe
nJwUCoWg+eC5IINY7gfLd90eUQcV7aiDVy8/HmWXH7v703ElX99Epfl46FMf
NgKRVh0slUoqQj4u3OrxpjcyMqI/cqVSyeVyGk5VCZoPOggZxHI/2Oju2OEn
PvD6G1/z2lfnb3jlKzTytbn/6FMb/79v3p3svoTQwad+unfqvvz5v32j9vp1
N7xKO67xU6+amlYMsWR+7eSpRkdVh/2VHf/oVf/45f6WUHbSSa8Ozs/Pq4hA
veV4iTe9/f39wcHBrq4u6aC8oblGGjQfdBAyiM1+0McTqYL90X9/nxn/4Ftu
emPfr/vUxj/4+AeT3ZcQOvjol1ZP3ZevfGDqvqX3a/fv/a/v7ci97KfLt5x6
cBRPP/Dj6Jn7NJTQucd3Ft7tr4OKS3/3eacddDCcBOiPE+4xUbfQ0HMbMTs7
WywWQ+eDDkIGsdkPPtdqvomLbxNv7B8d6PNZQJKR7L6E0MFmdlwadP9tf9Fo
7uPf/mr0zB+7+9M+CUiRz9RB40zTqoPnSrh8ZAmj/JfpTwYyiM1+8Mnv/Z1/
Hfv6G1+Ty+V+p7f7VFvUvjroczXSjYV3vvm1r84ffuID/kasVCqtXadSqZgi
dnZ2VldXzUS3XP0AzJTt7W134o/+p1+rDVnyM3WwFPyRXXTQYFs+AGnFWj8o
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
QRAEQRAEQRAEQRAEQRAEQRAEofj/W8DsDg==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 27->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
6uD++YsyeqF2+aPbT7ZgD5wPfTXcV6DzFu/V6Y7RwXw+b5bs6urST7TJXp5t
e16U9mQgndjvB/+48HQ0ETThnFodfOb48vs2GtwMrRl/fu/5ePOXzfTeCgzu
Cl1z2kk6qG/z+Pi4WCxOTU0NDAy0Lr1oEqAMM5lM5N98i9qTUT3T29sbeXWA
lmK5H9S/shkRNKJwSnVw9YFSBPUxEeNzpN87dxz54H/tn543G+kkHZyYmDDj
hUJBq5RKJY3ncrmFhQV3scHBwSAnlrHr4NHRUU9PjzKcnZ0Nu25DmtHB5eXl
sbGxGJMBiBHL/eBHt4Pek/KJ06iDErJmdnlu51xcyQd8PKlmXP+FA/PMTMfo
4PT0tPk2JX/yg319fS9devmUQ3+foaEhs4z+UxIjecYm04ugO5Kb6667Tie3
Ml9BEghFNB1cXFzUWUF3d7eOlXuIAKzCcj9Y7y2JX1t/5Io3vOn1V71VoZFf
vPlLPrXxeuHh9u5LBB38+o+er7kvb7/mhtdkrrzyLW/T8K2/fH09wygBiiXz
Z44v1z3+b7zq1a/L6OD7S2GEW7SJ6eCih+A6aJZUSOx2dnbMdGPE9G/S+MzM
zOTkZMD0vDlIWLV9b0pBNuJFQmOO3sjIiDQx7OrOK4+JTKV+us3k415G7u/v
393dnZ+fbyYfEXZ1gCDY7Ad9PJHq/2s/u29G3vl7n+r5F2d9quJfv+2+9u5L
BB2s58L+7eoD0iCjRK/r6v53f/WP9fZaStp85rc/9Gy97Y/+z71rbr2/oQ5+
8ttFx1YdHPIQ1g/u7+8PDw97a2bV+eZqpOr87e3tgOl5c5CJ07ruxyBb8CJR
lue6/OLLJx5ra2tyYWG34LzymAwMDEjctZvRUtIh0h7pDEHffldXl9Rwa2ur
mXywk9AibPaD9TxRRcgW/fPR9/ss8Ksr97Z3XyLoYJA7g9IgHx1cub/UfOYf
//va7y26otxQB+XoHVt1sGLJsPcHdQ7Z3d19eHhoPhYKBamYqnoNY08vCOaP
bMYlOtKgsLoT73sT+h7NVZ319fVsNqsR7y3U4CnFlQ9APWz2g5/9/jM+FayU
4sq3vE1/k953XWMsUsfo4PMXLzfUwXfcMKvd91nMGLFisahaSF+uhjozN0Xo
SzcTvV/65uammaj63J34O59/sEkdVIZOB+mg6wcNo6Oj3idSBsu4YhRjeg3R
Fy3PJQvmTpmZmcnlcqE2Eq8O7u7uSouVmA6ajpI++rcZWC+luPIBqIfNftBf
B00dq/iFD3/mze94V4fpoP+O/8v8p69441X+6u9ekFw+wTzZ6JQvoJkpKysr
brkSQTPRayJi0cGLl17qGB30+kGxvb0tS6iq3nz8xCc+oY2Yu4TxptcQWS1t
LXPClZkrNNSUvb294BuJ/T36ubm5gYEBHSJ5ZIly8CPjTSnGfABqEs0P7p9Q
Pcu9TNQkw8PDQa6Lqpp99/K3X5O5spN00P9tkXf+3qdef9Vbze1Rn+C6qJN4
ezJra2v63QZfPg3v0R8dHUmR3XOwCClFWxEgOAH9oM54vSeWsgwbGxt9fX0V
i2kZTYxFCv2fk/mVpZ2fn7xZw5FPfk1m8O3X3OBTFZ/G52TyW7Wfk5ETfPXr
Mtpr7bvCxxJ6W1iNjI8lV+m/ePOXpIMa0alIvcX+uPC0kw4dVIWvH63XYgcp
NPLcVuDfKF+0fFRXRHtiByAxAvrBbDZrnvhyp+hfX62DMeL/3oTc0DtumO35
+X/T+65rfuHDn/G/m9ZJ7038zHW/I91345pb76+52PVfOIilodF6700ovGn4
PKdk83sTFUs2ozuq7fUHyeVyod7as00H/bEtH4C4COIH9deWKs3MzHgtYYUO
7u7u6qxvaGgok8m4VYFGlpeXtf18Pu++aaUaY2pqanJyUo7SJ7GT9+if8hG4
iq5/6gXv0TcD79G3DnQQwAaC+EEJluRsf3/f+4RAPT84MDDgPpc4PT3tvsyr
gpzyhVP3GTaV61M9Gh1s+MRIw/j0PU+fRh0UK/c37uSoZrznbw4adowbnAef
fCHywd/cj9LlBzoYZG7y2JYPQFwE8YOSJLk56WB3d7fr9Xx00F1GVXrF/XGZ
ShWnoSRydHTUv1AzQjvbYeOW78TfznaEND701Q5sZzteUBYAG2joB6V3qpkl
W/l8XtpkbJ0TTAcHBwcrKsClpaXNzc0gidHvknNq+1267vYfd2q/S/Fimw7S
/yCkk4Z+cHV11W0FQpbQtAvhlO/9SfLkEyuakPLq4MbGhkyflpH2SUadsnpK
HPVReurfWmBFP7z1HpjxiS/+Y4f0wxu8D+LW9cP7/MXLN94d9EbhBzcPHynR
D2+gQhMu0R90ENJJQz+4vr7ufQ/C2zKSpkslK9puWl5e9j4yJ+nUliV83odn
9HFtbc3/DV+vDjrlejjUAxvetwZOtQ6KJ48uze00uDL5nr85uP2hZ2PNugar
DzS+ZfnJbxefOb5csSI6WK/QhEv0Bx2EdGJzezLVE+/84XOq8Bt6ooqnRE67
Dhq+d+740/c8XX2ZVOZLCmgey0yAp45eXPveM7/95Up7LsP+5/ee3z9f+/kc
dLBeoQmX6A86COnE5vZFa05Xhb+5/1yFNzQ3pG75znlzQ7CCztBBw8VLL0lr
7n/ihXsev6BhjP3thkUnG0rg3sMXNHykdNH/eiw6WK/QyHNbQSvak2kSdBAS
wGY/ODo6msvl6g3fPfpr/yp77Tt/eVShEZ+FRYQE/EsPNQylg11dXQE3e911
18WYZOThdSf4LBaqiaHh4eFYclNK6GAoWtGeDID9WOsHAZIEHWyIbfkAxIW1
fhAgSdDBhtiWD0Bc4AcBnBMdTD78U3IvVPqvFXBW2Lmx5BNjtgAtAj8I4Fip
gy5SHxt0MFo+zWTbopdhASrADwIYTK2b/DBahsFnNTk3Wj6tyxYgdvCDAACQ
ZjrbD2rXMpmM2/9FkqjQiYmJ3t7eycnJUH3SWYJJPpvNFovFducSkZ6enrW1
tXZnAQC2Y60f3D/BqNjh4aE7rqEqZ31030rTFO9HF00fHx+PoINu6WabpjjT
d0a90iteFddEs7yqYtO2amJUJK80NO7KmSYqVU2pWL7mpvb29qK9fRkZk5ub
UsWxNTvlzdYsX32msbGxoV81OggADbHWD25vb+/s7AwODkqplaRGVlZW5FDM
LH3UXFXRmquqcmhoaGlpSZJXXe9pYgQ7tl1GnmhxcVHV7MDAwPLysoaqhHWg
NKK5Kl2JaeNKRqXrMK6vr1dvShXy9PR0tIMQDZO8CtXXKplQtjp0GpoGXfv6
+nTO4575aC9uKjM2NladuY6AZiWZvA6pvlklbBoU0jeuIz8yMqJsJehdXV2r
q6v6UmZmZjQ3X2Zubq46eX0pWgUdBICGWOsHnXJXF7Ozs065MjRTJDeqnFXJ
q+pzyg1wqUqU+kxNTW2VqW6NLZofdMoVsulcQ1Wu6W3KyIeKM42Nm2rWyJwp
XbV0xUakm6qQk78wq4SlHRpxv9lCoWAOpuvvhoeHlVh/f79JXnlWbEQTdWC1
g8nm/rKBVTIaSriN3onu7m5NkZo7ZXuuL9osph+D8tS+eK8GSL61DDoIAEGw
1g9KoE1N7pSbGjMjqtYkQ6r6JIhO2bBIkuQdlP+DZaqv70Xzg6pj3d4VpQVm
s5ubm6qWdaBM6fqoopXS/Pz8gydUbKS6B8YEkAQYHdG4tM8ImXIzl2fdRt7O
nDljOpc0mdfr/sNIT5LoezfJ7O7umhMe50QHTeOrGjHCp6F75L3fsrl6oP2d
nJxMOHkAOHXY6QdVP5vreBIRjcv0Ga0x3sqrg5quZVQfqs6Upld0hqhVZH80
q979r3pIBE3p0pSdnZ2xsTFtSkONV+igkRIVoQW8x9D0tKgpNdW5pWiXlZuS
l154kzcHx6uDTlnmNF076+0fWStqN00fkblcLsnkZa5V6EEZp3wpQMnrOGt6
hQ5qRIZdR1jJV5zFFcrot5HwRV0AOI3Y6QclHBMnGJMl6dG5veTGKT+8YTo9
VPLG7GjKdBlzAdPF3cjy8nKoBNwVV1dXnXInjHKFRimUg1u6URZlW126BNTd
iNHNZDDPqRokH05Zr3XoXI12kzGXSbW8vn1ZJ+/1T3kriZHWkt1O+KKukjHJ
Gyunb1ZHXopmUjU5Kz0jcJoiw6gFat6Z1Tel04DgRcf1bnioN8eDp5RYtgBp
w04/CJA8rXsVvd70hhrk8y55K7JFFiGd2OkHAdKAbaKDDkI6wQ8CtAvbRAcd
hHSCHwRoF7aJDjoI6QQ/CODQ/+BJieggpBD8IIBjpQS0JR96eYAUgh8EcNBB
gBSDHwRw0EGAFIMfBHDQQYAUgx8EMHBrDCCd4AcB2oVtjs9CUwyQAPhBgHZh
m+igg5BO8IMA7cI20UEHIZ1Y6wcPDg724yNCAjGW7u0iNsly7SFUF5DxFh36
i08Q20QHHYR0Yq0frO5ZvoLLLx5fvvD8pWfPKzTus2TyPeFW4Hb5FwTTxV6H
EeoriPGnGLxWpz0ZBx2EtGKtH6yng5K8Cz/aO3fXrYerH/fGE3/9J8/ee/eL
pWL1Kh2mg9L9i8XDi089pqHOBJpLLTreNDTuvzA6GAHakwFIhtPlB48evv/w
tpsrFLAizn/jzopquTN0UHJT+uZG9e4/dectRz+8z98Rx4iU97kHv/XE5xe9
OTz+Fx97+Tzknq2a5yEOOhiJZvIZGxtLsvdngFPNafGDqufPfXlV9a2/CLrx
wsG+u+5p10FJz9Nfv6PhLuskIdasayAFbJhG6Vub1aLcqTrY29urf5AZz+Vy
YVdvmFLkdfv6+tzEAMCfU+EHVa/KbgRUwJ/qwg/vM6ufah2UDXxy/U8D7rK8
cNy5/4SXz0O+clvANJ66Y6nCGNqpg/v7+48++qh5nCaaDmaz2fX1dY1oODo6
GiFDU7p5KkzKpf+jm1WEfLS6nODAwEAmk9FwZmYmQj6PltHI3t7e7u6um0+o
oRkx++V+rDlSb92KjZhh2N0BCMKp8INP3v5nYUXQhETEOc06qPzDngAU/3at
BXvgPHXnLaHSkHZ7r07bqYNG+9yIcGssn8/rv1MqlfStRailVWJFDt4IuzUl
IO3b3t5eWVmROVVWcoVhN+KTjw0RdncAgmC/Hyz93y9FE0ETzqnVwcvHF4I7
QW88e89WvPmfD3BVtjrO3XXrS5deNFuwUwfddyuM74iwfSmOvtzJycnFxcVo
6Xlf8ZD5Mn7QpBR2a0pjfn7ejMzNzWlkZGQkbD7elOQHC4VCE++sxEyEYwIQ
BGv94PDwsFO+HNeMCB6Wb1edUh189t67I+91wwc4g3PxyYPIabi3LO3UweaR
TPT09OiczVX8UMSb3tDQ0ObmpkYGBwe3trb03+nt7Q2bD54LUojlfrD41c82
qYOK06iDErJmdvnpuz8XV/LVr6gEjyf++k/MMzOdqoOHh4cqQj4u2urxppfL
5cxF2kwmo+FUmbD5oIOQQiz3g/Xujj268kdn3vqWvje/8aruN2jk6//tP/vU
xv/vm3e3d18i6OALj/yg5r78/lhWe/22q96kHdd4zQdozVsMsWR++fhCvaOq
w/6mrtcrfI68MpGddDpXBxcWFlREqNZyvMSb3t7e3sjISH9/v3RQ3lC5RcgH
HYQUYrMf9PFEqmC//z8+asY/9t5rs1f/rE9t/MBnPtbefYmgg+e+vFpzX/72
jz700NIfaPfv/+8fuTJzxT8t31Tz4CikpM1n7vOihM49/mHhRn8dVJz/uy86
p0EHo0mA/jjRHhN1C408tx6zs7PT09OR80EHIYVY6welg0f7D/rXscYNTWSH
rz97tc9ikoz27ksEHQxy1VEa9PAtf1hv7jPf/lrzmT999+d8EpAiN9RB40w7
VQdbSrR8ZAmb+S/TngykEJv94HP3/Z1/HXvmrW+RJ/qlnxuoaYtOrw76XI10
Y+ED7+l78xt9GhYwRuzw8HDthFKpZIooFAqrq6tmoluufgBmys7Ojjvx+3/p
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
goMfBHDi0MGjo6OzZ8+urKyEKjTy3Bbh8yp9tHy2t7cjPLEDkCT4QQCnaR3c
2trq6uoaHR01j2sGLzTy3OSxLR+AuMAPAjhWtrNtm+7Ylg9AXOAHARx0MAC2
5QMQF/hBAMdKHQSAZMAPAjjoYBn6H4R0gh8EcNDBMuggpBP8IICDDpZBByGd
4AcBHHSwDDoI6QQ/COBYqYOd0Z5Mk6CDkAD4QQAHHTwh9vZkAOwHPwjgoIMB
sC0fgLjADwI46GAAbMsHIC7wgwDOiQ4mH/4p1UvPJ3n//Qo1N5Z8msnW5yIt
QIzgBwEcK3XQ8dyts0EHo+UTY7YALQI/COCc1PDJDyOkF2pu5BVblE8z2QK0
CPwgAACkGfwgAACkGfwgAACkGfwgAACkGeMHFxcXx8fHpwEgNeTz+XanAGAF
ExMTU1NTx8fHWwAAAKmkWCy26+UpgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgrA5/j/wwB35
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 28->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
Riy7+i9uvftTD//rX/6Dlm/5ju9931SURfb29mInJg9WvJi2HyoDtY+/8zfu
jjKzLJbQgz/3Z3gwjBR6kOvJ1GulkDUa1IOfvlTddTvVXb/lm9uizJmwHhz9
fKR60EpQgo6Y/9T/+yoerBY86JYk+aifaW9vd5gMgEMa1IPVXlj7Hb/2R1E8
+JN3P51wfDDKMJwk+A1vaYkyLOjHRx96PqEHZdJaePDHP34n44OxyY4HFxYW
avq3BkhC9PHBycnJlZUV/2mhUJCPenp62trajp1/eno6n89X1RdFROuteH2w
vk9+4XuGfkHVSu//Wvv+nz0v70Q5T0a6SVgPVrysqIysZL7v5lveNf+gjSi/
m1D9m9CD5zcKFddi82n5lu/QpouY2C233x87K4MHXXtweHjY/z+ZmZkZHR2N
mZmjfIz3u1f1A9o1crlcd3e3w3wAXBGxHjw6OpJ9Ojs7i14/ODgo50G1rC+B
zhINoEwqXsDzPyxuS3zq0rXzftPb3h7ltwmKjadeSVgPqjgKX8V3v/cDtsv1
o/NHPlQxMXk/oQcf/Mph+CoGPvPlGImtrD0YOytTbw/OBaiXB4M5jI+P69tm
MKVqG9SOPDExYbzLQXR1denLarUtBPPRV1l1Dkny0SeSi/WH6Ojo2NjYkJqT
5JNkFwAIIaIH9a76Un2jk/iCr+s/vJwHa4e9nkxVZ2ZGjIMrX0t+PZkoK/rh
P/6KHxVnHrrzqStXv5bQgxJ0xKueRk/sJ+9+uqGvJ9MdoF4eDObQ3t4uX/hP
YzSo/bSvr08TAwMDS0tLMVoI5iOTau8+e/ZsvJS0K+kT6a+g75atra36D1xb
q/rXpt1vptrFAaIQ0YPaF/RfPT8/v7i4GHy9tB7c29sbHBzUbtjf31/UsWiP
UDuSaT6f17+0f2am9g5VmlpKr8/OzlbM2XrwT5942a0E7Y0Ik3uw2nN4Koa9
31/y66p9JO69d8vFwpdeaGgPBknhcdEY6L9X+5d20ngb1u1GUJdid1UZ2U5E
2btLU3KVD0A5oowPHh0dvf517uhI1tNE8K2QelCaK/of1pz+ZbgKhYIa1MTW
1pacaMtMvaJvs5ubm+E5231KXy9VKDns1b9ceNW48OCVCNd8qyp2X7xqXHjw
+UNnd4N6r1el6k+AB5NQizVqD9W3yng//3G7EbQjqx7c39+fnJycnp7WUxWY
MVJylQ9AOaLUg/o6p/9kO22F6L8VMj5oPfjatav2qfxy7L+0Vi33nbuOOsaK
Hb5/36XVJx3c69aGf/N3J/dduuOx6k5nDYn5za/fitfJfZcc3qlKn1ENcn3R
JNRijREPqhyL842gPVpS1n7R0dExODioL70xUnKYD8CxRPFgT0+P/odHRkY0
p/ay4LhD9HpQu8Cx/9LaU6amptSOlGofg549luD96F117Pbmg8bd/eid3OnP
v/mgcXc/+ui/9A8JNWJbox5MgvPzRfXn0FLB87qrzcf57+j1V2hpORXjjJ0k
KwWoiooetAdF/dNjiso6vaunx3Y4pcdF9dQ/XKMF7VLb29v6xlhVlxX0oJAs
Evbqj7/whnldeTDKHTHCY+jON+xs3HlQif2nP0nqQb816sEkOPfg6upqLpeL
LZ1w4m0fpaQvz86TAXBIxfFBVX9jY2PBV4p2h/n5efX/fX19aif4etFxUeON
CbZ6aL9ob2+XAe3r+vqqF2U3vR5laKPIg+rYk6jwMW9Y0MeVB4UsFnsEUws+
e/lasDVXHjTeQGFsFWrBYFPUg0nIzu/oAdJMg15PpvTFGCdD/sTy00WuMU49
aDxHR7+gmR8fvG9fCxY15dCDxjvLKMYB0g+t7BddPYZ6MAl4ECANNI0HxcZT
r0Ts21VtLXzphWMbcetBy31/fzliYsN3Pf2Hj754bCNuPWjRuiL+qFD5rz55
ubQF6sEk4EGANNBMHrT8xe7lifufLde9j977zO89chByScxaeNAiG6rQK3ek
VG/ZMzDLUQsPGq8wlA3LJaYX9dafPvFyucWpB5OAWQDSQCPefzCfz69E4FN/
dM/PLyz/9Mf/749//M6f/+0/+Z9/sHzv5+8LX2R1dTWhBytmpRxeT+y3/0SJ
KTTxvz97d5SPk8SDU1NTURJTJkWJVdxiCS91pa80UT57PPBgtXD/QcgmjVgP
AjgHDxo8CFkFDwIYPOiBByGb4EEAgwc98CBkk0YcHwRwTgo9WJd8nF9PJiF4
EE4A6kEAgwcjkLZ8AFyBBwEMHoxA2vIBcAUeBDB4MAJpywfAFYwPApjrHjz5
CE+pXHohyYd/rqredZKPw2wBagT1IIBJpQdD0gt5N/aCVXkHD0IzgQfFwsJC
f39/0W016s7BwYHq9N7eXiVWozvpxGZ8fLynp2d0dNS/IVd60LY6e/ZsvC3m
3x7lJCfiZVjVW1FWFy+f2CnVLh+AasGDYnl5WR+/r6+v3om8iY2NjdXV1d3d
3YsXL3Z0dNQ7nTexvb29t7e3traWy+XqnUsx+Xy+ra0tbd8cACC1NNz44NHR
0YyHcm5tbVX+6pPV76k2UZ9sP8XExMTIyMjg4GBXV9fw8LBdqrOzU9Oq+471
naST3IN+YvaQztbWlhJTNdfe3i7V6hVNq1RRYvKaf2VOpa1sez3KtaxPWtXV
MoNoQaVkE2tpOaUKTv46ffq0tpKatddT1WcfGhrS9lEyqo71yubmptJWwtpu
Fy5cOLbl/f19zRMvK7u4TWxyclIbynj3stSW0Z9ST+1tKNW+vKZ/UWVu722h
RyWpeZTY4uJiUZtqSp9OjeBBAIhI49aD4+PjStt49yywlpHsrC/Uw9u3hPpP
43Ww8o76RvW96u1L75LgxIOWM2fO2I2pjtpaRqa2t+SWVpSJTdX2/Epeq7aJ
lXOKTOHkmK1ysCq56aYb7fFMrdQWdPrsS0tLxvt/sDqWr+XxfQ8lVmRhLS7X
a2urXE2YlTaFtKX1atqv47QB9W0h+IrS6O7uttvNZqVtW3Sjc21n+7VHDWqG
hIkBQEZoUA+qZrE9nvG6d/8mEbYDlAdVFNhXrAc18+zsrH8ngtJiwZUHZWet
3VyXsn3Rn1YVo7XbF+1NmlSxSkCrq6s2sdIG5c2BgYHkiUkr/t2XlIxSMgEd
67Nbo2lLyoDGE5C+XdjE9GjnL0Iv2s2bBK3alnX6o/iHf9Wy/VbgK1jmtVWe
ErMp6dH/K1u0Me1fFg8CQHQa0YPq/VQa+E9VUtnk1WHaHj7oQXuIUjbxvXns
+Ls8GH5bwygojWBiqgdVoZg314P3fv4++671oJIPuXWRKkEnd+jT31eC9p9K
JaX1oD0OKRtaD+rR93KRBP2nmtDmTXKqzOTk5PT0tP9U26S0HrSrsx403hcb
/2tPUWJTU1P60+uTqh1t6mPdDQBQRMOND6qfVE+ojv2ch3pvWUZVg0ot9ZP+
+GBRPaguUcVCT0+Pukf1/EVdt+aXCNSIpJNkXElSOHcd440P2iE2rdEeuS2t
B41XvKjP11tFx0X1WTSPHbZLktjm5qa+HviJ6duCHR+0vvDHB60H/XpQ/xhy
0MjIiNZedPhR4tbGVJWqZv1vFzFYX1/XlrFZyfgmMD6oTeGPDwbrQftx7HCw
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
JZtbaYP6A6nB5GOXqoLlETtqJuHaCT8x5WBXoUfrXAnI31zi2Hs3yE32wyZB
32HsdwM/GeMVfVa+esWuWo7TK3pdW9WmpPT0Zw02pQ9o/xPsnFWlgQcNHoSs
0oge3NvbU0WjR/tUfbjsY6fVbarDlAf9w6FWRqqDbH1RDif1oCTi9+TGM509
mCk1q3QyngflDv9d40ncT7UUa1X/k8bGVpS+y7RqXy7ynXmzB20prS3sf7sI
QU1Va5wg+q/zN7vU7Cem7zlWx9qeVtnWg3pXEi93QyVlbo+g6o+uLxhV3XcJ
Dxo8CFml4cYH1bmpo5ufn9/wUPe4tLSkUm55eXnMw3jHRX252P1IKlGHr5pI
Gpqeni4aa1tdXZ2dnVWz2ghJblqnblzt28T0dGFhQTWLXhkeHrYWLvWgXKOu
Xh9Br9uDlj7602ieCxcu3OEROzFZWJ9d28cmJq1o+6gE06eWg7QljedBa1vf
g0peE3bV9pCpz+Li4tzcnB71uj0QHQ+tS4npL+VvMf0rqk1bZio945WlwXpQ
E/pftX9uJWCPh5fCcdF44EHIJg1XD6pXVO9nh9U0YXtv1U16qo9gr9OrLtQ/
kGgHnoynA/Xt6sBtBxtErrFt6jGJB/1G/JWqS9ca/RNggrcR9O+rq1fmPfyq
1iJFzl5HbcY+T0abyM/K/4DaVnrqbwo5xbavR/88IhVlSlIbragwVAGoebS4
9J1kc+mD+4nZLSZH28T8A9dKwNaDerTKNl55q9f1Vyt3uFg5V5tYCj3I7+jr
tVLIGg3nQYBagAcrkrZ8AFyBBwEMHoxAknzUz9iRaIAU0nDjgwC1oDk8ODw8
7B9v90/EdUWS7bOwsGB/TASQQqgHAUyzeFA78vj4uPHGXru6upKcyuskH+MN
0Ofz+ZtuujGXy3V3dzvMB8AVeBAyS3eAenkwmEN7e3tHR4f/NEaD/u9QBgYG
4u3RwXxkUvkr+Eq1rU1MTKh7OTw87Ozs3NjYKHd+b8R80CjUCDwImWV+fn7u
OvXyoF27zUSl3OTkpJ9SjAZVBqrsWlxcjHcQ0m4EP4Hp6Wl1DnMBYiQjCe7t
7b1+6YZrr4X8VDYkpeAmqnZxgCgwPghgUnlcNB6nT58OXmWi2nwcpqQuxf4W
1f7C1wR+xFRVSq7yASgH9SCAaSIP5vP5GLqxuN0Im5ub7e3t+/v7KnJVWupp
V1dXjJRc5QNQDjwIYJrFgxsbG2rTv2ZRjHzcpnTu3Dl7M5GOjg7/6q/VpuQw
H4BjwYMAJpUejJHP6upqjHtOBdfo/HoyBwcHLS2nYl8NCQ/CCcD4IIBpFg/W
lHj5SM3Jb0oCUFOoBwEMHoxA2vIBcAUeBDB4MAJpywfAFXgQwODBCKQtHwBX
MD4IYFLpQQA4GagHAQwe9OA+vJBN8CCAwYMeeBCyCR4EMHjQAw9CNmF8EMDg
QQ88CNmEehDApNKDdcnH+fVkEoIH4QTAgwAGD0YgbfkAuAIPAhg8GIG05QPg
CsYHAQwejEDa8gFwBfUggHHkwZ2dnZaWU1WtNOK7Nj0/SueM8la17zrJx2G2
ADUCDwKY8h48Ojqanp7O5XISXEdHx+joaEgju7u7Dj1YjteuXa3q9YgzVFw8
xoJJ1hg7H4BqwYMAprwHZ2dnu7q6tJscHh5ub2/Pzc2FNHIyHgQAtzA+CGDK
e3BkZGRycvLY18fGxvr6+s6cOaPHnZ0dE/BgoVBov05bW1s53+FBgDRAPQhg
yntwfn5eLlMZqD3l6Npr/uvyYC6X29/f1/TMzExvb68pUw9q/xoaGiq3Ulf5
A0Bs8CCACT1PZnFxURXf6dOnrRDti8E68fDwUPrb29sr9aDmz+fzBwcH5Vbq
7hMAQEzwIICJdr7o0tKSNLe2tmY8D6oM9N+SIjc2Noo8uLq6qtftIdNyK02c
OAAkhfFBABP5dxMq7mxJKA+Oj4/bFwuFgpYtqgelv1wut7y8HL7SxIkDQFKo
BwFMeQ/Keto19vf3Dw8PFxcXW1tbVfcZz4NtbW2aPrr2moRYND54dHTU3d2t
r5cVV+r+kwBAleBBAFPeg3JfT0/PaY8zZ87oqX3djg9Kf3q99HzR9fV1tZYL
UG6lNftAABAVPAhgqr+ejDw4OzubfKUVZ6jFhWJiX7YldrM1ygfACYwPApi0
etCnRtdsKZoh+kaIvdJqF0SLcAJQDwKY1HvwZEhhOZa2fKApwYMAJpX3mzh5
8CBkEzwIYPCgBx6EbML4IIBJpQfrkk/ISuuiJDwIJwD1IIDBgxFIWz4ArsCD
AAYPRiBt+QC4Ag8CGDwYgbTlA+AKxgcBDB6MQNryAXAF9SCASaUHAeBkwIMA
Bg968LsJyCZ4EMDgQQ88CNmE8UEAgwc98CBkE+pBAIMHPfAgZBM8CGBS6UGu
J1OvlULWwIMABg9GIEk+6mfa29sdJgPgEMYHAQwejECSfBYWFoaGhhwmA+AQ
6kEA0yweHB4enpubs9MzMzOjo6MxM3OUj5idnc3n8zfddGMul+vu7naYD4Ar
8CBklnPnzuk/3z7Wy4O3edgcZDGZy38ao0EtNT4+romdnZ3Ozs5CoRCjBT8B
NTU4OBjcStW2NjExoe7l8PBQyWxsbEjNMfJJkgBAFPAgZJb+/v6+69TLg1q1
TUOPkoVKJ/+VGA1qL9aymhgYGIixR9uN4Ceg8k1FXF+AqlqTi9vb2yXBvb29
1tbWo2uvra2txUgpuImqXRwgCowPAphUHheNgdQjcy0uLsYbjHO7EdSl9PT0
aGJpaam3t9d4x0hjpOQqH4ByUA8CmGbxoFDl1dXVtbu7Gy8fhyltbm6qHiwU
CpOTk9PT03qqxGKk5CofgHLgQQDTRB7M5/Mxyi6L841w7ty5zs5Oqbmjo2Nw
cHBraytGSg7zATgWPAhgUunBGPlsbGxoqZWVldj5OP8d/eHhYUvLqRhn7CRZ
KUBVMD4IYJrFg6urq7lcLrZ0wom3fZSSSlTnyQA4hHoQwDSLB2tK2vIBcAUe
BDB4MAJpywfAFXgQwODBCKQtHwBXMD4IYFLpQQA4GagHAQwe9OD+g5BN8CCA
wYMeeBCyCR4EMHjQAw9CNmF8EMDgQQ88CNmEehDApNKDdcnH+fVkEoIH4QTA
gwAGD0YgbfkAuAIPAhg8GIG05QPgCsYHAQwejEDa8gFwBfUggLnuwZOP8JTK
pReSfPjnqupdJ/k4zBagRuBBAJNKD4akF/Ju7AWr8g4ehGYCDwJYXrt29eQn
qs3N7bvVpuEkn5AZYucDkATGBwEAIMtQDwIAQJbBgwAAkGXwIAAAZBnrwbm5
ueHh4UkASBkTExMxJsKbitJ4vNwqrrGq1qpaHCA2o6Oj4+PjR0dHqwAAAJmk
UCjU68dTBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBJHm+P/UeMZr
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 29->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
nv5Hjx71tjlZFqZCmZqaivNbA86F7wdnZmZWV1e9f+rZ11um52nN6x8/flxP
sWZ8VkE5+OWzzwRP0T/3wfs0mWuWtvdFFYJhPiejFIv5OZmlRy7UTWSFYPfN
71BhNsJ8b0L9b8wcrHuAiZvueMzqefGRl/3EyC1hClMO/s7t9wZ/1D9YPt4X
3dzc1LNAcaBwifMfPtr3B6vXB72PjKoqvdCtuL6e7+Pj41bn4uKi5aD6QUtJ
7zq8L4rWEXJ9UC819XzRS8qK8/XKc78cXFtb02Yjv0cUQDlY99twmsMVfIXD
R150qPD9L3v5T/7KO8N8TmZt+1LMfvBSMWjPosqal/+HMf+7WGG+2Gi7P42Z
g/c8VucTtq/72DcaLuz2b939+ftyk4ORee8u6jkSpzlKJAfX19f1/1Bnlsrr
gwMDA3bR9vb20tJSqfyYz87OlsqPjy71VjP17LZJQNfXFshBtI6Q/aAuXVhY
6OjosLdcPHoq7ZeDzWP7kwneO4o/RMLvSWz36StN/R79c8Xc/i3/CFO/2i7F
a8wcLF65WvcQjQ0V9gvlXYzyPXpRe2WfNtGrykKhoN4q2nbqvqIIk4Ol8hPE
WkK9CtVTW12q/mcq5rwie3t7FX968HWpl4P2eVE7f3R0lBxE6wi5Pqhnh55o
ehlZ0TZW94N62akXmYODg7pJxVNG85KeYnpWHj16VNfZ2dmx8/UKVk/MoaEh
3WR+fr5uzZaDdd+BbGgobmz3ZTH7Qf2c26izw7dGC7MDEcbfr9r058N+hTDk
0G/KftUOkvMMIgeRS2H6Qb2q1AyvWUWvPP2LCKXAflAxV/GU6ezstHdmSuX3
Xmya0gnFomWi7kgZV72iUcFyUC1StGPQ7xc3X//us6Uk9i8a/NZohMIe3Xvu
veX4Obj9VJI7ANeDrx6TfvAgOc8gchC5FGZ9UBfZd6Okra3Nv+QXsD6oxlBP
Ge+tHvVZNZ9Bumv1hnNzc5rn9XNkZMT79tN+vOMuLX8zgWPd2njnPf94VPpE
jrsUfidmdYd3jOBEjrsUfq8ydcdHHnzuHXL6wYPkPIPIQeRSmH5QuaOoGi7r
6enxJ2ZAP1iRg7qjms8g+wLypo8t8QfwH48+qYl99+krtsFEclCN0i99OoFD
EP7a0ne8r3QlkoPaWvhv+gcM/Xa2wTz1g+mf4Z1XSA4il+quD9qbot7HYxQT
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
6enp6e3t9R82MQ2Wlpa6urpGR0e7u7v1N3JdzvOKxWJfX9/Y2NjRo0ftoJOp
oseqUChEiELnMzzHmwCcyFw/qEm44xo9JdfX19XNTUxMdHZ2Dg4O2uynf546
dUpTtK7j7Y5scXGxu6zmb6rtxM9B1eAVViq3mXpsdebw8LA1m8qOEydOKHMV
cJubm3YrnaPrqLCAfXVqYo/crqpr8z9i1vkODQ3pnyrPdj6m310Pi14PKNrs
EFreo9rf37/fPld1nTC7VN2P/u/ZI9be3m7b0V2rEp05OTlphR05cmR5eVkP
l3cgSxWvsnUr/QrVYbexsWFlR+hVnc/w5CDgRHbXBzU9WjOiOVM5rhOrq6ua
MEvlHNR8XiqHZlvhuaetImZkZET/1FzqTfV+ieSg0SNpm9I92s6xdY4yulTO
QZ1ZKj/sVuH8/LyKL5a1tbXV3KBqsyvHpDtSATqhR8kyV/duhalgu0hNqO37
Wv8rdFpVKQQVKxWb0sOoqymMpqam4hfm/QX1a66trenE+Pi4/k/qhCJydna2
VH4MrTDlsh49FVb9J7M/rn6qYPrBZiAHkUuZ6weNytZkbg2C0lD/tPM1M6sR
UA56hwBWJ1UqHzJYzU7fNTbZ+iWVg5qiLYu9uy6V52f1NaVyDnqFWQdkb8l6
hVVvUG2jWsU4R8Ewls7WZClw7YRXmC6y/lR3ZGUogPyF1dz9uLap68QsbG5u
zt711V3oTu1MpZiFr8qzUtUGWpenR9WrSi2hf1MKSmv/o/WDzqU/ZdJfIRBB
FtcHNUkqa7xoUIPgvaOoidRyUL2hnWNhpI7D+ov9JJKDajOVbt5hDhQ3Fh8q
WAFdKueg2li71HJQORLwdqj+OomE4MbGhhol751Vr0idY9Gj3916ZP20HPS/
cxtAORXn80XW1Fsx+ukVphc21gKrPO/tUKWbTnuPajV7w1k0V9uVIxfmSvqP
7pf+CoFGZa4f1DypGXJ+fv7BMs11J0+eHBwcVPAp7KyzqM5BTe+aUfU7qhOc
nZ2tmCGVRNqgZlHdKs7BejSNawtWWKm88KcORfeo+FNtpXJbWpGDumsVpjOt
MP/WtBGljH671bLIhdn6oO7CK0yP0tTUlO5a5c3MzJTKOWhp6/WDKkZn6n5X
VlbsTUvPqTJtUOd7zW8Eui/97irDK2xkZETb1EOhGqxxrugHdWJ6elptoK6j
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
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 30->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
P3L3c1+Y+4U/+nyrOc88tz0KG3c90nTlk+t3SYDVI1/+F+9YbyVDazDxfTDk
j1G1q3rhT/3cmT74tF+/3F0fHH8mCXZlz83N6bujD8zo6OjBwUEChUEBsq2R
kRH/adxVzczMLC8v24HFxUUNFIvFdvToRQ0NDY27RNyXAxAF8mAj4T7o1yvf
s61uVn7UaoY7vvVo++Kj/EcpOw7xQa3BxPTBX//tm85s9IUv+/koPvhPfurl
cV/yNXTexNra2vnz5+U7yaJKuvJkE9vb28a7LJ5S4enpaS6Xi6vHtT9JAboA
ebCRM33wZW9dUnfx7Of8yL983+dCZvvg154+d+Do6Ghzc/M2D3VNtond3V07
Mtjn66kdub+/7ys5/7FauNG8avWLzxp4bsgMs5+9aGL64PX/7sa0fPAfjf10
rI1vrikf3NvbU4hL/FlNV16pVLLhdGBg4Pj4eNYjrh58EDIIebCRiHnQBrEQ
K7Q+qNbXruI3od/tdsz6+ro/0p9NP+Z9JeE+KBOUHYeL7JwP/vTc+zLug3pz
1YT/uyUu6cqr1Wr61oyMjMgHlQ3tPtK4evBByCDJ8uDBVRonKf6kIuya8MEX
vORnfvY/b7aa2un9orJgJUH7Z2VIdW6/aBQfvFb2iyazAHmNlvJjflw6cR79
wsJCpVJJrAcfhAwSMQ8eHx/r16b/VIFla2ur8d8HzTM8PJyKFTrrg6NvvPGV
79n+hT/6/Evf/F9lQ//6lq+1mrOjx8lIgLosq0SpMORvyvXq0y8n3eNk1OLf
+6f/fOyGd7zqj78U7oMuHydTN2cCC9AX59WvSfl0CZ9kllQsFhP/x8FJ9JBN
IubBiYmJwcHB4O/eBP/Cx6KHPijTN63Pm1AAzL3y9UqCL3rtTIj7dPq8Cbnw
80fHbUnMy9661EpJ6udN/PzSp2WCfoWYoOPnTdTN6VoUck0PQL8SJQ/K8uRK
6huDkbDOB/f39wuFgjq9gYEB3y41sLa2pvXPzc3t7u7akcqSs7OzMzMzSpQh
wnqeB9s8j37xS6mdR994i6XoVf5UL8+jr97f5+fRdxTX9AD0K1HyoAxLdnZw
cFAul/2RMoumeTCfz/s+WKlU/INDqtWq8Xac+pfdULshDtXzPGjau67a5Sup
3Z+3V9dVO/OGg+HFddXaxDU9AP1KlDxYLBYV4uSDQ0NDwax3pg+Ojo7W3cNo
fn5ezVU8ZIghnXPP86DxIiHX2U5c19Z1tvlrDCCznJkHZWqys7m5OTmXvMm/
mmIUHxwbG6s7ZmZ1ddWe6nsmLuRBoc48bv/fifsuPXI5yX2XtJS/Bu675CCu
yXMwFAN0gTPz4Pr6un8iUq1W8y+iKLOT5e3u7vonu1mCPri1taXQt+MhJ7VL
yRxlhWo3/BIcLuRBy/59l1y4D+/9p1di3Yf3/pTuw5tg57B+CfjxCh8MwTV5
+CBkkzPz4ObmZjDTBU/OVW6SS9b5YPBsceOdaag12Ks82TEakA9ubGwEj7pp
xJE8+MM1PHplYff+8M5fXvmZg8fS0twUmcsHv/bwmTakeRr/nUzsgyJKo8Ek
GNzHiA+G4Jo8fBCyCdeTaaQuD/p85b7H3/3l48ae/zf/7OiObz0avPl7R5Ep
y2uu/2R9RNUYjW910mI7Pmi8UHzm7Z9mPnNRs9UtiA+G4Jo8fBCyCdcXbaQx
DwZR2Pn2w5e/fvFx2eJdDzx+/Mzdj91Elmdl6PHMc/bb9EHL3r2Xmp5XqJGa
1HSRa8UHe2IBnbieTDvgg5BNXM6DpZSYmJiI1fTk5GRaTbtDLB/M5/Mhq3r1
a0o/86pfLBRfrdJAeLtDQ0Mx3/mnrTOtV+24D4bTfT0cNAvZxNk8CNBN8EGA
zOJsHgToJvggQGYhDwKYqz7o7xi0T5uaY3BSulMbZ26qJ3y1ndMD0K+QBwFM
w19jLvhgUBs+CNA5yIMATbHO2OrQkc5NTSapJ3oA+gPyIAAAZJn+zoPnz58P
3gfqGkKa5+bmcrmc3p1rUX+lUhkeHh4fH0/lpszJkID19fVetQ4A1wrO5sFa
rXbgYV1A3anG2GE9Hh8fa5Lfx2pM8KmPxk9PT3ffR3zx9hR+qdWYH97W8Kp4
/+x+K77uZH/NbMdsbm7OzMx0U7xVLsF2e0qJhv1rC2hknVo9veeee5puZC07
Ojoaq3Wt2d96pmHj2HfZTvLn9z8kQba2tvSpxgcB4EyczYO7HgoU1Wp1f39f
A2tra/YOFxo/Njamx1KppKnqAzV1dXVVlrexsVG3HkXC7vugFb+wsKBYJPFS
K/H5fF5usrOzMzIyosepqSlNMt7dqSRe6U/vQuOq7G2Luyl+b2/PFy8jk2yJ
10uwd5DUWyBJ8/Pz9r4h0qbZlpaWSldvK+mjGfSi4pq4PpBqXf5lLyikTKfW
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
Hw//xzs18M3VBXnQ3n+vtJrzysmD7Yt/9Ou7TVeudu/8g5vk1N+95XcHB55z
xzve3ErGY3d+wcT3wZA/RtX0/ntvfOVY/kwfVOGD4Y0mntoUOWAul0t8QaRO
XE9GYgYGBtqRlGxBgOiQBxsJ90G/Lrzrt/QFr/7h77SaIZWjZaIcIaNgeMtv
XN9qqj1aJtb7e9Pb5s5sNKIPvvylL477kvHBKFM7ROrXk9nZ2SkUCm0oAug4
5MFGzvTB95R/WRFM3UJIClM98uVt2/rGVfyLXatzsGOCB7f7s+3t7flKvvWh
d4cbjVKhxNiI2rTuv/2DJqYP3vjrYa8LH0wLB30wBNf0AKQFebCRKHlQvvNX
73/HT7zgx0L2i/o+uL6+vubhNyEftCPlev5IPbUjd3d3fSXhPigN6p3+3/tu
Cpmnxz744p+MtfENPhhtavdxTQ9AWpAHG4m4X1T1cy9+0W2/86amh9Nc7Px+
UWuC31xdCBfJftGIc+KD4bimByAtOpoHC4VCgis7WZz1wfeUf/m7t/yuBm75
jevVM3zlPW9v5YPpHCfT4tqeEU3w4tVLu6R4nEwsH+Q4mfBGu9wiADSSLA/e
7LG2tqZeLuRaSWNjY9euD7YyINnfT/743//Rwb9dGn/JnX/Qcofk0Ud+PxXx
T1/dtNn63/ZLxeD1pm58/ataKbHXdUnxvIk73vHmYNPhURQfDG+0yy2G4+C1
y1zTA31Jsjy4uLhoj+WQzcns7MiDg4NyuTw9Pe2fJaRJmm1qaqpSqcS6H7px
wAefunzpzLDTKglefOY1zdqk8RZL0cs/jTGuD57efWfiRoMWjA+GN9rlFsPB
ByGbJM6Dmr9Wq2lgfX3deF5TKBSs2U1MTOzv7xtvv6hdrdywVCrFEtZzHxQP
fvLWxBaQlnjRjiVpWbuSJNdVa+M6Nr4F44PhjXa5xXDwQcgmyfKg5l9eXtYi
8/Pzs7OzxjvW0d9BurW1ZTvS4H7RwcHBWMJcuL5o4kur1d2Dr32SObKW8teQ
wAcf/85dbYXB791t8MGzGk08tRN04jz6NsEHoQskzoP+OW7nz59XMNzY2PBv
1rO5ubm4uGieeZzMwMBALGEu5EHj3Yc9tvt86kNpKfeRI8fdO6r5n7p8yV9D
svsuPfyFO5KZoD1nxOCDZzWaeGonCDmJ3mBJ0L8k/n9QoU/+sru7a6+dK7+T
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
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 31->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
XR0ZTXd3tz3XZWVlRZYatQW7ETwBcnNZj19hpNa0iWwsPTg4UB7UQMjNUiLJ
WQBASMiDAMbp90F9drR7Pzw8tG9lQ3LAjY0NvYbv1E1tRfw/C8p05Inr6+uR
Woj34hHtUgYHBzWwuro6NDSkAf9PqOElxaUHoBrkQQAT2gKmp6dtHrQoLtkM
aMkWCR9bYtzJHx0ddXZ2KoJ5YyQsn89HaiReH9zZ2VEelDBtNInR276+vqiN
4IPQBMiDAMYpD4rNzU1FQnvKqHjve9+rRvb29sJ36iC1IvPz82qt49lEEmMa
cDOBubm53t5eGbQyskzZ/n4aCXwQmgB5EMDEZAErKysDAwOROnWe2ggacT+Z
k5MTOfLx8bGzJLcFAcJDHgQwcfigdviDg4NLS0uROnWe2ggacT+ZjY0NhzN2
AJoJeRDA1O2D2tt3dnbm8/lIV+0lzQeDSZoegLggDwIY7rMdgqTpAYgL8iCA
wQdDkDQ9AHFBHgQwifRBAGgO5EEAgw8W4Tm8kE7IgwAGHyyCD0I6IQ8CGHyw
CD4I6YQ8CGDwwSL4IKQT8mBDOTo62tnZabUKqE0CfbA97idTJ/ggNIG2z4Na
Qf/btbW1ycnJbDY7MjJSYv2ac2VlZXh4eHR0NLiR8Gxubvb29kZa5OTkpFAo
DA0NDQwMzM3Nefeu1EjvyXdeeTfwn52dLZkUpq/9/X393ScmJjS/852v2gN8
0DTmfjIAyae98+DBwYH/CXHr6+uDg4Na062treXlZX2uV1dXvanyFFmk3Kfc
B3d3dzW/gwC5TFQflPfl83kp1J9mampqbGzMjpdnbW9va7y8Va9Sm8lkvLso
y8s089YNQj7ozX4rsE+hxQfxwWCSpgcgLto7D05PT5fc58r/dnx8XN5Rsohs
yLOe4KaCkW8qdXZ1dfkzWpibT2op7zuJ/FdLeZHQQ56Vy+X8fzLF20h3tvSj
rwdRfVAGqm8LfX19+ufRmraBh+KDNUmaHoC4aOM8qAAl86o4Sc6ysbGhpKbX
kknywfI8KBSy/NGyJoqi2rZqrbu7e2dnR8N61ciaC+pvIXe2ziK7UVgrP1ql
MFhi1rJF/QUPi4QXaanmg4qKFd9qo2l+adNK6VVKtHGidpo0yo85N6eCJXl/
+uClQk6KOjUWPTGqBWgQbZwH5+fnKx4e1H7bfsoqrnI1HzTF531H1aCsFPW4
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
vZ99ZdRVPkXXTSh5jY2NyXfcokq88mQT6+vrpnhbPKXCk5OT7u7uqHqS9iMp
QBMgD5YTnAdlAa94x7x2F8/puOWffPCLelvNB+/++vVrBw4PD7VtV1dX9apd
k+1ia2vLjvHv873ZdnZ27BjNP/bx/xNsNK/70FekJGCGyc8dmog+eNtv3lHT
4OSDPz/1wZqz/Z2X/XykjW9OlQ9ub28rMel/9ZlrLtk/Xnn5fN6G046ODr1O
FomqBx+EFEIeLCc4D1rjs96nICYrrDan9cFz584VCoWlIp4P6nt7ocjy8rLX
rx2j2fRl3o7R3izYB60J2uO0+GA5jd6r619LXXjfW6ISr7y9vT19anp6euSD
yoYLCwsOevBBSCFueXD/BuWTFH9iEZbYPOivTPYXfvHfrlab2ujjoq/9j1+8
+Zbn/+rq94NFNuK4aHgfPC3HRd0sQF6jpbyvN1FpxHX0s7Oz09PTznrwQUgh
IfOgIpK+bXpvNzY21tbWyn990DwaGYsVJjYPvuz2d+cW/kJB7OVv+3eyoV9a
+nq1ORt6nsxr/+RL2mVZJapfXn6wmozl3eu2Hu95Murxb/6Df6RN8bo//ctg
H0zyeTIlczpYgD44bqeJhsHNknK5nPNvHFxED+kkZB4cGhrq7Oz0f+91+BU+
Ei3PgxWvmzj7iYcVAF+Uu1VJ8MVvmAhwn0ZfNyEXlhPZkphXvGO+mpLYr5t4
9fxn/V0HmGDCr5somTNpUShpegDalTB5UJYnV9K+0R8JS3xwZ2cnm81qp9fR
0eHZpQaWlpbU/tTU1NbWlh2pLDk5OTkxMaFEGSCs5Xmw4nX0AWfFlFSMdxlN
5nX0YbbD7vk2v46+oSRND0C7EiYPyrBkZ/v7++Pj497Ianmwt7fX88GZmRnv
Jof2thtqxDuOpH4DHKrledDUd1+1GA8xndL7qr31s9ctGB90Jml6ANqVMHlQ
lqQ0Jws7c+aMP+vV9MG+vr6SZxjJGdXddBEZYnCnLutTCef7i3Kf7Xp88BuH
p+k+2/w0BpBaauZBmZrsbKqIvMm7m2I1H9TMng9ms9mSc2YUD+2lvjVJQh40
1X+eC6hGPHfpicsuz13SUl4Lzs9dcjPBU/fcpZaQNHkJDMUATaBmHlxeXvYu
RFIkHBoassMyO0U/5UTvYjeLPw+ura0p9GkeeZ9s1C4lc9Rb9Rt8C44k5EHL
1x59OnwqbNxzeM+fXA1/oPI3P394Pqbn8DocHOY5vCFJmjx8ENJJzTy4urrq
z3T+i3PlF3LJEh8seeqZrFMtbGxs+A+oygdXVlb8Z92Uk5A8aJEH1Twy+ab7
HlnffyouzRW5cu2Zu7/+eE0b0jyXr/6oZFlnHxRhOvX37l8WHwwgafLwQUgn
3E+mnJI86PGNw6ff/9Wj8mz425//wf3fedL/8PeG8shTV5YeePy2T5de36cx
Gl/tosV6fNAUQ3HNA7MT64earWRBfDCApMnDByGdcH/RcsrzoB/53XcvXpYn
ap//4GNPHz378GMzkeVZGXqtec1+nT5o2X7kUsXrCjVSkyouclp8sCUW0Ij7
ydQDPgjpJMl5cHh4OJ/P1//q/aYZkuEiYRo/WyQunZFez/oIs0gkH+zt7Q1o
bfj1Z3/hdb/yD18zrNKAX1L5NslkMhH/8mZgYCCuTZRwHwym+Xo4aRbSSWLz
IEAzwQcBUkti8yBAM8EHAVILeRDA3PBB78CgfVvRHP2T4p1aPnNFPcHNNk4P
QLtCHgQwZT+NNccHQ/4ep9nwQYDGQR4EqIg1qWpW1bipbpJaogegPSAPAgBA
mmnvPDg2NuZ/DtQpQpqnpqa6u7v11zmN+qenp7u6ugYHB2N5KLMbmUxmZWWl
Vb0DwGkhsXlw/wbWBbQ79Yb1enR0pLfePlZj/G89NH50dLT5PuKJt5fwW7X2
8nxPvHd1vxVfcrG/ZrZj9P1kYmKiJeLt9pQS/7bVgIRpjH9+jam4kbVsX19f
pN5t4xZTtnGsEn/vdv7y3tfW1vRfjQ8CQE0Smwc3Nze3tray2ezu7q5EamBp
aUkRw07SW00dHh7WVO0D+/v7C4WCLK98v6dI2Hwf3CwyMzOjWGSfUCx5PT09
csCNjQ0N6HVkZESTTPEJHZqq9Ke/QnlT9rHFzRS/vb2tbTs7OyvxMjKp1ZaX
SHs/WEVUSdIk+9wQadPw/Py891hJD3tz9agmrr+1eleP9oZC+otr4+RyOX1P
kxil++Xl5cXFRW1bTbWPQZmbm9PGLGlH21yL4IMAUJPE5kFTfNSFvcGXtT9T
vIm3vufLYrTrM8UbcGmXuLq6qr3xRpHyu7G1JA8KGbT23hqQEVgH0b5d+iXS
+p22/MLCgrKMnNqK7+zsLGlEvln+7KomIFV2S9rNa5VoS2ogn8+bYkyT8Wmk
9XT9Rcq3vEbKIu3ikZDfaa31qu1m/U6cOXNGY3p7e60YdWdnUy8SMDAw4N9K
4+PjmgcfBIAwJDYPej4iPIPQbk37Ve367FMt5ImyEvmL9O8W8R8xs7QkD9oY
5Qmwh/UkXmq107YPnJJUubkioUx89wYljWgLlIxsjni5jNUshfYLkjU+U7QY
+1ba5DXKiRXFeyg/Rt3+atl+c9DGsV94zA0ftEdZNWCNT69e7/5e7NEDhzQK
ACkkmXnQPtxQO0P7w5OMY35+Xvs67d/01u+DGq95tD/UPlPrUvIQKC2ivbcm
lftjQ+nv79/a2pIwOYW+YMg7rBIp9HxQa2d38kq7UqgZlH/9W0BmpDEVzb2h
2MPLEm8TmT34LEPR1jbP9kFTvBfo+vq6ZrNTPbTWWlnp1wyReleE1PY5KGKK
G8duGXuQ1u+DGhgaGtL/rXov+Ra3XUT/GxUPNQMA+ElmHtSef/wGNmjI+LQr
tj+oab8nNzFF8fZXKo3RfnJmZkZj/O14jZQ8FbGhyCO8fu3jGmUrCn3Wo7U6
VrPijP3uIa+cLuI3cU31Ggl+YHHslPQrVdrynkcrZ9l1tCZuB7R2Jf8/2uAa
qUlRw6D+FW3vNsrpL6t25Gi2L3ucXAPW4LzeKx591X+Lvo2E77pxN4pxvlY9
Cbe1AWh7kpkHAZpPoy+cL6emBwVc294ItdgipJNk5kGANJA008EHIZ2QBwFa
RdJMBx+EdEIeBGgVSTMdfBDSCXkQwLTIAoJ7bIkefBBSCHkQwCTSAlqih6dO
QAohDwIYfBAgxZAHAQw+CJBiyIMABh8ESDHkQQALP40BpBPyIECrSFriS2Ao
BmgC5EGAVpE008EHIZ2QBwFaRdJMBx+EdJLYPHhwcLAfH5G6jrHf5BDpuQ/x
dh1p47e892aSNNPBByGdJDYPlj/f3Bn7JLvwHB0dxdV1coj0Pcc+3iiAa5d+
ePWpY5UGgufs7+8P368lxn/F8Ht17idj8EFIK4nNgy30wePj44Cpz1y7eu34
wtWLh1ceO7h6fKGmETSO605kZVw81HDwzLH4oPq6+MV7H/3zP1AdfuQ9Xj2+
ee/l8w9XXAQfdIb7yQA0B/JgOdXyoFzg8S/ff/jR9/ktQHXh03926bu78sc4
xNZGlvfUA1/+wT1/VCJDYzS+miHW6YOyucfuLZTYn7806fx9d5e7IT7oTD16
RkZGmvnsaYBTDXmwnPI8KHO5+IV7qlnAj+uj77v0vW/Fpbkiston/+q/15Dx
kfdonnJTrscHw3Tq792/bHv7YCaT0SfIDufz+aiL15TkvGx3d7cnDACCIQ+W
U5IHLx+eK8+A1eqJ//n5uGSXcO3SDy98aimkDM1ZcsDW2QdrfwEoC4YXv/j/
+0qyD+7v7587d86eTuPmg0NDQ6urqxrQ6/DwsINCT4P+S/Vh3N3d9cY46Nnb
25Md9/b2dnR06HVmZsZNjxWg1nZ2djw93mv5QLVXb9VKXmsu6P/T+BuJujoA
YSAPluPPg1cvHkZyges/ln35/riUeyjfPXZvIZIMze9PhW4+KFuPuvolqTDJ
Pmi9zyuHn8amp6f12dE/TF9fn8NeWj2WaPBX1NYkQN63ubm5tLQkN5QqpcKo
jQToSUJFXR2AMJAHy/HyoHwkfBL01w8f3I5L/I8lfW4lqgblMi3lteDgg5cf
fsjNBG0pR5tk+6B3bYVNHA7ty3HGxsYmJiYWFxfd5Pkv8VD4snnQSora2vj4
+MLCggakZ25uTgO5XC6qHr8k5cHt7W33S1bixmGbAISBPFiOlwcvfuGegDND
gisu8eLS977lLOPS979tG3HwwfP33V2PDyqQmmT7YP3IJjKZjP5X3c6Silee
NvX6+roGstnsxsaGJHV1dUXVQ+aCFEIeLMfmQe1GnN3nsHgpQVz6z3/iQ84y
tKxtJKoPykDrMUEvEra3D+pfS10ox7ktHq+8fD5vD9J2dHTodbJIVD34IKQQ
8mA5Ng8+9cCXK/rgv7/9DX/rBX/jb7/wBS888/x35l9TzQJ+cM8fxSL+ymMH
Fdtffuc/f0n3T/9M5qck42x/NsCM1IKJ7oPVTo/RNtEWUL/aYS6+/Y3BPnhx
4+Pt7YMLCws3P/d5ke7V4ydeeXt7e7lcrqenRz6ozT4/P++gBx+EFEIeLMfm
wWr79u/86b8++M9zGvjWh2blQdv/YbranFePL9Qv/slvbFZsfOt9v/PAH98p
JeeWfv8nOp57/7vfVk2GDN1E98FqP4zKB7+28C51/aqXvrimD6pOiw+6WYA+
OG6niXqdOk+thv5209PTznrwQUgh5MFybB4M3r3LDuRE+uK9u/h71eaJ5WyZ
mmfISImC4dJv3VZtBnu2TKS/753vnKrZae5lvWF88JUvf2nUVT5FPthQ3PQo
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
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 32->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
/e7H1I/JwMCA9tQ7J9180jom0PLgByGz3BEVCUSwDhYKhQjFjoyMmB+jIfVj
MjExkcvlvHPSzSetYwItD34QICwrKyv+m2Tc6OzsTDvBiDB+ELIJfhAgLEdH
R7W6RqWP8/PzaScYEXQQsgl+ECACm5ubZsxghQjmcrm0U4sOOgjZBD8IEI2d
nZ0LFy54RXB2djbB8hlHn1alkDXwgwBx2N/fX1tb0+8o8ZLRwbQqhayBHwSw
E54nA9Ac8IMAdmKb7tiWD0BS4AcB7MQ23bEtH4CkwA8CAECWwQ8CAECWwQ8C
gIHxg5BN8IMAYEAHIZvgBwHAgA5CNsEPNpSDg4NSqZR2FnAqYRx9WpVC1mh5
P1jxoI/V1dXJycm+vr6RkZEK6deifD7f398/Pj5eIV6Rnxayvr7e09MTapOj
o6NisTg0NDQwMDAzMyMlNfM10/9U57m5ueBFJ7K9va29Vl1jY2MrKyvHx8dh
9xEaBDqYVqWQNVrbD+7t7S0sLLgf19bWLly4oNZ+c3NzcXFRPzFNm0VaTVpg
Fs3Pz7e1tW1tbbkbanppaSlCAtLWsDoo7cvlchsbG/rXSKH03zHzd3d3NzxI
5jo6OqRiwYuCURVac3Z2VnqtL4Dq3dnZCb+X0BB4ngxAc2htP1goFGSvvHO8
fke+T0JjpmW7JJruImmiV0BNUaG8knRT1lIq4/VoEt8TN9RW7jmJ9Fdb7e/v
V6xzeHg4ODhY9dQlYJGf0dHRaC8Jkr5r297eXn15tKeqNEIhEIxtumNbPgBJ
0cJ+UNZG4uWfLzmT6skBqRmXQ6y67dDQUIVmyWdVKGMwUlUdW5m7rq6uUqmk
af31Sm0t9L+YnJw0yiK5GR4e9q8jxycZqrp5wKIKdHzUsslLOuWHRVecMAil
UfWjDp02VG7aKf0dGxvTwamnRgiF0R0ZtIoeb/9qdS4NtWET8gmVLUDjaGE/
aLr7/PPVbpsfmtrwqhvqmGipt1/U4HZR1o+8Uth+USlgLpeTeuqfIm/o796U
iHd2dlaVnoBFfrSadnN5eVnmVxOyrpr2ruCaZad8GdG94KidUi1GQKEJmL7K
Wj2W9SyNsGFD84mQLUDjaGE/KL2rOl9N+ubmpsxdd3e3X/0lJYODg1VvMqlV
YACSDNXiny+jmv9R3EXz8/P6j0jB9U+RGvpN6MrKSl9fX9XqAhb50WmA5E9V
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
o8hVsoTPe/OMPi4vL3vvuvFjiR80PPHc8fSDF4Mb/7c98MTaznNJ5VyV4xde
vPtrT58oylrH38sXWQeFCqxfBM3TA1zQwQBsSw8dhGzC82T8VPhBl62Lz9/5
laf8MvSbn//eJ779rPfl7w1l79mr9zz89C2fqhzfpzmaL8muulUcHXTKpnj8
Myd0zE6s7Wu1ig3RwQBsSw8dhGzC80X9+P2gF+nddy5dkSaqzX/k+89fPEpg
sHw0JIhf33/+q08+r2ROHLMfUwcNm09crjquUDO1qOomp0UHU5GARjxPJg7o
IGQTm/1gLiGGhoZCVT08PJxU1fYQSgd7enoCihp+U+7nbvrlfzg4rNBEcL3t
7e0h//PXpDOpvbZcB4Npfj7cNAvZxFo/CNBM0EGAzGKtHwRoJuggQGbBDwI4
13XQ7Rg0H6uKo3dRskv9K1fNJ7jYxuUD0KrgBwEc36Wx5uhgndfjtBo6CNA4
8IMAVTEiVUuqGrc0Wkqp5APQGuAHAQAgy7S2H9SunTl7LvLrwlNEOefz+a6u
rrGxMe/zeU4LhUKhs7PzxhtvTOSlzNHo6OhYWlpKq3YAOC1Y6wd3rmNUTM3p
7u6uGeGuOQcHB/rotrGao4/+8fJSkNHR0ebroJu8SUnZaroieTdbJblbxluC
VjYrrKysTExMNDN5ZWKSN4dXmbjTzvV/hDdb87GqWGvb3t7eULVrr92j5/j+
s2baW7v56K99dXVV3+rl5eVQtQNABrHTD6pZM0/wHhgY2NraMi/5LRaL5g0X
mq+P+pvL5bRUTaVWW1hYkOT5271UdNAkP1Vmc3Ozr69PyXd3d0sBNV8TJnnt
l1MetK7k5f70X/AXZV5b3MzklbDyn56eVko6dMpWyUvOzPNg9S8wu2beG6Lc
ZP3uvPPO3PXXSrpoBZUQVsT1D1X5i4uL5oFC8nSqfXBwUOdpUlW5ey2an59X
AlqaLzM7O1tRu74/+oZoE3QQAE7EWj/olF91YR7w1dnZaeZIL3Ser1Z6ZmbG
KT+AS02iHJNaY/NWC//T2MbGxlLpF1V7rtZbExICTWtCDbjyV5JG7zRzbm5O
rkcZmuTb2toqCpFuqj1vfteistKRlJqYw2sy0RmFJozi6JBqQjONppsjX3Gj
hf5NkkizeSikdzpz0F8pr9E70d7e7rpL1avq9Fermdp1IuQ9SuPj4/qIDgJA
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
tumObfkAJAV+EMBOXN2peLuTf7U6l4basAn5BC8NNqcACYIfBLAWrxaY6Vrq
ELw0zoaNyCdytgCNAD8IAABZBj8IAABZBj8IAABZBj8IAABZBj8IAABZBj8I
AABZBj8IAABZBj8IAABZBj8IYGjOY1Iip9S0bAGyBn4QwEszH5NSvwY1NB93
BWQRsgl+ECAtbBMddBCyCX4QIC1sEx10ELIJfhAgLWwTHXQQsgl+EMBJSQKC
a7TtffQArQp+EMCxUgJsex89QKuCHwRw0EGADIMfBHDQQYAMgx8EcNBBgAyD
HwRwuDQGkGHwgwBpYZvjs9AUAzQB/CBAWtgmOuggZBP8IEBa2CY66CBkE/wg
QFrYJjroIGQT/CCAw/NkrteIDkIGwQ8COFZKQJx8RkZGFhYWwm7FTbOQTfCD
AE7L6WBXV5d+2gkmA9DC4AcBnKg62NnZ6cpNLpdLPKWwm2xtbckJ9vT0nDl7
Tn+npqaSTQmgJcEPQmaZ8aCfQIRewaGhoZWVFU3o7/DwcIQcVK+bwOjo6Pj4
uPsxbFE7OzvSvvX19cXFRYny4eGhXGHYQrzHZHJyUuXMWEOEYwJQD/hByCxS
rqEyZiJCCfl8Xu2zFKe3t1cyFHZzOT5vAlKxvr6+oeuELW1iYmJubs5MKCtN
DA4Ohs3HTUkMDAxISd2P7uGqn4ojHHPzaGcaACeCHwSITLFYHBsbk+7Mz89H
2DzZK5KSrbW1NU1ITOUKX3zhamdnZ9h8bLtICtAE8IMAkdnc3Ozo6Lhw4UK0
zZMVnVwupx+yzOn58+cPDg4my4TNBx2EDIIfBIjM3t6ehKNUKkXbPFnR2d7e
Hhwc7O7uPnP2nLyh6SMNmw86CBkEPwjgRJWA2dlZbXV8fBy50shLazE9PV0o
FCLngw5CBsEPAjhRJUA/nOE3JTxcwiWaJMkSxvktM5QeMgh+EMCx0grZlg9A
q4IfBHDQQYAMgx8EcNBBgAyDHwQwcGkMIJvgBwHSwjbHZ6EpBmgC+EGAtLBN
dNBByCb4QYC0sE100EHIJvhBgLSwTXTQQcgm+EEAJyUJaMTzZOKADkI2wQ8C
OFZKQCr5cNMsZBD8IICDDgJkGPwggIMOAmQY/CCA49NB87GqOHoXxVwa3AlZ
K5/gYhPMFiAj4AcBXFxhao4ORssHHQRIFvwggB8jQFX9WsCimEuj5dO4bAEy
An4QAACyDH4QAACyDH4QAACyDH4QAACyjNHB+fn50dHRAgAAQMYYHx+fnJw8
Pj5eBwAAyCQHBwcVw4gIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIglD8
P/5EEfA=
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 33->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
DcSJoJsD4Af8YDneOujEGxY+r2ZWelRtgfu+90T9yfu5RilX6KGDv5t/zATU
wd/47Q/UrPT6173Bjw7+4597fdBNPkPPTch5jY+PS3fCWZVo05NMbGxsmOJr
8eQKC4VCUD8Yw4ukAE0AP1hOTR183bsX1Fy8KHXdv/jolzwW+5P7L6mcw8PD
XC53TxE1TbaKra0tfdR0d5tvp2i4s7PjZDL+qf/rLTQ33vlVZeKxwNQXDk1A
Hbz1N2/3o4M/P/3Rmov9w9f8fKCdb86UDm5vb8sx6bf63NUw3j/a9LLZrDWn
qVRKw6kiQfNBByGB4AfL8ekHFddd/woPKbzr/su29uUi8g6ODuq43U5cXV11
6nUW08G8k4m3Dt74x1+79sUv+ZXcj9DBijS6VddBjqpwjluCEm16e3t7+tf0
9vZKB+UN7TnSoPmgg5BAwvnB/VPKZ6lliCSxM6GDXelf+MX/mKs2N5Lzov/+
y1WfHHzTf/vStde9zFsEFSrBNOa8qB8dPCvnRcNJgLRGazmHN0FpxHP0c3Nz
MzMzofNBByGB+PSDR0dHOtp0Pm5ubq6vr/f09JQspmU0MRIpjK0Ovuptt2cW
//JNf/Tl177zP78odd2/Wrm/2pINvU/mxju/qiZLmWhE4XGZcnX3+c2J9j4Z
1fjyVw285rYPasRbB0Pc23CGdFB/nHC3ifohnCRlMpnQ1zh4iB6SiU8/ODQ0
1NHR4T7uPTk5KdfBCGmhDkr0TfXnJmQAX5G5RU7wlW+e9FCfRj83IRWWEtlQ
Mq9790K1TCJ/buINC5//u//kn9lQ1R4iGPPnJkqWjJsVils+AO2KHz8o+ZMq
zc7Oui1hiQ7u7Oyk02k1eqlUypFLjSwvL09MTExPT29tbdmJ8pJTU1OTk5Ny
lB6JtdwP1vkc/bmvRfYcfXkXS/6D5+j9Lxk33YlbPgDtih8/aG/q2N/fl6I5
E6v5wb6+Ps2y4zMzM85LDu1rN6SkN908YqeoXg+FarkfNJ7X5rzjlk8fRHiK
qVXvVavZ4aB38F61OolbPgDtih8/mMlk8vm8dLCrq8vxeh466CzT399f0oeR
TKWqmykiQfRonFvuBw3v2a7vPdu7F87Se7a5NAaQWGr6Qemd5Gy6iLTJeZui
Hx1Mp9Ml98zIHtpHfWsSBz9oql+e84gIz4g6PF4I0++S1nJKoN+lGBK39GJo
igGaQE0/uLq66jyItLe359wdJ7Hr7e3d2tpyHnazuHVwfX1dpk8LSPsko6ao
nhJHfVS93q/giIMftHzjkWf8u0L64X1z8fYYx16hgx7ELT10EJJJTT+Yy+Xc
ns79cK6mSyVLdFCOz31b6f7+vkrY3Nx03zwjHVxbW3PfdVNOTPyg5cLJlbn8
Be/G/633Pryx/2RUOVdE4nLX/ZdrypCWKT/LF1oHhZ9KnbBv0XFABz2IW3ro
ICQT3idTTokfdHjg8JkPf/2ovOX/rS8+et/3nnB3/t5QDp64svKty7d+tvT5
Pk3R9GoPLdajg6ZoimuemJ3cONQuKlkRHfQgbumhg5BMeL9oOeV+0I2s1g8u
F9TgSxoefOyZktOPzUSSZ9PQsOYz+3XqoGX74acrPld47msXNaviKmdFB1si
AY14n0w9oIOQTOLsB2+6ecQSYsQ9HBoaClT18PCwR2kaZrPZenKrc8T56KAp
1ZZxRgJ9v319fR61K37hxl++4Y03KTTi1F6x6s7OzoDf/PPSGdWOirkOetP8
fLhpFpJJbP0gQDNBBwESS2z9IEAzQQcBEgt+EMCc6qBzYtB+rCiO7lnRzi1f
uGI+3sU2Lh+AdgU/CGDKLo01Rwd9Xo/TYuggQOPADwJUxIpUNalq3NxwKbUk
H4D2AD8IAABJpr394Pj4eCqVcvq/OEMo5+np6Z6eHn07obs7byFKvru7e3Bw
MJJOmcPR1dW1trbWqtoB4KwQWz+4f4pVMTWnzriGR0dH+ui0sZri/uig6WNj
Y83XESd5+wi/zfYn3RqeJu883a/03B8tWthOyeVyk5OTLUne7k9l4t63GlFi
muJe/vz58xV3stbt7+8PVLst3GJOv1ln59hM3LXb5ctrX19f168aHQSAmsTW
D+aLDAwM7O7u7uzsaGR5eVn+6LmrVzQ9nU5vbW3ddPOI5qqptHMleeXtnixh
8/2gTX52dnZmZsb2UKz0ent7pYCbm5sa0XB0dFSzTPGhdc2VgdK3UF6U7ba4
mclvb29r387NzSl5CZmyXVlZkZzZ98HqK1BKmmX7DVFuGl9YWBgZGSkpx75c
PaiI6wep2lWjfaGQTKV2TiaT0XGakpG7X11dXVpa0r41Rdcp5ufntTNLytE+
1yroIADUJLZ+0BS7urAv+FJjaKeoSdRxviRGTZ8pvoBLTaIck1rjzSLlb2OT
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
8/l80MTio4PiyvHFmn3BP/qJ33/yW1+JKudqXM7fU1uLv3RPeTdAoXXQFF2h
/643jr/6Wfe66GBo4pYPQLvC+2TKqfasx9M//M7zTxOUecML997lnAZsAleP
L17Of/rR//HR8hOhml7tocV6dNAU79XxdqMSSi3gdHfogA6GJm75ALQrvE+m
nHI/WELh8PwzP3xQ0lB46PtXn3q8jtTqQpInaVYaGl65dOi9cJ06aDn5f9+s
8Fzhxz+kiZpVcZWzooMll8bcD0iWl9mgud4b4rPY5uQD0E7E1g8uLy/fER2B
qo6w3vjgPNTZ/D0QaOe3vPYSqt06Yqc3Ym7NZDxWbHI+AO1BbP0gAABAE4it
HwQAAGgC+EEAAEgy+EEAAEgy+EEAAEgy+EEAAEgy7e0HZ2dn+/r6gnb5FAeU
8/z8/MDAgDah1bmEQcmn0+nR0VHndUPNR3uPozsAqEl7+8GDg4PWNsWhOT4+
1lejzJeXl22PHmcL5a/kbW9cLUlge3s70FttS54ob1r4z8o74Qjn+t9L/ufy
OD/Emdj6wXuL6JBeGe7v73d1dcli9PT0aFY+n+/v79fcwcFB54Xe2gQtvLGx
UVLO+Ph4k3Xw2avP2eSVkvbt7u6u0tZ4d3e3Mtnc3NRILpdT8nt7e1pe26K5
2WxWkldemtrziYmJZuavfWiTt/UqW+15De1reXp7e+3bZZWYKT7zriMNKbWG
JeXoq1lcXAza7+TW1pZql37JyOuj3XWqVNVJW1Op1MLCgvOAvK19ampK33JJ
OVrFluOzXnQwxF7yPxcdhDgTZz8oyVBuptim2SlqV9VKq6m0zaAaOmmHMlfb
eFxkaGiopBC12C3xg1INCZxG1Erbd7msrKwoW22UTV57fmlpSYvJtijzo6Oj
8q6pCoWCJN5qfTNRMrYbESVspeTw8NBqjdU1JSzh1mK2ay19HB4eLilkfX1d
y+jLClq76tU3rmK14Y4X7uzsVC1WHG3nJvpaNXRqV4ZOCVpLH0PooPvNKk0Y
+mnzG/TimvJ8jO+XrEZSqc+5yCI0gdj6QdsU23HnvyDJU8smP2itk1paKaB9
A9t2EW1OSTkt0UHVKCNjr0sqAdtEK3npuHRQ8qePMoM2bTXaNnmnS0cHybq1
Xc1EactZW/FVho7FtscY1iRqAzOZjLZL39H2KRVLc/aDfyRqdldIQ7XH7EQd
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
MCAldT46OyoQ7nX9lDDswr2iHQm6TwD8gB8ECM3dd989Pj4u3VlaWgqxerRX
JCVbGxsbGpGYyhUWCoXu7u6g+cTtIilAE8APAoRme3u7q6trcHDwuatXQqwe
rehks1n9kWVOU6nU0dHRVJGg+aCDkEDwgwChOTg4kHDs7OyEWz1a0dnb28tk
Mr29vdJBecPFxcUQ+aCDkEDwgwAmrARIa7RWoVAIXWnoudWYm5ubmZkJnQ86
CAkEPwhgwkqA/jjhbhP1QzhJkiWs57/Mo/SQQPCDACaWVihu+QC0K/hBAIMO
AiQY/CCAQQcBEgx+EMDCpTGAZIIfBGgVcXN8MTTFAE0APwjQKuImOuggJBP8
IECriJvooIOQTPCDAK0ibqKDDkIywQ8CmBZJQCPeJ1MP6CAkE/wggImlBLQk
H26ahQSCHwQw6CBAgsEPAhh0ECDB4AcBTJkO2o8VxdE9q8653ichq+XjXWyE
2QIkBPwggIMjTM3RwXD5oIMA0YIfBCjHClBFv+Yxq8654fJpXLYACQE/CAAA
SQY/CAAASQY/CAAASQY/CAAAScbq4NLS0tjY2AwANIzp6elWp/AC4pYPQKuY
mJiYmpoqFAqbAAAAieTo6KjkMSKCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIBT/Hwg4slE=
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 34->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
/Yp+dtLU1NTY2JgS3/T0tDzR745kE5OTkxqv16Ghodiag3nQeM+9rfjb0ZCy
T7n1ceWDxjsfFy98yda14OWv/22wNVc+KC4/ux3fBO/+6NUL33zMa8v74Pj4
+KEH8DVe/+f6Sqb/fL3afxvfB/P5fNcNOjs7y/kdPgiQBpLkweM30LL+j2Es
ioeLi4tFV1LIAdU/6NX/ZWk8gnnQcvXSfowDpOeX5y/vPl3UlEMfNDauhj79
tpww+9uYIA59UBRePBfDo7Ut2tXBdlreB7Xb5WUnTpzQJ6Vw9Zo/Xj6Yy+Xs
v/3c3Jz9bnZoHtTnq9xm4oMAaaBJ7y966PhXnngset/+8hfuL+rSLW590Hin
5C5+eT2611z44kOHnhlx64NWWFW/59FWlDbS8j5ovO9vx44d0x9Xhuj/FYI5
USvSsvLEUh+cn5/v6+vb3z/kP83ggwDpoEnvL1puknqkS08+HvIbFRnlhcc+
qzRUrgXnPmiR58pHwoVdfPyRQ63Z4twHvyHs4gWtV2svd471/Kc/8cqZ068f
vHLo4lnwQR99RjSPPcohH1QM9CfJIrUrdnd3gz6oOTV+e3s7ZKXRFQJAjWil
PBjk6oX85We3lRDVySv1vPKVz7+680ThhV2FoPAFa+SDPrLgV7/21MW//suL
X/oLCZM5vvrMkyG+7FMjH/ymsBd2pUQ7ygrTrtPbK4FTgYeSKR8U/f399g8h
H5yc/MazNhT3tKxMMJgHNZzL5fyT5uVWGl0hANSIZsyD6lukdsWjdCCckAXt
QFWdZ6mwimuJp0rYyzPjEaX92MJiq/KFlXstHajqtSolIecH7elv/WMsLS3J
5qz161PT2dm5ublZKBSmpqaKzg9q5oGBAf/K2ZCVViUSAGpBM+ZBAOeU88Hl
5WV5XIeHwqCs0I7Xp2ZmZsZOKv296OnTp9Wa8mB3d3fOo9xKo6hyfoF8/S+f
r5EeACc0Yx4EcE61PfD4+HiSI9X+SivOgA8C1BryIICJ5YPz8/PJVxpltiQ3
iqnqti3Rd0LslVZ7GxlsEeoAeRDApNsH60YK41ja9EBLQh4EMKl83kT9wQch
m5AHAQw+6IEPQjYhDwKYVPpgQ/SErLQhloQPQh0gDwIYfDACadMD4AryoNjb
29va2kpyoXqNOHv2rBXmP8cqJUiS/nNSKMx4d4C/fk/sKoXhgxVJmx4AV5AH
jXejtqGhoZDbljaE1dVVCbMXa9f0/mPVIosZGRmZnZ3VHotyj7s6Mz4+3tZ2
pOgBKBXBByuSNj0Armi6PKhOuO8G+mBubGzs7+9PTEz09vaqT7a39Zienj51
6pTe5nI5/9lPCwsLWqS/v//Qm21ubm4m90E17gsz3m0nx8bGJGx4eNh2y5OT
k9rVAwMDPT09WqNdSl9CrLCQe5S1t7eXe2ZBRfL5fHCPqR2J0cZKmOzM3kdO
b7VbJEzz2PtCB/dquTtFa54ot1Qth5q1qrQ3bDsaY4VpR1lhnZ2dS0tLdjZt
iN0cfSvQPPrqUnoz2LW1NRl0d3e3nTk6KfRBAKgPzZsHl5eX7cN85Xr2zv/y
RPWoMkr7/F9z42HBxrvzv3r1Aw/19qX9p5Z1lQcXFxdtfJPLnDx50nh30bRS
1b1Lhga2trbUsRvvuTxCqiS1nKeob5fm5MJmPDTgu7Asxm61XrXTjBdCJVsD
cnANS5j2lWylqCmN1yL6miFbTy5M+8Rei6d9YoVJp705Z1dXl92HvjDtCu09
CdCfrCiNypc1VZPwwXjwe1HIJk2XBy3qLdVn2shgO0Y7Xh2gwo66dHWbdoz1
QW2jZpMZDXuUPiXBlQ/KcJXsjHdbDP/RA9JpPU4+6Ic+O0a5Ruu1qqxXFqE/
kLY0yVMwLHIT6yPGS5f29JmEKXAZzwft6VGtyHquDMjfXRo49Pbj2snWzZOg
7zD2u4FcTCu1I+Vi1nwlz65aU627aa8O30B/1mBT2kD7n4APxgMfhGzSjHlw
d3dXiUav9q36cN/X1G2qw5QP+odD7efIzxflcOKDshIJ8J9aLqezBzNlzfZO
y/JB36CtD8p0Tp8+Xa5BTZKrJjdB7Q2tyD+yqlVbH/StR9tu96fvg9rD/reL
EPxtjIf+6/zdbhOxFabvOVbG9f15Q6rcTZ4oEy/3TBDFQ3sEVV6pLxi1eO6S
W9LWyeODkE2aLg+qc1NHt7CwsOGht/aJAMpZkx7GO1Lq+6ANZXIidfinTp2S
Dc3OzhZ13Wtra0olchzthCTPXVI3/tDnHlYfbn15cXFRSUprHBsbsy6s4FPk
g/IadfXaBI33n29u0Z9G86iRez1iC7Pbrv0jVfY5Qdo/UqKtlgfZm0X7PqhX
a0Bar/aqXbU9ZOqztLSkpfSq8bKbeKqM97VBwvSXssKMt3/UpqTqTyx5xoul
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
FEVRFEVRFEVRFEVRFEVRqv8PWnwv7A==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}], 35->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
JA==
         "], {{0, 375.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 375},
       ImageSizeRaw->{600., 375.},
       PlotRange->{{0, 600.}, {0, 375.}}]}, Dynamic[Image`Utilities`i$$]], 
     PaneBox[
      DynamicBox[FEPrivate`Which[
        And[
        Image`InteractiveDump`play$$ === False, Image`InteractiveDump`hover$$ === 
         True], 
        PaneBox[
         GraphicsBox[{
           Thickness[0.020833333333333332`], {
            FaceForm[{
              RGBColor[1., 1., 1.], 
              Opacity[1]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
             24., 1.4794999999999998`}, {11.562000000000001`, 
             1.4794999999999998`}, {1.4789999999999992`, 11.5625}, {
             1.4789999999999992`, 24.000500000000002`}, {1.4789999999999992`, 
             36.4375}, {11.562000000000001`, 46.5215}, {24., 46.5215}, {
             36.438, 46.5215}, {46.521, 36.4375}, {46.521, 
             24.000500000000002`}, {46.521, 11.5625}, {36.438, 
             1.4794999999999998`}, {24., 1.4794999999999998`}}}]}, {
            FaceForm[{
              RGBColor[
              0.8196078431372549, 0.8196078431372549, 0.8196078431372549], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
              4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0BFg7tYjfPfQ/+b9841bk7Z7k6nD8BSjdBxWH8
/2BgDucvkNK/qyLm5ADTnzHxbY09q7sDzHwYH6YOxvcx73RMQBKH8WHmw/gw
+2HqYO5Ddz+MD6Ya3B3qs/aUTJ6hBudD5D/Yu3TnPP8d6QTnw+yD8WH6YDRE
/j3cfBg/4ekFpdtAc1DksdiLYj6QD7Mfph/VfQj3AwCFYKZd
             "]]}, {
            FaceForm[{
              RGBColor[
              0.4235294117647059, 0.7176470588235294, 0.9882352941176471], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{15., 9.625}, {15., 
             38.375}, {38., 24.}}}]}}, AspectRatio -> Automatic, ImageSize -> 
          Automatic, PlotRange -> {{0., 48.}, {0., 48.}}], ImageSize -> 40], 
        And[
        Image`InteractiveDump`play$$ === True, Image`InteractiveDump`hover$$ === 
         True], 
        PaneBox[
         GraphicsBox[{
           Thickness[0.020833333333333332`], {
            FaceForm[{
              RGBColor[1., 1., 1.], 
              Opacity[1]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
             24., 1.4794999999999998`}, {11.562000000000001`, 
             1.4794999999999998`}, {1.4789999999999992`, 11.5625}, {
             1.4789999999999992`, 24.000500000000002`}, {1.4789999999999992`, 
             36.4375}, {11.562000000000001`, 46.5215}, {24., 46.5215}, {
             36.438, 46.5215}, {46.521, 36.4375}, {46.521, 
             24.000500000000002`}, {46.521, 11.5625}, {36.438, 
             1.4794999999999998`}, {24., 1.4794999999999998`}}}]}, {
            FaceForm[{
              RGBColor[
              0.4235294117647059, 0.7176470588235294, 0.9882352941176471], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
              1, 0}, {0, 1, 0}}}, {{{27., 13.}, {33., 13.}, {33., 35.}, {27., 
             35.}}, {{15., 35.}, {21., 35.}, {21., 13.}, {15., 13.}}}]}, {
            FaceForm[{
              RGBColor[
              0.8196078431372549, 0.8196078431372549, 0.8196078431372549], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
              4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0BFg7tYjfPfQ/+b9841bk7Z7k6nD8BSjdBxWH8
/2BgDucvkNK/qyLm5ADTnzHxbY09q7sDzHwYH6YOxvcx73RMQBKH8WHmw/gw
+2HqYO5Ddz+MD6Ya3B3qs/aUTJ6hBudD5D/Yu3TnPP8d6QTnw+yD8WH6YDRE
/j3cfBg/4ekFpdtAc1DksdiLYj6QD7Mfph/VfQj3AwCFYKZd
             "]]}}, AspectRatio -> Automatic, ImageSize -> Automatic, 
          PlotRange -> {{0., 48.}, {0., 48.}}], ImageSize -> 40], 
        Image`InteractiveDump`play$$ === False, 
        PaneBox[
         GraphicsBox[{
           Thickness[0.020833333333333332`], {
            FaceForm[{
              RGBColor[1., 1., 1.], 
              Opacity[0.8]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
             24., 1.4794999999999998`}, {11.562000000000001`, 
             1.4794999999999998`}, {1.4789999999999992`, 11.5625}, {
             1.4789999999999992`, 24.000500000000002`}, {1.4789999999999992`, 
             36.4375}, {11.562000000000001`, 46.5215}, {24., 46.5215}, {
             36.438, 46.5215}, {46.521, 36.4375}, {46.521, 
             24.000500000000002`}, {46.521, 11.5625}, {36.438, 
             1.4794999999999998`}, {24., 1.4794999999999998`}}}]}, {
            FaceForm[{
              RGBColor[
              0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
              4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0BFg7tYjfPfQ/+b9841bk7Z7k6nD8BSjdBxWH8
/2BgDucvkNK/qyLm5ADTnzHxbY09q7sDzHwYH6YOxvcx73RMQBKH8WHmw/gw
+2HqYO5Ddz+MD6Ya3B0+XfJNEpihBudD5D/Yu3TnPP8d6QTnw+yD8euz9pRM
BuqD6YfIv4ebD+MnPL2gdBtoDoo80B6YfhgfxXwgH2Y/TD+q+xDuBwBXkKYL

             "]]}, {
            FaceForm[{
              RGBColor[
              0.2196078431372549, 0.5019607843137255, 0.7725490196078432], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{15., 9.625}, {15., 
             38.375}, {38., 24.}}}]}}, AspectRatio -> Automatic, ImageSize -> 
          Automatic, PlotRange -> {{0., 48.}, {0., 48.}}], ImageSize -> 40], 
        True, ""],
       ImageSizeCache->{4., {0., 0.}}],
      Alignment->Center,
      ImageSize->{600, 375}]}],
    EventHandlerTag[{{"MouseClicked", 1} :> 
      FEPrivate`Set[Image`InteractiveDump`play$$, 
        Not[Image`InteractiveDump`play$$]], "MouseEntered" :> 
      FEPrivate`Set[Image`InteractiveDump`hover$$, True], "MouseExited" :> 
      FEPrivate`Set[Image`InteractiveDump`hover$$, False], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
   BaseStyle->{ContextMenu -> {
       MenuItem["Play/Pause", 
        KernelExecute[
        Image`InteractiveDump`play$$ = Not[Image`InteractiveDump`play$$]], 
        MenuEvaluator -> Automatic], 
       MenuItem["Stop", 
        KernelExecute[
        Image`InteractiveDump`play$$ = False; Image`Utilities`i$$ = 1], 
        MenuEvaluator -> Automatic], Delimiter, 
       Menu["Frame Rate", {
         MenuItem["8", 
          KernelExecute[Image`InteractiveDump`rate$$ = 8], MenuEvaluator -> 
          Automatic], 
         MenuItem["16", 
          KernelExecute[Image`InteractiveDump`rate$$ = 16], MenuEvaluator -> 
          Automatic], 
         MenuItem["24", 
          KernelExecute[Image`InteractiveDump`rate$$ = 24], MenuEvaluator -> 
          Automatic], 
         MenuItem["30", 
          KernelExecute[Image`InteractiveDump`rate$$ = 30], MenuEvaluator -> 
          Automatic], 
         MenuItem["50", 
          KernelExecute[Image`InteractiveDump`rate$$ = 50], MenuEvaluator -> 
          Automatic], 
         MenuItem["60", 
          KernelExecute[Image`InteractiveDump`rate$$ = 60], MenuEvaluator -> 
          Automatic]}]}, Selectable -> False},
   DynamicModuleValues:>{}],
  BoxForm`AnimatedImageTag[
  FrameRate -> 1., AnimationRepetitions -> 1]]], "Output",
 CellChangeTimes->{{3.8837391180207043`*^9, 3.8837391623466053`*^9}, 
   3.883739224074245*^9, 3.8838120066927147`*^9, 3.883822151129438*^9, 
   3.883827940554743*^9, 3.883831609508576*^9, 3.8838398736236134`*^9, 
   3.88384112827532*^9, 3.8840133711841927`*^9, 3.884014005097884*^9, 
   3.884014187027883*^9, 3.884015833981637*^9, 3.884023862127831*^9, 
   3.884024659086116*^9, 3.884024816928005*^9, 3.884025436222177*^9, 
   3.884073469499502*^9},
 CellLabel->
  "Out[2674]=",ExpressionUUID->"72a67464-308b-42d8-b255-92e883f72faa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1719., 703.5},
WindowMargins->{{0.5, Automatic}, {Automatic, 16}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.7 Inherited,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e52760b8-8500-448b-90cc-ef24d0d0a26e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 233, 4, 102, "Title",ExpressionUUID->"a51a1c00-1c1e-4809-99a7-9b45151e9214"],
Cell[816, 28, 317, 5, 53, "Text",ExpressionUUID->"c34d2386-44e3-4d12-8bcd-6e0adf0c59d5"],
Cell[1136, 35, 361, 8, 54, "Input",ExpressionUUID->"4fb6ff86-df9c-4786-aab4-c5b29d03d1f8"],
Cell[1500, 45, 239, 4, 53, "Text",ExpressionUUID->"c91ba40d-3b6c-42cd-bdae-10c38124ceab"],
Cell[1742, 51, 1601, 27, 54, "Input",ExpressionUUID->"df0ec05c-7c65-422e-9507-d63ba1cb5d39"],
Cell[3346, 80, 513, 8, 53, "Text",ExpressionUUID->"5f37c9ba-3582-4916-b8a6-b00b0ad21432"],
Cell[3862, 90, 1227, 18, 31, "Input",ExpressionUUID->"fbda1cba-5510-430b-ae7f-72219c40e12c"],
Cell[5092, 110, 676, 13, 198, "Text",ExpressionUUID->"81bad29d-8522-4e31-bd45-0ec214a12116"],
Cell[5771, 125, 15967, 330, 1177, "Input",ExpressionUUID->"786b6905-0c83-4785-9309-62848193302e"],
Cell[21741, 457, 3258, 87, 346, "Text",ExpressionUUID->"5f86b73e-5906-4bd6-a372-9b5e7579b57a"],
Cell[25002, 546, 411, 8, 53, "Text",ExpressionUUID->"e1220042-e501-4a63-aad2-9ca6f469a27d"],
Cell[25416, 556, 8915, 242, 198, "Input",ExpressionUUID->"39334818-453d-4215-b01f-6ad2ed45ee64"],
Cell[34334, 800, 481, 10, 77, "Text",ExpressionUUID->"7dae8c7a-ebe8-4914-93d1-8e3024725605"],
Cell[34818, 812, 536, 10, 31, "Input",ExpressionUUID->"797106b3-7c71-46e2-9680-68c6566ce39f"],
Cell[35357, 824, 865, 18, 77, "Text",ExpressionUUID->"b8508c3c-e271-4c93-8030-70d503509a3f"],
Cell[36225, 844, 1325, 29, 100, "Input",ExpressionUUID->"d6f1e258-c049-4570-8952-bb2893609008"],
Cell[CellGroupData[{
Cell[37575, 877, 3574, 93, 274, "Input",ExpressionUUID->"b16782ff-ea3f-4153-83cb-c675797578e7"],
Cell[41152, 972, 3501, 50, 49, "Output",ExpressionUUID->"7eb2415a-6012-4a9e-82e7-691b248717c6"],
Cell[44656, 1024, 25701, 628, 134, "Output",ExpressionUUID->"ee3a0edc-2238-4421-ab19-532277c9c1fa"]
}, Open  ]],
Cell[70372, 1655, 481, 9, 53, "Text",ExpressionUUID->"153e59e0-45fd-472c-85cb-312dbaef9e54"],
Cell[CellGroupData[{
Cell[70878, 1668, 209, 4, 31, "Input",ExpressionUUID->"78aba0aa-fe82-48a6-bbd6-1efbf05626d6"],
Cell[71090, 1674, 7530, 157, 153, "Output",ExpressionUUID->"0de1e691-8b25-4338-ad82-ed25e59abbac"]
}, Open  ]],
Cell[78635, 1834, 2565, 38, 270, "Text",ExpressionUUID->"bb277a5a-5a35-4034-9157-64bf18989e78"],
Cell[CellGroupData[{
Cell[81225, 1876, 420, 6, 55, "Subtitle",ExpressionUUID->"b537fdb9-8ce6-4848-af9b-b8dda8bf18d3"],
Cell[81648, 1884, 2643, 72, 121, "Input",ExpressionUUID->"065d7afa-e2b8-4625-8d54-f6c53ef06fe3"],
Cell[84294, 1958, 336, 7, 53, "Text",ExpressionUUID->"a3da6556-c143-4f6a-a982-6f24d4bd76fe"],
Cell[84633, 1967, 5310, 153, 310, "Input",ExpressionUUID->"0811401a-a6c8-4b24-9b7c-3c89f628ccea"],
Cell[89946, 2122, 7262, 164, 601, "Input",ExpressionUUID->"0a7225d4-f3e3-4f53-ae7e-0b8c52676e74"],
Cell[97211, 2288, 4143, 90, 318, "Input",ExpressionUUID->"148ece78-3408-4785-82fe-e9d700a8bfb2"],
Cell[CellGroupData[{
Cell[101379, 2382, 512, 9, 56, "Subsection",ExpressionUUID->"52f3a935-6289-4dc5-91d6-26daa61c56f2"],
Cell[CellGroupData[{
Cell[101916, 2395, 5252, 143, 339, "Input",ExpressionUUID->"0da992e8-3315-43a0-8d59-4b6929991a1d"],
Cell[107171, 2540, 69272, 1545, 226, "Output",ExpressionUUID->"4f130ccb-ede4-45e4-893c-86d19f834f26"]
}, Open  ]],
Cell[176458, 4088, 243, 4, 53, "Text",ExpressionUUID->"2cdcbd35-c15a-47d0-934d-3ac26b9a3ac0"],
Cell[176704, 4094, 4162, 93, 123, "Input",ExpressionUUID->"78a44d5b-d75d-4c68-96ab-221b2b7e5a73"],
Cell[180869, 4189, 9527, 197, 351, "Input",ExpressionUUID->"f60c26c3-9869-49be-9a0e-e82ee5d8c8a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190433, 4391, 306, 4, 69, "Section",ExpressionUUID->"803e1800-72f5-4633-89e2-a1051e58802e"],
Cell[190742, 4397, 209, 4, 36, "Text",ExpressionUUID->"5100e1ec-aa1b-4755-8651-38f0df16479e"],
Cell[190954, 4403, 1998, 50, 105, "Input",ExpressionUUID->"03e5b243-f124-4461-8871-1233f93d5b42"],
Cell[CellGroupData[{
Cell[192977, 4457, 261, 5, 31, "Input",ExpressionUUID->"b2885880-841b-44f4-a3b8-5ce6b7118820"],
Cell[193241, 4464, 20409, 463, 229, "Output",ExpressionUUID->"1b864bff-9412-4681-af80-1404927682f7"]
}, Open  ]],
Cell[213665, 4930, 550, 11, 54, "Input",ExpressionUUID->"78af2f09-6876-429d-af29-8eea1e55846f"],
Cell[214218, 4943, 856, 21, 94, "Input",ExpressionUUID->"08ebf0a3-cdb9-462f-96b8-98669c09e122"],
Cell[CellGroupData[{
Cell[215099, 4968, 219, 4, 31, "Input",ExpressionUUID->"28a15f5f-2ddf-4860-b285-3ede449cffac"],
Cell[215321, 4974, 4517, 89, 225, "Output",ExpressionUUID->"515b12c7-55f4-4318-a814-1bdec245b6c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219875, 5068, 3834, 80, 188, "Input",ExpressionUUID->"4a2604f4-2a7c-4e87-bf6a-3f9e80b8ab32"],
Cell[223712, 5150, 1540, 23, 27, "Print",ExpressionUUID->"974d8859-4f6f-495c-84f8-e86f58d3e1a6"],
Cell[225255, 5175, 16176, 351, 244, "Output",ExpressionUUID->"14610248-798c-4405-a66f-2fe54d0cdc27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241468, 5531, 3849, 93, 254, "Input",ExpressionUUID->"45308944-57f1-4101-8f8a-039f7278ac1c"],
Cell[245320, 5626, 776, 12, 27, "Print",ExpressionUUID->"f6a0fe54-7229-40e1-8727-b8c405055aa7"],
Cell[246099, 5640, 17542, 412, 244, "Output",ExpressionUUID->"e775f870-0ea4-4658-8601-32395e0c311c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263690, 6058, 450, 8, 73, "Section",ExpressionUUID->"2346cce6-bd8a-4ae4-88e1-f897966b2804"],
Cell[264143, 6068, 21463, 450, 815, "Input",ExpressionUUID->"87274038-e121-4cf6-9854-097f3a94bf01"],
Cell[CellGroupData[{
Cell[285631, 6522, 387, 7, 56, "Subsection",ExpressionUUID->"b5ebd345-aa7c-4daf-9611-4bab62c48860"],
Cell[286021, 6531, 2437, 53, 230, "Input",ExpressionUUID->"d3ef4b57-c915-44e7-a2dd-e988c9b334d5"],
Cell[288461, 6586, 625, 16, 31, "Input",ExpressionUUID->"d7c1c783-cec8-462f-838c-0b4172fe2dec"],
Cell[289089, 6604, 7427, 168, 568, "Input",ExpressionUUID->"b51ebd2d-ec91-4b53-a690-08d9582fcee9"],
Cell[296519, 6774, 3391, 66, 163, "Input",ExpressionUUID->"f0cc4e96-9a39-48b4-b95c-b540a2ea63f5"],
Cell[CellGroupData[{
Cell[299935, 6844, 422, 10, 54, "Input",ExpressionUUID->"970376b7-56e7-4847-9e0e-04bb46e278ec"],
Cell[300360, 6856, 46433, 947, 244, "Output",ExpressionUUID->"750e3487-8c95-4215-ae82-cd11535ed625"],
Cell[346796, 7805, 76708, 1499, 244, "Output",ExpressionUUID->"09f777ba-d5c1-46b2-92dd-6613c2ebbcf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423541, 9309, 303, 8, 54, "Input",ExpressionUUID->"5bd1716e-847a-4f1e-aae9-c9bd7fcc35a6"],
Cell[423847, 9319, 57280, 1215, 244, "Output",ExpressionUUID->"606463c2-9668-4253-beae-1f3e4d2477ca"],
Cell[481130, 10536, 102127, 2128, 244, "Output",ExpressionUUID->"fff6125b-69a0-4bf3-b8a7-4f38f2eda3de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[583294, 12669, 324, 8, 31, "Input",ExpressionUUID->"24a4593d-398c-4db6-9377-2ebeab0ccedb"],
Cell[583621, 12679, 45017, 918, 254, "Output",ExpressionUUID->"ea97f29e-d7fc-408b-b644-2e838deb260d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[628699, 13604, 237, 4, 69, "Section",ExpressionUUID->"c3f2ea48-ae1d-4efa-8bf6-1368070e1557"],
Cell[628939, 13610, 2700, 68, 339, "Input",ExpressionUUID->"83c7d16c-2505-409f-bf3e-e1247161be48"],
Cell[631642, 13680, 5422, 134, 457, "Input",ExpressionUUID->"2dc02453-c30c-4171-84c2-3faa7e72a7d0"],
Cell[CellGroupData[{
Cell[637089, 13818, 2200, 44, 107, "Input",ExpressionUUID->"453edd7e-2e6c-43ba-9600-7935556a2771"],
Cell[639292, 13864, 655655, 10968, 427, "Output",ExpressionUUID->"72a67464-308b-42d8-b255-92e883f72faa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


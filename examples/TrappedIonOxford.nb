(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1124301,      21168]
NotebookOptionsPosition[   1071517,      20222]
NotebookOutlinePosition[   1117866,      21077]
CellTagsIndexPosition[   1117823,      21074]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Trapped-Ions Oxford/Hub  virtual device", "Title",
 CellChangeTimes->{{3.866179584565133*^9, 3.866179602585011*^9}, {
  3.866740794334939*^9, 
  3.8667408151039267`*^9}},ExpressionUUID->"a51a1c00-1c1e-4809-99a7-\
9b45151e9214"],

Cell[TextData[StyleBox["Set environment, such as threads, gpu, etc.",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.8528844215679693`*^9, 3.8528844367050333`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"c34d2386-44e3-4d12-8bcd-6e0adf0c59d5"],

Cell[BoxData[{
 RowBox[{"SetEnvironment", "[", 
  RowBox[{"\"\<OMP_NUM_THREADS\>\"", "\[Rule]", "\"\<8\>\""}], "]"}], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.872921462633623*^9},
 CellLabel->
  "In[345]:=",ExpressionUUID->"4fb6ff86-df9c-4786-aab4-c5b29d03d1f8"],

Cell[TextData[StyleBox["Load the QuESTLink",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"c91ba40d-3b6c-42cd-bdae-10c38124ceab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Import", "[", "\"\</home/cica/programs/QuESTlink/Link/QuESTlink.m\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateLocalQuESTEnv", "[", "\"\<quest_link_cpu\>\"", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.82497505062926*^9, 3.8249750506297073`*^9}, 
   3.824994043627574*^9, 3.825001607792643*^9, {3.825001692867886*^9, 
   3.825001693910748*^9}, 3.825005541672139*^9, {3.8257703632332573`*^9, 
   3.8257703928999557`*^9}, {3.8257705549908867`*^9, 
   3.8257705572226887`*^9}, {3.827395402084569*^9, 3.827395414565299*^9}, 
   3.8273959879208593`*^9, {3.8273960394479303`*^9, 3.8273960853619223`*^9}, {
   3.8273961168062162`*^9, 3.827396123715522*^9}, {3.827396318549856*^9, 
   3.827396412632536*^9}, {3.8274045827011538`*^9, 3.82740458379325*^9}, {
   3.8278173564819393`*^9, 3.827817361228321*^9}, {3.830976734134877*^9, 
   3.8309767494625072`*^9}, {3.834480282684927*^9, 3.834480283538302*^9}, {
   3.834480426528635*^9, 3.834480438344689*^9}, {3.840643429673587*^9, 
   3.84064343214264*^9}, {3.840644090065632*^9, 3.840644110294639*^9}, {
   3.841376639126837*^9, 3.841376652890356*^9}, {3.852805051225027*^9, 
   3.852805051940732*^9}, 3.852866941489101*^9, 3.863433244574464*^9, {
   3.863444417946168*^9, 3.8634444207524557`*^9}, {3.863758485466724*^9, 
   3.8637585009226294`*^9}, {3.863763334072833*^9, 3.8637633356047773`*^9}, {
   3.875107822325452*^9, 3.8751078327815647`*^9}, {3.8833829933758574`*^9, 
   3.883382993547421*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"df0ec05c-7c65-422e-9507-d63ba1cb5d39"],

Cell[TextData[StyleBox["Virtual quantum devices, loaded after questlink",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.8406416900502462`*^9, 3.840641698118609*^9}, {3.840641813367085*^9, 
  3.840641822804656*^9}, {3.853839759327433*^9, 3.853839762140107*^9}, {
  3.86344845184791*^9, 3.863448455324099*^9}, {3.8637680860803547`*^9, 
  3.863768086918572*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"5f37c9ba-3582-4916-b8a6-b00b0ad21432"],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../vqd.wl\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.840641143565943*^9, 3.840641172251192*^9}, {
   3.852799583306651*^9, 3.85279959973236*^9}, 3.8626416092550993`*^9, {
   3.8634335183180933`*^9, 3.863433525482596*^9}, {3.863433568660131*^9, 
   3.863433569874107*^9}, {3.863433692497489*^9, 3.863433694465293*^9}, {
   3.863445057138888*^9, 3.86344507880478*^9}, {3.863445347209435*^9, 
   3.8634453507921267`*^9}, {3.863445650432852*^9, 3.863445652815689*^9}, {
   3.863445897019453*^9, 3.8634458974688377`*^9}, {3.86344607759472*^9, 
   3.863446078099331*^9}, {3.863446143635272*^9, 3.863446143966124*^9}, {
   3.863446177367778*^9, 3.86344617796842*^9}, {3.8634467623389387`*^9, 
   3.863446816486045*^9}, {3.863446923713131*^9, 3.863446924990855*^9}, {
   3.863447604132453*^9, 3.8634476320572042`*^9}, {3.863448157317191*^9, 
   3.863448185412036*^9}, {3.86344848550739*^9, 3.863448486307929*^9}, {
   3.863730635263914*^9, 3.863730645543404*^9}, {3.863730806825498*^9, 
   3.863730825085904*^9}, {3.864798306500605*^9, 3.864798308030095*^9}, {
   3.864808339041327*^9, 3.864808339281568*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"fbda1cba-5510-430b-ae7f-72219c40e12c"],

Cell[TextData[{
 "Time unit : \[Mu]s\nFrequency unit: MHz\n\nInteresting thing to put in \
paper:\n",
 StyleBox["The total time\nTime profile\nBottleneck: dominant contribution of \
noise",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.867237179837118*^9, 3.867237192179912*^9}, {
  3.8836481660443087`*^9, 3.883648173728076*^9}, {3.883648228299481*^9, 
  3.883648255571145*^9}, {3.883648313940173*^9, 3.883648319153202*^9}, {
  3.883648977941886*^9, 3.883648984144506*^9}, {3.883653712028092*^9, 
  3.883653736465776*^9}, {3.883653772833355*^9, 3.883653796508432*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"81bad29d-8522-4e31-bd45-0ec214a12116"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TrappedIonOxford", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "the", " ", "nodes", " ", "name", " ", "together", " ", "with", " ", 
      "the", " ", "total", " ", "qubits", " ", "on", " ", "each", " ", 
      "node"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Nodes", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "4"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"time", " ", "and", " ", "duration", " ", "unit", " ", 
       RowBox[{"\[Mu]s", ":", " ", 
        RowBox[{"3000", " ", "s"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"T1", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         RowBox[{"3", "*", 
          SuperscriptBox["10", "9"]}]}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"3", "*", 
          SuperscriptBox["10", "9"]}]}]}], "    ", "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Simulating", " ", "T2", "*", " ", "error", " ", "by", " ", "gaussian", 
       " ", 
       RowBox[{"decay", ":", " ", 
        RowBox[{"10", " ", "ms"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"T2s", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         SuperscriptBox["10", "5"]}], ",", "  ", 
        RowBox[{"\"\<Bob\>\"", "->", 
         SuperscriptBox["10", "5"]}]}], "   ", "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Switch", " ", 
       RowBox[{"on", "/", "off"}], " ", "the", " ", "standard", " ", 
       "passive", " ", 
       RowBox[{"noise", ":", " ", 
        RowBox[{
        "Amplitude", " ", "damping", " ", "T1", " ", "and", " ", "dephasing", 
         " ", "T2"}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"StdPassiveNoise", "->", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Duration", " ", "for", " ", "moving", " ", 
        RowBox[{"operations", ":", " ", "Split"}]}], ",", " ", "Combine", ",",
        " ", 
       RowBox[{
        RowBox[{"and", " ", "physical", " ", "swap"}], ";", " ", 
        RowBox[{"they", " ", "have", " ", "zero", " ", "error"}]}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DurMove", "->", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", " ", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"Shutl", "->", "25"}], ",", " ", 
           RowBox[{"Splz", "->", "50"}], ",", " ", 
           RowBox[{"Comb", "->", "50"}], ",", " ", 
           RowBox[{"SWAPLoc", "->", "10"}]}], " ", "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"Shutl", "->", "25"}], ",", " ", 
           RowBox[{"Splz", "->", "50"}], ",", " ", 
           RowBox[{"Comb", "->", "50"}], ",", " ", 
           RowBox[{"SWAPLoc", "->", "10"}]}], " ", "|>"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"fidelity", " ", "of", " ", 
        RowBox[{"preparation", "/", "initialisation"}]}], ";", " ", 
       RowBox[{
       "initialisation", " ", "is", " ", "done", " ", "by", " ", "amplitude", 
        " ", "damping"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FidInit", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.9999"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.9998"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"DurInit", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "20"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "20"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Readout", " ", "error", " ", "includes", " ", "bitflip", " ", "and", 
        " ", "scattering", "\[IndentingNewLine]", "Bitflip", " ", "error", 
        " ", "represents", " ", "symmetric", " ", "error", " ", "on", " ", 
        "both", " ", "0", " ", "and", " ", "1", " ", "readout", "  ", 
        "\[IndentingNewLine]", "Amplitude", " ", "damping", " ", 
        RowBox[{"(", 
         RowBox[{"change", " ", "to", " ", "depol"}], ")"}], " ", 
        "represents", " ", "scattering", " ", "error", " ", "affecting", " ", 
        "the", " ", "neighborhood", " ", "qubits", " ", 
        RowBox[{"(", 
         RowBox[{"in", " ", "the", " ", "same", " ", "zone"}], ")"}]}], ":", 
       " ", 
       RowBox[{
       "collapsing", " ", "the", " ", "superposition", " ", "into", " ", 
        TemplateBox[{"0"},
         "Ket"]}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DurRead", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "50"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "50"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BFProb", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"delete", " ", "this"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ScatProb", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.05"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.05"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"Fidelity", " ", "of", " ", "single", " ", "x"}], "-", " ", 
        RowBox[{"and", " ", "y"}], "-", " ", "rotations"}], ";", " ", 
       RowBox[{"z", "-", 
        RowBox[{"rotation", " ", "is", " ", "instaneous", " ", 
         RowBox[{"(", 
          RowBox[{"noiseless", ",", " ", "virtual"}], ")"}], 
         "\[IndentingNewLine]", 
         RowBox[{"future", ":", 
          RowBox[{
          "Set", " ", "manually", " ", "the", " ", "error", " ", 
           "coefficient", " ", "instead", " ", "of", " ", "setting", " ", 
           "the", " ", "fidelity", " ", "at", " ", "the", " ", "first", " ", 
           RowBox[{"place", ".", "\[IndentingNewLine]", "Future"}]}], ":", 
          " ", 
          RowBox[{"off", "-", 
           RowBox[{
           "resonant", " ", "oscillation", " ", "in", " ", "the", " ", "same",
             " ", "zone"}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FidSingleXY", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.99999"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.99999"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"fraction", " ", "of", " ", 
       RowBox[{"depolarising", ":", 
        RowBox[{
         RowBox[{"dephasing", " ", "noise", " ", "of", " ", "the", " ", "x"}],
          "-", " ", 
         RowBox[{"and", " ", "y"}], "-", " ", "rotations"}]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"EFSingleXY", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Frequency", " ", "unit", " ", "is", " ", "MHz"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Rabi", " ", "frequency", " ", "on", " ", "single", " ", "rotations", 
       " ", "in", " ", "MHz"}], "  ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"RabiFreq", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "10"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "10"}]}], " ", "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Frequency", " ", "of", " ", "CZ", " ", "operation"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"FreqCZ", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.1"}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", "0.1"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Fidelity", " ", "of", " ", "controlled"}], "-", 
       RowBox[{"Z", " ", "operation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"FidCZ", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", "0.999"}], ",", " ", 
        RowBox[{"\"\<Bob\>\"", "->", "0.999"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"add", " ", "a", " ", "bit", " ", "of", " ", "bit"}], "-", 
       RowBox[{"flip", ":", " ", 
        RowBox[{
        "small", " ", "fraction", " ", "of", " ", "population", " ", "is", 
         " ", "depolarised"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"EFCZ", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alice\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], ",", 
        RowBox[{"\"\<Bob\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "frequency", " ", "of", " ", "remote", " ", "entanglement", " ", "MHz", 
       "\[IndentingNewLine]", "initial", " ", "state", " ", "also", " ", 
       "heralded", " ", 
       RowBox[{"entanglement", "."}]}], "\[IndentingNewLine]", " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"FreqEnt", "->", "0.1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"fidelity", " ", "of", " ", "remote", " ", "entanglement"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FidEnt", "->", "0.95"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"fraction", " ", "of", " ", 
       RowBox[{"noise", ":", " ", "depolarizing", ":", "dephasing"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"EFEnt", "->", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "\[IndentingNewLine]", "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.866741525798813*^9, 3.8667415268823643`*^9}, {
   3.866741663432423*^9, 3.866741665522397*^9}, {3.866741745552545*^9, 
   3.86674175266329*^9}, {3.8667951940122232`*^9, 3.866795264671464*^9}, {
   3.86679558066088*^9, 3.866795620210507*^9}, {3.866795751852192*^9, 
   3.866795773983354*^9}, {3.866795889141552*^9, 3.866795931399184*^9}, 
   3.8667960054150743`*^9, {3.866796238217458*^9, 3.866796387720312*^9}, {
   3.866797546811494*^9, 3.8667975863855867`*^9}, {3.866797868437003*^9, 
   3.866797925147974*^9}, {3.866804302073353*^9, 3.8668043033454514`*^9}, {
   3.8668049823176613`*^9, 3.866804997766453*^9}, {3.8668054954071693`*^9, 
   3.866805501412159*^9}, {3.8672267922453127`*^9, 3.867226826078993*^9}, {
   3.86722755102808*^9, 3.867227619738082*^9}, {3.8672276764652348`*^9, 
   3.8672277171831093`*^9}, {3.8672278717818413`*^9, 3.867227877110051*^9}, {
   3.867228493899407*^9, 3.8672285328403187`*^9}, {3.867229396481929*^9, 
   3.8672293983037024`*^9}, 3.867235278678097*^9, {3.867235796126501*^9, 
   3.867235845448059*^9}, {3.867237137950498*^9, 3.8672371695811872`*^9}, {
   3.8672372036357193`*^9, 3.8672372235594378`*^9}, {3.867237623562272*^9, 
   3.867237643629908*^9}, {3.867237899531828*^9, 3.8672379111048193`*^9}, {
   3.8672385761871433`*^9, 3.867238580773076*^9}, {3.869213991025598*^9, 
   3.86921401005344*^9}, 3.869214111626649*^9, {3.86921415472738*^9, 
   3.869214186857623*^9}, {3.869214724170225*^9, 3.869214766542733*^9}, {
   3.869214798607539*^9, 3.8692147991185513`*^9}, {3.869214956910564*^9, 
   3.869215003816546*^9}, {3.869215064473733*^9, 3.869215079623447*^9}, {
   3.869215257338026*^9, 3.8692153217380466`*^9}, {3.869215369674582*^9, 
   3.8692153707769003`*^9}, {3.869218551089553*^9, 3.869218554105139*^9}, {
   3.873536137487809*^9, 3.873536157113378*^9}, {3.8737218269830513`*^9, 
   3.8737218942167397`*^9}, {3.873722023539997*^9, 3.873722078245874*^9}, {
   3.873722151005465*^9, 3.873722184832581*^9}, {3.873722262394095*^9, 
   3.873722299789385*^9}, {3.873727405456362*^9, 3.873727407667687*^9}, {
   3.873795067207028*^9, 3.873795083012207*^9}, 3.873801728693125*^9, {
   3.873803376445282*^9, 3.873803605099039*^9}, {3.873803936299101*^9, 
   3.873803985392705*^9}, {3.8738054296210938`*^9, 3.873805434739148*^9}, {
   3.8738081749509373`*^9, 3.873808189643832*^9}, {3.873808260543518*^9, 
   3.873808299197383*^9}, {3.8738086232761803`*^9, 3.8738086258360643`*^9}, {
   3.873809740474554*^9, 3.873809746170124*^9}, {3.873827989551094*^9, 
   3.873828046626005*^9}, {3.8738280918401623`*^9, 3.873828092823846*^9}, {
   3.873828868270315*^9, 3.873828878840913*^9}, {3.8738743930632133`*^9, 
   3.873874395974115*^9}, {3.8738744915832233`*^9, 3.873874499108654*^9}, {
   3.8738745608100157`*^9, 3.87387456531114*^9}, {3.873875747308943*^9, 
   3.873875786891082*^9}, {3.8738758454165497`*^9, 3.873875870793645*^9}, {
   3.873875905255966*^9, 3.873875913996315*^9}, {3.873875969049201*^9, 
   3.873875986036682*^9}, {3.873876056189313*^9, 3.873876103462187*^9}, {
   3.8738761385663*^9, 3.8738761771993837`*^9}, {3.873876472224475*^9, 
   3.873876487654408*^9}, {3.873883365596745*^9, 3.873883367431622*^9}, {
   3.873883431528206*^9, 3.873883433521964*^9}, {3.873883474136989*^9, 
   3.873883478808856*^9}, {3.8756901249387693`*^9, 3.8756901563944197`*^9}, {
   3.8756912977568398`*^9, 3.87569130899468*^9}, {3.875695695076517*^9, 
   3.8756957807834473`*^9}, {3.875697315448535*^9, 3.875697317226529*^9}, {
   3.8756990026610813`*^9, 3.875699006062674*^9}, {3.875783909784436*^9, 
   3.875783932509903*^9}, {3.8757839702434196`*^9, 3.875783991926955*^9}, {
   3.87578436190112*^9, 3.875784380902054*^9}, {3.87578443900996*^9, 
   3.8757844773945208`*^9}, {3.875784937308525*^9, 3.8757849415846767`*^9}, {
   3.875784987199074*^9, 3.875784988288704*^9}, {3.875810550708597*^9, 
   3.875810552776515*^9}, {3.8758197920102873`*^9, 3.875819792412874*^9}, 
   3.875821671365123*^9, {3.8762074814071903`*^9, 3.876207483622019*^9}, {
   3.876207525319086*^9, 3.876207527076189*^9}, {3.8769095900478888`*^9, 
   3.8769095943411417`*^9}, {3.876909653906137*^9, 3.876909655907584*^9}, {
   3.880187546317218*^9, 3.880187569387553*^9}, {3.8836353092981243`*^9, 
   3.883635318989584*^9}, {3.883643515674913*^9, 3.88364353193294*^9}, {
   3.883643742881509*^9, 3.883643762183663*^9}, {3.8836438359438868`*^9, 
   3.8836438363100348`*^9}, {3.883643883398198*^9, 3.8836438956169167`*^9}, {
   3.883644265128314*^9, 3.8836442664241734`*^9}, 3.883644561668241*^9, {
   3.88364577387563*^9, 3.883645779511386*^9}, {3.883648458100438*^9, 
   3.883648463754395*^9}, {3.883649022834107*^9, 3.883649025912264*^9}, {
   3.883649138391301*^9, 3.883649204038764*^9}, {3.883649241829829*^9, 
   3.883649244178939*^9}, {3.883649357764249*^9, 3.883649367223763*^9}, {
   3.883649516843505*^9, 3.8836495191985207`*^9}, {3.883649559382502*^9, 
   3.883649602092461*^9}, {3.883649647615107*^9, 3.8836496615221777`*^9}, {
   3.883734777484333*^9, 3.883734777735754*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"786b6905-0c83-4785-9309-62848193302e"],

Cell[TextData[{
 StyleBox["[Native Gates]",
  FontWeight->"Bold"],
 "\n ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Init", "q"], TraditionalForm]],ExpressionUUID->
  "1d09064b-73a1-41da-b8f5-29bfdc8451dd"],
 "[node], ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Read", "q"], "[", "node", "]"}], TraditionalForm]],
  ExpressionUUID->"26a73222-1524-41dc-ae57-279f1797effa"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Rx", "q"], "[", 
    RowBox[{"node", ",", "\[Theta]"}], "]"}], TraditionalForm]],
  ExpressionUUID->"1db64c5f-090c-48ec-a6e8-d4fa995044d0"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Ry", "q"], "[", 
    RowBox[{"node", ",", "\[Theta]"}], "]"}], TraditionalForm]],
  ExpressionUUID->"acad095c-9f40-4645-a4c4-5c00814aad30"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["CZ", 
     RowBox[{"q1", ",", "q2"}]], "[", "node", "]"}], TraditionalForm]],
  ExpressionUUID->"300da055-2d4d-425a-9aa0-e20ad156cc5a"],
 ", Ent[node1, node2], ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["SWAPLoc", 
     RowBox[{"q1", ",", "q2"}]], "[", "node", "]"}], TraditionalForm]],
  ExpressionUUID->"11ee6e8b-13b7-4f51-9da4-7f708fdd49d5"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Splz", 
     RowBox[{"q1", ",", "q2"}]], "[", 
    RowBox[{"node", ",", "zone_destination"}], "]"}], TraditionalForm]],
  ExpressionUUID->"e63a851d-9931-4bb8-9b61-8a9a985167ab"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["Comb", 
      RowBox[{"q1", ",", "q2"}]], "[", "node", "]"}], ","}], 
   TraditionalForm]],ExpressionUUID->"9d8ce3a4-b2bf-411d-8598-bf8974d855d7"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Comb", 
     RowBox[{"q1", ",", "q2"}]], "[", 
    RowBox[{"node", ",", "zone_destination"}], "]"}], TraditionalForm]],
  ExpressionUUID->"0d25bf03-7554-403e-9c84-b08d8ede164b"],
 "\n",
 StyleBox["[Zone and operations]",
  FontWeight->"Bold"],
 "\n[from notes]\nZone 1 : prepare, store?, detect\nZone 2 : prepare, store?, \
detect, logic\nZone 3 : prepare, store?, detect, logic\nZone 4 : remote \
entangle\n[from email]\n   \[NonBreakingSpace]a.\[NonBreakingSpace]Zone 1 \
supports prep, detect, split, combine and rotate (SWAP), but\n        no \
local or remote quantum logic\n    \
\[NonBreakingSpace]b.\[NonBreakingSpace]Zone 2 and 3 are as (a) plus local \
logic (1Q and 2Q) \n    \[NonBreakingSpace]c.\[NonBreakingSpace]Zone 4 \
supports remote logic only (no split, no combine, only shuttle for the move)"
}], "Text",
 CellChangeTimes->{{3.8692122673836203`*^9, 3.869212288716358*^9}, {
   3.8732900821348667`*^9, 3.8732900892281*^9}, {3.873535234627952*^9, 
   3.8735352993376503`*^9}, 3.8735355903892736`*^9, {3.873535838903427*^9, 
   3.873535867433639*^9}, {3.873535943640603*^9, 3.873536051939383*^9}, {
   3.8737213853909492`*^9, 3.873721409511063*^9}, {3.873721675411847*^9, 
   3.87372167652286*^9}, {3.873721784879632*^9, 3.8737218004244747`*^9}, {
   3.873886462615952*^9, 3.8738864754993267`*^9}, {3.8835477479780693`*^9, 
   3.883547778908753*^9}, 3.883558706803985*^9, 3.883733935859179*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"5f86b73e-5906-4bd6-a372-9b5e7579b57a"],

Cell["\<\
Basic remote entanglement from the note. The total circuit and moves until \
page 38. The expected result is qubit 4 at zone 2 is highly entangled after 3 \
distillations .\
\>", "Text",
 CellChangeTimes->{{3.8735358044989357`*^9, 3.8735358152137203`*^9}, {
  3.8837349025782948`*^9, 3.8837349115556917`*^9}},
 Background->RGBColor[
  1, 0.9, 1],ExpressionUUID->"e1220042-e501-4a63-aad2-9ca6f469a27d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"circ", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"2", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"2", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "4"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "4"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "4"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "4"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ent", 
        RowBox[{"4", ",", "4"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"3", ",", "4"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"3", ",", "4"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"3", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"3", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ent", 
        RowBox[{"3", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "1"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "1"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Read", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Read", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"1", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"1", ",", "2"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Init", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"2", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"2", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Shutl", "3"], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Shutl", "3"], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ent", 
        RowBox[{"3", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"2", ",", "4"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"2", ",", "4"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "2"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"2", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"2", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"2", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["SWAPLoc", 
        RowBox[{"2", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Ent", 
        RowBox[{"2", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"3", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"3", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"3", ",", "2"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Comb", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Read", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Read", "2"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["H", "4"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["H", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["H", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["H", "4"], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["CZ", 
        RowBox[{"4", ",", "3"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
      RowBox[{
       SubscriptBox["Shutl", "2"], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Shutl", "2"], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Splz", 
        RowBox[{"4", ",", "3"}]], "[", 
       RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["H", "q_"], "[", "n_", "]"}], ":>", 
      RowBox[{
       SubscriptBox["Rx", "q"], "[", 
       RowBox[{"n", ",", 
        RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQvSpkmi3HnTeOiSsMHUD0rE3nXUC0xRNJTxD9NiXd
Fyw/kyERRCdY61aC6JdzXlaB6IgFHTHaQNphTy+YXrT0XyqIPum9oRJEX7i0
sBZEr/uyfQKI5nWdsg9EXzk46wCIXnHt+wkQrbb8H5hu6mrO1QXSTk7zC0D0
7c7oiSBaxTlmCYjWiDtyEEQ/Dao7CqKnuMhdBtGJrutfg+Xd3n4E0W7eB36B
6CWFH/6B6L0filj1gHQ+32IuEJ3G6SAEohN/Wz0B0QZsVc9A9KnvIasqHgDd
MZl3HYi+xy8jXwOkw1bNB9MG/eW3F70H8h9K3wXRAMyBrfY=
  "],
 CellLabel->
  "In[352]:=",ExpressionUUID->"39334818-453d-4215-b01f-6ad2ed45ee64"],

Cell["\<\
Check the arrangement of the circuit in the total density matrix. Here is \
completely serial within a node.
 It does not update the device state, thus we cannot check the final position \
of ions.\
\>", "Text",
 CellChangeTimes->{{3.8735358044989357`*^9, 3.8735358152137203`*^9}, {
  3.8735362827709*^9, 3.8735363463458776`*^9}, {3.873536412650112*^9, 
  3.873536440021015*^9}},
 Background->RGBColor[
  1, 0.9, 1],ExpressionUUID->"7dae8c7a-ebe8-4914-93d1-8e3024725605"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"DrawCircuit", "@", 
   RowBox[{"CircTrappedIons", "[", 
    RowBox[{"circ", ",", "dev"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8735356166506577`*^9, 3.8735356294032717`*^9}, {
   3.8735357581820583`*^9, 3.8735357592668552`*^9}, {3.87353625886707*^9, 
   3.873536259191338*^9}, {3.875697326741803*^9, 3.8756973294968157`*^9}, {
   3.8756994329139137`*^9, 3.875699433317068*^9}, 3.875784055766596*^9},
 CellLabel->
  "In[353]:=",ExpressionUUID->"797106b3-7c71-46e2-9680-68c6566ce39f"],

Cell[TextData[{
 "This will show the total scheduling, noise operation, and the final form in \
the simulation.\nSet the",
 StyleBox[" MapQubits->False",
  FontWeight->"Bold"],
 " and",
 StyleBox[" ReplaceAliases->True",
  FontWeight->"Bold"],
 " if you intended to do the density matrix simulation"
}], "Text",
 CellChangeTimes->{{3.8735358044989357`*^9, 3.8735358152137203`*^9}, {
  3.8735362827709*^9, 3.8735363463458776`*^9}, {3.873536393477754*^9, 
  3.8735364073986673`*^9}, {3.873536454604163*^9, 3.873536532584633*^9}, {
  3.873536640439295*^9, 3.873536642504521*^9}, {3.873539398165966*^9, 
  3.873539399408609*^9}, {3.8738287501449623`*^9, 3.873828760745677*^9}, {
  3.873874327663858*^9, 3.873874362063689*^9}, {3.8741301890944147`*^9, 
  3.874130190106752*^9}},
 Background->RGBColor[
  1, 0.9, 1],ExpressionUUID->"b8508c3c-e271-4c93-8030-70d503509a3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dev", "=", 
   RowBox[{"TrappedIonOxford", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circ2", "=", 
   RowBox[{"CircTrappedIons", "[", 
    RowBox[{"circ", ",", "dev", ",", 
     RowBox[{"MapQubits", "->", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisycirc", "=", 
   RowBox[{"InsertCircuitNoise", "[", 
    RowBox[{"circ2", ",", "dev", ",", " ", 
     RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"DrawCircuit", "[", 
    RowBox[{"%", ",", "8"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8735365427377977`*^9, 3.873536635876189*^9}, {
   3.873539396712269*^9, 3.873539403859277*^9}, {3.875697389882848*^9, 
   3.8756973979789343`*^9}, {3.87569943733666*^9, 3.875699442348497*^9}, {
   3.875784066537302*^9, 3.875784074430694*^9}, {3.8757842173800793`*^9, 
   3.875784233763261*^9}, {3.8757843318838377`*^9, 3.875784355751664*^9}, {
   3.875784760266287*^9, 3.875784765461773*^9}, {3.875784957365838*^9, 
   3.875784998855071*^9}, {3.875790969089532*^9, 3.8757909796434193`*^9}, {
   3.8758184889942837`*^9, 3.8758184926305323`*^9}, 3.8837347098342876`*^9},
 CellLabel->
  "In[354]:=",ExpressionUUID->"d6f1e258-c049-4570-8952-bb2893609008"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "initialise", " ", "the", " ", "qubit", " ", "with", " ", "random", " ", 
     "mixed", " ", "state"}], ",", " ", 
    RowBox[{
    "then", " ", "apply", " ", "the", " ", "noisy", " ", "circuit"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]", "=", 
     RowBox[{"CreateDensityQureg", "[", "8", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]2", "=", 
     RowBox[{"CreateQureg", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]2", "=", 
     RowBox[{"CreateDensityQureg", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetQuregMatrix", "[", 
     RowBox[{"\[Rho]", ",", 
      RowBox[{"RandomMixState", "[", "8", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ApplyCircuit", "[", 
     RowBox[{"\[Rho]", ",", 
      RowBox[{"ExtractCircuit", "@", "noisycirc"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ApplyCircuit", "[", 
     RowBox[{
      RowBox[{"InitZeroState", "@", "\[Psi]2"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["H", "0"], ",", 
        RowBox[{
         SubscriptBox["C", "0"], "[", 
         SubscriptBox["X", "1"], "]"}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetQuregMatrix", "[", 
     RowBox[{"\[Rho]2", ",", 
      RowBox[{"PartialTrace", "[", 
       RowBox[{
       "\[Rho]", ",", "0", ",", "1", ",", "2", ",", "4", ",", "5", ",", "6"}],
        "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{"CalcFidelity", "[", 
    RowBox[{"\[Rho]2", ",", "\[Psi]2"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"PlotDensityMatrix", "[", 
    RowBox[{
     RowBox[{"PartialTrace", "[", 
      RowBox[{
      "\[Rho]", ",", "0", ",", "1", ",", "2", ",", "4", ",", "5", ",", "6"}], 
      "]"}], ",", "\[Psi]2", ",", 
     RowBox[{"ImageSize", "->", "Small"}], ",", 
     RowBox[{"BarSpacing", "->", "0.1"}], ",", 
     RowBox[{"ChartElementFunction", "->", "\"\<Cube\>\""}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<00\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<01\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<10\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<11\>\""}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<00\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<01\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<10\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<11\>\""}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.873541681637575*^9, 3.873541751424814*^9}, {
   3.8757841205386143`*^9, 3.8757841294918327`*^9}, {3.8757842467170897`*^9, 
   3.875784337040402*^9}, {3.875784825198759*^9, 3.875784841719986*^9}, 
   3.875784875955913*^9, {3.875785077800418*^9, 3.875785105591632*^9}, {
   3.875821981083705*^9, 3.875821983105031*^9}, {3.883497350493561*^9, 
   3.883497396711956*^9}, {3.883736787115781*^9, 3.883736848601947*^9}},
 CellLabel->
  "In[569]:=",ExpressionUUID->"b16782ff-ea3f-4153-83cb-c675797578e7"],

Cell[BoxData["0.8995020340385991`"], "Output",
 CellChangeTimes->{
  3.875784162593442*^9, {3.875784227713541*^9, 3.875784357616056*^9}, {
   3.875784754537125*^9, 3.875784767787106*^9}, {3.875784813224249*^9, 
   3.875784842455867*^9}, 3.875784876701469*^9, {3.875784925990993*^9, 
   3.87578494879453*^9}, 3.875785002447854*^9, 3.875785115651886*^9, 
   3.8757909824112597`*^9, 3.8757928797261477`*^9, 3.8758103218082867`*^9, 
   3.8758103906806087`*^9, 3.875810561260089*^9, 3.87581315901871*^9, 
   3.875815054835128*^9, 3.87581595380696*^9, 3.8758160636635427`*^9, 
   3.875817682124064*^9, 3.875817781253541*^9, {3.8758180808254967`*^9, 
   3.875818098155674*^9}, 3.875818335065015*^9, {3.875818447789188*^9, 
   3.875818496341061*^9}, 3.875819031144825*^9, {3.8758193344916143`*^9, 
   3.8758193509828787`*^9}, 3.8758197963626413`*^9, 3.875821675608789*^9, {
   3.875821984307454*^9, 3.875822009714748*^9}, 3.875822066134385*^9, 
   3.875822222945661*^9, 3.875822317664167*^9, 3.875822392199534*^9, 
   3.8758533471824636`*^9, 3.875869622142811*^9, 3.875870469741518*^9, 
   3.87587168970975*^9, 3.875874288945615*^9, 3.875874370346424*^9, {
   3.875874627212243*^9, 3.875874647644333*^9}, 3.875874716361985*^9, 
   3.87597269146741*^9, 3.875972744709272*^9, 3.875972861105781*^9, 
   3.876194889055654*^9, 3.876199240222349*^9, 3.876202446995277*^9, 
   3.876203266766798*^9, 3.87620640523446*^9, 3.876207486711542*^9, 
   3.876207530818915*^9, 3.876213338115676*^9, 3.8762185036696873`*^9, 
   3.876219033036215*^9, 3.876219085013709*^9, 3.876287011725073*^9, 
   3.876320486958457*^9, 3.876320803067623*^9, 3.876366246183374*^9, 
   3.876366296692225*^9, 3.8763664268800497`*^9, 3.876366502069263*^9, 
   3.8763667881949987`*^9, 3.8763687651315536`*^9, 3.876369194551701*^9, 
   3.876387047336177*^9, 3.876387206624456*^9, 3.876460396264352*^9, 
   3.876830817908824*^9, 3.876891216111376*^9, 3.876909292786405*^9, 
   3.876909400829074*^9, 3.8769096085874233`*^9, 3.8769096664897118`*^9, 
   3.876911626056899*^9, 3.876980328451453*^9, 3.876983363993387*^9, 
   3.876983479901698*^9, 3.8769989577555647`*^9, 3.8770633606692944`*^9, 
   3.877064070408555*^9, 3.880183075729824*^9, 3.882432881741987*^9, 
   3.883488076106667*^9, 3.8834971757580967`*^9, 3.8834973572115917`*^9, {
   3.8834973873596153`*^9, 3.8834973974469*^9}, 3.883548857937894*^9, 
   3.883550344351688*^9, 3.883627242083272*^9, 3.88363533524461*^9, {
   3.8836355039357443`*^9, 3.883635542476275*^9}, 3.883635597185995*^9, {
   3.883635632895529*^9, 3.8836356615094423`*^9}, {3.883635763486886*^9, 
   3.883635778465403*^9}, 3.883635852611905*^9, 3.883636043249854*^9, {
   3.883636082075697*^9, 3.883636102350148*^9}, 3.883636139611557*^9, 
   3.883636292419873*^9, 3.883636368863904*^9, 3.8836364050473623`*^9, 
   3.883644274390761*^9, 3.883644566709509*^9, 3.883645784491078*^9, 
   3.8836490319823093`*^9, 3.883649734722188*^9, 3.883733825977923*^9, 
   3.8837339295188293`*^9, 3.883736526146316*^9, {3.883736787745881*^9, 
   3.8837368974581842`*^9}},
 CellLabel->
  "Out[577]=",ExpressionUUID->"41fdd0b6-49f7-4b00-bcf4-adf62d0d303c"],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
   GrayLevel[0], Opacity[0.1]}], 
   StyleBox[{{{}, 
      {RGBColor[0.4947336, 0.6054231999999999, 0.7678384], Opacity[1], 
       EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.19835797018335727`, 0.013415750477688759`, 0.36796947678637293`], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 0.4724011176403899}]},
             
             ImageSizeCache->{{16.786644621072902`, 
              55.35208105123722}, {-27.920265650716257`, 21.28284065175966}}],
            
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4724011176403899]& ,
          TagBoxNote->"0.4724011176403899"],
         StyleBox[
         "0.4724011176403899`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4724011176403899, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
               1.2134752782874471`*^-17}]},
             
             ImageSizeCache->{{36.21439596299237, 70.26707676709624}, {
              2.3356445026396884`, 13.684400462577646`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 1.2134752782874471`*^-17]& ,
          TagBoxNote->"1.2134752782874471*^-17"],
         StyleBox[
         "1.2134752782874471`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[1.2134752782874471`*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55, 2.55, 0.}, {1.45, 3.45, 
               1.0285160698372741`*^-17}]},
             
             ImageSizeCache->{{51.56976957701218, 
              83.52691457868568}, {-3.354725897601991, 6.973501792251355}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 1.0285160698372741`*^-17]& ,
          TagBoxNote->"1.0285160698372741*^-17"],
         StyleBox[
         "1.0285160698372741`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[1.0285160698372741`*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.24833459473282044`, 0.03543606646706827, 0.4767903296248632], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{0.55, 3.55, 0.}, {1.45, 4.45, 0.427100922804251}]},
             
             ImageSizeCache->{{64.70321001888294, 
              95.43146715334629}, {-36.680390997776584`, 1.003220501500003}}],
            
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.427100922804251]& ,
          TagBoxNote->"0.427100922804251"],
         StyleBox[
         "0.427100922804251`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.427100922804251, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
               6.7655404338765775`*^-18}]},
             
             ImageSizeCache->{{40.47521740005638, 77.71962662361855}, {
              12.826385747145839`, 26.226041702496666`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 6.7655404338765775`*^-18]& ,
          TagBoxNote->"6.7655404338765775*^-18"],
         StyleBox[
         "6.7655404338765775`*^-18", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[6.7655404338765775`*^-18, {"Graphics3DLabel"}], "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.6639316455030728, 0.8666066945603823, 0.9930461109994655], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 0.02759888860960983}]},
             
             
             ImageSizeCache->{{57.026430633462766`, 91.80598815836402}, {
              3.945776369423676, 18.02255389178962}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.02759888860960983]& ,
          TagBoxNote->"0.02759888860960983"],
         StyleBox[
         "0.02759888860960983`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.02759888860960983, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.6865039637876826, 0.8787171413601229, 0.9942270030857527], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{1.55, 2.55, 0.}, {2.45, 3.45, 
               0.021837540075754464`}]},
             
             ImageSizeCache->{{71.71843384285228, 
              104.28909731852718`}, {-1.624274971257126, 
              10.811268971704202`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.021837540075754464`]& ,
          TagBoxNote->"0.021837540075754464"],
         StyleBox[
         "0.021837540075754464`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.021837540075754464`, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{1.55, 3.55, 0.}, {2.45, 4.45, 
               3.361761046280061*^-17}]},
             
             ImageSizeCache->{{84.77929832577125, 
              115.39427906164312`}, {-5.532123307661475, 4.422443311733328}}],
            
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 3.361761046280061*^-17]& ,
          TagBoxNote->"3.361761046280061*^-17"],
         StyleBox[
         "3.361761046280061`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[3.361761046280061*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{2.55, 0.55, 0.}, {3.45, 1.45, 
               1.8415373341232253`*^-18}]},
             
             ImageSizeCache->{{63.80219752029143, 101.85416734383364`}, {
              17.2528566368215, 31.584941516896944`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 1.8415373341232253`*^-18]& ,
          TagBoxNote->"1.8415373341232253*^-18"],
         StyleBox[
         "1.8415373341232253`*^-18", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[1.8415373341232253`*^-18, {"Graphics3DLabel"}], "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.6865039637876826, 0.8787171413601229, 0.9942270030857527], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{2.55, 1.55, 0.}, {3.45, 2.45, 
               0.021837540075754457`}]},
             
             ImageSizeCache->{{79.5151468659061, 114.96661756146705`}, {
              8.230281384618017, 22.701121053833894`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.021837540075754457`]& ,
          TagBoxNote->"0.021837540075754457"],
         StyleBox[
         "0.021837540075754457`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.021837540075754457`, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.6639316442803654, 0.8666066939043783, 0.9930461109354984], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.02759888892169317}]},
             
             
             ImageSizeCache->{{93.35075777762748, 126.5212540018666}, {
              1.3920891365038806`, 14.931303177974634`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.02759888892169317]& ,
          TagBoxNote->"0.02759888892169317"],
         StyleBox[
         "0.02759888892169317`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.02759888892169317, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
               2.1810351042394676`*^-17}]},
             
             ImageSizeCache->{{105.58900794640951`, 
              136.71045381984527`}, {-2.4141911881119817`, 
              8.078311976625873}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 2.1810351042394676`*^-17]& ,
          TagBoxNote->"2.1810351042394676*^-17"],
         StyleBox[
         "2.1810351042394676`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[2.1810351042394676`*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.24833459473282044`, 0.03543606646706827, 0.4767903296248632], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{3.55, 0.55, 0.}, {4.45, 1.45, 0.427100922804251}]},
             
             ImageSizeCache->{{89.0257238214838, 
              128.96399891734757`}, {-14.673361733069804`, 
              37.41427904811341}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.427100922804251]& ,
          TagBoxNote->"0.427100922804251"],
         StyleBox[
         "0.427100922804251`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.427100922804251, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55, 1.55, 0.}, {4.45, 2.45, 
               4.6824887579540596`*^-17}]},
             
             ImageSizeCache->{{103.7487153486527, 139.85013318412567`}, {
              14.098333091426158`, 27.76180648153793}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 4.6824887579540596`*^-17]& ,
          TagBoxNote->"4.6824887579540596*^-17"],
         StyleBox[
         "4.6824887579540596`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[4.6824887579540596`*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.772061, 0.92462, 0.998703], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
               1.735364555087923*^-18}]},
             
             ImageSizeCache->{{116.55449645636338`, 150.26600697639213`}, {
              7.111084255861478, 19.36593436919199}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 1.735364555087923*^-18]& ,
          TagBoxNote->"1.735364555087923*^-18"],
         StyleBox[
         "1.735364555087923`*^-18", {"Graphics3DLabel"}, StripOnInput -> 
          False]],
        Annotation[#, 
         Style[1.735364555087923*^-18, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.19835798431805757`, 0.013415756705611721`, 0.3679695075637645], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 0.47240110482830655`}]},
             
             ImageSizeCache->{{127.84396767650651`, 
              161.20473252245586`}, {-33.30404621975664, 11.99627467508975}}],
            
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.47240110482830655`]& ,
          TagBoxNote->"0.47240110482830655"],
         StyleBox[
         "0.47240110482830655`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.47240110482830655`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}, {}, {}}, {{}, 
      {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], Opacity[
       0.3], EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.16791, 0., 0.301671], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55005, 0.55005, 0.}, {1.44995, 1.44995, 
               0.4999999999999999}]},
             
             ImageSizeCache->{{16.661597641390905`, 
              55.350211318332704`}, {-30.122341209084354`, 
              21.282198036321248`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4999999999999999]& ,
          TagBoxNote->"0.4999999999999999"],
         StyleBox[
         "0.4999999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4999999999999999, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.16791, 0., 0.301671], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{0.55005, 3.55005, 0.}, {1.44995, 4.44995, 
               0.4999999999999999}]},
             
             ImageSizeCache->{{64.60413159057516, 
              95.43669365411293}, {-41.614326467439156`, 
              1.0027730335094276`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4999999999999999]& ,
          TagBoxNote->"0.4999999999999999"],
         StyleBox[
         "0.4999999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4999999999999999, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.16791, 0., 0.301671], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55005, 0.55005, 0.}, {4.44995, 1.44995, 
               0.4999999999999999}]},
             
             ImageSizeCache->{{89.01493266671974, 
              129.13669174668587`}, {-21.142027337963825`, 
              37.413456052242424`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4999999999999999]& ,
          TagBoxNote->"0.4999999999999999"],
         StyleBox[
         "0.4999999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4999999999999999, {"Graphics3DLabel"}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.16791, 0., 0.301671], 
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              
              CuboidBox[{3.55005, 3.55005, 0.}, {4.44995, 4.44995, 
               0.4999999999999999}]},
             
             ImageSizeCache->{{127.84565011743257`, 
              161.3069380156748}, {-35.356490225680986`, 
              11.995725794041391`}}],
            "DelayedMouseEffectStyle"]},
          StatusArea[#, 0.4999999999999999]& ,
          TagBoxNote->"0.4999999999999999"],
         StyleBox[
         "0.4999999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4999999999999999, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}, {}, {}}},
    FontColor->GrayLevel[0.4]]},
  Axes->{True, True, True},
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->Small,
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0.5, 4.5}, {0.5, 4.5}, {All, All}},
  PlotRangePadding->{{0, 0}, {0, 0}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{1, 
      FormBox["\"00\"", TraditionalForm]}, {2, 
      FormBox["\"01\"", TraditionalForm]}, {3, 
      FormBox["\"10\"", TraditionalForm]}, {4, 
      FormBox["\"11\"", TraditionalForm]}}, {{1, 
      FormBox["\"00\"", TraditionalForm]}, {2, 
      FormBox["\"01\"", TraditionalForm]}, {3, 
      FormBox["\"10\"", TraditionalForm]}, {4, 
      FormBox["\"11\"", TraditionalForm]}}, Automatic},
  ViewPoint->{1.6558900681719912`, -2.8231659237080184`, 0.858930875765466},
  ViewVertical->{-0.12842420057504583`, 0.2189534400934967, 
   0.9672469259593872}]], "Output",
 CellChangeTimes->{
  3.875784162593442*^9, {3.875784227713541*^9, 3.875784357616056*^9}, {
   3.875784754537125*^9, 3.875784767787106*^9}, {3.875784813224249*^9, 
   3.875784842455867*^9}, 3.875784876701469*^9, {3.875784925990993*^9, 
   3.87578494879453*^9}, 3.875785002447854*^9, 3.875785115651886*^9, 
   3.8757909824112597`*^9, 3.8757928797261477`*^9, 3.8758103218082867`*^9, 
   3.8758103906806087`*^9, 3.875810561260089*^9, 3.87581315901871*^9, 
   3.875815054835128*^9, 3.87581595380696*^9, 3.8758160636635427`*^9, 
   3.875817682124064*^9, 3.875817781253541*^9, {3.8758180808254967`*^9, 
   3.875818098155674*^9}, 3.875818335065015*^9, {3.875818447789188*^9, 
   3.875818496341061*^9}, 3.875819031144825*^9, {3.8758193344916143`*^9, 
   3.8758193509828787`*^9}, 3.8758197963626413`*^9, 3.875821675608789*^9, {
   3.875821984307454*^9, 3.875822009714748*^9}, 3.875822066134385*^9, 
   3.875822222945661*^9, 3.875822317664167*^9, 3.875822392199534*^9, 
   3.8758533471824636`*^9, 3.875869622142811*^9, 3.875870469741518*^9, 
   3.87587168970975*^9, 3.875874288945615*^9, 3.875874370346424*^9, {
   3.875874627212243*^9, 3.875874647644333*^9}, 3.875874716361985*^9, 
   3.87597269146741*^9, 3.875972744709272*^9, 3.875972861105781*^9, 
   3.876194889055654*^9, 3.876199240222349*^9, 3.876202446995277*^9, 
   3.876203266766798*^9, 3.87620640523446*^9, 3.876207486711542*^9, 
   3.876207530818915*^9, 3.876213338115676*^9, 3.8762185036696873`*^9, 
   3.876219033036215*^9, 3.876219085013709*^9, 3.876287011725073*^9, 
   3.876320486958457*^9, 3.876320803067623*^9, 3.876366246183374*^9, 
   3.876366296692225*^9, 3.8763664268800497`*^9, 3.876366502069263*^9, 
   3.8763667881949987`*^9, 3.8763687651315536`*^9, 3.876369194551701*^9, 
   3.876387047336177*^9, 3.876387206624456*^9, 3.876460396264352*^9, 
   3.876830817908824*^9, 3.876891216111376*^9, 3.876909292786405*^9, 
   3.876909400829074*^9, 3.8769096085874233`*^9, 3.8769096664897118`*^9, 
   3.876911626056899*^9, 3.876980328451453*^9, 3.876983363993387*^9, 
   3.876983479901698*^9, 3.8769989577555647`*^9, 3.8770633606692944`*^9, 
   3.877064070408555*^9, 3.880183075729824*^9, 3.882432881741987*^9, 
   3.883488076106667*^9, 3.8834971757580967`*^9, 3.8834973572115917`*^9, {
   3.8834973873596153`*^9, 3.8834973974469*^9}, 3.883548857937894*^9, 
   3.883550344351688*^9, 3.883627242083272*^9, 3.88363533524461*^9, {
   3.8836355039357443`*^9, 3.883635542476275*^9}, 3.883635597185995*^9, {
   3.883635632895529*^9, 3.8836356615094423`*^9}, {3.883635763486886*^9, 
   3.883635778465403*^9}, 3.883635852611905*^9, 3.883636043249854*^9, {
   3.883636082075697*^9, 3.883636102350148*^9}, 3.883636139611557*^9, 
   3.883636292419873*^9, 3.883636368863904*^9, 3.8836364050473623`*^9, 
   3.883644274390761*^9, 3.883644566709509*^9, 3.883645784491078*^9, 
   3.8836490319823093`*^9, 3.883649734722188*^9, 3.883733825977923*^9, 
   3.8837339295188293`*^9, 3.883736526146316*^9, {3.883736787745881*^9, 
   3.8837368975803003`*^9}},
 CellLabel->
  "Out[578]=",ExpressionUUID->"0f9aa228-7cb5-4cda-a3e8-91770f66c23b"]
}, Open  ]],

Cell["\<\
Recall the expected result is qubit 4 at zone 2 is highly entangled after 3 \
distillations: trace out the rest except qubit 4 at both nodes. Thus we trace \
out the rest of other qubits above.\
\>", "Text",
 CellChangeTimes->{{3.8735358044989357`*^9, 3.8735358152137203`*^9}, {
  3.8737172637533283`*^9, 3.873717284776906*^9}, {3.8757910059256477`*^9, 
  3.875791014722041*^9}},
 Background->RGBColor[
  1, 0.9, 1],ExpressionUUID->"153e59e0-45fd-472c-85cb-312dbaef9e54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dev", "@", "ShowNodes"}]], "Input",
 CellChangeTimes->{{3.873536674746161*^9, 3.873536691184744*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"78aba0aa-fe82-48a6-bbd6-1efbf05626d6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Alice\"\>", 
     GraphicsBox[{
       {RGBColor[0.300725, 0.680491, 0.901701], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["1", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 1\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.300725, 0.680491, 0.901701], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["4", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 2\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.300725, 0.680491, 0.901701], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["3", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 3\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.300725, 0.680491, 0.901701], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["2", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 4\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}]},
    {"\<\"Bob\"\>", 
     GraphicsBox[{
       {RGBColor[0.9112395, 0.6309425, 0.5195245], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["1", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 1\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.9112395, 0.6309425, 0.5195245], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["4", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 2\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.9112395, 0.6309425, 0.5195245], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["3", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 3\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}], 
     GraphicsBox[{
       {RGBColor[0.9112395, 0.6309425, 0.5195245], 
        TagBox[DiskBox[{0, 0}, 0.25],
         "Ball"]}, InsetBox["2", {0, 0},
        BaseStyle->"Output"]},
      FrameMargins -> Tiny,
      Frame->True,
      FrameLabel->FormBox["\"zone 4\"", TraditionalForm],
      FrameStyle->GrayLevel[0],
      FrameTicks->False,
      ImageSize->{50, 50}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.873536682487219*^9, 3.873536691753687*^9}, 
   3.8737170961100903`*^9, 3.873801675530674*^9, 3.8738017315138206`*^9, 
   3.873809620345888*^9, 3.873809749394195*^9, 3.873814429351036*^9, 
   3.8738277052601337`*^9, 3.873828563235853*^9, {3.8738288055197067`*^9, 
   3.873828819111541*^9}, 3.8738742769292707`*^9, 3.873874662600828*^9, 
   3.873883185695291*^9, 3.873883251320664*^9, 3.8738833011204443`*^9, {
   3.873883349077548*^9, 3.8738833705884657`*^9}, {3.8738834368872337`*^9, 
   3.873883460836851*^9}, 3.8738868558189487`*^9, 3.8738869211317167`*^9, 
   3.8738870130947237`*^9, {3.873887080185256*^9, 3.8738871377856207`*^9}, 
   3.874130011875496*^9, {3.874130078736189*^9, 3.874130091139804*^9}, {
   3.8741302006845617`*^9, 3.8741302121976357`*^9}, {3.8751078113457813`*^9, 
   3.8751078419533854`*^9}, 3.87568775128843*^9, 3.8756885902249117`*^9, 
   3.875697529863347*^9, 3.87569764159367*^9, 3.875697919910701*^9, 
   3.8756980555507193`*^9, 3.875699248306663*^9, 3.875699348333618*^9, 
   3.875699404477067*^9, 3.8756994494387074`*^9, 3.87572757793512*^9, {
   3.8757838495815907`*^9, 3.875783871055716*^9}, {3.875783916187111*^9, 
   3.875783948317679*^9}, 3.8757840888805017`*^9, 3.875784754707965*^9, 
   3.87578481338249*^9, 3.87578492626875*^9, 3.875785002714672*^9, 
   3.875790985423336*^9, 3.875792880431561*^9, 3.8758103235296183`*^9, 
   3.875810392443574*^9, 3.8758105614389763`*^9, 3.875813161404724*^9, 
   3.875815056550865*^9, 3.8758159555233297`*^9, 3.875816063839275*^9, 
   3.875817682290228*^9, 3.8758177815322237`*^9, {3.875818080988226*^9, 
   3.8758181000483217`*^9}, 3.875818337389896*^9, {3.875818447951949*^9, 
   3.8758184966384983`*^9}, 3.875819031334797*^9, {3.875819334681094*^9, 
   3.875819353066847*^9}, 3.8758197965492697`*^9, 3.8758216758097897`*^9, {
   3.8758219914020557`*^9, 3.875822009911335*^9}, 3.875822066344729*^9, 
   3.8758222240702*^9, 3.875822320064514*^9, 3.875822392863962*^9, 
   3.875853348130314*^9, 3.875869622346408*^9, 3.875870469936893*^9, 
   3.875871689911714*^9, 3.875874289125264*^9, 3.8758743710005207`*^9, {
   3.875874627393833*^9, 3.8758746483605223`*^9}, 3.875874716576174*^9, 
   3.875972692165556*^9, 3.875972745404345*^9, 3.875972861319846*^9, 
   3.87619488951709*^9, 3.8761992403935633`*^9, 3.8762024471606197`*^9, 
   3.876203266956337*^9, 3.876207486924808*^9, 3.8762075310108232`*^9, 
   3.876213338618465*^9, 3.87621850389703*^9, 3.876219033254323*^9, 
   3.876219085782703*^9, 3.876287012124001*^9, 3.8763204872603607`*^9, 
   3.876320803959218*^9, 3.876366247034946*^9, 3.876366297205464*^9, 
   3.876366427616188*^9, 3.876366502605167*^9, 3.876366788867585*^9, 
   3.876368765647148*^9, 3.8763691952054033`*^9, 3.8763870494272413`*^9, 
   3.876387207173613*^9, 3.876460396782894*^9, 3.8768308183403873`*^9, 
   3.876891216866647*^9, 3.876909293841922*^9, 3.876909401123014*^9, 
   3.8769096088726807`*^9, 3.8769096667659187`*^9, 3.876911626345932*^9, 
   3.876980328731901*^9, 3.876983364381186*^9, 3.876983480093356*^9, 
   3.8769989579532433`*^9, 3.877063363663508*^9, 3.8770640706306343`*^9, 
   3.8801830764876747`*^9, 3.882432882109015*^9, 3.8834880762712317`*^9, 
   3.883497176826296*^9, 3.883548858160781*^9, 3.883550344554133*^9, 
   3.8836272429503307`*^9, 3.883635335398053*^9, {3.883635504092605*^9, 
   3.883635542634982*^9}, 3.883635597349778*^9, {3.8836356330506573`*^9, 
   3.8836356616690893`*^9}, {3.883635763642445*^9, 3.88363577862389*^9}, 
   3.8836358527700377`*^9, 3.883636043398114*^9, {3.88363608223114*^9, 
   3.883636102504129*^9}, 3.883636139766445*^9, 3.883636292593811*^9, 
   3.8836363690187902`*^9, 3.883636405200061*^9, 3.883644274605125*^9, 
   3.883644567004924*^9, 3.883645784852003*^9, 3.883649032366517*^9, 
   3.883649735009469*^9, 3.8837338266140614`*^9, 3.883733929711204*^9, 
   3.883736526310569*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"2a26573f-699a-420b-8c32-2c7d89cd5377"]
}, Open  ]],

Cell[TextData[{
 StyleBox["[FUTURE FEATURES]\n",
  FontWeight->"Bold"],
 "T1, and T2 for individual qubits\nT1-><|\[CloseCurlyDoubleQuote]Alice\
\[CloseCurlyDoubleQuote]-><|1->100,2->101|>, \[OpenCurlyDoubleQuote]Bob\
\[CloseCurlyDoubleQuote]->110 |>,\nModifyDev[dev,Opts->xxx]. One can modify \
T1, T2 in between.\nPassive noise different on each zone.\nThe noise on the \
move operations? (passive noise)\nCorrelated noise happens only to qubits \
with the same zone.\nThe role of measurement/outcome in the sequence?\n\
Measurement involves scattering that can affect neighborhood atoms within \
raidus.\nParrallel -> False (done), Default (no operations in the same zone, \
always parallel Alice and Bob, Ent is always serial) , Full (Default+ \
parallel when in different zone)"
}], "Text",
 CellChangeTimes->{{3.866798041123843*^9, 3.866798085107017*^9}, {
   3.866804830154402*^9, 3.866804853992099*^9}, {3.866804894389616*^9, 
   3.866804912685439*^9}, {3.866805523973617*^9, 3.866805543760735*^9}, {
   3.867227854446649*^9, 3.867227860282613*^9}, {3.867227946065613*^9, 
   3.8672279514200497`*^9}, {3.867228041406211*^9, 3.867228042676688*^9}, {
   3.86723513216148*^9, 3.867235211241733*^9}, {3.867235307604314*^9, 
   3.867235335867313*^9}, {3.867235371286138*^9, 3.8672354061102047`*^9}, {
   3.867235962393691*^9, 3.867235962970166*^9}, {3.867238330229786*^9, 
   3.867238362355316*^9}, {3.867238468787754*^9, 3.86723850907125*^9}, {
   3.867240311300603*^9, 3.86724034164545*^9}, {3.8672413796847353`*^9, 
   3.867241417929265*^9}, {3.869163469705277*^9, 3.8691634751922293`*^9}, {
   3.869163525412311*^9, 3.8691635258375473`*^9}, {3.869166296399373*^9, 
   3.869166322250745*^9}, {3.8692122221518927`*^9, 3.8692124416674767`*^9}, {
   3.869215610806291*^9, 3.869215763731125*^9}, {3.8692158205852203`*^9, 
   3.86921582685341*^9}, {3.869215924268742*^9, 3.8692159254106817`*^9}, {
   3.869219346000005*^9, 3.869219370887588*^9}, {3.8692217927989407`*^9, 
   3.869221803309319*^9}, {3.869223028067062*^9, 3.869223250181242*^9}, {
   3.869223414281083*^9, 3.8692234197818823`*^9}, {3.869298081236103*^9, 
   3.869298085428043*^9}, {3.873535204533883*^9, 3.8735352062381897`*^9}, {
   3.873535321071416*^9, 3.873535342905724*^9}, {3.8735353885038013`*^9, 
   3.873535401766279*^9}, {3.873809262183402*^9, 3.8738093024102077`*^9}, {
   3.873883568547492*^9, 3.873883572881077*^9}, {3.875687776410322*^9, 
   3.8756878248469057`*^9}, 3.883734854912146*^9},
 Background->RGBColor[
  1, 0.85, 0.85],ExpressionUUID->"bb277a5a-5a35-4034-9157-64bf18989e78"],

Cell[CellGroupData[{

Cell["Entanglement distillation modules", "Subtitle",
 CellChangeTimes->{{3.875791204135686*^9, 3.875791222292997*^9}, {
  3.8758099141065197`*^9, 3.87580992117246*^9}, {3.8758145958974*^9, 
  3.8758146040481453`*^9}, {3.876207609383684*^9, 3.87620761395012*^9}, {
  3.876551216438946*^9, 3.8765512234254713`*^9}, {3.883739797676971*^9, 
  3.883739799978877*^9}},ExpressionUUID->"b537fdb9-8ce6-4848-af9b-\
b8dda8bf18d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Bit", "-", 
    RowBox[{"Flip", " ", "distillation", " ", 
     RowBox[{"operation", ":", " ", 
      RowBox[{"The", " ", "CNOT", " ", "equivalent"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"cx", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["C", "0"], "[", 
        SubscriptBox["Z", "1"], "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{"\[Pi]", "/", "2"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Phase", "-", 
     RowBox[{"flip", " ", 
      RowBox[{"distillation", ":", " ", 
       RowBox[{"Alice", " ", "and", " ", "Bob"}]}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pfa", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "\[Pi]", "]"}], ",", 
       RowBox[{
        SubscriptBox["C", "0"], "[", 
        SubscriptBox["Z", "1"], "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pfb", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", 
        RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["C", "0"], "[", 
        SubscriptBox["Z", "1"], "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{"\[Pi]", "/", "2"}], "]"}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.883653975430418*^9, 3.883653985077478*^9}, {
   3.883654079944396*^9, 3.883654085269121*^9}, {3.88365415925456*^9, 
   3.88365423086073*^9}, {3.883654621752829*^9, 3.883654642255464*^9}, {
   3.883654969453896*^9, 3.883654978124701*^9}, {3.8837349450323963`*^9, 
   3.883734998802987*^9}, {3.88373504207271*^9, 3.883735065120805*^9}, 
   3.883735105132169*^9},
 CellLabel->
  "In[368]:=",ExpressionUUID->"065d7afa-e2b8-4625-8d54-f6c53ef06fe3"],

Cell["\<\
In the case when entanglement has only dephasing errors, one-round of \
distillation is sufficient.\
\>", "Text",
 CellChangeTimes->{{3.875791116721039*^9, 3.875791196379963*^9}, {
  3.875791247399633*^9, 3.8757912501572027`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a3da6556-c143-4f6a-a982-6f24d4bd76fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bell", "::", "usage"}], "=", 
   "\"\<Return circuit that gives bell state 01+10.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bellrev", "::", "usage"}], "=", 
    "\"\<Return circuit that undo bell state 01+10.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["bell", 
   RowBox[{"p_", ",", "q_"}]], ":=", 
  RowBox[{"Sequence", "@@", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["H", "p"], ",", 
     SubscriptBox["X", "q"], ",", 
     RowBox[{
      SubscriptBox["C", "p"], "[", 
      SubscriptBox["X", "q"], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["belle", 
      RowBox[{"p_", ",", "q_"}]], "[", 
     RowBox[{"fid_", ",", "entnoise_"}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ef", "=", 
        RowBox[{"VQD`Private`entfid2DepolDeph", "[", 
         RowBox[{"fid", ",", "entnoise", ",", "FidEnt"}], "]"}]}], "}"}], ",", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["bell", 
          RowBox[{"p", ",", "q"}]], ",", 
         RowBox[{
          SubscriptBox["Depol", 
           RowBox[{"p", ",", "q"}]], "[", 
          RowBox[{"ef", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Deph", 
           RowBox[{"p", ",", "q"}]], "[", 
          RowBox[{"ef", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"distbf", "::", "usage"}], "=", 
   "\"\<\!\(\*SubscriptBox[\(distbf\), \(p, q, r, s\)]\). distillation that \
squeezes bit-flip error of two pairs of entangled states: \
|\!\(\*SubscriptBox[\(\[CapitalPsi]\), \(p, r\)]\) \!\(\*SubscriptBox[\(\
\[CapitalPsi]\), \(q, s\)]\)>\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"distdeph", "::", "usage"}], "=", 
   "\"\<distdeph. distillation that squeezes dephasing error of two pairs of \
entangled states: |\!\(\*SubscriptBox[\(\[CapitalPsi]\), \(p, r\)]\) \
\!\(\*SubscriptBox[\(\[CapitalPsi]\), \(q, s\)]\)>\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["distbf", 
   RowBox[{"p_", ",", "q_", ",", "r_", ",", "s_"}]], ":=", 
  RowBox[{"Sequence", "@@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "r"], "[", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "p"], "[", 
      SubscriptBox["Z", "r"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "r"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "s"], "[", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "q"], "[", 
      SubscriptBox["Z", "s"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "s"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     SubscriptBox["M", "r"], ",", 
     SubscriptBox["M", "s"]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["distdeph", 
   RowBox[{"p_", ",", "q_", ",", "r_", ",", "s_"}]], ":=", 
  RowBox[{"Sequence", "@@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "p"], "[", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "r"], "[", "\[Pi]", "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "p"], "[", 
      SubscriptBox["Z", "r"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "r"], "[", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "q"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "q"], "[", 
      SubscriptBox["Z", "s"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "s"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     SubscriptBox["M", "r"], ",", 
     SubscriptBox["M", "s"]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gatereplace", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["bellerr", 
        RowBox[{"p_", ",", "q_"}]], "[", "a___", "]"}], ":>", 
      RowBox[{
       SubscriptBox["belle", 
        RowBox[{"p", ",", "q"}]], "[", "a", "]"}]}], "}"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.876474117012928*^9, 3.876474155698657*^9}, 
   3.8765637782238092`*^9, {3.876888553055416*^9, 3.876888585158914*^9}, {
   3.8768886480133142`*^9, 3.8768886489735107`*^9}, {3.87688938161617*^9, 
   3.876889406748425*^9}, {3.883501802238214*^9, 3.8835019509853563`*^9}, {
   3.883502147217538*^9, 3.8835021580105667`*^9}, {3.883735073934157*^9, 
   3.8837350876507893`*^9}, {3.883735608809196*^9, 3.883735614033956*^9}, {
   3.883735678584394*^9, 3.883735742959321*^9}, {3.88373580111397*^9, 
   3.88373582959094*^9}, {3.883736275103396*^9, 3.8837362878712177`*^9}, {
   3.8837363247920218`*^9, 3.883736370565827*^9}, {3.8837364180025873`*^9, 
   3.88373651078491*^9}, {3.8837366906322536`*^9, 3.883736714231583*^9}},
 CellLabel->
  "In[488]:=",ExpressionUUID->"c55e2d23-0f8a-449c-8c9b-78b7eb08b4ea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DistillationCircuit", "::", "usage"}], "=", 
   "\"\<DistillationCircuit[rounds:[0-2], ent_fidelity, error_fraction, \
method:[0-3]]. \nReturns the whole distillation simulation circuit. Method:\n\
0 {distdeph, distdeph, ... ,distdeph}\n1 {distbf, distbf, ... , distbf}\n2 \
{distdeph, distbf, distdeph, ...}\n3 {distbf, distdeph, distbf, ... }\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DistillationCircuit", "[", 
   RowBox[{"nrounds_", ",", "fident_", ",", "errfrac_", ",", 
    RowBox[{"methode_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"circ", "=", 
       RowBox[{"<|", "|>"}]}], ",", 
      RowBox[{"totalcirc", "=", 
       RowBox[{"{", "}"}]}], ",", "diststep", ",", "seq"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["diststep", "q__"], ":=", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"0", "->", 
         SubscriptBox["distdeph", "q"]}], ",", 
        RowBox[{"1", "->", 
         SubscriptBox["distbf", "q"]}]}], "|>"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"seq", "=", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", "nrounds"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"1", "->", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", "nrounds"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"2", "->", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OddQ", "[", "r", "]"}], ",", "0", ",", "1"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"3", "->", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OddQ", "[", "r", "]"}], ",", "1", ",", "0"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "total", " ", "circuit", " ", "for", " ", "every", " ", "round"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"circ", "=", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"nrounds", "==", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["bellerr", 
           RowBox[{"0", ",", "1"}]], "[", 
          RowBox[{"fident", ",", "errfrac"}], "]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"nrounds", "==", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"0", ",", "1"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"2", ",", "3"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["diststep", 
            RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
           RowBox[{
            RowBox[{"seq", "[", "methode", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"nrounds", "==", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"0", ",", "1"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"2", ",", "3"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["diststep", 
            RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
           RowBox[{
            RowBox[{"seq", "[", "methode", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          SubscriptBox["SWAP", 
           RowBox[{"0", ",", "4"}]], ",", 
          SubscriptBox["SWAP", 
           RowBox[{"1", ",", "5"}]], ",", "\[IndentingNewLine]", "\t", 
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"0", ",", "1"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["bellerr", 
            RowBox[{"2", ",", "3"}]], "[", 
           RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["diststep", 
            RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
           RowBox[{
            RowBox[{"seq", "[", "methode", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["diststep", 
            RowBox[{"0", ",", "1", ",", "4", ",", "5"}]], "[", 
           RowBox[{
            RowBox[{"seq", "[", "methode", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", "circ"}]}],
    "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.876477920363007*^9, 3.8764779655372057`*^9}, {
   3.876478169422557*^9, 3.8764784407026377`*^9}, {3.876479629215251*^9, 
   3.876479709764594*^9}, {3.876545879905179*^9, 3.8765459646376543`*^9}, {
   3.876546002358199*^9, 3.876546208651536*^9}, {3.8765463361616793`*^9, 
   3.8765464807425547`*^9}, {3.8765468541924667`*^9, 3.876547306593685*^9}, {
   3.876547341470606*^9, 3.876547384869872*^9}, {3.8765474449954557`*^9, 
   3.876547492019656*^9}, {3.876547543072007*^9, 3.876547580238459*^9}, {
   3.8765476326563063`*^9, 3.876547635392393*^9}, {3.8765482779766693`*^9, 
   3.8765483785225077`*^9}, {3.876548482233109*^9, 3.876548681863904*^9}, {
   3.87654970015764*^9, 3.876549776461742*^9}, {3.876549819526986*^9, 
   3.8765498449554777`*^9}, {3.8765498908424892`*^9, 3.8765499000924187`*^9}, 
   3.876557648650201*^9, {3.87655793995532*^9, 3.8765579840071793`*^9}, {
   3.8765580415098343`*^9, 3.876558053250574*^9}, {3.876558746752141*^9, 
   3.87655880182299*^9}, {3.876559567887268*^9, 3.876559593429453*^9}, {
   3.876559625289089*^9, 3.876559664930505*^9}, 3.876561678687051*^9, {
   3.8765617174820127`*^9, 3.876561730979945*^9}, {3.8765618938238497`*^9, 
   3.876562024396269*^9}, {3.876562218297768*^9, 3.876562243867091*^9}, {
   3.87656228140952*^9, 3.876562338214355*^9}, {3.876562458215062*^9, 
   3.8765625132189703`*^9}, {3.876562704966612*^9, 3.876562932053666*^9}, {
   3.876562996202396*^9, 3.876563072809422*^9}, {3.8765631106940203`*^9, 
   3.876563113715939*^9}, {3.8766344361284103`*^9, 3.8766344379162083`*^9}, 
   3.88373654186012*^9, 3.8837367172017927`*^9, {3.8837369657033443`*^9, 
   3.88373697224293*^9}, {3.8837370400989237`*^9, 3.883737101821054*^9}, {
   3.8837371357613697`*^9, 3.883737151397039*^9}, 
   3.883739400367062*^9},ExpressionUUID->"0a7225d4-f3e3-4f53-ae7e-\
0b8c52676e74"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DistFid", "::", "usage"}], "=", 
   "\"\<DistFid[nrounds,fident,errfrac,methode:[0-3]]. Return fidelity of a \
distillation process with native gates of trapped ions.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DistFid", "[", 
   RowBox[{"nrounds_", ",", "fident_", ",", "errfrac_", ",", 
    RowBox[{"methode_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nq", ",", "circ", ",", "q1", ",", "q2", ",", "\[Rho]", ",", "\[Rho]2", 
      ",", "\[Psi]2", ",", "fid", ",", "out"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nq", "=", 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "nrounds"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Rho]", "=", 
      RowBox[{"CreateDensityQureg", "[", "nq", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]2", "=", 
      RowBox[{"CreateDensityQureg", "[", "2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]2", "=", 
      RowBox[{"CreateQureg", "[", "2", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{
       RowBox[{"InitZeroState", "@", "\[Psi]2"}], ",", 
       RowBox[{"{", 
        SubscriptBox["bell", 
         RowBox[{"0", ",", "1"}]], "}"}]}], "]"}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"circ", "=", 
      RowBox[{
       RowBox[{"DistillationCircuit", "[", 
        RowBox[{"nrounds", ",", "fident", ",", "errfrac", ",", "methode"}], 
        "]"}], "/.", "gatereplace"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"out", "=", 
         RowBox[{"Flatten", "@", 
          RowBox[{"ApplyCircuit", "[", 
           RowBox[{
            RowBox[{"InitZeroState", "@", "\[Rho]"}], ",", "circ"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"AllTrue", "[", 
           RowBox[{"out", ",", 
            RowBox[{
             RowBox[{"#", "==", "0"}], "&"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SetQuregMatrix", "[", 
            RowBox[{"\[Rho]2", ",", 
             RowBox[{"PartialTrace", "[", 
              RowBox[{"\[Rho]", ",", 
               RowBox[{"Sequence", "@@", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"nq", "-", "1"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}], "]"}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"fid", "=", 
      RowBox[{"CalcFidelity", "[", 
       RowBox[{"\[Rho]2", ",", "\[Psi]2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DestroyQureg", "/@", 
      RowBox[{"{", 
       RowBox[{"\[Rho]", ",", "\[Rho]2", ",", "\[Psi]2"}], "}"}]}], ";", 
     "\[IndentingNewLine]", "fid"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.876547386659213*^9, 3.876547401660595*^9}, {
   3.876547448336645*^9, 3.876547518648096*^9}, {3.8765476410015917`*^9, 
   3.876547641385591*^9}, {3.8765501445685863`*^9, 3.876550170218279*^9}, {
   3.876550353212078*^9, 3.876550370635606*^9}, {3.876550520033969*^9, 
   3.876550526027953*^9}, {3.8765510353649893`*^9, 3.876551098147965*^9}, {
   3.87655112903826*^9, 3.876551168691835*^9}, {3.876551308407734*^9, 
   3.876551405296711*^9}, {3.8765514492406883`*^9, 3.876551514487034*^9}, {
   3.876551565893002*^9, 3.876551626972477*^9}, {3.876559762094717*^9, 
   3.8765600214656982`*^9}, {3.876560060615821*^9, 3.876560202767292*^9}, {
   3.876560241380857*^9, 3.876560242418663*^9}, {3.876560563949051*^9, 
   3.876560564266802*^9}, {3.87656062390023*^9, 3.876560657000717*^9}, {
   3.876560799472308*^9, 3.8765608256851463`*^9}, {3.8765608689446917`*^9, 
   3.876560952883531*^9}, {3.876561059956852*^9, 3.8765610949418497`*^9}, {
   3.87656129625931*^9, 3.8765612977725286`*^9}, {3.876561374256624*^9, 
   3.876561416619288*^9}, 3.8768310732776613`*^9, {3.8837365929141197`*^9, 
   3.8837366052282963`*^9}, {3.8837369894079514`*^9, 3.883736990067255*^9}, {
   3.883737110062389*^9, 3.8837371175464983`*^9}},
 CellLabel->
  "In[591]:=",ExpressionUUID->"148ece78-3408-4785-82fe-e9d700a8bfb2"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Fnal fidelity of Ideal distrillation circuits for up \
to two-rounds of distillations with various proportion of Depol:Deph in the \
raw entanglement",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Subsection",
 CellChangeTimes->{{3.876214363285668*^9, 3.8762143842813168`*^9}, {
  3.8765632985853643`*^9, 3.876563308034465*^9}, {3.8837366423730307`*^9, 
  3.883736662801868*^9}, {3.883739750743412*^9, 
  3.8837397875098047`*^9}},ExpressionUUID->"52f3a935-6289-4dc5-91d6-\
26daa61c56f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fidEnt", "=", "0.985"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"entanglement", " ", "fidelity"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deph", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "1", ",", "0.25"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8763308888540373`*^9, 3.876330893347539*^9}, {
   3.8764589565851583`*^9, 3.876458956771167*^9}, {3.8765634639205914`*^9, 
   3.876563477085387*^9}, {3.876563563698365*^9, 3.8765635767841043`*^9}, {
   3.876563931402649*^9, 3.876563936524578*^9}, {3.8768901532611647`*^9, 
   3.8768901710675383`*^9}, {3.8836527636022053`*^9, 3.88365276780764*^9}, 
   3.883736612395555*^9},
 CellLabel->
  "In[474]:=",ExpressionUUID->"0da992e8-3315-43a0-8d59-4b6929991a1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fids", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"methode", "->", 
       RowBox[{"Association", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "->", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"round", ",", 
               RowBox[{"DistFid", "[", 
                RowBox[{"round", ",", "fidEnt", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "-", "#"}], ",", "#"}], "}"}], ",", 
                 "methode"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"round", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "&"}], 
         "/@", "deph"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"methode", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.876213751783526*^9, 3.876213811187251*^9}, {
   3.8762138539281178`*^9, 3.876213997020029*^9}, {3.8762141098506823`*^9, 
   3.876214124420178*^9}, {3.8762142408178043`*^9, 3.876214361731295*^9}, {
   3.876214403629176*^9, 3.876214424616589*^9}, {3.876214466277178*^9, 
   3.876214466902731*^9}, {3.876218483781685*^9, 3.876218489844524*^9}, {
   3.8762859871057253`*^9, 3.876286022993595*^9}, {3.876286078887978*^9, 
   3.876286084295339*^9}, {3.876286427116728*^9, 3.8762864301653957`*^9}, 
   3.876330887253578*^9, {3.876330991230256*^9, 3.876330991975128*^9}, {
   3.8764588159700613`*^9, 3.876458828105505*^9}, {3.8764598061249104`*^9, 
   3.876459806577237*^9}, {3.876459844471683*^9, 3.8764598448857203`*^9}, {
   3.876460258086985*^9, 3.876460308510397*^9}, {3.876460831761046*^9, 
   3.8764608361238937`*^9}, {3.876460952092355*^9, 3.876461055169923*^9}, 
   3.876461108915922*^9, {3.876461395943452*^9, 3.876461400083021*^9}, {
   3.876563322317007*^9, 3.876563374005004*^9}, {3.876563431017005*^9, 
   3.876563442120864*^9}, {3.876563600280313*^9, 3.876563633482182*^9}, {
   3.8765637179943047`*^9, 3.8765637347510777`*^9}, {3.876563804966598*^9, 
   3.876563807213835*^9}, {3.876563911347207*^9, 3.876563954745625*^9}, {
   3.8765642777343884`*^9, 3.876564382089037*^9}, {3.8765644460427322`*^9, 
   3.8765644519669323`*^9}, {3.8765645079266253`*^9, 3.876564508843525*^9}, {
   3.876564596927185*^9, 3.876564599821385*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"5ff0830e-ec66-4e68-ab7e-6625c80a74b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"title", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"0", "->", "\"\<deph-deph\>\""}], ",", 
     RowBox[{"1", "->", "\"\<bf-bf\>\""}], ",", 
     RowBox[{"2", "->", "\"\<deph-bf\>\""}], ",", 
     RowBox[{"3", "->", "\"\<bf-deph\>\""}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"minval", "=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Values", "[", 
          RowBox[{"fids", "[", "methode", "]"}], "]"}], ",", "1"}], "]"}], 
       "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"maxval", "=", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Values", "[", 
           RowBox[{"fids", "[", "methode", "]"}], "]"}], ",", "1"}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", "0.002"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Values", "@", 
         RowBox[{"fids", "[", "methode", "]"}]}], ",", 
        RowBox[{"PlotLegends", "->", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Keys", "@", 
            RowBox[{"fids", "[", "methode", "]"}]}], ",", "Below"}], "]"}]}], 
        ",", 
        RowBox[{"PlotLabel", "->", 
         RowBox[{"title", "[", "methode", "]"}]}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Values", "@", 
         RowBox[{"fids", "[", "methode", "]"}]}], ",", 
        RowBox[{"Joined", "->", "True"}]}], "]"}], ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", "Automatic"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01"}], ",", "2.02"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"minval", ",", "maxval"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"Keys", "@", 
          RowBox[{"fids", "[", "methode", "]"}]}], ",", "Below"}], "]"}]}], 
      ",", 
      RowBox[{"ImageSize", "->", "200"}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameTicks", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", "Automatic"}], 
        "}"}]}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"minval", ",", "maxval", ",", "0.002"}], "]"}]}], "}"}]}]}],
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"methode", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.876563838279585*^9, 3.876563846236158*^9}, {
  3.876563977227118*^9, 3.8765639773914957`*^9}, {3.876564118485738*^9, 
  3.87656412211474*^9}, {3.8765641620670547`*^9, 3.8765642002483807`*^9}, {
  3.876564555235421*^9, 3.8765645566840887`*^9}, {3.876564622331937*^9, 
  3.876564683403564*^9}, {3.876564749336241*^9, 3.876564792587319*^9}, {
  3.8765648323340187`*^9, 3.876564862046945*^9}, {3.8765650609768753`*^9, 
  3.876565120356444*^9}, {3.876565166053627*^9, 3.876565241963285*^9}, {
  3.876565296737185*^9, 3.876565297274932*^9}, {3.876565342232512*^9, 
  3.8765653671150827`*^9}, {3.876565510202269*^9, 3.87656554520549*^9}, {
  3.876565642737241*^9, 3.876565680293283*^9}, {3.883497302392915*^9, 
  3.8834973250136013`*^9}, {3.883736634789474*^9, 3.883736634986823*^9}},
 CellLabel->
  "In[476]:=",ExpressionUUID->"2624b3bd-63bf-4ade-9776-6d103180a0ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000032}, {1., 0.9898490104060467}, {2., 
            0.9997928641440063}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000085}, {1., 0.9919663183046213}, {2., 
            0.9997984809778828}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000081}, {1., 0.99431233748203}, {2., 
            0.9997662453376889}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999907}, {1., 0.9969073395012427}, {2., 
            0.9996838060298074}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999997}, {1., 0.9997681487969496}, {2., 
            0.9995364051038603}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000032}, {1., 0.9898490104060467}, {2., 
            0.9997928641440063}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000085}, {1., 0.9919663183046213}, {2., 
            0.9997984809778828}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000081}, {1., 0.99431233748203}, {2., 
            0.9997662453376889}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999907}, {1., 0.9969073395012427}, {2., 
            0.9996838060298074}}]}, {
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999997}, {1., 0.9997681487969496}, {2., 
            0.9995364051038603}}]}}}, {{}, {}}}}, {Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, 
       PlotRange -> {{-0.01, 2.02}, {0.9849999999999907, 
        1.0017984809778828`}}, PlotLegends -> 
       Placed[{0., 0.25, 0.5, 0.75, 1.}, Below], ImageSize -> 200, Frame -> 
       True, FrameTicks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, FrameStyle -> 
       Directive[
         GrayLevel[0], 
         Thickness[Large]], 
       GridLines -> {
        None, {0.9849999999999907, 0.9869999999999907, 0.9889999999999907, 
         0.9909999999999907, 0.9929999999999907, 0.9949999999999907, 
         0.9969999999999907, 0.9989999999999907, 1.0009999999999906`}}, 
       DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0.984177862167888}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"deph-deph\"", TraditionalForm], 
       PlotRange -> {{0, 2.}, {0.984177862167888, 0.9997984809778828}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"0.`", "0.25`", "0.5`", "0.75`", "1.`"}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "False", ",", "False", ",", "False", ",", "False", ",", 
                   "False"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000032}, {1., 0.9898490104060323}, {2., 
            0.9801020047948839}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000085}, {1., 0.9856346964838619}, {2., 
            0.971802068828327}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000081}, {1., 0.9810121859819404}, {2., 
            0.9628027954577363}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999907}, {1., 0.9759559398187084}, {2., 
            0.953083494324963}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999997}, {1., 0.9704499999999999}, {2., 
            0.9426464049999999}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000032}, {1., 0.9898490104060323}, {2., 
            0.9801020047948839}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000085}, {1., 0.9856346964838619}, {2., 
            0.971802068828327}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000081}, {1., 0.9810121859819404}, {2., 
            0.9628027954577363}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999907}, {1., 0.9759559398187084}, {2., 
            0.953083494324963}}]}, {
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999997}, {1., 0.9704499999999999}, {2., 
            0.9426464049999999}}]}}}, {{}, {}}}}, {Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, 
       PlotRange -> {{-0.01, 2.02}, {0.9426464049999999, 0.9918490104060323}},
        PlotLegends -> Placed[{0., 0.25, 0.5, 0.75, 1.}, Below], ImageSize -> 
       200, Frame -> True, FrameTicks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, FrameStyle -> 
       Directive[
         GrayLevel[0], 
         Thickness[Large]], 
       GridLines -> {
        None, {0.9426464049999999, 0.9446464049999999, 0.9466464049999999, 
         0.9486464049999999, 0.9506464049999999, 0.9526464049999999, 
         0.9546464049999999, 0.9566464049999999, 0.9586464049999999, 
         0.9606464049999999, 0.9626464049999999, 0.9646464049999999, 
         0.9666464049999999, 0.9686464049999999, 0.9706464049999999, 
         0.9726464049999999, 0.9746464049999999, 0.9766464049999999, 
         0.9786464049999999, 0.9806464049999999, 0.9826464049999999, 
         0.9846464049999999, 0.9866464049999999, 0.9886464049999999, 
         0.9906464049999999}}, DisplayFunction -> Identity, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0.9400240380330004}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"bf-bf\"", TraditionalForm], 
       PlotRange -> {{0, 2.}, {0.9400240380330004, 0.9898490104060323}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"0.`", "0.25`", "0.5`", "0.75`", "1.`"}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "False", ",", "False", ",", "False", ",", "False", ",", 
                   "False"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000032}, {1., 0.9898490104060467}, {2., 
            0.980102004794912}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000085}, {1., 0.9919663183046213}, {2., 
            0.9843064908238817}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000081}, {1., 0.99431233748203}, {2., 
            0.9889922373014054}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999907}, {1., 0.9969073395012427}, {2., 
            0.9942085823095846}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999997}, {1., 0.9997681487969496}, {2., 
            0.9999999462200876}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000032}, {1., 0.9898490104060467}, {2., 
            0.980102004794912}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000085}, {1., 0.9919663183046213}, {2., 
            0.9843064908238817}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000081}, {1., 0.99431233748203}, {2., 
            0.9889922373014054}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999907}, {1., 0.9969073395012427}, {2., 
            0.9942085823095846}}]}, {
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999997}, {1., 0.9997681487969496}, {2., 
            0.9999999462200876}}]}}}, {{}, {}}}}, {Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, 
       PlotRange -> {{-0.01, 2.02}, {0.980102004794912, 1.0019999462200875`}},
        PlotLegends -> Placed[{0., 0.25, 0.5, 0.75, 1.}, Below], ImageSize -> 
       200, Frame -> True, FrameTicks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, FrameStyle -> 
       Directive[
         GrayLevel[0], 
         Thickness[Large]], 
       GridLines -> {
        None, {0.980102004794912, 0.982102004794912, 0.984102004794912, 
         0.9861020047949121, 0.9881020047949121, 0.9901020047949121, 
         0.9921020047949121, 0.9941020047949121, 0.9961020047949121, 
         0.9981020047949121, 1.000102004794912}}, DisplayFunction -> Identity,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0.9789965636046271}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"deph-bf\"", TraditionalForm], 
       PlotRange -> {{0, 2.}, {0.9789965636046271, 0.9999999462200876}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"0.`", "0.25`", "0.5`", "0.75`", "1.`"}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "False", ",", "False", ",", "False", ",", "False", ",", 
                   "False"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000032}, {1., 0.9898490104060323}, {2., 
            0.9997928641440063}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000085}, {1., 0.9856346964838619}, {2., 
            0.9997250226587283}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9850000000000081}, {1., 0.9810121859819404}, {2., 
            0.9995951642115222}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999907}, {1., 0.9759559398187084}, {2., 
            0.9993851521461521}}]}, {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{{0., 0.9849999999999997}, {1., 0.9704499999999999}, {2., 
            0.9990736690922827}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000032}, {1., 0.9898490104060323}, {2., 
            0.9997928641440063}}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000085}, {1., 0.9856346964838619}, {2., 
            0.9997250226587283}}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9850000000000081}, {1., 0.9810121859819404}, {2., 
            0.9995951642115222}}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999907}, {1., 0.9759559398187084}, {2., 
            0.9993851521461521}}]}, {
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{0., 0.9849999999999997}, {1., 0.9704499999999999}, {2., 
            0.9990736690922827}}]}}}, {{}, {}}}}, {Ticks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, 
       PlotRange -> {{-0.01, 2.02}, {0.9704499999999999, 
        1.0017928641440061`}}, PlotLegends -> 
       Placed[{0., 0.25, 0.5, 0.75, 1.}, Below], ImageSize -> 200, Frame -> 
       True, FrameTicks -> {{{0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}, {2, 
           FormBox["2", TraditionalForm]}}, Automatic}, FrameStyle -> 
       Directive[
         GrayLevel[0], 
         Thickness[Large]], 
       GridLines -> {
        None, {0.9704499999999999, 0.9724499999999999, 0.9744499999999999, 
         0.9764499999999999, 0.9784499999999999, 0.9804499999999999, 
         0.9824499999999999, 0.9844499999999999, 0.9864499999999999, 
         0.9884499999999999, 0.9904499999999999, 0.9924499999999999, 0.99445, 
         0.99645, 0.99845, 1.0004499999999998`}}, DisplayFunction -> Identity,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0.9688198408808908}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"bf-deph\"", TraditionalForm], 
       PlotRange -> {{0, 2.}, {0.9688198408808908, 0.9997928641440063}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"0.`", "0.25`", "0.5`", "0.75`", "1.`"}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "False", ",", "False", ",", "False", ",", "False", ",", 
                   "False"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{{3.8765646639285707`*^9, 3.876564684111384*^9}, 
   3.8765647245547113`*^9, {3.876564766266584*^9, 3.8765647928095083`*^9}, 
   3.876564866089015*^9, {3.876565066556601*^9, 3.87656512072897*^9}, 
   3.876565222351822*^9, 3.876565297765954*^9, {3.8765653491637707`*^9, 
   3.876565368079028*^9}, 3.876565546085031*^9, {3.8765656727782497`*^9, 
   3.876565680957061*^9}, 3.876830820251498*^9, {3.876890159468958*^9, 
   3.876890175710435*^9}, 3.876891218254752*^9, 3.8769092951011257`*^9, 
   3.876909402406783*^9, 3.876909610329509*^9, 3.876909668247697*^9, 
   3.876911627623735*^9, 3.8769803303848047`*^9, 3.876983365286839*^9, 
   3.876983481006316*^9, 3.876998959025387*^9, 3.8770633656353817`*^9, 
   3.877064071524036*^9, 3.880183078436434*^9, 3.8824328831847353`*^9, 
   3.8834880771922827`*^9, 3.8834971783746634`*^9, {3.8834973033209667`*^9, 
   3.883497325869835*^9}, 3.8835019635362177`*^9, 3.883548858914933*^9, 
   3.883550345338009*^9, 3.883627245135475*^9, 3.883635336104039*^9, {
   3.8836355048260317`*^9, 3.883635543355393*^9}, 3.883635598077281*^9, {
   3.883635633814991*^9, 3.883635662430431*^9}, {3.883635764363958*^9, 
   3.883635779478753*^9}, 3.883635853493741*^9, 3.883636044185318*^9, {
   3.883636082975428*^9, 3.883636103376368*^9}, 3.883636140569358*^9, 
   3.883636293461959*^9, 3.883636369908062*^9, 3.883636406117544*^9, 
   3.883644275730802*^9, 3.883644568756353*^9, 3.883645786184936*^9, 
   3.883649033962431*^9, 3.883649736375914*^9, 3.8837338274026413`*^9, 
   3.883733930444668*^9, 3.883736301039033*^9, {3.883736518683839*^9, 
   3.883736527058511*^9}, 3.88373663540611*^9},
 CellLabel->
  "Out[477]=",ExpressionUUID->"5963e557-46b1-41b2-811f-7bbb058994fc"]
}, Open  ]],

Cell[TextData[StyleBox["Density matrix styling",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8768907130573893`*^9, 3.876890720882328*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"2cdcbd35-c15a-47d0-934d-3ac26b9a3ac0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"chartstyle", "[", "label_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"BarSpacing", "\[Rule]", "0.1`"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "height", "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"height", "<=", 
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]]}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}], "[", 
           RowBox[{"1", "+", 
            RowBox[{"0.1", "*", 
             RowBox[{"Log", "@", "height"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "\"\<Pastel\>\"", "]"}], "[", 
           RowBox[{"10", "*", "height"}], "]"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"ChartElementFunction", "->", "\"\<Cube\>\""}], ",", 
     RowBox[{"ChartStyle", "->", 
      RowBox[{"EdgeForm", "[", "Thick", "]"}]}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Business\>\""}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<00\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<01\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<10\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<11\>\""}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<00\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<01\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<10\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<11\>\""}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", "Black"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "->", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"label", ",", "Thick", ",", "17"}], "]"}], ",", 
        RowBox[{"ImageScaled", "[", 
         RowBox[{"{", 
          RowBox[{".2", ",", ".7"}], "}"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
     "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.876387814052075*^9, 3.876387919186067*^9}, {
   3.8763879604066668`*^9, 3.87638799070963*^9}, {3.876388040702815*^9, 
   3.8763880645834827`*^9}, 3.8763880975070353`*^9, {3.8763881874275303`*^9, 
   3.876388190049057*^9}, {3.876406559476883*^9, 3.876406560516448*^9}, {
   3.87640682720898*^9, 3.876406874735072*^9}, {3.876406914907761*^9, 
   3.876406981284309*^9}, {3.876407044365756*^9, 3.876407143770425*^9}, {
   3.87645731976475*^9, 3.876457427168351*^9}, {3.876457496107978*^9, 
   3.876457496847908*^9}, {3.876889775551379*^9, 3.8768897860666237`*^9}, {
   3.87688984071742*^9, 3.8768899010624323`*^9}, {3.876889964440153*^9, 
   3.8768899718116207`*^9}, {3.87689000600463*^9, 3.8768900166430798`*^9}, {
   3.876891490624825*^9, 3.8768914925099707`*^9}, {3.876891642930756*^9, 
   3.876891644774102*^9}, {3.8768916808637877`*^9, 3.8768917409838257`*^9}, {
   3.876891783442519*^9, 3.876891802466153*^9}, {3.876891989989409*^9, 
   3.87689199387726*^9}, {3.8768920430382137`*^9, 3.876892043506853*^9}, {
   3.876892265894343*^9, 3.876892273915962*^9}, {3.876899080239559*^9, 
   3.876899087029848*^9}, {3.8769093903686113`*^9, 3.876909395394917*^9}, {
   3.876999615559959*^9, 3.8769996209559193`*^9}, {3.877002377872958*^9, 
   3.877002380404687*^9}},
 CellLabel->
  "In[391]:=",ExpressionUUID->"78a44d5b-d75d-4c68-96ab-221b2b7e5a73"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"chartbell", "[", "label_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"BarSpacing", "\[Rule]", "0.1`"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "height", "}"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}], "[", 
         "height", "]"}]}], "]"}]}], ",", 
     RowBox[{"ChartElementFunction", "->", "\"\<Cube\>\""}], ",", 
     RowBox[{"ChartStyle", "->", 
      RowBox[{"EdgeForm", "[", "Thick", "]"}]}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Business\>\""}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<\[CapitalPhi]+\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<\[CapitalPhi]-\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<\[CapitalPsi]+\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<\[CapitalPsi]-\>\""}], "}"}]}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\"\<\[CapitalPhi]+\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "\"\<\[CapitalPhi]-\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "\"\<\[CapitalPsi]+\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "\"\<\[CapitalPsi]-\>\""}], "}"}]}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", 
        RowBox[{"FontFamily", "->", "\"\<Helvetica\>\""}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "->", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"label", ",", "17", ",", "Bold"}], "]"}], ",", 
        RowBox[{"ImageScaled", "[", 
         RowBox[{"{", 
          RowBox[{".3", ",", ".9"}], "}"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "4.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "4.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LabelingFunction", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Rotate", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"#", ">=", "0.5"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"NumberForm", "[", 
                 RowBox[{"#", ",", "5"}], "]"}], ",", "13", ",", 
                RowBox[{"GrayLevel", "[", "0.82", "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", ">=", "0.001"}], ")"}], "&&", 
               RowBox[{"(", 
                RowBox[{"#", "<=", "0.1"}], ")"}]}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"NumberForm", "[", 
                 RowBox[{"#", ",", "4"}], "]"}], ",", "10", ",", "Black"}], 
               "]"}], ",", "\[IndentingNewLine]", "True", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"ScientificForm", "[", 
                 RowBox[{"#", ",", "2"}], "]"}], ",", "10", ",", "Black"}], 
               "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
            ",", "\[IndentingNewLine]", 
            RowBox[{"90", " ", "Degree"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", ">", "0.1"}], ",", "Center", ",", "Above"}], 
           "]"}]}], "]"}], "&"}], ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ViewAngle", "->", "All"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getcolor", "[", "height_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "10"}]], "<", "height", "<=", 
      SuperscriptBox["10", 
       RowBox[{"-", "1"}]]}], ",", 
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<Pastel\>\"", "]"}], "[", 
      RowBox[{"1", "+", 
       RowBox[{"0.1", 
        RowBox[{"Log10", "@", "height"}]}]}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"0", "<=", "height", "<=", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]]}], ",", "White", ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<RoseColors\>\"", "]"}], "[", "height", 
        "]"}]}], "]"}]}], "]"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.876979560148282*^9, 3.876979727614102*^9}, {
   3.8769798068659153`*^9, 3.876979817516808*^9}, {3.8769798483459187`*^9, 
   3.876979861337391*^9}, {3.8769799765825357`*^9, 3.876980001171527*^9}, {
   3.876980035011529*^9, 3.8769802117504387`*^9}, {3.8769803173959923`*^9, 
   3.876980318549447*^9}, 3.876980354229821*^9, {3.876980392044441*^9, 
   3.876980392983427*^9}, {3.876981492300438*^9, 3.8769815209319773`*^9}, {
   3.876981553843145*^9, 3.876981555267664*^9}, {3.876981589466167*^9, 
   3.876981605261683*^9}, {3.87698199053374*^9, 3.876982108670127*^9}, {
   3.876982149405799*^9, 3.8769821943371058`*^9}, {3.876982227121867*^9, 
   3.876982324306407*^9}, {3.8769824123752327`*^9, 3.876982421030588*^9}, {
   3.876982642167547*^9, 3.876982898600312*^9}, {3.876983161410459*^9, 
   3.8769831871263247`*^9}, {3.8769832308550367`*^9, 3.876983244353763*^9}, {
   3.87698350263104*^9, 3.876983505027169*^9}, {3.876985229541142*^9, 
   3.8769852804139957`*^9}, {3.876985347020067*^9, 3.876985380525435*^9}, {
   3.876985422745286*^9, 3.8769854332777233`*^9}, {3.876986579906888*^9, 
   3.876986638004673*^9}, {3.876990648931119*^9, 3.876990658587611*^9}, {
   3.876990710602832*^9, 3.8769910973573303`*^9}, {3.876991147003462*^9, 
   3.8769911477804117`*^9}, {3.876991204480769*^9, 3.876991221131629*^9}, {
   3.8769912522462606`*^9, 3.876991253022316*^9}, {3.876991298027089*^9, 
   3.876991343572694*^9}, {3.876991388601252*^9, 3.8769913904147463`*^9}, 
   3.876991424523377*^9, {3.876991493567006*^9, 3.876991496836388*^9}, {
   3.876991650148239*^9, 3.876991701376438*^9}, {3.8769917788643723`*^9, 
   3.876991826752802*^9}, {3.876991868817513*^9, 3.8769918720622997`*^9}, {
   3.87699190455686*^9, 3.876991975185678*^9}, {3.8769920070529423`*^9, 
   3.876992034767621*^9}, {3.8769920756831627`*^9, 3.876992237092181*^9}, {
   3.876992326800829*^9, 3.876992362209342*^9}, {3.876992426570319*^9, 
   3.8769926748499603`*^9}, 3.876992708671*^9, {3.8769929596081667`*^9, 
   3.8769930276467123`*^9}, {3.8769931279324903`*^9, 3.876993148431003*^9}, {
   3.876993198352371*^9, 3.876993198911695*^9}, 3.876993321541947*^9, 
   3.8769933796337833`*^9, {3.8769934313006077`*^9, 3.876993431760426*^9}, {
   3.8769935025002604`*^9, 3.876993523725471*^9}, {3.876993583904016*^9, 
   3.876993660896109*^9}, {3.876993716002076*^9, 3.876993716091022*^9}, {
   3.876999921051279*^9, 3.8769999835741653`*^9}, {3.877000135451353*^9, 
   3.8770001367177134`*^9}, {3.8770002434122553`*^9, 
   3.8770002789390078`*^9}, {3.87700037136974*^9, 3.877000392989847*^9}, {
   3.877000520125592*^9, 3.877000536276731*^9}, {3.8770007286724777`*^9, 
   3.877000902662283*^9}, {3.8770009398885813`*^9, 3.87700094028021*^9}, {
   3.877000975545061*^9, 3.8770009875300007`*^9}, {3.877001018450697*^9, 
   3.877001139307369*^9}, {3.877001265602689*^9, 3.877001397036653*^9}, {
   3.87700145352922*^9, 3.877001480443802*^9}, {3.8770021755486383`*^9, 
   3.877002246436224*^9}, {3.877002322475328*^9, 3.8770023317738867`*^9}, {
   3.87700238386043*^9, 3.8770025975733347`*^9}, {3.877002651321547*^9, 
   3.877002651531856*^9}, {3.877002726050808*^9, 3.877002830436611*^9}, {
   3.877002961346847*^9, 3.877002963693899*^9}, {3.877003051266088*^9, 
   3.877003051639925*^9}, {3.877003308813829*^9, 3.87700330913456*^9}, {
   3.882433582294565*^9, 3.882433589058144*^9}, {3.8836354787933197`*^9, 
   3.883635539718422*^9}, {3.883635576179627*^9, 3.883635657808833*^9}, 
   3.883635701936564*^9, {3.883635741051195*^9, 3.8836357744559383`*^9}, {
   3.8836358470634327`*^9, 3.883636136997737*^9}, {3.8836362825177107`*^9, 
   3.8836362893571157`*^9}, {3.8836363247713327`*^9, 3.883636365011752*^9}, 
   3.883636396527158*^9},
 CellLabel->
  "In[392]:=",ExpressionUUID->"f60c26c3-9869-49be-9a0e-e82ee5d8c8a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perfect distillation circuits with noisy remote entanglement", "Section",
 CellChangeTimes->{{3.876888411050728*^9, 3.876888426377926*^9}, {
  3.883738264496921*^9, 3.8837382661569357`*^9}, {3.8837384630144987`*^9, 
  3.8837384820994263`*^9}},ExpressionUUID->"803e1800-72f5-4633-89e2-\
a1051e58802e"],

Cell[TextData[StyleBox["Bell basis transformation",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.876889546872444*^9, 
  3.876889551176429*^9}},ExpressionUUID->"5100e1ec-aa1b-4755-8651-\
38f0df16479e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mat2BellBasis", "[", "m_", "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "2"}]}], ")"}], "*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], "}"}]}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"pinv", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"\[Sqrt]", "2"}]}], ")"}], "*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]}], "}"}]}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"pinv", ".", "m", ".", "p"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8768885261541557`*^9, 3.8768885341943502`*^9}, {
  3.876888628227262*^9, 3.876888662182872*^9}, {3.8768886950472527`*^9, 
  3.8768886965816507`*^9}, {3.876889328642879*^9, 3.876889345422171*^9}, {
  3.876889439950932*^9, 3.8768895176394978`*^9}, {3.8837370150048923`*^9, 
  3.883737020901533*^9}, {3.8837394106095457`*^9, 3.883739491942389*^9}},
 CellLabel->
  "In[693]:=",ExpressionUUID->"03e5b243-f124-4461-8871-1233f93d5b42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DistillationCircuit"}]], "Input",
 CellChangeTimes->{{3.876890235508382*^9, 3.876890240545741*^9}, {
  3.883737029790081*^9, 3.883737030382901*^9}},
 CellLabel->
  "In[600]:=",ExpressionUUID->"b2885880-841b-44f4-a3b8-5ce6b7118820"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DistillationCircuit[rounds:[0-2], ent_fidelity, \
error_fraction, method:[0-3]]. \\nReturns the whole distillation simulation \
circuit. Method:\\n0 {distdeph, distdeph, ... ,distdeph}\\n1 {distbf, distbf, \
... , distbf}\\n2 {distdeph, distbf, distdeph, ...}\\n3 {distbf, distdeph, \
distbf, ... }\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DistillationCircuit", "[", 
                    
                    RowBox[{
                    "nrounds_", ",", "fident_", ",", "errfrac_", ",", 
                    RowBox[{"methode_", ":", "0"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"circ", "=", 
                    RowBox[{"Association", "[", "]"}]}], ",", 
                    RowBox[{"totalcirc", "=", 
                    RowBox[{"{", "}"}]}], ",", "diststep", ",", "seq"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["diststep", "q__"], ":=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    SubscriptBox["distdeph", "q"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    SubscriptBox["distbf", "q"]}]}], "]"}]}], ";", 
                    RowBox[{"seq", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", "nrounds"}], "]"}]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", "nrounds"}], "]"}]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OddQ", "[", "r", "]"}], ",", "0", ",", "1"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OddQ", "[", "r", "]"}], ",", "1", ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"circ", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"nrounds", "\[Equal]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], "}"}], ",", 
                    RowBox[{"nrounds", "\[Equal]", "1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"2", ",", "3"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"nrounds", "\[Equal]", "2"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"2", ",", "3"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    SubscriptBox["SWAP", 
                    RowBox[{"0", ",", "4"}]], ",", 
                    SubscriptBox["SWAP", 
                    RowBox[{"1", ",", "5"}]], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"2", ",", "3"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "4", ",", "5"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "]"}]}], "}"}]}], "]"}]}], ";", "circ"}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`DistillationCircuit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DistillationCircuit[rounds:[0-2], ent_fidelity, \
error_fraction, method:[0-3]]. \\nReturns the whole distillation simulation \
circuit. Method:\\n0 {distdeph, distdeph, ... ,distdeph}\\n1 {distbf, distbf, \
... , distbf}\\n2 {distdeph, distbf, distdeph, ...}\\n3 {distbf, distdeph, \
distbf, ... }\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{9., {3., 6.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{9., {3., 6.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DistillationCircuit[rounds:[0-2], ent_fidelity, error_fraction, \
method:[0-3]]. \nReturns the whole distillation simulation circuit. Method:\n\
0 {distdeph, distdeph, ... ,distdeph}\n1 {distbf, distbf, ... , distbf}\n2 \
{distdeph, distbf, distdeph, ...}\n3 {distbf, distdeph, distbf, ... }", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`DistillationCircuit, \
{$CellContext`DistillationCircuit[
         Pattern[$CellContext`nrounds, 
          Blank[]], 
         Pattern[$CellContext`fident, 
          Blank[]], 
         Pattern[$CellContext`errfrac, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`methode, 
           Blank[]], 0]] :> 
       Module[{$CellContext`circ = <||>, $CellContext`totalcirc = {}, \
$CellContext`diststep, $CellContext`seq}, Subscript[$CellContext`diststep, 
            Pattern[$CellContext`q, 
             BlankSequence[]]] := <|
           0 -> Subscript[$CellContext`distdeph, $CellContext`q], 1 -> 
            Subscript[$CellContext`distbf, $CellContext`q]|>; \
$CellContext`seq = <|
           0 -> ConstantArray[0, $CellContext`nrounds], 1 -> 
            ConstantArray[1, $CellContext`nrounds], 2 -> Table[
              If[
               OddQ[$CellContext`r], 0, 
               1], {$CellContext`r, $CellContext`nrounds}], 3 -> Table[
              If[
               OddQ[$CellContext`r], 1, 
               0], {$CellContext`r, $CellContext`nrounds}]|>; \
$CellContext`circ = Which[$CellContext`nrounds == 0, {
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac]}, \
$CellContext`nrounds == 1, {
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac], 
             
             Subscript[$CellContext`bellerr, 2, 
              3][$CellContext`fident, $CellContext`errfrac], 
             Subscript[$CellContext`diststep, 0, 1, 2, 3][
              Part[
               $CellContext`seq[$CellContext`methode], 
               1]]}, $CellContext`nrounds == 2, {
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac], 
             
             Subscript[$CellContext`bellerr, 2, 
              3][$CellContext`fident, $CellContext`errfrac], 
             Subscript[$CellContext`diststep, 0, 1, 2, 3][
              Part[
               $CellContext`seq[$CellContext`methode], 1]], 
             Subscript[QuEST`Gate`SWAP, 0, 4], 
             Subscript[QuEST`Gate`SWAP, 1, 5], 
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac], 
             
             Subscript[$CellContext`bellerr, 2, 
              3][$CellContext`fident, $CellContext`errfrac], 
             Subscript[$CellContext`diststep, 0, 1, 2, 3][
              Part[
               $CellContext`seq[$CellContext`methode], 1]], 
             Subscript[$CellContext`diststep, 0, 1, 4, 5][
              Part[
               $CellContext`seq[$CellContext`methode], 
               2]]}]; $CellContext`circ]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`DistillationCircuit"|>, False]]], "Output",
 CellChangeTimes->{
  3.8768902413085318`*^9, 3.876891218558022*^9, 3.876909295434132*^9, 
   3.876909402719493*^9, 3.8769096105356083`*^9, 3.8769096684424353`*^9, 
   3.87691162784571*^9, 3.876980330578858*^9, 3.876983365482884*^9, 
   3.8769834811905203`*^9, 3.8769989591786137`*^9, 3.877063365843045*^9, 
   3.877064071755576*^9, 3.880183078593059*^9, 3.882432883389853*^9, 
   3.8834880773324823`*^9, 3.883497178585952*^9, 3.8835488590647297`*^9, 
   3.883550345452134*^9, 3.883627245522238*^9, 3.883635336247164*^9, {
   3.883635504929818*^9, 3.88363554345757*^9}, 3.8836355981799593`*^9, {
   3.883635633919673*^9, 3.883635662549172*^9}, {3.8836357644644623`*^9, 
   3.88363577958359*^9}, 3.8836358535961037`*^9, 3.883636044289427*^9, {
   3.88363608307663*^9, 3.883636103479403*^9}, 3.883636140673602*^9, 
   3.8836362935641947`*^9, 3.883636370011026*^9, 3.8836364062191753`*^9, 
   3.883644275879231*^9, 3.8836445689304037`*^9, 3.8836457863469877`*^9, 
   3.88364903416818*^9, 3.8836497365706263`*^9, 3.8837338275870743`*^9, 
   3.88373393061065*^9, 3.883736527190146*^9, 3.883737030775709*^9, {
   3.883737127602916*^9, 3.883737156186366*^9}},
 CellLabel->
  "Out[600]=",ExpressionUUID->"732737c3-1b28-47c5-abd3-9f5d249a5fbf"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]2", "=", 
   RowBox[{"CreateDensityQureg", "[", "2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]4", "=", 
   RowBox[{"CreateDensityQureg", "[", "4", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]6", "=", 
   RowBox[{"CreateDensityQureg", "[", "6", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.876889583295796*^9, 3.876889588639914*^9}, {
  3.87689030826305*^9, 3.876890319396199*^9}, {3.876891320167832*^9, 
  3.876891325490698*^9}, {3.8769990384746227`*^9, 3.8769990461713867`*^9}},
 CellLabel->
  "In[701]:=",ExpressionUUID->"78af2f09-6876-429d-af29-8eea1e55846f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"**", 
    RowBox[{
    "*", " ", "Change", " ", "the", " ", "error", " ", "fractions", " ", 
     "here", " ", "for", " ", "the", " ", "raw", " ", "entanglement"}]}], " ",
    "****)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ef", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"entfid", "=", "0.96"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8768919411648083`*^9, 3.8768919467524242`*^9}, {
  3.876999659666046*^9, 3.876999665912156*^9}, {3.883737198287574*^9, 
  3.883737253810904*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[705]:=",ExpressionUUID->"08ebf0a3-cdb9-462f-96b8-98669c09e122"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"circ0", "=", 
   RowBox[{
    RowBox[{"DistillationCircuit", "[", 
     RowBox[{"0", ",", "entfid", ",", "ef", ",", "0"}], "]"}], "/.", 
    "gatereplace"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyCircuit", "[", 
   RowBox[{
    RowBox[{"InitZeroState", "@", "\[Rho]2"}], ",", "circ0"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"circ1", "=", 
   RowBox[{
    RowBox[{"DistillationCircuit", "[", 
     RowBox[{"1", ",", "entfid", ",", "ef", ",", "0"}], "]"}], "/.", 
    "gatereplace"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{"True", ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"ApplyCircuit", "[", 
        RowBox[{
         RowBox[{"InitZeroState", "@", "\[Rho]4"}], ",", "circ1"}], "]"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AllTrue", "[", 
        RowBox[{"out", ",", 
         RowBox[{
          RowBox[{"#", "==", "0"}], "&"}]}], "]"}], ",", 
       RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"circ2", "=", 
   RowBox[{
    RowBox[{"DistillationCircuit", "[", 
     RowBox[{"2", ",", "entfid", ",", "ef", ",", "2"}], "]"}], "/.", 
    "gatereplace"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{"True", ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"ApplyCircuit", "[", 
        RowBox[{
         RowBox[{"InitZeroState", "@", "\[Rho]6"}], ",", "circ2"}], "]"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AllTrue", "[", 
        RowBox[{"out", ",", 
         RowBox[{
          RowBox[{"#", "==", "0"}], "&"}]}], "]"}], ",", 
       RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.876888243996686*^9, 3.8768882552187033`*^9}, {
   3.876888400226082*^9, 3.876888406231101*^9}, {3.8768884649610147`*^9, 
   3.876888521348789*^9}, {3.876889524339129*^9, 3.876889570405655*^9}, {
   3.876889673434115*^9, 3.876889676402361*^9}, {3.876889729690185*^9, 
   3.876889731287361*^9}, {3.8768900569149446`*^9, 3.876890059198719*^9}, {
   3.876890259625342*^9, 3.876890271553266*^9}, {3.876999687289558*^9, 
   3.876999690895556*^9}, {3.8769998349297533`*^9, 3.876999840963438*^9}, 
   3.877002669680532*^9, {3.8770559976036386`*^9, 3.8770560182294407`*^9}, {
   3.883737231702311*^9, 3.8837372784245768`*^9}, {3.883739544579938*^9, 
   3.8837395565907927`*^9}},
 CellLabel->
  "In[720]:=",ExpressionUUID->"4a2604f4-2a7c-4e87-bf6a-3f9e80b8ab32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"PlotDensityMatrix", "[", 
     RowBox[{
      RowBox[{"mat2BellBasis", "[", 
       RowBox[{"GetQuregMatrix", "[", "\[Rho]2", "]"}], "]"}], ",", 
      RowBox[{"ImageSize", "->", "Small"}], ",", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"chartbell", "[", "\"\<raw\>\"", "]"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotDensityMatrix", "[", 
     RowBox[{
      RowBox[{"Chop", "@", 
       RowBox[{"mat2BellBasis", "[", 
        RowBox[{"PartialTrace", "[", 
         RowBox[{"\[Rho]4", ",", "2", ",", "3"}], "]"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "->", "Small"}], ",", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"chartbell", "[", "\"\<deph\>\"", "]"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotDensityMatrix", "[", 
     RowBox[{
      RowBox[{"Chop", "@", 
       RowBox[{"mat2BellBasis", "[", 
        RowBox[{"PartialTrace", "[", 
         RowBox[{"\[Rho]6", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], 
        "]"}]}], ",", 
      RowBox[{"ImageSize", "->", "Small"}], ",", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"chartbell", "[", "\"\<deph-bf\>\"", "]"}]}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.876891371473028*^9, 3.8768913841624603`*^9}, {
  3.876891461596216*^9, 3.876891462254135*^9}, {3.876891540471704*^9, 
  3.876891542413032*^9}, {3.8769945105383368`*^9, 3.876994510658186*^9}, {
  3.876999815989627*^9, 3.876999845186116*^9}, {3.877000205165078*^9, 
  3.8770002492586412`*^9}, {3.87700125167542*^9, 3.877001260731296*^9}, {
  3.883738191383771*^9, 3.883738237192892*^9}},
 CellLabel->
  "In[726]:=",ExpressionUUID->"dcb57be1-a4b6-4567-b7cd-a9ee55daccf1"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
     EdgeForm[{
       GrayLevel[0], 
       Opacity[0.1], 
       Thickness[Large]}], 
     StyleBox[{{}, {
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.1], 
          Thickness[Large]}], 
        StyleBox[{{{
            RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9599999999999996}]},
               ImageSizeCache -> {{118.99372071678332`, 
               162.8076271110363}, {-39.17934322699131, 
               27.183060189247982`}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.96\"", ShowStringCharacters -> False], 
                 0.9599999999999996, AutoDelete -> True], NumberForm[#, 5]& ],
                StripOnInput -> False, LineColor -> GrayLevel[0.82], 
               FrontFaceColor -> GrayLevel[0.82], BackFaceColor -> 
               GrayLevel[0.82], GraphicsColor -> GrayLevel[0.82], FontSize -> 
               13, FontColor -> GrayLevel[0.82]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 3., 0.4799999999999998}, {
            0, 0}]}, {{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.04000000000000009}]}, 
              ImageSizeCache -> {{160.18401760363798`, 
               199.89560236984084`}, {-8.741552800409167, 
               19.10089467117018}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.04\"", ShowStringCharacters -> False], 
                 0.04000000000000009, AutoDelete -> True], 
                NumberForm[#, 4]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {4., 4., 
            0.04000000000000009}, {0, -1}]}}, FontColor -> 
         GrayLevel[0.4]]}, {}, {}}, FontColor -> GrayLevel[0.4]]}, 
    Axes -> {True, True, True}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    Boxed -> {Left, Bottom, Back}, Epilog -> InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"raw\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]], 
    FaceGrids -> {{{-1, 0, 0}, {None, Automatic}}, {{0, 1, 0}, {
       None, Automatic}}}, FaceGridsStyle -> Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> Small, LabelStyle -> 
    Directive[Bold, FontFamily -> "Helvetica"], Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, 
    PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
    PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
    TicksStyle -> {Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]}, ViewAngle -> All], 
   Graphics3DBox[{
     RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
     EdgeForm[{
       GrayLevel[0], 
       Opacity[0.1], 
       Thickness[Large]}], 
     StyleBox[{{}, {
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.1], 
          Thickness[Large]}], 
        StyleBox[{{{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.0017331022530329304`}]}, 
              ImageSizeCache -> {{30.595349677663556`, 75.42113228829692}, {
               14.818376013426757`, 44.55737857754864}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.001733\"", ShowStringCharacters -> False], 
                 0.0017331022530329304`, AutoDelete -> True], 
                NumberForm[#, 4]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {1., 1., 
            0.0017331022530329304`}, {0, -1}]}, {{
            RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9982668977469669}]},
               ImageSizeCache -> {{118.99372071678332`, 
               162.92107803519522`}, {-40.840710549699736`, 
               27.183060189247982`}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.99827\"", ShowStringCharacters -> False], 
                 0.9982668977469669, AutoDelete -> True], NumberForm[#, 5]& ],
                StripOnInput -> False, LineColor -> GrayLevel[0.82], 
               FrontFaceColor -> GrayLevel[0.82], BackFaceColor -> 
               GrayLevel[0.82], GraphicsColor -> GrayLevel[0.82], FontSize -> 
               13, FontColor -> GrayLevel[0.82]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 3., 
            0.49913344887348343`}, {0, 0}]}}, FontColor -> 
         GrayLevel[0.4]]}, {}, {}}, FontColor -> GrayLevel[0.4]]}, 
    Axes -> {True, True, True}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    Boxed -> {Left, Bottom, Back}, Epilog -> InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]], 
    FaceGrids -> {{{-1, 0, 0}, {None, Automatic}}, {{0, 1, 0}, {
       None, Automatic}}}, FaceGridsStyle -> Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> Small, LabelStyle -> 
    Directive[Bold, FontFamily -> "Helvetica"], Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, 
    PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
    PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
    TicksStyle -> {Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]}, ViewAngle -> All], 
   Graphics3DBox[{
     RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
     EdgeForm[{
       GrayLevel[0], 
       Opacity[0.1], 
       Thickness[Large]}], 
     StyleBox[{{}, {
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.1], 
          Thickness[Large]}], 
        StyleBox[{{{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                3.014072705461644*^-6}]}, 
              ImageSizeCache -> {{30.60590582698761, 75.42113228829692}, {
               14.885608001012585`, 44.55737857754864}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"3.\"", "\[Times]", 
                    SuperscriptBox["10", "\"-6\""]}], ShowStringCharacters -> 
                  False], 3.014072705461644*^-6, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {1., 1., 
            3.014072705461644*^-6}, {0, -1}]}, {{
            RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9999969859272944}]},
               ImageSizeCache -> {{118.99372071678332`, 
               162.92622178494227`}, {-40.91602990174974, 
               27.183060189247982`}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"1.\"", ShowStringCharacters -> False], 
                 0.9999969859272944, AutoDelete -> True], NumberForm[#, 5]& ],
                StripOnInput -> False, LineColor -> GrayLevel[0.82], 
               FrontFaceColor -> GrayLevel[0.82], BackFaceColor -> 
               GrayLevel[0.82], GraphicsColor -> GrayLevel[0.82], FontSize -> 
               13, FontColor -> GrayLevel[0.82]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 3., 0.4999984929636472}, {
            0, 0}]}}, FontColor -> GrayLevel[0.4]]}, {}, {}}, FontColor -> 
      GrayLevel[0.4]]}, Axes -> {True, True, True}, 
    AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    Boxed -> {Left, Bottom, Back}, Epilog -> InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph-bf\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]], 
    FaceGrids -> {{{-1, 0, 0}, {None, Automatic}}, {{0, 1, 0}, {
       None, Automatic}}}, FaceGridsStyle -> Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> Small, LabelStyle -> 
    Directive[Bold, FontFamily -> "Helvetica"], Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, 
    PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
    PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
    TicksStyle -> {Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]}, ViewAngle -> All]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.877000187672124*^9, 3.877000281501705*^9}, {
   3.877000374426526*^9, 3.877000397714579*^9}, 3.877000576366065*^9, {
   3.87700073187759*^9, 3.877000943200082*^9}, {3.877000978712945*^9, 
   3.8770009972635317`*^9}, {3.8770011081934557`*^9, 
   3.8770011302148848`*^9}, {3.877001271394506*^9, 3.877001368495922*^9}, 
   3.877001399790042*^9, {3.877001457631136*^9, 3.877001484787303*^9}, {
   3.8770021791695623`*^9, 3.8770022059246273`*^9}, {3.877002240705379*^9, 
   3.8770022485992823`*^9}, {3.877002326533038*^9, 3.8770023343857403`*^9}, 
   3.877002387485021*^9, {3.877002438965961*^9, 3.877002599979075*^9}, {
   3.877002654250457*^9, 3.877002673376772*^9}, 3.877002728970887*^9, {
   3.877002813294805*^9, 3.877002838497059*^9}, 3.877002966861452*^9, {
   3.877003031295865*^9, 3.877003054300425*^9}, 3.877004173000166*^9, 
   3.877063366040612*^9, 3.877064071852955*^9, 3.880183078850162*^9, 
   3.882432883499764*^9, 3.883488077425902*^9, 3.8834971787356577`*^9, 
   3.8835022101801453`*^9, 3.8835488591494617`*^9, 3.8835503455191708`*^9, 
   3.883627245730833*^9, 3.883635336307639*^9, {3.88363550501411*^9, 
   3.883635543526462*^9}, 3.8836355982693*^9, {3.8836356339903727`*^9, 
   3.883635662621133*^9}, {3.883635747266815*^9, 3.883635779661784*^9}, 
   3.883635853670209*^9, {3.88363603602773*^9, 3.8836360443655863`*^9}, {
   3.883636083147355*^9, 3.8836361035787163`*^9}, 3.883636140767178*^9, 
   3.8836362936651697`*^9, {3.883636357492972*^9, 3.8836364062870398`*^9}, 
   3.883644276012835*^9, 3.883644569055821*^9, 3.883645786520919*^9, 
   3.883649034274473*^9, 3.883649736711796*^9, 3.883733827679879*^9, 
   3.883733930688118*^9, 3.883736527255308*^9, {3.8837381949103737`*^9, 
   3.883738237708364*^9}, {3.883739512902636*^9, 3.8837395274547977`*^9}, 
   3.883739558952305*^9},
 CellLabel->
  "Out[726]=",ExpressionUUID->"45d75440-c1be-4032-bb8a-1d9fff018ab1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Zero, One, two-rounds of entanglement distillation on trapped ions\
\>", "Section",
 CellChangeTimes->{{3.875818684979363*^9, 3.875818696723239*^9}, {
  3.875818729119232*^9, 3.875818729561054*^9}, {3.8762080470437*^9, 
  3.8762080533448467`*^9}, {3.876213822279415*^9, 3.876213826446898*^9}, {
  3.8837383289332848`*^9, 3.883738331003879*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"2346cce6-bd8a-4ae4-88e1-f897966b2804"],

Cell[BoxData[{
 StyleBox[
  StyleBox[
   RowBox[{
   "Implementing", " ", "distillation", " ", "circuit", " ", "for", " ", 
    "round", " ", "0", " ", "until", " ", "round", " ", "2"}],
   FontFamily->"Serif",
   FontSize->12],
  FontWeight->"Bold",
  FontSlant->"Italic"], "\[IndentingNewLine]", 
 StyleBox[
  StyleBox[
   RowBox[{"Methode", ":", " ", 
    RowBox[{"0", " ", 
     RowBox[{"{", 
      RowBox[{
      "distdeph", ",", " ", "distdeph", ",", " ", "...", " ", ",", 
       "distdeph"}], "}"}]}]}],
   FontFamily->"Serif",
   FontSize->12],
  FontWeight->"Bold",
  FontSlant->"Italic"], "\n", 
 StyleBox[
  RowBox[{
   StyleBox["                        ",
    FontFamily->"Serif",
    FontSize->12], 
   StyleBox[
    RowBox[{"1", " ", 
     RowBox[{"{", 
      RowBox[{
      "distbf", ",", " ", "distbf", ",", " ", "...", " ", ",", " ", 
       "distbf"}], "}"}]}],
    FontFamily->"Serif",
    FontSize->12]}],
  FontWeight->"Bold",
  FontSlant->"Italic"], "\n", 
 StyleBox[
  RowBox[{
   StyleBox["\t\t   ",
    FontFamily->"Serif",
    FontSize->12], 
   StyleBox[
    RowBox[{"2", " ", 
     RowBox[{"{", 
      RowBox[{
      "distdeph", ",", " ", "distbf", ",", " ", "distdeph", ",", " ", "..."}],
       "}"}]}],
    FontFamily->"Serif",
    FontSize->12]}],
  FontWeight->"Bold",
  FontSlant->"Italic"], "\n", 
 StyleBox[
  RowBox[{
   StyleBox["                        ",
    FontFamily->"Serif",
    FontSize->12], 
   StyleBox[
    RowBox[{"3", " ", 
     RowBox[{"{", 
      RowBox[{
      "distbf", ",", " ", "distdeph", ",", " ", "distbf", ",", " ", "..."}], 
      " ", "}"}]}],
    FontFamily->"Serif",
    FontSize->12]}],
  FontWeight->"Bold",
  FontSlant->"Italic"]}], "Text",
 CellChangeTimes->{{3.876983395660524*^9, 
  3.8769834637814627`*^9}},ExpressionUUID->"3344957f-d006-4e7a-9d85-\
1d5d44480509"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"disttion", "::", "usage"}], "=", 
   "\"\<Return a sequence of distillation of trapped ions, given position \
[p]_zone3 [q]_zone4, where qubits p will be entangled.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["disttion", 
     RowBox[{"p_", ",", "q_"}]], "[", 
    RowBox[{"methode_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
   RowBox[{"Sequence", "@@", 
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"methode", "==", "0"}], ",", " ", 
      RowBox[{"(*", 
       RowBox[{"dephasing", " ", "distillation"}], " ", "*)"}], " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["Comb", 
           RowBox[{"p", ",", "q"}]], "[", 
          RowBox[{"n1", ",", "3"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Comb", 
           RowBox[{"p", ",", "q"}]], "[", 
          RowBox[{"n2", ",", "3"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["SWAPLoc", 
           RowBox[{"p", ",", "q"}]], "[", "n1", "]"}], ",", 
         RowBox[{
          SubscriptBox["SWAPLoc", 
           RowBox[{"p", ",", "q"}]], "[", "n2", "]"}], ",", 
         RowBox[{
          SubscriptBox["Splz", 
           RowBox[{"q", ",", "p"}]], "[", 
          RowBox[{"n1", ",", "4"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Splz", 
           RowBox[{"q", ",", "p"}]], "[", 
          RowBox[{"n2", ",", "4"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Ent", 
           RowBox[{"p", ",", "p"}]], "[", 
          RowBox[{"n1", ",", "n2"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Comb", 
           RowBox[{"q", ",", "p"}]], "[", 
          RowBox[{"n1", ",", "3"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Comb", 
           RowBox[{"q", ",", "p"}]], "[", 
          RowBox[{"n2", ",", "3"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["H", "q"], "[", "n1", "]"}], ",", 
         RowBox[{
          SubscriptBox["CZ", 
           RowBox[{"q", ",", "p"}]], "[", "n1", "]"}], ",", 
         RowBox[{
          SubscriptBox["H", "p"], "[", "n1", "]"}], ",", 
         RowBox[{
          SubscriptBox["H", "q"], "[", "n2", "]"}], ",", 
         RowBox[{
          SubscriptBox["CZ", 
           RowBox[{"q", ",", "p"}]], "[", "n2", "]"}], ",", 
         RowBox[{
          SubscriptBox["H", "p"], "[", "n2", "]"}], ",", 
         RowBox[{
          SubscriptBox["Rx", "q"], "[", 
          RowBox[{"n2", ",", "\[Pi]"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Read", "p"], "[", "n1", "]"}], ",", 
         RowBox[{
          SubscriptBox["Read", "p"], "[", "n2", "]"}]}], "}"}], "/.", 
       "hadrep"}], "\[IndentingNewLine]", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"bitflip", " ", "distillation"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["Comb", 
           RowBox[{"p", ",", "q"}]], "[", 
          RowBox[{"n1", ",", "3"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Comb", 
           RowBox[{"p", ",", "q"}]], "[", 
          RowBox[{"n2", ",", "3"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["SWAPLoc", 
           RowBox[{"p", ",", "q"}]], "[", "n1", "]"}], ",", 
         RowBox[{
          SubscriptBox["SWAPLoc", 
           RowBox[{"p", ",", "q"}]], "[", "n2", "]"}], ",", 
         RowBox[{
          SubscriptBox["Splz", 
           RowBox[{"q", ",", "p"}]], "[", 
          RowBox[{"n1", ",", "4"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Splz", 
           RowBox[{"q", ",", "p"}]], "[", 
          RowBox[{"n2", ",", "4"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Ent", 
           RowBox[{"p", ",", "p"}]], "[", 
          RowBox[{"n1", ",", "n2"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Comb", 
           RowBox[{"q", ",", "p"}]], "[", 
          RowBox[{"n1", ",", "3"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["Comb", 
           RowBox[{"q", ",", "p"}]], "[", 
          RowBox[{"n2", ",", "3"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["H", "p"], "[", "n1", "]"}], ",", 
         RowBox[{
          SubscriptBox["CZ", 
           RowBox[{"q", ",", "p"}]], "[", "n1", "]"}], ",", 
         RowBox[{
          SubscriptBox["H", "p"], "[", "n1", "]"}], ",", 
         RowBox[{
          SubscriptBox["H", "p"], "[", "n2", "]"}], ",", 
         RowBox[{
          SubscriptBox["CZ", 
           RowBox[{"q", ",", "p"}]], "[", "n2", "]"}], ",", 
         RowBox[{
          SubscriptBox["H", "p"], "[", "n2", "]"}], ",", 
         RowBox[{
          SubscriptBox["Read", "p"], "[", "n1", "]"}], ",", 
         RowBox[{
          SubscriptBox["Read", "p"], "[", "n2", "]"}]}], "}"}], "/.", 
       "hadrep"}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DistillationOnTrappedIons", "[", 
   RowBox[{"nrounds_", ",", "device_", ",", "methode_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"circ", ",", "seq", ",", "dist"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"raw", " ", "entangled", " ", "pairs"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"seq", "=", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", "nrounds"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"1", "->", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", "nrounds"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"2", "->", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OddQ", "[", "r", "]"}], ",", "0", ",", "1"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"3", "->", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OddQ", "[", "r", "]"}], ",", "1", ",", "0"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"3", ",", "3"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nrounds", ">=", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"circ", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["Splz", 
            RowBox[{"2", ",", "3"}]], "[", 
           RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Splz", 
            RowBox[{"2", ",", "3"}]], "[", 
           RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ent", 
            RowBox[{"3", ",", "3"}]], "[", 
           RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"3", ",", 
       RowBox[{"3", "<>", "2"}], ",", 
       RowBox[{"2", "->", "3"}], ",", "3"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nrounds", ">=", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"circ", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"circ", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["Splz", 
              RowBox[{"1", ",", "2"}]], "[", 
             RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["Splz", 
              RowBox[{"1", ",", "2"}]], "[", 
             RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["disttion", 
              RowBox[{"2", ",", "3"}]], "[", 
             RowBox[{
              RowBox[{
               RowBox[{"seq", "[", "methode", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Alice\>\"", ",", 
              "\"\<Bob\>\""}], "]"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"3", ",", 
       RowBox[{"3", "<>", "3"}], ",", 
       RowBox[{"3", "->", "3"}], ",", 
       RowBox[{"3", " ", "store", " ", "3"}], ",", 
       RowBox[{"3", " ", "to", " ", 
        RowBox[{"(", 
         RowBox[{"1", ",", "1"}], ")"}]}]}], "   ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nrounds", ">=", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"circ", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"circ", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "3"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"1", ",", "3"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"3", ",", "1"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["SWAPLoc", 
               RowBox[{"3", ",", "1"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"1", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"1", ",", "2"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "1"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Splz", 
               RowBox[{"3", ",", "1"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Ent", 
               RowBox[{"2", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "]"}], ",", 
             RowBox[{
              SubscriptBox["disttion", 
               RowBox[{"1", ",", "2"}]], "[", 
              RowBox[{
               RowBox[{
                RowBox[{"seq", "[", "methode", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Alice\>\"", ",", 
               "\"\<Bob\>\""}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "2"}]], "[", 
              RowBox[{"\"\<Alice\>\"", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["Comb", 
               RowBox[{"3", ",", "2"}]], "[", 
              RowBox[{"\"\<Bob\>\"", ",", "3"}], "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"dephasing", " ", "distillation"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"seq", "[", "methode", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "==", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"circ", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"circ", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                SubscriptBox["H", "3"], "[", "\"\<Alice\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["H", "3"], "[", "\"\<Bob\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["CZ", 
                 RowBox[{"3", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["CZ", 
                 RowBox[{"3", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["H", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["H", "2"], "[", "\"\<Bob\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["Rx", "3"], "[", 
                RowBox[{"\"\<Bob\>\"", ",", "\[Pi]"}], "]"}], ",", 
               RowBox[{
                SubscriptBox["Read", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["Read", "2"], "[", "\"\<Bob\>\"", "]"}]}], 
              "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"bitflip", " ", "distillation"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"circ", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"circ", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                SubscriptBox["H", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["H", "2"], "[", "\"\<Bob\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["CZ", 
                 RowBox[{"3", ",", "2"}]], "[", "\"\<Alice\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["CZ", 
                 RowBox[{"3", ",", "2"}]], "[", "\"\<Bob\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["H", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["H", "2"], "[", "\"\<Bob\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["Read", "2"], "[", "\"\<Alice\>\"", "]"}], ",", 
               RowBox[{
                SubscriptBox["Read", "2"], "[", "\"\<Bob\>\"", "]"}]}], 
              "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"circ", "//.", "hadrep"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TIonDist", "::", "usage"}], "=", 
   "\"\<TIonDist[device_options,\[Rho],nrounds,methode]. Distillation \
simulation on trapped ions.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TIonDist", "[", 
    RowBox[{"devoptions_", ",", "\[Rho]_", ",", "nrounds_", ",", "methode_"}],
     "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dev", ",", "circ", ",", "noisycirc"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dev", "=", 
       RowBox[{"TrappedIonOxford", "[", 
        RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"circ", "=", 
       RowBox[{"DistillationOnTrappedIons", "[", 
        RowBox[{"nrounds", ",", "dev", ",", "methode"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"noisycirc", "=", 
       RowBox[{"ExtractCircuit", "@", 
        RowBox[{"InsertCircuitNoise", "[", 
         RowBox[{
          RowBox[{"CircTrappedIons", "[", 
           RowBox[{"circ", ",", "dev", ",", 
            RowBox[{"MapQubits", "->", "False"}]}], "]"}], ",", "dev", ",", 
          RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{"True", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"out", "=", 
          RowBox[{"Flatten", "@", 
           RowBox[{"ApplyCircuit", "[", 
            RowBox[{"\[Rho]", ",", "noisycirc"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"AllTrue", "[", 
            RowBox[{"out", ",", 
             RowBox[{
              RowBox[{"#", "==", "0"}], "&"}]}], "]"}], ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Print", " ", "distillation", " ", "step", " ", "by", " ", "step"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintDistillation", "[", 
   RowBox[{"nrounds_", ",", "methode_", ",", "devoptions_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dev", ",", "circ", ",", "ccirc", ",", "moves", ",", 
      RowBox[{"show", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"moves", "=", 
      RowBox[{"{", 
       RowBox[{"Splz", ",", "Comb", ",", "SWAPLoc", ",", "Shutl"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"dev", "=", 
      RowBox[{"TrappedIonOxford", "[", 
       RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"circ", "=", 
      RowBox[{"DistillationOnTrappedIons", "[", 
       RowBox[{"nrounds", ",", "dev", ",", "methode"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ccirc", "=", 
      RowBox[{"CircTrappedIons", "[", 
       RowBox[{"circ", ",", "dev", ",", 
        RowBox[{"MapQubits", "->", "False"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"show", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<initialise\>\"", ",", 
         RowBox[{"dev", "[", "ShowNodes", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"InsertCircuitNoise", "[", 
         RowBox[{
          RowBox[{"ccirc", "[", 
           RowBox[{"[", "c", "]"}], "]"}], ",", "dev"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"show", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"StringRiffle", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"FormatType", "->", "StandardForm"}]}], "]"}], "&"}],
               "/@", 
              RowBox[{"ccirc", "[", 
               RowBox[{"[", "c", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"dev", "[", "ShowNodes", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{"Length", "@", "ccirc"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "show"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.87620792856719*^9, 3.876208001117175*^9}, {
   3.876215274728503*^9, 3.876215286554634*^9}, 3.876368572111559*^9, {
   3.876898388264534*^9, 3.876898407945396*^9}, {3.876899123274891*^9, 
   3.876899125520397*^9}, {3.8769003621229343`*^9, 3.876900570722139*^9}, {
   3.876901507655105*^9, 3.876901521012465*^9}, {3.876901562830941*^9, 
   3.876901700810974*^9}, {3.876901737290105*^9, 3.8769017745840597`*^9}, {
   3.8769029812159567`*^9, 3.876903130938057*^9}, {3.876903182766803*^9, 
   3.876903205359367*^9}, {3.876903386401197*^9, 3.8769034017393093`*^9}, {
   3.8769034423148613`*^9, 3.876903490562669*^9}, {3.876903658540641*^9, 
   3.876903659196698*^9}, {3.8769037564198303`*^9, 3.876903930751568*^9}, {
   3.8769039762085114`*^9, 3.876904162653749*^9}, 3.8769045632535877`*^9, {
   3.876904609290498*^9, 3.8769047284197617`*^9}, {3.876904959118281*^9, 
   3.87690498909181*^9}, {3.8769050776955853`*^9, 3.8769050930437813`*^9}, {
   3.876905135976798*^9, 3.876905201046363*^9}, {3.876905321801763*^9, 
   3.87690540383673*^9}, {3.876909092402619*^9, 3.87690909686765*^9}, 
   3.876909139837875*^9, {3.8769092234075317`*^9, 3.8769092484472227`*^9}, {
   3.8769094827920513`*^9, 3.8769094873521843`*^9}, {3.876909527992535*^9, 
   3.876909535818157*^9}, {3.876909721158576*^9, 3.8769097330445547`*^9}, {
   3.8769098464751*^9, 3.876909889513278*^9}, {3.8769099697651033`*^9, 
   3.8769100162364197`*^9}, {3.876910081894308*^9, 3.8769101831960993`*^9}, {
   3.876910226926647*^9, 3.876910227842403*^9}, {3.8769103787365713`*^9, 
   3.8769103877695723`*^9}, {3.87691124626353*^9, 3.8769112687363577`*^9}, {
   3.876914671943985*^9, 3.876914686028928*^9}, {3.876914722197845*^9, 
   3.8769148241894407`*^9}, {3.87691486099616*^9, 3.876914888800036*^9}, {
   3.8769778330094833`*^9, 3.876977898499495*^9}, {3.8769779423310337`*^9, 
   3.876977985867684*^9}, {3.876978068390196*^9, 3.8769780694235086`*^9}, 
   3.876978181222357*^9, {3.876978269161131*^9, 3.876978299375598*^9}, {
   3.876978336467092*^9, 3.8769783765719643`*^9}, {3.876978489696673*^9, 
   3.876978490368764*^9}, {3.876978526087816*^9, 3.87697852987707*^9}, {
   3.876978764813871*^9, 3.876978765028966*^9}, {3.876978859817518*^9, 
   3.876979024759413*^9}, {3.876979083679274*^9, 3.876979136998642*^9}, {
   3.87698337652905*^9, 3.876983387522605*^9}, {3.87699263664384*^9, 
   3.876992637215336*^9}, {3.8770634248050547`*^9, 3.877063480349205*^9}, {
   3.8770635429910393`*^9, 3.8770635462093267`*^9}, {3.877063582230268*^9, 
   3.877063671188808*^9}, {3.877063715631505*^9, 3.877063736113052*^9}, {
   3.8770637702654953`*^9, 3.8770638286021023`*^9}, {3.8770638628875313`*^9, 
   3.877063887626519*^9}, {3.877063931227439*^9, 3.877063975718758*^9}, {
   3.877064110023369*^9, 3.877064110547914*^9}, {3.87706423121316*^9, 
   3.877064311601922*^9}, {3.877064389302431*^9, 3.877064431811108*^9}, {
   3.877064486078033*^9, 3.8770644877445374`*^9}, {3.877064697923168*^9, 
   3.87706470542083*^9}, {3.8801834338661327`*^9, 3.880183444276075*^9}, {
   3.8801835301964197`*^9, 3.880183530887624*^9}, {3.880183734820613*^9, 
   3.880183805158581*^9}, {3.8801839034183817`*^9, 3.880184114067206*^9}, {
   3.880184263414304*^9, 3.8801845286422443`*^9}, {3.880184560974984*^9, 
   3.8801845725945044`*^9}, {3.880184619016617*^9, 3.880184706152402*^9}, {
   3.880184793232697*^9, 3.8801849051561604`*^9}, {3.8801850087660513`*^9, 
   3.8801850855951014`*^9}, {3.880185122161281*^9, 3.88018514642382*^9}, {
   3.8801852458905983`*^9, 3.880185280887958*^9}, {3.8801853743207197`*^9, 
   3.880185399585359*^9}, {3.880185636093677*^9, 3.88018565352122*^9}, {
   3.880185690414103*^9, 3.880185712727826*^9}, {3.880185753280694*^9, 
   3.880185754961944*^9}, 3.880186401320457*^9, {3.880186431464942*^9, 
   3.8801864692306623`*^9}, {3.880186524003654*^9, 3.8801865286296997`*^9}, {
   3.880186571864935*^9, 3.880186672724009*^9}, {3.880186738294354*^9, 
   3.8801868514194183`*^9}, {3.880186912485648*^9, 3.880187005540408*^9}, {
   3.8801870381971693`*^9, 3.880187041191223*^9}, {3.8801871962366867`*^9, 
   3.880187239511981*^9}, {3.88018727675572*^9, 3.8801874353264227`*^9}, {
   3.880188266050478*^9, 3.8801883218493357`*^9}, {3.883649758572068*^9, 
   3.883649893830846*^9}, 3.883738383471098*^9, {3.883738856847501*^9, 
   3.883738892346155*^9}, {3.8837402866956863`*^9, 3.883740295145094*^9}, 
   3.883740988080159*^9},ExpressionUUID->"87274038-e121-4cf6-9854-\
097f3a94bf01"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Play around with the parameters ",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Subsection",
 CellChangeTimes->{{3.876985491179178*^9, 3.87698551374761*^9}, {
  3.876985561194066*^9, 3.876985567912353*^9}, {3.8769863863729887`*^9, 
  3.876986387563737*^9}, {3.883738649995586*^9, 
  3.88373867507825*^9}},ExpressionUUID->"b5ebd345-aa7c-4daf-9611-\
4bab62c48860"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DistillationCircuit"}]], "Input",
 CellChangeTimes->{{3.8837388054123373`*^9, 3.8837388091435843`*^9}},
 CellLabel->
  "In[654]:=",ExpressionUUID->"f1e4b8ad-2e36-44bd-8945-04440a2f67e2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DistillationCircuit[rounds:[0-2], ent_fidelity, \
error_fraction, method:[0-3]]. \\nReturns the whole distillation simulation \
circuit. Method:\\n0 {distdeph, distdeph, ... ,distdeph}\\n1 {distbf, distbf, \
... , distbf}\\n2 {distdeph, distbf, distdeph, ...}\\n3 {distbf, distdeph, \
distbf, ... }\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DistillationCircuit", "[", 
                    
                    RowBox[{
                    "nrounds_", ",", "fident_", ",", "errfrac_", ",", 
                    RowBox[{"methode_", ":", "0"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"circ", "=", 
                    RowBox[{"Association", "[", "]"}]}], ",", 
                    RowBox[{"totalcirc", "=", 
                    RowBox[{"{", "}"}]}], ",", "diststep", ",", "seq"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["diststep", "q__"], ":=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    SubscriptBox["distdeph", "q"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    SubscriptBox["distbf", "q"]}]}], "]"}]}], ";", 
                    RowBox[{"seq", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", "nrounds"}], "]"}]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", "nrounds"}], "]"}]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OddQ", "[", "r", "]"}], ",", "0", ",", "1"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OddQ", "[", "r", "]"}], ",", "1", ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "nrounds"}], "}"}]}], "]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"circ", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"nrounds", "\[Equal]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], "}"}], ",", 
                    RowBox[{"nrounds", "\[Equal]", "1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"2", ",", "3"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"nrounds", "\[Equal]", "2"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"2", ",", "3"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    SubscriptBox["SWAP", 
                    RowBox[{"0", ",", "4"}]], ",", 
                    SubscriptBox["SWAP", 
                    RowBox[{"1", ",", "5"}]], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"0", ",", "1"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["bellerr", 
                    RowBox[{"2", ",", "3"}]], "[", 
                    RowBox[{"fident", ",", "errfrac"}], "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "2", ",", "3"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    RowBox[{
                    SubscriptBox["diststep", 
                    RowBox[{"0", ",", "1", ",", "4", ",", "5"}]], "[", 
                    RowBox[{
                    RowBox[{"seq", "[", "methode", "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "]"}]}], "}"}]}], "]"}]}], ";", "circ"}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`DistillationCircuit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DistillationCircuit[rounds:[0-2], ent_fidelity, \
error_fraction, method:[0-3]]. \\nReturns the whole distillation simulation \
circuit. Method:\\n0 {distdeph, distdeph, ... ,distdeph}\\n1 {distbf, distbf, \
... , distbf}\\n2 {distdeph, distbf, distdeph, ...}\\n3 {distbf, distdeph, \
distbf, ... }\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               
               ImageSizeCache->{
                12.000000000000002`, {4., 8.000000000000002}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               
               ImageSizeCache->{
                12.000000000000002`, {4., 8.000000000000002}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DistillationCircuit[rounds:[0-2], ent_fidelity, error_fraction, \
method:[0-3]]. \nReturns the whole distillation simulation circuit. Method:\n\
0 {distdeph, distdeph, ... ,distdeph}\n1 {distbf, distbf, ... , distbf}\n2 \
{distdeph, distbf, distdeph, ...}\n3 {distbf, distdeph, distbf, ... }", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`DistillationCircuit, \
{$CellContext`DistillationCircuit[
         Pattern[$CellContext`nrounds, 
          Blank[]], 
         Pattern[$CellContext`fident, 
          Blank[]], 
         Pattern[$CellContext`errfrac, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`methode, 
           Blank[]], 0]] :> 
       Module[{$CellContext`circ = <||>, $CellContext`totalcirc = {}, \
$CellContext`diststep, $CellContext`seq}, Subscript[$CellContext`diststep, 
            Pattern[$CellContext`q, 
             BlankSequence[]]] := <|
           0 -> Subscript[$CellContext`distdeph, $CellContext`q], 1 -> 
            Subscript[$CellContext`distbf, $CellContext`q]|>; \
$CellContext`seq = <|
           0 -> ConstantArray[0, $CellContext`nrounds], 1 -> 
            ConstantArray[1, $CellContext`nrounds], 2 -> Table[
              If[
               OddQ[$CellContext`r], 0, 
               1], {$CellContext`r, $CellContext`nrounds}], 3 -> Table[
              If[
               OddQ[$CellContext`r], 1, 
               0], {$CellContext`r, $CellContext`nrounds}]|>; \
$CellContext`circ = Which[$CellContext`nrounds == 0, {
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac]}, \
$CellContext`nrounds == 1, {
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac], 
             
             Subscript[$CellContext`bellerr, 2, 
              3][$CellContext`fident, $CellContext`errfrac], 
             Subscript[$CellContext`diststep, 0, 1, 2, 3][
              Part[
               $CellContext`seq[$CellContext`methode], 
               1]]}, $CellContext`nrounds == 2, {
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac], 
             
             Subscript[$CellContext`bellerr, 2, 
              3][$CellContext`fident, $CellContext`errfrac], 
             Subscript[$CellContext`diststep, 0, 1, 2, 3][
              Part[
               $CellContext`seq[$CellContext`methode], 1]], 
             Subscript[QuEST`Gate`SWAP, 0, 4], 
             Subscript[QuEST`Gate`SWAP, 1, 5], 
             
             Subscript[$CellContext`bellerr, 0, 
              1][$CellContext`fident, $CellContext`errfrac], 
             
             Subscript[$CellContext`bellerr, 2, 
              3][$CellContext`fident, $CellContext`errfrac], 
             Subscript[$CellContext`diststep, 0, 1, 2, 3][
              Part[
               $CellContext`seq[$CellContext`methode], 1]], 
             Subscript[$CellContext`diststep, 0, 1, 4, 5][
              Part[
               $CellContext`seq[$CellContext`methode], 
               2]]}]; $CellContext`circ]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`DistillationCircuit"|>, False]]], "Output",
 CellChangeTimes->{3.883738809456955*^9},
 CellLabel->
  "Out[654]=",ExpressionUUID->"f61f3d2d-5f28-4fe2-a263-8996727ab735"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TIonDist"}]], "Input",
 CellChangeTimes->{{3.883738898104673*^9, 3.8837388993332977`*^9}},
 CellLabel->
  "In[665]:=",ExpressionUUID->"aaaf115e-0ac4-4510-9389-779d35a60315"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"TIonDist[device_options,\[Rho],nrounds,methode]. \
Distillation simulation on trapped ions.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"TIonDist", "[", 
                    
                    RowBox[{
                    "devoptions_", ",", "\[Rho]_", ",", "nrounds_", ",", 
                    "methode_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"dev", ",", "circ", ",", "noisycirc"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"dev", "=", 
                    RowBox[{"TrappedIonOxford", "[", 
                    RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], ";", 
                    RowBox[{"circ", "=", 
                    RowBox[{"DistillationOnTrappedIons", "[", 
                    RowBox[{"nrounds", ",", "dev", ",", "methode"}], "]"}]}], 
                    ";", 
                    RowBox[{"noisycirc", "=", 
                    RowBox[{"ExtractCircuit", "[", 
                    RowBox[{"InsertCircuitNoise", "[", 
                    RowBox[{
                    RowBox[{"CircTrappedIons", "[", 
                    RowBox[{"circ", ",", "dev", ",", 
                    RowBox[{"MapQubits", "\[Rule]", "False"}]}], "]"}], ",", 
                    "dev", ",", 
                    RowBox[{"ReplaceAliases", "\[Rule]", "True"}]}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{"True", ",", 
                    RowBox[{
                    RowBox[{"out", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"ApplyCircuit", "[", 
                    RowBox[{"\[Rho]", ",", "noisycirc"}], "]"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"AllTrue", "[", 
                    RowBox[{"out", ",", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", "0"}], "&"}]}], "]"}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ";"}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`TIonDist\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"TIonDist[device_options,\[Rho],nrounds,methode]. \
Distillation simulation on trapped ions.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               
               ImageSizeCache->{
                12.000000000000002`, {4., 8.000000000000002}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               
               ImageSizeCache->{
                12.000000000000002`, {4., 8.000000000000002}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "TIonDist[device_options,\[Rho],nrounds,methode]. Distillation simulation \
on trapped ions.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`TIonDist, {$CellContext`TIonDist[
         Pattern[$CellContext`devoptions, 
          Blank[]], 
         Pattern[$CellContext`\[Rho], 
          Blank[]], 
         Pattern[$CellContext`nrounds, 
          Blank[]], 
         Pattern[$CellContext`methode, 
          Blank[]]] :> 
       Module[{$CellContext`dev, $CellContext`circ, $CellContext`noisycirc}, \
$CellContext`dev = VQD`TrappedIonOxford[
            Apply[
            Sequence, $CellContext`devoptions]]; $CellContext`circ = \
$CellContext`DistillationOnTrappedIons[$CellContext`nrounds, \
$CellContext`dev, $CellContext`methode]; $CellContext`noisycirc = 
          QuEST`ExtractCircuit[
            QuEST`InsertCircuitNoise[
             
             VQD`CircTrappedIons[$CellContext`circ, $CellContext`dev, 
              VQD`MapQubits -> False], $CellContext`dev, 
             QuEST`Option`ReplaceAliases -> True]]; 
         While[True, $CellContext`out = Flatten[
              
              QuEST`ApplyCircuit[$CellContext`\[Rho], \
$CellContext`noisycirc]]; If[
             AllTrue[$CellContext`out, # == 0& ], 
             Break[]]]; Null]}], "SubValues" -> None, "DefaultValues" -> None,
     "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`TIonDist"|>, False]]], "Output",\

 CellChangeTimes->{3.8837388996846313`*^9},
 CellLabel->
  "Out[665]=",ExpressionUUID->"f3837aac-c5b3-4a43-8bef-8a893525b9c2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "*", " ", "override", " ", "the", " ", "default", " ", "parameters", "*"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"devoptions", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Nodes", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "3"}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", "3"}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FidCZ", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", "0.999"}], ",", " ", 
         RowBox[{"\"\<Bob\>\"", "->", "0.999"}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"EFCZ", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", 
          RowBox[{"{", 
           RowBox[{".1", ",", ".9"}], "}"}]}], ",", 
         RowBox[{"\"\<Bob\>\"", "->", 
          RowBox[{"{", 
           RowBox[{".1", ",", ".9"}], "}"}]}]}], "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"T2s", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Alice\>\"", "->", 
          SuperscriptBox["10", "5"]}], ",", "  ", 
         RowBox[{"\"\<Bob\>\"", "->", 
          SuperscriptBox["10", "5"]}]}], "  ", "|>"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"EFEnt", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.883645591100515*^9, 3.883645620153207*^9}, {
  3.883645676604207*^9, 3.883645687952598*^9}, {3.88364572201855*^9, 
  3.8836457245474443`*^9}, {3.8836458744118433`*^9, 3.883645880777265*^9}, {
  3.88364593134027*^9, 3.88364596277798*^9}, {3.8836459965908337`*^9, 
  3.883646062276194*^9}, {3.8836462563519163`*^9, 3.8836462618572693`*^9}, {
  3.883646365593082*^9, 3.88364637026892*^9}, {3.883646584937378*^9, 
  3.883646608411189*^9}, {3.883646710374754*^9, 3.883646818329224*^9}, {
  3.883646881161366*^9, 3.8836468826312103`*^9}, {3.883738581919825*^9, 
  3.8837387183496027`*^9}, {3.8837387708752003`*^9, 3.883738774640712*^9}, {
  3.883738904207204*^9, 3.88373890447828*^9}},
 CellLabel->
  "In[666]:=",ExpressionUUID->"b51ebd2d-ec91-4b53-a690-08d9582fcee9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetQuregMatrix", "[", 
   RowBox[{"\[Rho]6", ",", 
    RowBox[{"RandomMixState", "[", "6", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plot\[Rho]", "[", "label_", "]"}], ":=", 
   RowBox[{"PlotDensityMatrix", "[", 
    RowBox[{
     RowBox[{"Chop", "@", 
      RowBox[{"mat2BellBasis", "[", 
       RowBox[{"PartialTrace", "[", 
        RowBox[{"\[Rho]6", ",", "0", ",", "1", ",", "3", ",", "4"}], "]"}], 
       "]"}]}], ",", 
     RowBox[{"ImageSize", "->", "200"}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"chartbell", "[", "label", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TIonDist", "[", 
      RowBox[{"devoptions", ",", "\[Rho]6", ",", "0", ",", "0"}], "]"}], ";", 
     
     RowBox[{"plot\[Rho]", "[", "\"\<raw\>\"", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TIonDist", "[", 
      RowBox[{"devoptions", ",", "\[Rho]6", ",", "1", ",", "0"}], "]"}], ";", 
     
     RowBox[{"plot\[Rho]", "[", "\"\<deph\>\"", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TIonDist", "[", 
      RowBox[{"devoptions", ",", "\[Rho]6", ",", "1", ",", "1"}], "]"}], ";", 
     
     RowBox[{"plot\[Rho]", "[", "\"\<bf\>\"", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TIonDist", "[", 
      RowBox[{"devoptions", ",", "\[Rho]6", ",", "2", ",", "3"}], "]"}], ";", 
     
     RowBox[{"plot\[Rho]", "[", "\"\<deph-deph\>\"", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TIonDist", "[", 
      RowBox[{"devoptions", ",", "\[Rho]6", ",", "2", ",", "2"}], "]"}], ";", 
     
     RowBox[{"plot\[Rho]", "[", "\"\<deph-bf\>\"", "]"}]}]}], 
   "\[IndentingNewLine]", "}"}]}]}], "Input",
 CellChangeTimes->{{3.876983759899682*^9, 3.87698379497071*^9}, 
   3.876985488589458*^9, {3.876985524227214*^9, 3.876985555349738*^9}, 
   3.8769863950223417`*^9, {3.876986435955969*^9, 3.876986464965557*^9}, {
   3.8769865456430883`*^9, 3.876986545773653*^9}, {3.8770032151413603`*^9, 
   3.877003255082529*^9}, {3.88243346757747*^9, 3.8824334791260567`*^9}, {
   3.883644486989978*^9, 3.883644499083667*^9}, {3.883644606379937*^9, 
   3.883644646496933*^9}, {3.883644727628627*^9, 3.883644737742907*^9}, {
   3.8836447755040503`*^9, 3.883644778009343*^9}, {3.883644817780237*^9, 
   3.883644828396139*^9}, {3.883645491334634*^9, 3.8836454938018293`*^9}, {
   3.8836456248860617`*^9, 3.883645637821274*^9}, {3.883645690210877*^9, 
   3.883645702222929*^9}, {3.883645812784143*^9, 3.883645819130237*^9}, {
   3.883645884049765*^9, 3.883645906453459*^9}, {3.883646013708105*^9, 
   3.883646024401319*^9}, {3.883646072141158*^9, 3.883646082415362*^9}, {
   3.883646116929978*^9, 3.8836461681336184`*^9}, {3.883646223452014*^9, 
   3.883646225368339*^9}, {3.883646644317369*^9, 3.8836466487445107`*^9}, {
   3.883646903281111*^9, 3.883646905253477*^9}, {3.883647068588375*^9, 
   3.8836470707090683`*^9}, {3.883653341740408*^9, 3.883653437810686*^9}, {
   3.8837385410075893`*^9, 3.883738553468547*^9}, {3.8837387041686172`*^9, 
   3.8837387960125732`*^9}, {3.883738832292583*^9, 3.88373883266717*^9}, {
   3.883738908557166*^9, 3.883739059327589*^9}},
 CellLabel->
  "In[672]:=",ExpressionUUID->"f0cc4e96-9a39-48b4-b95c-b540a2ea63f5"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
     EdgeForm[{
       GrayLevel[0], 
       Opacity[0.1], 
       Thickness[Large]}], 
     StyleBox[{{}, {
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.1], 
          Thickness[Large]}], 
        StyleBox[{{{
            RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9499999999999993}]},
               ImageSizeCache -> {{98.96362183694356, 
               134.47925999876963`}, {-31.14521178676145, 
               23.026372780071284`}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.95\"", ShowStringCharacters -> False], 
                 0.9499999999999993, AutoDelete -> True], NumberForm[#, 5]& ],
                StripOnInput -> False, LineColor -> GrayLevel[0.82], 
               FrontFaceColor -> GrayLevel[0.82], BackFaceColor -> 
               GrayLevel[0.82], GraphicsColor -> GrayLevel[0.82], FontSize -> 
               13, FontColor -> GrayLevel[0.82]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 3., 
            0.47499999999999964`}, {0, 0}]}, {{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.05000000000000005}]}, 
              ImageSizeCache -> {{133.66366696193194`, 
               165.79139702489204`}, {-6.187561656412413, 
               16.21769380999018}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.05\"", ShowStringCharacters -> False], 
                 0.05000000000000005, AutoDelete -> True], 
                NumberForm[#, 4]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {4., 4., 
            0.05000000000000005}, {0, -1}]}}, FontColor -> 
         GrayLevel[0.4]]}, {}, {}}, FontColor -> GrayLevel[0.4]]}, 
    Axes -> {True, True, True}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    Boxed -> {Left, Bottom, Back}, Epilog -> InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"raw\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]], 
    FaceGrids -> {{{-1, 0, 0}, {None, Automatic}}, {{0, 1, 0}, {
       None, Automatic}}}, FaceGridsStyle -> Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
    Directive[Bold, FontFamily -> "Helvetica"], Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, 
    PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
    PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
    TicksStyle -> {Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]}, ViewAngle -> All], 
   Graphics3DBox[{
     RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
     EdgeForm[{
       GrayLevel[0], 
       Opacity[0.1], 
       Thickness[Large]}], 
     StyleBox[{{}, {
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.1], 
          Thickness[Large]}], 
        StyleBox[{{{
            RGBColor[
            0.23820693345068517`, 0.3403534245480556, 0.5746110852535016], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.002947576600765109}]}, 
              ImageSizeCache -> {{24.487716559101095`, 60.886926839685636`}, {
               13.939924397486749`, 37.66306340034093}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.002948\"", ShowStringCharacters -> False], 
                 0.002947576600765109, AutoDelete -> True], 
                NumberForm[#, 4]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {1., 1., 
            0.002947576600765109}, {0, -1}]}, {{
            RGBColor[
            0.23773600084877983`, 0.3402150002494874, 0.5751129990953815], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                6.2500093089227354`*^-9}]}, 
              ImageSizeCache -> {{40.59992698249212, 74.9599779841792}, {
               0.24254034452667383`, 21.764463256970807`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"6.3\"", "\[Times]", 
                    SuperscriptBox["10", "\"-9\""]}], ShowStringCharacters -> 
                  False], 6.2500093089227354`*^-9, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {1., 2., 
            6.2500093089227354`*^-9}, {0, -1}]}, {{
            RGBColor[
            0.23773600084877983`, 0.3402150002494874, 0.5751129990953815], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                6.250009315502487*^-9}]}, 
              ImageSizeCache -> {{47.245724055733334`, 84.12335987154471}, {
               22.107601773136004`, 47.019539150836906`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"6.3\"", "\[Times]", 
                    SuperscriptBox["10", "\"-9\""]}], ShowStringCharacters -> 
                  False], 6.250009315502487*^-9, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {2., 1., 
            6.250009315502487*^-9}, {0, -1}]}, {{
            RGBColor[
            0.2377494817018711, 0.3402189627647724, 0.5750986313774968], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.00008438300097949803}]}, 
              ImageSizeCache -> {{62.61651740847379, 97.4049341380444}, {
               7.542085312353024, 30.166557642244435`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"8.4\"", "\[Times]", 
                    SuperscriptBox["10", "\"-5\""]}], ShowStringCharacters -> 
                  False], 0.00008438300097949803, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {2., 2., 
            0.00008438300097949803}, {0, -1}]}, {{
            RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9961209308218264}]},
               ImageSizeCache -> {{98.96362183694356, 
               134.5943521945935}, {-32.830650081510356`, 
               23.026372780071284`}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.99612\"", ShowStringCharacters -> False], 
                 0.9961209308218264, AutoDelete -> True], NumberForm[#, 5]& ],
                StripOnInput -> False, LineColor -> GrayLevel[0.82], 
               FrontFaceColor -> GrayLevel[0.82], BackFaceColor -> 
               GrayLevel[0.82], GraphicsColor -> GrayLevel[0.82], FontSize -> 
               13, FontColor -> GrayLevel[0.82]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 3., 0.4980604654109132}, {
            0, 0}]}, {{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
                9.374905851622373*^-10}]}, 
              ImageSizeCache -> {{110.7658383634799, 
               142.35951380271047`}, {-11.28363606979876, 
               8.567743424501543}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"9.4\"", "\[Times]", 
                    SuperscriptBox["10", "\"-10\""]}], ShowStringCharacters -> 
                  False], 9.374905851622373*^-10, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 4., 
            9.374905851622373*^-10}, {0, -1}]}, {{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
                9.374905884148438*^-10}]}, 
              ImageSizeCache -> {{122.71968696777101`, 156.3848925597003}, {
               8.703126936927362, 31.502289578528995`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"9.4\"", "\[Times]", 
                    SuperscriptBox["10", "\"-10\""]}], ShowStringCharacters -> 
                  False], 9.374905884148438*^-10, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {4., 3., 
            9.374905884148438*^-10}, {0, -1}]}, {{
            RGBColor[
            0.2378713423423225, 0.34025478205952775`, 0.5749687538918961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.0008471095764286512}]}, 
              ImageSizeCache -> {{133.66366696193194`, 
               165.57993608579824`}, {-4.620503456499009, 
               16.21769380999018}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"8.5\"", "\[Times]", 
                    SuperscriptBox["10", "\"-4\""]}], ShowStringCharacters -> 
                  False], 0.0008471095764286512, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {4., 4., 
            0.0008471095764286512}, {0, -1}]}}, FontColor -> 
         GrayLevel[0.4]]}, {}, {}}, FontColor -> GrayLevel[0.4]]}, 
    Axes -> {True, True, True}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    Boxed -> {Left, Bottom, Back}, Epilog -> InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]], 
    FaceGrids -> {{{-1, 0, 0}, {None, Automatic}}, {{0, 1, 0}, {
       None, Automatic}}}, FaceGridsStyle -> Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
    Directive[Bold, FontFamily -> "Helvetica"], Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, 
    PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
    PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
    TicksStyle -> {Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]}, ViewAngle -> All], 
   Graphics3DBox[{
     RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
     EdgeForm[{
       GrayLevel[0], 
       Opacity[0.1], 
       Thickness[Large]}], 
     StyleBox[{{}, {
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.1], 
          Thickness[Large]}], 
        StyleBox[{{{
            RGBColor[
            0.23774188848292357`, 0.34021673084028375`, 0.5751067241314891], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.000033465629208980565`}]}, 
              ImageSizeCache -> {{24.502696728552408`, 60.886926839685636`}, {
               14.035332533119572`, 37.66306340034093}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"3.3\"", "\[Times]", 
                    SuperscriptBox["10", "\"-5\""]}], ShowStringCharacters -> 
                  False], 0.000033465629208980565`, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {1., 1., 
            0.000033465629208980565`}, {0, -1}]}, {{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                7.290303646436059*^-9}]}, 
              ImageSizeCache -> {{40.59992697853928, 74.9599779841792}, {
               0.2425403111930251, 21.764463256970807`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"7.3\"", "\[Times]", 
                    SuperscriptBox["10", "\"-9\""]}], ShowStringCharacters -> 
                  False], 7.290303646436059*^-9, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {1., 2., 
            7.290303646436059*^-9}, {0, -1}]}, {{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                7.290303646436059*^-9}]}, 
              ImageSizeCache -> {{47.245724051951065`, 84.12335987154471}, {
               22.107601738706272`, 47.019539150836906`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"7.3\"", "\[Times]", 
                    SuperscriptBox["10", "\"-9\""]}], ShowStringCharacters -> 
                  False], 7.290303646436059*^-9, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {2., 1., 
            7.290303646436059*^-9}, {0, -1}]}, {{
            RGBColor[
            0.23774188848292357`, 0.34021673084028375`, 0.5751067241314891], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.000033465629208980565`}]}, 
              ImageSizeCache -> {{62.61663892002312, 97.4049341380444}, {
               7.543736039029028, 30.166557642244435`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"3.3\"", "\[Times]", 
                    SuperscriptBox["10", "\"-5\""]}], ShowStringCharacters -> 
                  False], 0.000033465629208980565`, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {2., 2., 
            0.000033465629208980565`}, {0, -1}]}, {{
            RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9042897379207199}]},
               ImageSizeCache -> {{98.96362183694356, 
               134.36592847394866`}, {-29.485287328717746`, 
               23.026372780071284`}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.90429\"", ShowStringCharacters -> False], 
                 0.9042897379207199, AutoDelete -> True], NumberForm[#, 5]& ],
                StripOnInput -> False, LineColor -> GrayLevel[0.82], 
               FrontFaceColor -> GrayLevel[0.82], BackFaceColor -> 
               GrayLevel[0.82], GraphicsColor -> GrayLevel[0.82], FontSize -> 
               13, FontColor -> GrayLevel[0.82]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 3., 
            0.45214486896035994`}, {0, 0}]}, {{
            RGBColor[
            0.2542722545607242, 0.3493982199818029, 0.5481609337386268], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.09564333082086181}]}, 
              ImageSizeCache -> {{133.66366696193194`, 
               165.98896920329605`}, {-7.651487350782986, 
               16.21769380999018}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.09564\"", ShowStringCharacters -> False], 
                 0.09564333082086181, AutoDelete -> True], 
                NumberForm[#, 4]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {4., 4., 
            0.09564333082086181}, {0, -1}]}}, FontColor -> 
         GrayLevel[0.4]]}, {}, {}}, FontColor -> GrayLevel[0.4]]}, 
    Axes -> {True, True, True}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    Boxed -> {Left, Bottom, Back}, Epilog -> InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"bf\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]], 
    FaceGrids -> {{{-1, 0, 0}, {None, Automatic}}, {{0, 1, 0}, {
       None, Automatic}}}, FaceGridsStyle -> Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
    Directive[Bold, FontFamily -> "Helvetica"], Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, 
    PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
    PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
    TicksStyle -> {Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]}, ViewAngle -> All], 
   Graphics3DBox[{
     RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
     EdgeForm[{
       GrayLevel[0], 
       Opacity[0.1], 
       Thickness[Large]}], 
     StyleBox[{{}, {
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.1], 
          Thickness[Large]}], 
        StyleBox[{{{
            RGBColor[
            0.23957018004255368`, 0.3407541325315153, 0.573158154767088], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.011381021801492502`}]}, 
              ImageSizeCache -> {{24.444329093562054`, 60.886926839685636`}, {
               13.663601370456036`, 37.66306340034093}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.01138\"", ShowStringCharacters -> False], 
                 0.011381021801492502`, AutoDelete -> True], 
                NumberForm[#, 4]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {1., 1., 
            0.011381021801492502`}, {0, -1}]}, {{
            RGBColor[
            0.23773600085617239`, 0.34021500025166035`, 0.5751129990875026], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                6.2500093069711715`*^-9}]}, 
              ImageSizeCache -> {{40.59992698249212, 74.9599779841792}, {
               0.24254034452667383`, 21.764463256970807`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"6.3\"", "\[Times]", 
                    SuperscriptBox["10", "\"-9\""]}], ShowStringCharacters -> 
                  False], 6.2500093069711715`*^-9, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {1., 2., 
            6.2500093069711715`*^-9}, {0, -1}]}, {{
            RGBColor[
            0.23773600085617239`, 0.34021500025166035`, 0.5751129990875026], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                6.250009303393304*^-9}]}, 
              ImageSizeCache -> {{47.245724055733334`, 84.12335987154471}, {
               22.107601773136004`, 47.019539150836906`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"6.3\"", "\[Times]", 
                    SuperscriptBox["10", "\"-9\""]}], ShowStringCharacters -> 
                  False], 6.250009303393304*^-9, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {2., 1., 
            6.250009303393304*^-9}, {0, -1}]}, {{
            RGBColor[
            0.23775888226663516`, 0.34022172593423305`, 0.5750886123778407], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.00014198457483729338`}]}, 
              ImageSizeCache -> {{62.616379944408486`, 97.4049341380444}, {
               7.540217872384275, 30.166557642244435`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"1.4\"", "\[Times]", 
                    SuperscriptBox["10", "\"-4\""]}], ShowStringCharacters -> 
                  False], 0.00014198457483729338`, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {2., 2., 
            0.00014198457483729338`}, {0, -1}]}, {{
            RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9875199981478555}]},
               ImageSizeCache -> {{98.96362183694356, 
               134.57283214429717`}, {-32.51552618412637, 
               23.026372780071284`}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.98752\"", ShowStringCharacters -> False], 
                 0.9875199981478555, AutoDelete -> True], NumberForm[#, 5]& ],
                StripOnInput -> False, LineColor -> GrayLevel[0.82], 
               FrontFaceColor -> GrayLevel[0.82], BackFaceColor -> 
               GrayLevel[0.82], GraphicsColor -> GrayLevel[0.82], FontSize -> 
               13, FontColor -> GrayLevel[0.82]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 3., 
            0.49375999907392776`}, {0, 0}]}, {{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
                9.374905851622373*^-10}]}, 
              ImageSizeCache -> {{110.7658383634799, 
               142.35951380271047`}, {-11.28363606979876, 
               8.567743424501543}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"9.4\"", "\[Times]", 
                    SuperscriptBox["10", "\"-10\""]}], ShowStringCharacters -> 
                  False], 9.374905851622373*^-10, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 4., 
            9.374905851622373*^-10}, {0, -1}]}, {{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
                9.37490666911081*^-10}]}, 
              ImageSizeCache -> {{122.71968696777101`, 156.3848925597003}, {
               8.703126936927362, 31.502289578528995`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"9.4\"", "\[Times]", 
                    SuperscriptBox["10", "\"-10\""]}], ShowStringCharacters -> 
                  False], 9.37490666911081*^-10, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {4., 3., 
            9.37490666911081*^-10}, {0, -1}]}, {{
            RGBColor[
            0.23789023047756447`, 0.34026033397260735`, 0.5749486231630255], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.0009569954758143525}]}, 
              ImageSizeCache -> {{133.66366696193194`, 
               165.58040732903706`}, {-4.623995920531073, 
               16.21769380999018}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"9.6\"", "\[Times]", 
                    SuperscriptBox["10", "\"-4\""]}], ShowStringCharacters -> 
                  False], 0.0009569954758143525, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {4., 4., 
            0.0009569954758143525}, {0, -1}]}}, FontColor -> 
         GrayLevel[0.4]]}, {}, {}}, FontColor -> GrayLevel[0.4]]}, 
    Axes -> {True, True, True}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    Boxed -> {Left, Bottom, Back}, Epilog -> InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph-deph\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]], 
    FaceGrids -> {{{-1, 0, 0}, {None, Automatic}}, {{0, 1, 0}, {
       None, Automatic}}}, FaceGridsStyle -> Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
    Directive[Bold, FontFamily -> "Helvetica"], Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, 
    PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
    PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
    TicksStyle -> {Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]}, ViewAngle -> All], 
   Graphics3DBox[{
     RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
     EdgeForm[{
       GrayLevel[0], 
       Opacity[0.1], 
       Thickness[Large]}], 
     StyleBox[{{}, {
        RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.1], 
          Thickness[Large]}], 
        StyleBox[{{{
            RGBColor[
            0.23774409529515214`, 0.34021737950302994`, 0.5751043721397191], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 0.55, 0.}, {1.45, 1.45, 
                0.00005073447954841311}]}, 
              ImageSizeCache -> {{24.50260797513247, 60.886926839685636`}, {
               14.03476726065135, 37.66306340034093}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"5.1\"", "\[Times]", 
                    SuperscriptBox["10", "\"-5\""]}], ShowStringCharacters -> 
                  False], 0.00005073447954841311, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {1., 1., 
            0.00005073447954841311}, {0, -1}]}, {{
            RGBColor[
            0.2377360011593672, 0.3402150003407804, 0.5751129987643615], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{0.55, 1.55, 0.}, {1.45, 2.45, 
                7.579296955828406*^-9}]}, 
              ImageSizeCache -> {{40.59992697744117, 74.9599779841792}, {
               0.24254030193296217`, 21.764463256970807`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"7.6\"", "\[Times]", 
                    SuperscriptBox["10", "\"-9\""]}], ShowStringCharacters -> 
                  False], 7.579296955828406*^-9, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {1., 2., 
            7.579296955828406*^-9}, {0, -1}]}, {{
            RGBColor[
            0.2377360011593672, 0.3402150003407804, 0.5751129987643615], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 0.55, 0.}, {2.45, 1.45, 
                7.579296955906333*^-9}]}, 
              ImageSizeCache -> {{47.24572405090035, 84.12335987154471}, {
               22.10760172914169, 47.019539150836906`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"7.6\"", "\[Times]", 
                    SuperscriptBox["10", "\"-9\""]}], ShowStringCharacters -> 
                  False], 7.579296955906333*^-9, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {2., 1., 
            7.579296955906333*^-9}, {0, -1}]}, {{
            RGBColor[
            0.2377418535035886, 0.34021672055857916`, 0.5751067614120094], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{1.55, 1.55, 0.}, {2.45, 2.45, 
                0.000036684908346409655`}]}, 
              ImageSizeCache -> {{62.61663123741315, 97.4049341380444}, {
               7.543631671245578, 30.166557642244435`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"3.7\"", "\[Times]", 
                    SuperscriptBox["10", "\"-5\""]}], ShowStringCharacters -> 
                  False], 0.000036684908346409655`, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {2., 2., 
            0.000036684908346409655`}, {0, -1}]}, {{
            RGBColor[0.72987, 0.239399, 0.230961], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               CuboidBox[{2.55, 2.55, 0.}, {3.45, 3.45, 0.9974117548870576}]},
               ImageSizeCache -> {{98.96362183694356, 
               134.59758417307148`}, {-32.877975979837146`, 
               23.026372780071284`}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.99741\"", ShowStringCharacters -> False], 
                 0.9974117548870576, AutoDelete -> True], NumberForm[#, 5]& ],
                StripOnInput -> False, LineColor -> GrayLevel[0.82], 
               FrontFaceColor -> GrayLevel[0.82], BackFaceColor -> 
               GrayLevel[0.82], GraphicsColor -> GrayLevel[0.82], FontSize -> 
               13, FontColor -> GrayLevel[0.82]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 3., 0.4987058774435288}, {
            0, 0}]}, {{
            RGBColor[0.237736, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{2.55, 3.55, 0.}, {3.45, 4.45, 
                3.134065229559724*^-10}]}, 
              ImageSizeCache -> {{110.7658383634799, 
               142.35951380101474`}, {-11.283636050204805`, 
               8.567743424501543}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"3.1\"", "\[Times]", 
                    SuperscriptBox["10", "\"-10\""]}], ShowStringCharacters -> 
                  False], 3.134065229559724*^-10, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {3., 4., 
            3.134065229559724*^-10}, {0, -1}]}, {{
            RGBColor[0.23773600000000003`, 0.340215, 0.575113], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 2.55, 0.}, {4.45, 3.45, 
                3.1340674456689643`*^-10}]}, 
              ImageSizeCache -> {{122.71968696777101`, 156.3848925572773}, {
               8.703126957195707, 31.502289578528995`}}], 
             "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox[
                  RowBox[{"\"3.1\"", "\[Times]", 
                    SuperscriptBox["10", "\"-10\""]}], ShowStringCharacters -> 
                  False], 3.1340674456689643`*^-10, AutoDelete -> True], 
                ScientificForm[#, 2]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {4., 3., 
            3.1340674456689643`*^-10}, {0, -1}]}, {{
            RGBColor[
            0.2381350391755838, 0.34033229219374056`, 0.5746877092368048], 
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], 
               
               CuboidBox[{3.55, 3.55, 0.}, {4.45, 4.45, 
                0.0025008257250474985`}]}, 
              ImageSizeCache -> {{133.66366696193194`, 
               165.58702871803834`}, {-4.673068043015803, 
               16.21769380999018}}], "DelayedMouseEffectStyle"]}, 
           Text3DBox[
            StyleBox[
             RotationBox[
              StyleBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\"0.002501\"", ShowStringCharacters -> False], 
                 0.0025008257250474985`, AutoDelete -> True], 
                NumberForm[#, 4]& ], StripOnInput -> False, LineColor -> 
               GrayLevel[0], FrontFaceColor -> GrayLevel[0], BackFaceColor -> 
               GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 10, 
               FontColor -> GrayLevel[0]], BoxRotation -> 
              1.5707963267948966`], StripOnInput -> False, FontFamily -> 
             "Helvetica", FontWeight -> Bold], {4., 4., 
            0.0025008257250474985`}, {0, -1}]}}, FontColor -> 
         GrayLevel[0.4]]}, {}, {}}, FontColor -> GrayLevel[0.4]]}, 
    Axes -> {True, True, True}, AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    Boxed -> {Left, Bottom, Back}, Epilog -> InsetBox[
      BoxData[
       FormBox[
        StyleBox["\"deph-bf\"", 17, Bold, StripOnInput -> False], 
        TraditionalForm]], 
      ImageScaled[{0.3, 0.9}]], 
    FaceGrids -> {{{-1, 0, 0}, {None, Automatic}}, {{0, 1, 0}, {
       None, Automatic}}}, FaceGridsStyle -> Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> 200, LabelStyle -> 
    Directive[Bold, FontFamily -> "Helvetica"], Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, 
    PlotRange -> {{0.5, 4.5}, {0.5, 4.5}, {0, 1}}, 
    PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Ticks -> {{{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, {{1, 
        FormBox["\"\[CapitalPhi]+\"", TraditionalForm]}, {2, 
        FormBox["\"\[CapitalPhi]-\"", TraditionalForm]}, {3, 
        FormBox["\"\[CapitalPsi]+\"", TraditionalForm]}, {4, 
        FormBox["\"\[CapitalPsi]-\"", TraditionalForm]}}, Automatic}, 
    TicksStyle -> {Automatic, Automatic, 
      Directive[
       Opacity[0], FontOpacity -> 1]}, ViewAngle -> All]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.8769838404993343`*^9, 3.876983855790031*^9}, {
   3.8769838880723047`*^9, 3.876983893521343*^9}, {3.876983928701768*^9, 
   3.876984022706427*^9}, {3.8769852322055283`*^9, 3.876985287242525*^9}, {
   3.876985342432447*^9, 3.876985384301882*^9}, {3.876985436179452*^9, 
   3.8769854782255917`*^9}, {3.876985517023767*^9, 3.876985555911162*^9}, 
   3.876986400927101*^9, 3.876986451203719*^9, {3.876986536372905*^9, 
   3.876986546883771*^9}, {3.876986594352593*^9, 3.876986640278388*^9}, 
   3.876990661313526*^9, {3.876990714955718*^9, 3.876991024279255*^9}, {
   3.876991124310525*^9, 3.87699114976712*^9}, 3.8769912243179893`*^9, 
   3.876991255368802*^9, {3.876991311157604*^9, 3.876991395320797*^9}, 
   3.8769914273025713`*^9, 3.876991743036669*^9, {3.876991781665785*^9, 
   3.876991829161055*^9}, 3.876991874937127*^9, 3.876991910670451*^9, {
   3.876991941184301*^9, 3.876991977925879*^9}, {3.8769920151890783`*^9, 
   3.876992036660125*^9}, {3.876992078378275*^9, 3.876992157441052*^9}, {
   3.8769921913940363`*^9, 3.8769922295311537`*^9}, 3.876992401169023*^9, {
   3.8769924324041853`*^9, 3.876992511597179*^9}, 3.8769925439839163`*^9, {
   3.876992615914874*^9, 3.876992641557534*^9}, 3.876992676976766*^9, 
   3.876992711379141*^9, 3.8769929152573853`*^9, {3.876992968512892*^9, 
   3.8769929784876747`*^9}, {3.876993025302361*^9, 3.876993029180842*^9}, 
   3.8769931502144747`*^9, 3.876993200462408*^9, 3.876993250990391*^9, 
   3.8769933272113*^9, 3.876993381786132*^9, 3.8769934331743107`*^9, 
   3.8769935251743317`*^9, {3.8769935979039497`*^9, 3.8769936622487097`*^9}, 
   3.876993717875125*^9, 3.876998959845083*^9, 3.877002621746258*^9, 
   3.877002700731724*^9, 3.877002859626307*^9, 3.8770029717709723`*^9, 
   3.877003059363475*^9, {3.8770032203917437`*^9, 3.877003267492721*^9}, 
   3.8770033139101133`*^9, 3.877063366746071*^9, 3.877064072649171*^9, 
   3.880183079680801*^9, {3.882433468167115*^9, 3.882433482127676*^9}, 
   3.8834880938972187`*^9, 3.883497203647339*^9, 3.8835488594013042`*^9, 
   3.883550345844308*^9, 3.88362724662435*^9, 3.8836353365370283`*^9, {
   3.8836355053179817`*^9, 3.88363554382373*^9}, 3.883635598573744*^9, {
   3.883635634294978*^9, 3.883635662860138*^9}, {3.883635764840392*^9, 
   3.883635780015568*^9}, 3.883635853976232*^9, 3.8836360446915693`*^9, {
   3.883636083464261*^9, 3.883636103901916*^9}, 3.883636141091386*^9, 
   3.883636293968174*^9, 3.883636370478499*^9, 3.883636406693099*^9, 
   3.8836442763258753`*^9, {3.883644500193532*^9, 3.8836445092342367`*^9}, 
   3.8836445696653757`*^9, 3.883644612312539*^9, 3.883644647019629*^9, 
   3.883644738397169*^9, 3.8836447786882267`*^9, 3.883644829150155*^9, 
   3.883645494678924*^9, 3.883645639419973*^9, {3.883645703051557*^9, 
   3.8836457272809563`*^9}, 3.883645786927299*^9, 3.883645820299128*^9, {
   3.883645862271497*^9, 3.8836459358637047`*^9}, {3.8836460247956963`*^9, 
   3.883646082808316*^9}, {3.883646125563218*^9, 3.883646168586383*^9}, 
   3.883646225991664*^9, 3.883646263954178*^9, 3.883646372334571*^9, 
   3.8836466186054153`*^9, 3.883646649627493*^9, {3.8836467170564632`*^9, 
   3.883646820088746*^9}, {3.883646885013775*^9, 3.883646905904752*^9}, 
   3.883647071013307*^9, 3.883649034737768*^9, 3.8836497371575336`*^9, 
   3.8836497773739347`*^9, {3.8836498189647017`*^9, 3.883649901232201*^9}, {
   3.883653347958172*^9, 3.883653438255756*^9}, 3.883733828014721*^9, 
   3.883733930970248*^9, 3.883736527514203*^9, {3.883738547408742*^9, 
   3.883738554342577*^9}, 3.883738705766994*^9, {3.883738753489917*^9, 
   3.8837387966562347`*^9}, 3.883738836658667*^9, 3.8837389163509083`*^9, 
   3.883738971383051*^9, 3.883739060656115*^9},
 CellLabel->
  "Out[674]=",ExpressionUUID->"ee77561a-6c5e-4a52-afee-f7a29ab8254f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animated step-by-step distillation process", "Section",
 CellChangeTimes->{{3.88373840369119*^9, 
  3.88373842780586*^9}},ExpressionUUID->"c3f2ea48-ae1d-4efa-8bf6-\
1368070e1557"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AnimateDistillation", "[", 
   RowBox[{"nrounds_", ",", "methode_", ",", "devoptions_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dev", ",", "circ", ",", "ccirc", ",", "moves", ",", 
      RowBox[{"show", "=", 
       RowBox[{"{", "}"}]}], ",", "format", ",", "noisy", ",", "fulltime", 
      ",", 
      RowBox[{"step", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"format", "[", 
       RowBox[{"zones_", ",", "noise_", ",", "t_", ",", "s_"}], "]"}], ":=", 
      RowBox[{"Framed", "[", 
       RowBox[{"Row", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<(\>\"", "<>", 
               RowBox[{"ToString", "[", "s", "]"}], "<>", "\"\<) t=\>\"", "<>",
                "t", "<>", "\"\<\[Mu]s\>\""}], ",", 
              RowBox[{"Rasterize", "[", 
               RowBox[{"zones", ",", 
                RowBox[{"RasterSize", "->", "500"}], ",", 
                RowBox[{"ImageSize", "->", "200"}]}], "]"}]}], "}"}], ",", 
            "Center"}], "]"}], ",", 
          RowBox[{"Pane", "[", 
           RowBox[{"noise", ",", "280"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dev", "=", 
      RowBox[{"TrappedIonOxford", "[", 
       RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"move", " ", "commands"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"moves", "=", 
      RowBox[{"{", 
       RowBox[{"Splz", ",", "Comb", ",", "SWAPLoc", ",", "Shutl"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"circ", "=", 
      RowBox[{"DistillationOnTrappedIons", "[", 
       RowBox[{"nrounds", ",", "dev", ",", "methode"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ccirc", "=", 
      RowBox[{"CircTrappedIons", "[", 
       RowBox[{"circ", ",", "dev", ",", 
        RowBox[{"MapQubits", "->", "False"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"fulltime", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"N", "@", "#"}], ",", 
          RowBox[{"FormatType", "->", "TraditionalForm"}]}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"InsertCircuitNoise", "[", 
           RowBox[{"ccirc", ",", 
            RowBox[{"TrappedIonOxford", "[", 
             RowBox[{"Sequence", "@@", "devoptions"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", 
         RowBox[{
          RowBox[{"OptionValue", "[", 
           RowBox[{"TrappedIonOxford", ",", "DurInit"}], "]"}], "[", 
          "\"\<Alice\>\"", "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"show", ",", 
       RowBox[{"format", "[", 
        RowBox[{
         RowBox[{"dev", "[", "ShowNodes", "]"}], ",", 
         RowBox[{"DrawCircuit", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["Init", "#"], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "5"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["Damp", "#"], "[", "1.", "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "5"}], "]"}]}]}], "}"}], "]"}], ",", 
         "\"\<0\>\"", ",", 
         RowBox[{"step", "++"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"noisy", "=", 
         RowBox[{"InsertCircuitNoise", "[", 
          RowBox[{
           RowBox[{"ccirc", "[", 
            RowBox[{"[", "c", "]"}], "]"}], ",", "dev"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"show", ",", "\[IndentingNewLine]", 
          RowBox[{"format", "[", 
           RowBox[{
            RowBox[{"dev", "[", "ShowNodes", "]"}], ",", 
            RowBox[{"DrawCircuit", "[", 
             RowBox[{
              RowBox[{"Flatten", "@", 
               RowBox[{"noisy", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
              RowBox[{"dev", "[", "NumTotalQubits", "]"}]}], "]"}], ",", 
            RowBox[{"fulltime", "[", 
             RowBox[{"[", "c", "]"}], "]"}], ",", 
            RowBox[{"step", "++"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}],
        "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{"Length", "@", "ccirc"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "show"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8837383987963953`*^9, 3.883738401478146*^9}, {
  3.883738439977435*^9, 
  3.883738443439444*^9}},ExpressionUUID->"2dc02453-c30c-4171-84c2-\
3faa7e72a7d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "*", "   ", "Render", " ", "the", " ", "steps", " ", "into", " ", "GIF", 
    " ", "animation"}], "   ", "**)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"picts", " ", "=", " ", 
     RowBox[{"AnimateDistillation", "[", 
      RowBox[{"2", ",", " ", "2", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Nodes", " ", "->", " ", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Alice\>\"", " ", "->", " ", "3"}], ",", " ", 
           RowBox[{"\"\<Bob\>\"", " ", "->", " ", "3"}]}], "|>"}]}], "}"}]}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<distillation.gif\>\"", ",", " ", "picts", ",", " ", 
      RowBox[{"AnimationRepetitions", " ", "->", " ", "1"}], ",", " ", 
      RowBox[{"\"\<DisplayDurations\>\"", " ", "->", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{".5", ",", " ", 
         RowBox[{"Length", "@", "picts"}]}], "]"}]}], ",", " ", 
      RowBox[{"RasterSize", " ", "->", "600"}]}], "]"}], ";"}], "\n", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<distillation.gif\>\"", ",", " ", "\"\<AnimatedImage\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87706348871129*^9, 3.877063523331842*^9}, {
  3.877063624751903*^9, 3.8770636394484177`*^9}, {3.8770636844535418`*^9, 
  3.8770636847284603`*^9}, {3.877064470203786*^9, 3.8770644712416*^9}, {
  3.877064720429151*^9, 3.87706472179109*^9}, {3.880183327151959*^9, 
  3.880183328373454*^9}, {3.880183761081605*^9, 3.880183762738824*^9}, {
  3.8801839218959723`*^9, 3.880183922918253*^9}, {3.880184340087482*^9, 
  3.8801843409323273`*^9}, {3.880187617128743*^9, 3.8801876202893667`*^9}, {
  3.880188089384716*^9, 3.880188090402269*^9}, {3.883497219171834*^9, 
  3.883497264048298*^9}, {3.8837391017430143`*^9, 3.883739101743507*^9}, {
  3.8837391558741713`*^9, 3.883739156525214*^9}, {3.8837392062881613`*^9, 
  3.883739217522626*^9}},
 CellLabel->
  "In[684]:=",ExpressionUUID->"453edd7e-2e6c-43ba-9600-7935556a2771"],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{Image`Utilities`i$$ = 40, Image`InteractiveDump`play$$ = 
   False, Image`InteractiveDump`hover$$ = False, Image`InteractiveDump`dir$$ =
    AnimationDirection, Image`InteractiveDump`rate$$ = 2.}, 
   TagBox[
    OverlayBox[{
     AnimatorBox[Dynamic[Image`Utilities`i$$], {1, 40, 1},
      AnimationDirection->Dynamic[Image`InteractiveDump`dir$$],
      AnimationRate->Dynamic[Image`InteractiveDump`rate$$],
      AnimationRepetitions->1,
      AnimationRunTime->601.5622797012329,
      AnimationRunning->Dynamic[Image`InteractiveDump`play$$],
      AnimationTimeIndex->0.5071678161621094,
      AppearanceElements->None,
      ImageSize->{1, 1}], 
     PaneSelectorBox[{1->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
Pz1xz15fR3L1+/c9ktn4aXeXPvLUd+7pa3dPfuvuhy992LpTv1cv3990NXIw
YF8jk4OFQmFra2swg/GHHEREhbMeLN9//OAf/Vv7euhjafuyHxWIzz19tbdj
KH3l004vdV/Fz/Z4y/NcpfLoZz7aqrsn7v183frkYMC+BpyDiqquLvbU296H
awSmgHgKYT3YJiacr1bVU7euXX1KwepO2yZfd9357JXHe9Jd5ZEfd5xa4RMf
fM51KTdyMGBfvc1BvUwmJyfbrJDNZp1LLmrNw8PDHvYeciMwBcRT2OpBLyFo
X0//KBewa8WNQrBjR9dT8q47r5WvBOzu2eJDHqemUTmPIgcD9jXgHHQbfA6G
fNcuEE6hqgefuPfzHUqzm7PpuWCXwH5s/xMeg+l6Nl36SMCZesnc/78/du8u
exQ5GLCv3uagaj0nB/Wcp9PpZDKZSCT0IrILsjv7RRcXF9Wgxq/1Nzc3e9J7
/xqZm5tz/tJWV1fn5+eDDwaIivDUgwq16x8auTkOvrr6rt33Lvz52rsbc1Bf
pa982ne/zzz0w7o28x99/1f+w9vV3f9cOd80jsv3H/vu7qnv3FPX2vf/8L37
d/xLdac5No1C2xlLDgbsq00OFm/WbT2ohZmZmUpNKpWyD7G43x/sth50D+by
5cuFQsF9Sz6fV2t1Y87XdDWFprQFUHBrIZfLadgdT1zTVLGBv8EAAxaeelBJ
0Zg+r/tbf+P1yZf8x3/6D5vXTXfd6bvfxs/GKJJ+5+++dO32N774r/zlj73j
1sbuHv3MR313p3KyrrXM782/5x+/+oNveUPiF5938O+WGrsrfen620zkYMC+
2uTgiQYdW3PnoJ7zvb2ffoZ5eXl5aWmpGiwH21NrFy9e7Liax+4a53Xu3Dkt
TE9P+94U9GowwICFpx4s7t3VNOw+uvSmVjmo3PT9LmFj7emu1F72wl9qetdP
rj3roy9Vdk1bUwX6vT/4/Xe9/pUK38Z7H/nj9So52M8c1D+B97n42C96fPzT
XQQrKyu2LzFIDrrHo4TVY923HBwc6HVaN+b9/X3d7r7FY3d1VAZqOnoxzs7O
+muh2vB8+h4MMGDhqQe12e82B937Km33lLvlulsqN2j5uaevtmpQX686k/jc
v3lr09h1PjjapvHGWxr3wdrXf3nr7yQTk6oHFYitql1yMGBf/fucjJ5zvXxs
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
8J3vw/puCyoJ/x+tuKr+
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 2->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
Rh/X1ta8T91Ucd4zPvnCsdo3/wbwoY89G+/l0PMc3j6t9xqFN31477Bqx9Tq
YDN+0LL+ZyFcoc6O9wpnwlv1pIWHDkI6SWx/MjWX7+7fqvlE/U//4dc2yzfb
dovnqcOTX/nsC+ff9X7nx5/5zS++WLn10vldUquDTfpByxeu3W742My7Pl7j
X1DCW/WkhYcOQjpJbP+iPmuPTk6fqBx/9uD2Z569pZmautMGJLtPXz9RGDb5
912TWh1s3g+66HTXvEz6s5+6JgWs+S8o4c+LtqI/mWZAByGdJNMPqvGcnJyc
6CKGh4eDH750MMaiI+jg4OBgXKX39fWFLV1n3yfD+x948O/9owf+ztiblTSj
jz4bJ1wH/Wl/PDw0C+kkmX4QoM2ggwCpJZl+EKDNoIMAqQU/CGDOdND7woWb
am7ZirXnN64Zj3+2rYsHoFvBDwKYc7fGkqCD3tjQQYDWgR8EqIlVxnqPjrRu
bbSQOhIPQHeAHwQAgDSDH/RhZmamt7fXHTHqLuLw8FDBZzIZTb3d+7SNfD4/
MDAwOjra/KDMkVEAq6urnSodAO4WutUPlkqlsoMd8EKtsTt/dHRUqVT00W2i
tcT70UXbq2bar4Nu8DYkRaslNniJmj5evXrV7cD85KWXtWVVf+baxu67tLSk
QwhVunJT/irR5qByNa8M7VotVFnaxru9ltRUW+07NDQUqnRl5R6+cU6N92Bt
nbil69htMOdL39jY0IGjgwDQkG71gzsO4+Pjm5ubalfVGq+srGSzWbWr6+vr
IyMjWjs2NqZVWqKPy8vLk5OTW1tbVfnMz8+3Xwe3t7dVqE7K7Ozs3t6egld4
g4ODVp7k8tTIT09P225ntLZQKFy5cuWhH33n+ax0WsPqoLJV6cpQnk6Vo0pT
1Q0PDysSrVXpqiWtsn3+KELNLywsTJwNK+liO1eXIQ1Vur6QKl36JS+pj/39
/Tp2nSn9T5Oq9vT0aJXEXYVq7ZyDSte582YiWdQ51S5ra2uhSgeAFNKtftA4
anLp0iXNqIm2Q2DoGBcXF6WDdnRgNe+at45py0HtbVUmHfGDxrGEtkcy6ZFV
Z4Wq4LXcjtxhHA0yTu8rNviBgYGqTGSdJAeulQtVumRIbstWl3GcXS6X04xV
HNWnalU5SyVt6RcvXqx60EL1L7Wyu4dCZUl2rQ+1eif6+vq0RH8GjON2daY0
1Wa2dFWC187rL4E+ooMAEIRu9YP7+/tuV2ZqM+11MzkUeYc1B+MMKWVHlZIU
qsmV3zk/BEZHdFANvvTLXgiVENgAFLzMqSJ0/Z1U/uWX7sjz1gxeMiEt8xnU
w6d0976eSrR/kFSB1vHJhxpHB1Wr2kZudO+MmrlJnUPdoNTG1qdrvlgsumN+
WR20V1k1Y4VPU7d0rwqr9nRmI7hRAEgh3eoH1fyqLZUaqsXWodkLjFYy5FC8
Olgul9Xsf96hSvK0i9pS/yGiWoE8l2JW8NKyjY0N6Z0ikQzt7u56dVAnzjgC
oeXawHsGrVLoSLW86tZhQ6ampnTItnQVp0pTJpI/RWJerYPGcaP2yrNd66K/
VapPVW/Yfral+zKh+w7GOY8qXc5dy706KPupGcWmo1bpVf/idB5VJ4VCIew1
YQBIId3qB6cdZAfsbSw1yJJCO1Sivf9lzu4hGkfv8g5Vejd9hutK2sDx8bFb
rh3t0eq4PRCZIPdM2au7MlCKXHrtvbkpcbeHr6ndLDjujraDblWaSncfOJEk
2UJlFY0jiJrRBlXfHxWqTLTKHZQ5IPoquufOOFdolbmtf2VlB8KwhdoZrdIG
Na++yk4G9/JVb5S3LQWPyj/gGNcGr6Xga3mdH5JMt/pBgFDYFtj7RnmrpyZA
D6I+77a34sX5hjIUudDIOyKL0Aa61Q8ChKIjTiRpjXwC7VjS4oGuBD8IYNBB
B3QQ0gl+EMCggw7oIKQT/CCASaQOdiQen0I7IknoILQB/CCAQQfP8HkyB0mC
bgU/CGDQwQAkLR6AuMAPAhh0MABJiwcgLvCDAAYdDEDS4gGIC/wggEmkDgJA
e8APAhh00IH3JiCd4AcBDDrogA5COsEPAhh00AEdhHSSTD9YdiiVSudnrl69
2nDV+Zl6u7RzJvjhn54cB8zTpzbcGTuOYdj696/YFh24JXj+Qc5swELRQYMO
QlpJph+0Ywx1E3YMo4AUi8VOFW2xwxvFQtjxB40zzpT/BvqfcHrr5ivpdoNB
nYK3ognUQfqT6VShkDaS6Qf9dfDll+7ceeHaSeXg5LlnNNOwMWwRCkNNsQ1D
U837bBxKjHZ3d5uOLmLRlhh1cGRkJOwu9XRQ9Xz4R7978Ovvr0rPb60fP/OV
mrugg2GhPxlIIXeXHzw+uPrC9mPnW8LKJz586ytfkjC1JzyJ7/XiJw/WFqrC
uLb+gRtf3K0piKnVwVj8oP5mPPfRlfPn/VWV/+jieTVEB2OkmXjUzgwMDMQY
DECM3C1+UNJT+divN2gJ1z9w/PSXWxrY6cnxi7ub/mEoSQ2rdkytDjbvB28+
UWxY4W7S2fHumzYdzOVy7ukuFArT09MRI4spHpfl5eWpqakYgwGIkbvCD0rd
greENz7/Ry2K6s71F77+O78SMAyptkTT3Te1OtikHzzc2Qh+6t2LA+7u/k13
uVze39+3T9R0SgdV9NUz9GPc29uzS2xIYTPUD3l2dtY4hzY4OFipVMLm4NaJ
pqVSqVgsNhOPceRY/4X6+voymUyEL4O3fkSEAAAaknw/GEoEbbpe/GTsIZ3e
uvm1/1YIFYZE0909tTrYjB+UrQ576m06/KPftTk0NFxVKcIBNsP5AJoMRr/i
8fFxzUxMTET7Rccb0tzcnJqXo6OjbDYrSV1YWGgynrC7AwQh4X5Q6hOtJYz3
AunLL91peH+qZnph+/+3RanVwch+8M4L16KdeqVnfvUR+wXwbzm9RqNTOuiN
QUqh36PrgCJkKAcn27W2thbtIqStBDcemVN9FV0/GDYk7TIwMCARlLXs7e09
PTne3t6OEJINJkIAAAFJuB/8+uMfitwYxvjYzNGTn4scxsm1p02KdTCyH4z2
x+Mv09rCyUsvB5Q2u2UH7w/6PKUZlr6+vsHBQUlPtHhsSLHEo/M4NjammfX1
dTtTKBQihBRj5QDUJMl+8KRy0ExLeP5hlWjof+z5R0ODJ7XnJsU6GM0PNnnq
bbr1VOmufk4mGsPDwxHkxhJvJcje9vf3VyqVfD6vb5Q+Dg0NRQgprngA6pFk
P/j87/9WzfbtIz/37r/1ra/XD+Q9b36jvyOIJZiT556pmf8H35Mb/LZv+Rv9
r3v9N96Xe+P3PvOrj9SL5PTWzdTqYDQ/+PzWer3K/Im3fP/A6/6aql3TX37H
W/2/AGnTQX1zlGfkbihir4T5+XmZU1nUbDY7OTm5t7cXIaQY4wGoSZL9YL3n
Up744M99pvDen/rBH1CT6O8IYgmm5rvbSp/+d/nPfeB9mnnyQ7+gNvlT83N1
nekX/ji1OhjND379sQ/Wq0ydffuXY+eX/5Uaya/+l39db8tnf+2X7modjBDP
1tZWJpOJ0JOeW2Ls/ckomJ6enmZCirYjQHCS7Af9Ne59U+MN/OCvv//OC9ea
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
+Pgu
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 3->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ9sLVed32kt0fZ2TddNdi15tRbEQmhliac+LRbCxSqtDMWLoc62Vmm0
RXiLwahytYY669IGAfsqZGIk7ypm41W9hLtWFrMEQorBEdayzuIqj3WWJH3Z
OFBT3uK8POeZJE7eH+c93vSb+fUdTebPmTN/7syZO9+Prq7m3jsz5ze/e+b3
58z584aJ/3Tr5N99zWte87G/j7dbP3j7O2ZmPjj3m7+ID/9m+mNTH57+0H94
9/THP/ThD828daIDX77777zmNf8W+7+yTQghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBS
NxxCCCGkxuzs7IyNjd1GCCGE1Izx8fG1tbU77rhjcXHxDCGEEFIz7r//fnhD
+MH77ruv7KyUEEIIKZrHH39c/CAcYtmyEEIIIUWj/CDzQUIIITXkzJkzzAcJ
IYTUFuaDpLY87mF9fX1vb0+//+nTp7e2tmR/bGxsbDxeBpubm6ro7e1tSKIX
+/DwEFEudkbQu7Ozgzsd78WLLUWrjxDp6OhILzmuFBco++OS8bF4saVo7/+O
aqAXGxUJ1Un2x87eqy4SqE7+98dvKF8vNoDYEFgOwbZSfsGoolFjofzd3V29
2I+7N4U6PPYygzAfJLXFO4S2o6NjdnZWv39fX1+HfXR2durFbjabZcsYTqxl
xqWVLWMIqAZ6saenp8uWMRxERHrJyxYwnJGREb3YQ0ND3v31O4fyOPNBUleO
POBWwl2g339gYODUqVOy/4HLURl4i4aP6+7u1ouNfXp7e9Xh+/v7sIfFi41C
UbT6CLFXV1f1knd1da2trcn+ligclWRwcFAvNvZBdZL9fVddJN6isQEHgaxQ
IzauUfaRQyxRONzTxMSEXuHj4+OTk5PqcP3OoTAfJATgPsKNoN8H6Ylttwni
WNgu/b0/Nzc3PDxcmEiGwFMgqNDsADOOS4OBKkwkE5AvxAYeqEhTU1PFyGNO
T08PggrNDltbW1D48fFxYSKZgEqCqqLf58SJE0tLS1lKYT5ICJifn9fH+RIt
xz6qKBh4QEilf2KFaHl6erowkQyJDTy2t7ctNMsSeOgbGGGWFxcXCxPJkNgW
j5WVldgm3+KB744NPBqNxsbGRpZSmA8SAlD/u7q6NDvYGS2D3t5efQNj9mi5
FSwsLOgDDzvN8uUrx6gG8NGafTo7O9fX1wsTyRCkqPrAY25ubnR0tDB5DIkN
PPb29rBDbCe32FKYDxKCRA93E5K+qB3sNMtgeHhYH+dnj5ZbQWzgAbMc20Gi
FBB4NJvNqF/lSVxGs9wKEHgMDAxodhgbG5uZmSlMHkMk8NC0eGxubqKGZyyF
+SAhAImePs63M1p24uL8XKLlVgDLow887DTLTlzgAbOcrstiq4kNPPr7+y1s
N3DiAg/IDMkzFsF8kBAB6R6SvqhfrTXLi4uLJ06ciPo1l2i5FcQGHnY25zru
sIjx8fGoXyGz5u8oEX2LB/4O1BPUloKlMkEfeOCuxL2ZsQjmg4QISPc0QwgR
cy4vLxcpjyEbGxsaT2etWXa0gYfNZlmv0lzMciuQwCNq1gVpN9jf3y9YKhP0
LR4jIyNzc3MZi2A+SIigt2AaG1IueguG5MVOs+xoLZi1zblOXMtnLma5RWgC
j/X1dTvbDZy4Fg9clKbV1BDmg4QISPeiHjTYHC3r43ybzbIm8ECSGztPTlno
fbS+db1cNC0eel9TLpoWj9jWdUOYDxIiaEZG2BwtO+6jtKg221yi5RahCTxs
NsuO2wU3tM02L7PcIjSBR+yoihLRRKGxva0MYT5IiKDp8W65WY7qw2O5WdY0
MOr7opROVB+e2NE35aIJPEzmFSwRaDU08ED6pu8EawjzQUIUUSOgbY6Wneih
dhItx86uXBaawCN2UGS5RE3Rg2zC2uZcR9vi0dfXFzvda4lE9VKLnQbKEOaD
hCiiZsSyPFqOGuOfV7TcOqLG+OuHjJVOVOARO1a9XKLmBowdq146US0eEy7Z
z898kBBF1AzJMMv6OYrLJWoqzryi5dYRGnjYb5bho0MDD5PZ2ssFgUewxWNn
Zyd2tvZyiQo8YmdrN4T5ICEK3AjBpRnsN8sS5weXZsgrWm4doYGHyVzW5RIV
eORllltHaOBhMpd1uUS1eEDsXDI45oOEKFZXV5H6+b60P1p23KX6gqGs/WY5
NPCw3yxHBR49PT2WG9LQwMNkbaNyCQ08ZGWudAvQ+2A+SIhCXB4SQO+XMMuw
b2WJZMjg4OD8/Lzvy7yi5dYRGnjYb5adsMBD1sDSr3VbOqGBB1zA5ORkKfIY
EroY5enTp4N3azqYDxKiCDVlsrx4WSIZEly2O8douXWEmjKTJchLJxh45GiW
W0do4DEwMLCwsFCKPOYg8PA5qWazGbyWdDAfJMQLcihflxj7o2UnLIeqhFkO
DTxCc1vbCD57hYuxv90gtJG/s7PTfvsfrBWhuW06mA8S4gXe5NOf/rT3G9yA
9kfLwcbbHKPllhIMPEKfddoGAg9fX9wczXLrCAYeUYMpbCMYjo6Pj4f27k4B
80FCvAS7vlciWpY+lt44vxJm2Ql05onqgmIbSBx8nXmiBt3YBuIlb+ChGVxv
FcEWjxxX5mI+SIgX31DoqkTLwcEdUXOe2IYv8IgakmAbwcEdUZMw2IZvUoio
IQm2EQw8oiZhSAHzQUK8+Jbtrkq07ATmYDExy8HpPTteTY6/RoHAw9vAWBWz
LIGHd+7WqEn5FLmrNJ3CfZMERg1Rtw1f4JHvylzMBwnx4psquSpm2QnMyWkS
LZsbz9bhm5OzKmbZeXXgoZkrVZHIW7UOX4tH1JRltuFr8djc3MxxCRjmg4R4
8S3nB7M8OjparkiGIM5XazQYRss2mGVf4FEVs+y8OvDQL84rWOIHfS0eUVNY
W4g38FhaWopaOyMFzAcJ8eFdSrVCZtm7OJRhtNxqs2xyfl/gUSGz7F0cCmY5
dmWuAvygyfl9gUdHxJJGFuINPDRrKaaA+SAhPrzLdlfILHvXcDcxywVgaPZV
4CE+sSpm2avkfM1yapIGHpolbi3E+2RzZGRkbm4urzMzHyTEh9emVcgse20a
UpWqmGXHDTzEplXLLCPwUEm3N3YqkaSBh/cS7Mfb4uFttMkO80FCfKhlu6tl
lr1xfr7RcmoMzbIKPLwprf14H8Lma5ZTYx54iNf2ehb7UdVDqrq3s25GmA8S
4kP1eVhfX69QtOy4YyWkFRdm2YZ1bA3Nsgo8qmWWHbdTLmpL7mY5NUkDD98Y
CstRgQfSt45cV+ZiPkiID9UHvnJmWXr1BIe2WY4KPKpllp0bU5qIWVY9T+xH
BR6+MfX2Iy0eyNq8XV6zw3yQkCCybHflzLIMvpMRxyZm2YZu/I4n8PANgbQf
BB7T09O+kQhRWDJuwvHMDtHb27u6ulq2OAmQwGN+ft43uWtGmA8SEkQmY6mc
WZZR/4Zm2bHGDzo3Ao/KmWUJPGCWvSPTo7DHD0rgIWmsdy4++5EWj4mJiXwD
VOaDhASROZMrZ5Zlcs7gUghRWGKWHTfwgDepnFluNpsIPIJzs4dijx903Fng
kFh1BNZgshwJPHxzs2eH+SAhQWTt3Q7rlxf3IbOCI2Y2XMfWHrMMKzQ+Pl45
syyBh6FZtsoPIvBAJfHNXG0/0uLhWzIjO8wHCQkia6pWziw77uJ9/f39htGy
DdObCDBBsMyVM8sSeASXUAwlnR/EyWGlDXc2Pz/M/sDAgG8lI/uRwAOY68QE
5oOEBJHF3CtnlgGMW2dnpyVhrblZRuABsStnlh038MjdLCt2d3cTdYxMFHgg
0vOtbGs/EniAy1fyXAKG+SAhQWTZ7moNmhCkdTF3s4zTqlWcFhYWDHspmJtl
CTwMm3OtApWkFe0G6+vrg4ODcFXwg+YrnpgrHAksdp6fn08rYGkgXuq66eZ8
z8l8kNSWbS2NRgO5VdSvuF+WMzA3N7e0tJT6cBixUKngTcbGxmSMVegO+B6H
q1/NdQUTIav67u3twSwbDmGWYYyhRXtlxvvGxgZ2hreNUjguObW64MGh8NSH
A/zdUYLBD6KqRP26ubmJw9VHQ23jYnFaqBqBAaIO875DXoVDpSsrK1GCNZtN
6VKl2SG1uiAzKkwWhSMMiBKsu7u7t7c36ldzJXthPkhqS0ftMdcV7MPw8LDj
zthmbivKvj7rMNQbIg3poIWNRIa97OuzAnN1KZgPEhJEZsqq4uMqZBAduU45
JSA36enpWV1dbdH03TKiTVLOajE4OJjO9kYhbfKogfgTZaMVnZZlKL0Nk+8l
Bflg7ktjMx8kJIg8jq/i80FpFzVsSUtkwBuNBuxPi2YdF7Ncrdl7BOjEMPAw
z1Y6OzuhEOQmcLKoivnOnSKsrKzgD63WNBECdJj7ZOzMBwkJImY53zkMiwG+
G2IbDv9P5Af7+/sXFhbSyhUDzDLENpmVxTZgkzvMZnM194OwxtA2Eh/oBE5w
fX09s5h+Zmdne3t7Kxd4SLtB7i0ezAcJCbK8vAwr0VGpyZMFBPlwhYZxvrkf
lP6cGxsbGUTTAbMsIz5adP4WISsg9PT0mDQwJn16BYW0Lj0ZGxsbGhqqXOAh
U7Kbt3gYwnyQkCAwyyMjIx03lvOrCmKWb3Mx2d/cLMP+wNrn/thRIXPgdFRn
tUdBzLLhPLSJ/KAsGtI6hSPfnJqaqlyLx9LSEsI8xKj5PtlkPkhIEJnO15LF
Vc2R5cXNl4vKt4NHlvPDLMt0l9UKPJbdBYymp6fHx8djd07dm9Ecw/NLNzAZ
OlGtFg9Rde7LRTEfJCQIjBtMHFJCWba7Kki0bM/ywYnMMjxg5QIPWdBW1F62
LK9gqHC1oG3lAg/cknNzc4aBhznMBwkJAvuwubmplu2uCiKw2DcbGhgTmWUI
PDo6Wq3AQwSWNBzevGxxTBUuAjtuZ9dqBR4QGGls7gtkMx8kxIcyy4jzZdnu
qiDRsqRX8ONli2NqllUCW7nAQ/yISq/KFsdU4cqPVCvwkGemMlVOvi0ezAcJ
8aHMslq2u2yJTFHhvbTrli1OYrNcrcBD4g0ZMYEKU6HAY2pqStoV4QThClss
VG7IwsEHBwe5Bx7MBwnxsbCwIGZZBivZEOeboKJl50Y/n9hDWt1twxCYZeng
Kt0vyxbHFGWWnRv9fPT7F9BPxhDVwVX6+ZQtjilI1lQH13xbPJgPFgluHBue
2hA9yiw77ijpVoxibgVilqWnvSzbHXuIJWZZdf+TwGN3d7dsiYxA7qDMMgKP
2Enh7PGDvb29MtNCtVo85ufn1dQ6+bZ4MB9UeJeqwf0IncOSyJBkX0aQelGb
0dHRRHrGXxOcRVb17zo6OoJsqBjYzYY2mbbB2ysbFUCtN2Q53mhZlu2OPcQ2
s+xUKvCAiVDj0E0CD0v8oLQbyDj0arV4TExMqADVsMXDEOaDAi5fTWaL6AhV
GjqBx4F/gfJR273LPuKndBEUYphEfhD/jnc9EUgyPDwsK51BANQEZC6ozxC+
p6eHrjAvvGYZdweUXK48hpw6dUpFy9vust2xtdQGsyzTSqu7D/da62Zvy5fJ
yUlllpvNZmzgYYkfhKq9I/QbjUZVAg8EqKjksm3Y4mEI80HBZ+u8Xk+qjTcH
xDeJUnLc6bi7ZT5eL4mWVMY/BWenmoxksJU6A27D7M+7ERxKgglQzVq0xLbl
eKNlx415ZL0h+5lwkW2ZJxx1Rn+IDcO6fWa5QoGH1yxL4KG/oy0ZR7+2tgZL
oj5WqMWju7tb5WuGLR6GMB90XCcSevmo1Xt7e7Ozs8i8fDU80cLZCMuhZ5mh
EVUONz4+4v36tavmJ4Gb8zpfxMzSLACLh/PDPxpODYH/2rsbYlq1jfgKJgiC
QdSlpSX8VJUHBzkiZlktL47EEOlhuSIZ4jXLoKurKza49QVmhj8l+jVWbJ9Z
Rv2synJXEBvCy7Z54JFdpRkVjkri1XBVAg9ZhUoF54YtHoYwHwTj4+PBQE7c
FoADUlZRAZeUtB1SEo108Qb+dNx0Xv81PT09Pz+Pbzo7O2Wj49VJaxS+p/nq
FkCNguXEqVKI107AsiHsVB+lGgQrgIVAbGWWHbeBsRL/ps/xVSXw8DXnOm7g
UYlsAgbfG/1WJfCQO1EZasPAwxDmg47rB4Nfop5DOevr69AP8kGfJYT+vbG3
CVF+cGNjY/rVBJvrkfrNzc35voGVwzkhG85pXiu8sZ80hKqPKBcmCPYTX0Kq
RM22bYPPLIi5s7+J2BctOwFzZy2+fMSXj1uLzyw77oK8lQg8fHJWJfBoNps+
OU1aPAxhPog8SN/IiR1kMh/vlzA7SdfOTp0PQgBUAN+BCwsLXgG8Q5k0SD9Y
9RF/um8lHVwXvkF96O/vhzto3XT31hJ0H748y06CZtnX/GUtvo4xwTzLTmAQ
vM25jltzEj0uKQuf+6hK4BHMW3Ns8WA+6LgV2PeNN66GG4JT8M3Ct7e3l2LC
86A/ddwEXz0xlA3fGEN59ufL9ba3t+EcVe3FaX0TUsGFoZL4Gm/xL3u/wW3r
9XTee0HMUQ2jI0TLvv6KuU9u3wqC0bKvgddaglG997mbtQQ7UFUi8Ag2HFUl
8BgfH/elHjm2eDAfdAJ+EFWi0WigVm9tbUmjJfyXb4gNfkqxAJb0bMex8GI4
XPwOHF/TZXV1VTZ8rXDyRDg4xgcVwztuwjdvPL7EUZDc+yh5bm5OVXhse+eq
RSkyKxc2UCuwASXk1fxeITo7O333grd7vLUEzTJqUUcrF7DLBTHLvoHzlQg8
gt1LcMfZH3iEDpyvROAR7NeaY+DBfNBxJ9nzpWCw/9CJjKOHvwhOcIEvU8wM
A8eH/w7pvMxrZHgGmOXQhgt1NvyDwcVT4DdHR0d9cz3JCq24XtzCOOQOF3Vm
uFQxp8h/YfztDxFzJ3Q+E+8sFtYiQZH3G4nz8122O3dCzXIlAg9YBl+7QSUC
j9DhBpUIPBCW+x7i5NjiwXzQcRseE7Uz47atRE/jIJXoOFEioWYZtwaSxLJE
MiR0FJh3QgA7CTXL8C9qnhZrCc57453f1VpCh597JxK0k9CJtXMMPJgPCqge
5t0jpfGwpfK0Arj7qszUURahZjm2D1JHIeglD0bLjkGcHzytvtAsv4YSut4B
/EuiwMNcquwCC1HrHSDw0DwuyV2lKeQPnY4saeBRpMBC6ATsvikvssB8UECV
DpqRKGInlreTXZeypbAahENBs6xWS486KtEdnQ59EVFmOXbZ7gIk1xO6/p10
DNM8NShd4VHrYqh1HKLOWbrCQ9fF8E4YHkrpCo9aF0MfeJjDfJAQRdTkvfpl
u0u3ElFmOXbZbhvMcnCKQvsDjyizrA88bPCDHWHLFcXORlW6wqMWaNYHHuYw
HyREEbWYy8jIiGbZ7tKtBCL8UH+3sbGhb2BsteT682v8neWBR5RZ1gceBfjB
dO0G9gceuAF9E4kIakHhjDAfJEQRGi070XZPHdVKoeKLiBIv92W7k6IXW9P+
GdpeanjaXIg1y6HiIfBoNBotEyoevdjr6+tR4lkeeESJF9viYQjzQUIE8Rqh
Zlm/bHfpViIqWnbyXrY7KanNMjy7Zv2U0hUeZZYtDzw0XsPmwEPS1dCuiXkF
HswHCRE0ZlkewEVNbm+tWXbyXrY7KanNsj7wKBeNWXYiOu4Whl7hmlZEfeBR
LpoO25rYNWkRzAcJcbRmWb9st7XRspP3st1JiTXLUcPWQgdyWoK+VwmqUIn9
yfUK1/QqsTnw0HRnlcqfvcWD+SAhgn40cXDctKJcPyjRctRo4tnZ2RyX7c4X
jVnWBx7lop9XAYFH0hn4C0Mzr4LNgYd+QicEHtlbPJgPEiLoR51rlu0u1w8i
gtUM/tIv211uN379dDeNRiMq8CgX/ajz0AlbhHLHTehHndsceExMTGgC1Fxa
PJgPEiLozbJm2e5y/aBM3h71q37Z7hLNcuwyB771mOxBP/1ps9mMCjzK9YOy
vpJmFjJNi0e5IEDVLPaqCTzMYT5IiGMwR5Nm2e5y/aA+WtYv0Fy6WdYse2dt
4KE3yxJ4hE7SWK4fXFtb8y2Y6MPaFg/9AqD6Fg9D7MwHcWm77UWiSQ9gjXMs
OsVTe0S8eZWeYnQPBNac8Iknn/za9x5fevCv8cLG40/8jWZn8/s31ixrlu22
2Sw72mW7bTbL1gYe+lWKJPDwLZ2mzlmiwmNXKbIz8EACG6VPQd/iYYid+aA+
PT86/vmDP7649Mjzdz3y3H1Pvbj/4tXCBPOxvX9p5bEXfn/nuS+deeHR85c1
eyZyRvmulRMV42mIGoyWghR+MKoq4h8f/8a5f/W1p/H6ja/uywvbt3796c9s
H156+efBQ8zv39g1XIILvqcoJTX6aFkfxGqW7S5xehONmxM0jrJEhZusWovA
I/QfSecHcTbzZUA1549dtdbOwENz3wn6Fg9D7MwHowbgwOPA6In1U2ZQ3j/2
3WdDLWEreOinl0QMryTKJof65UTOKF8/mCIftM0PItrx/ePBF75H9fAdaH7/
xkbLygBev+b/f22Olp1cl+1OShazrMnQbTbLYHBwMNE6bhp2d3f1M2D70GgG
Uumft9rZ4tFsNqOkUmhaPAyxMx8M+sHT5y5rDKDauPvR51sq2MHFq5KShAqg
tn/rf57zHVjbfDDFQnL+5eA3zivFvue+p0NfSv/vf+CcNxwyv39NnEVUg5jl
ZjmXZbvHxsZURYKRn5iYMDlKo5nYbjCazKtcs6xvznXcumSoHw3r6+vwXCgL
Rt78+ZdGM52dnXojb2fgEdtu4OQReFQiH0Scr3xNrCWc3jw4vnq9FVI98sxl
r9fTS4LEEE5THct80Bzv3Qq/ZqJz9ZI9lSvU378bHvr7+2Of4eJaYN9kf9hD
KFa2i7ESStSVlZXl5WXZnp2djV2SG6LClsr+sK6wGNCwfDQXAMqRYXF7e3sw
y4aLn3rFRqHwyBBAPjYaDc1TNgGXhqq4ubmJ/aFtXLg6m7nk6fDWDRQNHco2
rKWmd64AmVFVRGzYVSg8qdjQDOIEqBrFIVowNwheheMkOFZtxzYeSuChqhZM
FjLEYrTtvFrhEBsCyzacYOwawQjSRkZGsLPoPEXp9ueDXzrzgokBVDYQr499
99ncRdo9PNanJEFJkDkqg1zbfDCLH/zEQxcM3Z8vCPn3689ILKT3UIiQGzfA
niZ+ELvJUfKsRx2b9BqTospSRSsxYv2g2EDv4WrbXADYcwnLYXBi/ZdP7E4X
X9HYju2lD/ctVwq8V13AXNYNDz6Fx1bpmZmZjApHpCGJMDYSWQNvWUGFxy41
HlXNzAVITajC5X/XTHEvDA8Pp6vVCsvzQXgfSQfMzaC8/+nfRHb8S8HR8c9V
9wxzSbD/5MZ5OUNt88HU7aIq+zZ3gt445L6nXnSK6g9Zbj+ZYkBuIs3CsUaJ
ZETysuPj44ODA1h1bOi75ZDsWJ4PSrNYUjMoSUGO3WYkJ02RmMAgP/jjiw7z
wSRIVUROl+Kv9wYhqAD0gzmeFjYZ6Un2OY1ri2F/UTg+JMJbW1u4EQYHB+EN
Y1tiSUZszge39y+FpmDv/tMfDy1+962f+so77trWGMPP/9XPchHmuSvXgmKI
mxMx3vbf74dIUQb5t7/9SkpY23wwnR88fe5yaOCBb955zxkoHGr/p5/7lv4p
7dqTR/SDOZ4WTjBFTEUU5uMmcAv09/d3d3fDIcIJWpWktCU254PTmwehhg42
8HW3vPkf/krfG0Yn9Y1juQjzyDNXQg3ym26b63rTr79+ZOLmE0Ovfd1NcIXB
3cSB/uSFl2ubD6ZrF71969ko79Z363/sfsu7bnnvR1AHsBGVp0tKSD+Y12ml
M2GJKwp5qajCk44fxL1jiVmuqMLNsTkfHP9GeKOomL43vf8/6/0gXrl0HL3j
exeCT6l8YzfglJGkREm78tgLJfrBKuaDSKJjGz/f9SdP4t4JDT+U5ukH8zrt
5uZmb2+vYTfRVlNRhSfyg7KiEBVeDNbmg3Bh+lzPxA/uHuawjEho26z3G2wj
H/znd5+OMsjwpLXNB9P5wVu/rvtb33HX9j+Z+ULvO3/rpv63aXajHyyd0t23
zUW0Aio8Hdbmg89duaY3cXo/KM1iD/30kuO6ldtcvAOlFxYW5EvvYF6ZSR6o
VU0PLhxqeshIKW8c/52bTwxpnlXdvvVsbfPBdO2i+m6ib/3UV25570fgBN/8
0TvpB22GZrlgqPB0WJsPXnr55/pcL9YP4nX63Ctzfh4eHu64eKef2t3dlS+9
S27t3EA1R1y+chwjhvuUMKqfjLw+8dCFEvvJVDEf1OtcXtC5Pg2nHyydiort
VFbyiortlC15unxwyiVoLeE1ms1m9kWN5flgFj8oLySVGSVx3A78kTmp6wT/
5b3/Ry/G/Omf1TYfTOcHx79xztAPvv1z39Z0laEfLJeKil1dqPB0GOaDm5ub
3tk2kEPhwOD0p/v7+zibZvEaQ8QPRjmg4ZXH3jj+Ozf1v+11t7wZ3hAZQZSp
zCiG8KUzL4Se/M0fvRO17pb3fgTC4AWDHCXGK6tj1PX5YLp20akHw/vJSJek
149MSH9RfXM0/WDpVFTs6kKFp8MwHzx58mTXTTd7p+XBdux8s6kRP/j5v/pZ
qH171588+eu/+8fq9c57zoTu9v4H/JNdp+MnL7wcamOHFr+rZHjL3Jc07vj4
6nWOHzQHfvDuR5+Pcm3vuGv7rZ/6ChSuHz+I1+TGefrBUk5LQkk6boIUhkk+
CJc3NjYGc7q1taW+RNLn9YPIEO9w6erqUu2iOHBoaGh2dnZmZkaZ1unpaWxj
z6g1H50bfvDoOPwRoeE0I488cyWjcgR4sWBmGlzzIkqMO753weF8MklAVdT3
kjKsBghg6AdLOS0JhX7QWkzyweXl5bW1NTg+7/Q+UflgX1+f8oPDw8Oq46U0
lsLBqbWzUWjUumlquC6ciInLC77Gv5FPMig8enAlnRjvufGMsrb5YOr5RVP/
9e/xtAbQD5Zy2lZTUYVX1w9WVOHmmOSDCOnhBzc3Nzs7O1XTqC8fVMAPqn16
e3t9M5xPTk52d3f3uESt2ux4/CByMf1QsqjXuZdyXqR+/nR4I63+pab7Zj5o
jlTF1H+9twLQD5Zy2lZTUYXTD5ZbhIbYfPDw8PDkyZMHBwf7+/uzs7Pioa5f
u6rJB5Xvgw30jkpw3CVgVlZWYqXyTt8U1TqqeeXVIuoFZnlyI36SE+9rbuuC
Ory2+WCWdZd2D2MGrUS9ZG5zh36wpNO2+vwVVXgBfpAKT0dsPnjq1Klmsynb
vhywv79/YWHBtxCw1w/CdSL7ww6wqyMjI447WZA8MYRDHBwcjBph4ZvGUD+3
jO+VyxwyoUAM88a63995zntsbfPBjOvRw6MldYJ3P/q8OrxcPyjrFSqGh4c1
J+nt7VUPEcyLyEjHqzH8KdGvLRK7FactoIhcVEqF546188kEv4zqPqpeM3/+
bItWovfy0E8vxZri/Rf9rbLMB83xhWTnXrpq7gRlBiFF6X4Qyr948SIiQ7z0
42pL8YMVJZE2ZBli87WDUxTR9qTQBixeoqUqLc8HSyFqWnu4ufueetE7yPrW
r7/yQgpwdJzbaoMmPPLMlakHz3sfYGH79q1nf/LCy6H71zYfzO4HhYXvP6f3
gFB+cMXJ0v1g8CnA8vLy0NDQxMREf39/X1/f5uam405M0eGuLA9viB3MiyCx
QNuTk5Ncwq9g4FYqtEpXhfLBSlPbfDBju6iPB3704uTG+fc/cA6xkLx++9vn
v3Tmhah2ADv9IPaX1G99fR2uUL7HBvPB3Nnd3ZWBzz09PfneViSUo6MjBHWI
8VBjUaVHR0ctWTJDj535YH97AXuId/PLR3CSY+mrq6vl6r/E0lNkoynQ+MHO
zs6uG8iMTJIPyg7etXXYLtoKZmZmpqenHXeUFgxd2eK0OYg3Tp48icB7b28P
NR/fjIyMeCcisxY780FCKoTGDy4uLsIm7O/v412G0CJDRJDsPRa/Oq4f1CQs
9IMpgFlG+IFQ33En+mg0GqJq0iIQckt/SGxIr7CqhB925oOEVIik7aKhfpDt
orkD5avUG0DtOTb4kyBq3rCpqSlJA2UisrLliof5ICEZ0fhBeD3pLKr6i+Ib
bz865QcHBgbUACXzIuqJoTagf69K19fXu7u7fTN7ZCyiJhhqY2FhQdJAaH5j
YwNZITYqoXDmg4RkROMHvQO75FFpVD6IQLS3t7ezszM0fqZZ9mKijZ2dHaX5
RqOh3kO746Yroj4YagMub3x8vK+vT2o7skLztYc4fpCQStP2o4xtgwovmETa
QCaYon8a80FCKg3NcsFQ4QWTSBvwJtJHt3VF5A7zwSiOj48HBgZ6eno0vRes
ZX9/f2hoaHh4eHBw0DfFazFMTEygdISF6+vrxZcudHV1aZ645QjNcsFQ4QXT
9gpv13xwampq0kXm64A9RIgi6yeePn0aFzs7O6v68iEYwK9LS0u+ma/wEZop
3g9O3kBG30NaiCdzCxwcHCBikaUeZefLV45xLfjoFR5fSss8dp6ZmUlUOs4m
pcuDKigNpatBiNCkr3Rsz83NQbDgqSCSGiduyMLCgpQuIeXu7i428KWUhYKg
E7zL1eGbU6dOQeBg6fgS8qcYO5mCtrcShLQ37ZoP7rvACCMbgh+BXcWVIkXC
x7W1tbGxMfyKL+ET8c3IyAh+hVsMzvpSih8U4eHKl5eX4f7Gx8cRriC9Emnl
omDhZcpEZD07Oztw96EzR+GKkvZb9paOgqA0lI78TjI7FIcvsS2+CYXCUUIw
bwd1AfXK12HPBFnZROZmx8fu7m78NZAEfg2+r7Oz84knn8TFyqAk/HHYltK9
YQD2hMD43+kHCSGxtGs+6LiDWcRTKCMJnwIDC9soxhnv2IY9h7keHR2FUQ0+
3kW6UUq7qDL1uAo1BxeEgQ9S+R1MveM6phEXbPhOggPxvX5651BQlpwcJYr7
Q+YlI2RFKnyEVg8PD+GYpHQ4LF9BcGcQAMFG0tLF6eNscHBq1eZGowHvJtml
LAkNj+kt3TtEemBgAPvQDxJCTGjXfBAuTyy5446fFRMNw4jkCM5RzGPTBd8g
Ezy6ge88ZeWD8MgiM9IiadrFHySTk6ixwOKSxOYHhZf817zfsgJFwMvIqB+U
KBUDLg9pqXPD+eK04gfhmKJUJ5iP2BKwc39/v0w1tru7izRQvofL8/pBXDX2
gZakaN8chggJcAl9LkkvPwX0g4RUmnbNB2EJt1zgU2BOYVrh7Hp7e2FmV12c
G35QrOuii7T1KWQKLPidIjt7yDM1/B3wv/h34M7wEZJIcyhQz+bED+J7fIMd
vKOzsVtPTw8uB9+LGzUHJ4Tvg+pQuigHJ4ECZX4q8YOSDzruo0yIAX2qqEOA
MDKoNmk+iOQOkcm2i+O6UZmQEwrx+UHHfQqMcvEnekfkOa7Xxj6QynCwWEbo
BwmpNO2aD+7eQDKFg4MDta2SF5VHwKqLi/FlLnIG+akU4aWtD0JCABEVXlL1
CVEtgSKhNyfCbvjGe5JEpcuxciC05D2JlH792tWzZ896S/f1VJEZNQH2TFS6
Ehs47l/jLV39Ed4N7BDaS0eTpeYL/WDBUOEF0/YKb9d8kJDCaHsrYRtUeMG0
vcLbNR8kpDDa3krYBhVeMG2vcOaDhGSk7a2EbVDhBdP2Cmc+SEhG2t5K2AYV
XjBtr3Dmg4RkpO2tBCHtDfNBQjJCP0hIpWE+SGrLfRmQaU5nXYrxgyho7gbz
8/PpxF5bW8PheM9y7elYXV3NUrRMtSdKULMrtA6vtsHS0lI6sZvNJg5Pd2xG
VlZWJMFJh8wbXIy2gwqH8KklT1E680FSW7pdenp6Urx3dnZ619httagdr6bR
aKQTHuDwrq6u7uT4zpP0WBSKojXn1L/LKrplKRx/dwqZo67aXGndeSs89OSh
70VqW6PwFLdnitKZDxKSEbaLElJpmA8SkhH6wYKhwgum7RXOfJCQjLS9lbAN
Krxg2l7hzAcJyUjbWwnboMILpu0VznyQkIy0vZWwDSq8YNpe4Xbmg5PtiPnl
7+3t5Vhu0nWXctd/tUpPQdtbiRpChRcM88EgGxsbZYuQM4uLi+Y7nz59Osei
l5aWkh6ilvrNzokTJ5Ieoq+K169dvfL03qUfPXrphz+4/NMfXbt8UbNzYV2+
26AIQmqLnfmg3g9eu3h0aXfn6PvfOXp446UzD7984VxhgnmBQb704zMixos/
2Lp89inNzomcUb5+MJELFnL0g7JgbiKi/CBU/exX7zp/z+8988XP4F29nv3K
4vPfe+DnVy4FD6EfJITEUq18EB4HRs9rA+V18OXPP7f5Zd8quq0D7u/Zr/1h
UIzzzc9euH851C8zHzQnWBVf+t//6/y9d4Yo/NXKR/XwHUg/SAiJpSr5ILIt
GDpfImBiCfPl2tFzkpLoX/CGvgNrmw9m94OH37on5n/35oZfvcubGNIPEkJi
qUQ++ML2Nw3NIF6H31xpkVRXnt6DqzWV5N47r108UsfWNh/M2C4Kv2buBJXm
r1+7KofTD7YlVHjBtL3C7c8HX/zrv0hmBlvjCl++cC6pGHCa6nDmg+YoP/jc
g6uJnaBkhV/5/5dMP9iWUOEF0/YKtzwfTON93NdLj/1ljvIgv0gnxrNf+0M5
Q23zwdR+8JXsO5XOz7sdaV4687BDP9imUOEF0/YKtzMfXF9fl42DL38+tSVU
jWPZefEHW6lt8qUfPerUOB9M3S4a2iEq0QsVgH6wLaHCC6btFW5zPnj57FOh
zWJPr3x67+47dpc+gXeNH3xh+5u5CHPt8sXQIs598TMiBl7nopvvnv3qXQ7z
wSSgKl756Q+j9Pm3/+NTonMoHzVB4wdfeuwv6QfbEiq8YNpe4Xbmg+IHL9y/
HOoH7/34B/7xLzQ6/8Hf+/C73qZPCXMR5sq5/xt6/v/yr4chxuCvveFXb/7F
X/5HvwD7HCXG1aOf1TYfTOcHD791T/jf2vzs6Fv639jzS2/vvwU6x7Y+JSxl
6bQWUcCFVBG9ljS/xh7YWrkri7nCkx7YQqHjsDkf1HfOvP3Wf6H3g3jlIsxz
m1+OSkvVNlzhtz75kSgxjr7/nRL9YBX7i0Y2inqqxA+/8F9x7/zkjz5Zuh8k
hFQaO/NBeT7os3sp/GAuU82cD0xgEnzBDz78uZmoX+FJS2wXrWI+qA+Bdpc+
8Z1PfxT5+InX9+j/GvpBQkgs1uaD1y4e6V2PiR+89OMzONvOzo5MuTwzM6OK
QJYkX3rTpenpaflSeaLDw0N9EXjNf+B9b+z5pah20Vf84IOrtc0HU/rBaG3D
8d09Nf72/lt+7Vd++c9mP6j/a+gHCSGxWJsPxg5VMPGDMucnfBkuE94Q76qI
vb29HRdsqC/VbjhEvjk+PtYX8Qcf+k04wb2779B0lYEfrG0+mK5dVK9zuEK8
fvJHn2w0Go8t3k4/SAjJQkvzQfjWdHN+queDmlYvEz/ondElNZoO/OIEd5c+
oRfj+b+4j/mgOa/4wbjZRMUV/urNv7j+3ybpBwkhWUiXD25vby8sLMDAbm1t
IWOK2q2/v18lVokQPwgHFOoH4XfunhoffUv/2/tvwcYTf/C7UWYwRdFBXtzZ
DD35F6f/Hczs7932G5ABL83zwUu7O7XNB9P5wQtf+0KU+8OffucH34cIBBXg
xOt79EMn6AcJIbGkywdPnTrVbDZhrrExMTERtRtsYBY/iDQq1Lg9tnj7zPv+
GfJBvON1+s6PhZvBe+9MUXSQl392PvT89378AyKAvCL7izY/e/3a1drmg+na
RZ//3gNRfhAJIGIPKByxB5ygpsXg2a/eRT9ICIklXT6I/cVWw80h6ZMvV1ZW
4BMnJyfhHOUb/DQ7Ozs9PT00NHT27Fnz84sffKWrjPm81oHXlb/VLQiYCM20
NtJApxHjuQdXnVLH0VcxH9T3khKdq1fUbscH+8X4wXSjpdKNayNOcoWn/i9I
TUidD46NjcHrjY6OSueTnZ2d4eFh+RWuUM4GGyi/7u/v9/X1mZ9fzS+aeqZl
7xzX2cky16U8o6xtPph6flH89al1ft5dktJpo/lFiRcqnORL6nwQxmp3d3dr
awvu7/j4GEmHsrfwYkgDHdcGHhwcyJeNRsP8/MoP/vzKpXQpYe6L1D/353+W
Qoyj739HDq9tPph6ftHUf723AtAPtiVUOMmX1PmgstU4/OzZszgcaaB8A4e4
sLDgePrJXL5ynM4POu7St0ltoAwbzJfr165Gdd6IekmLqMB80BxVFZGGp2sN
kMUmnDbyg7T8Xqhwki+p80FkGevr68j7BgcH4SOQEo6Ojs7Pzy8vLw8NDR0d
vdIYCBs4Pj6OM6sGUkN86/AmcoU5Phb0gQzFvLHON8t3bfPBjOvRX9rdSeoE
vZpvG2vWNhdSFajwWpEuHzw4OAgOQocr3HNRYwZxcjjEJ558MmmvUZ8fdNx0
LHZV+sNv3QOPmaigFMRb5uZnj5/xdwqqbT6YcT16cHywn6Ap4Ic/8B7bNtas
bS6kKlDhtcLO+WSCflC4dvHopTMPBx8bHT28UYAHVMApXz771IX7l4MNoVHP
JZkPmhMMyZCJP//QN+KjoMC0CW1jzdrmQqoCFV4rrJ1fVL8DPBFsI95zXGw3
BSKAiSS1zQdz8YMC9Ixk3D+9z713vviDLfwUekjbWLO2uZCqQIXXCjvzwctX
ji9evIh3w1einct6mV/+K/lmfuVqJvzR6L89Sk+kdkJIPbEzHxRUhuXbCH6v
2dlkI+q06c6QV4qaSIzcMb/SVsgQe4Gl6CQK5g4FQ4WTfLEzHySkQtAsFwwV
TvLF5nyQkEpAs1wwVDjJF+aDhGSEZrlgqHCSL8wHCckIpzcpmBTaQMDf3d3d
0iJIdWE+SIj90CxnZGlpaWxszHx/KrxWMB+M4vq1q8PDw1033by9vV22LIk5
ODjAXX/ixInR0VE11XmRTE5OnnTJdyxkIrq6uprNZlmlh4KwE1LJ9uHhofki
LDTLqVlYWMCN0NnZ2dPTYz6alQqvFe2aD66srCy7yLymW1tb+AZOH9t7e3s7
Ozurq6ubm5uyM76BwVxfX/ed5PKV41OnThXvB5dvIPMJQFoILxdydHQEz4I/
a21tTQYIQEgIrz4KFy9elLnscJlJB8XjEG/pUBpKhwLlV2ysuchHlA5hcIjM
KOsDvyZabwvgX5DSUajjrtiFDflrcDaUi21crwwMVKUHJ+5bXFyEAcRPmrKa
acFpcctMTU1N3sDw6o6Pj2FgJTKZnp5WK3XGgqMmPaD0dJJDmRAb6k197alB
oSgaAqQ7HNU4hcKhZNg31JPe3l7cR/Pz8+kULiuPpwD1EGKnOzYjKBqXn/rw
mZkZUbhX7YZA50giZDvFSbAzbt7Ukhv+xV7aNR/EdT3x5JPIR1D54chGRkbg
9fARdhW2dGhoaHd3FxkTnAuMEj7iV9xoQbMJzRTvB0V41EPxwiLewMAApIXL
Vne0eAdEufjv8O/jGoOngtkxv/cFFAEBUDoOhLoQQqN0nFxcYXd3N8RYWlpC
ifC80CGKgDOCkL7zQHUy9XrS0vHX4BZGtZTi4I4hDO4LuNpGowFh8A+KJcQ+
sK4oXa19KSAMgMCiFk1ZfRmAYOkWb4U+oUn8rYlm2vGtFYukMp3YqDw4PMuF
pyZj0UjokiocdQl3B5wgqjFqDoIQFc4lVTj+7lKuOgu49ixFQ2Md5QHhU0tu
flsp2jUfdNwnAhJvywqJjptrwJzCikqu0XQDe5jc8fFxOEEoITgpdCl+0HGn
VhO/Njs7KzcvrDp8Cm5txHj4eHz1OnwBPBH+9ztcVIObAu5Mrf2RCFwyHBxO
jhIlQIIxgVPDhnyPj9AqQgjYB1EdxPBNHQNXDg3jp6Sl4xoHBwdRBCqnHI4S
YQZxIVLJsYEdkAPCyKjSYevUGSAb9oHk+nywFHC7oWbCCSKYKVuWNgcVAPUE
GxL6Om4badlCERtp13wQRkblCEE/KGmCJNH4BjnFvkvwUVop7aIQA3ZSmv68
fhCiwkeodk7JmHCn79/AexLxJikeDuI8OFC8J0qUAAkfpZvBxMSE4yZcMCwH
Fw7FAQVLV8BRJppaDTvj2uVsyg8Cnx9ExAI/KHsGS4d/hJz434NZaivoSJIP
IrSATmShapIOQ4XDCHTddDPqyczMDO4afEyXLJC2p13zQdR/VHtcHe4CODKY
RDhBmE34BfhBSRPED4o5xZfQgK8ZDYdAOTBcRbpCOAIYeXg9aQWVdlERHkFL
0A/29PQgvd3Y2PA+B8Rl4paHf8eBSfMOOEFoQ0qHfzl58iRODhlECeIH4YnE
xcA5IlTY3Nz0tX9CGJwEqatkkeZIuoTS5WEu/kdcwtTUFL70+UHZGVUXpfvc
iqz/BbUUE/8n8oOoe/CDnPg0C+YKR+Xsc9tUERqhKkqlIsRHu+aD4uzA7u6u
4zb04RvZhoU8e/asc8NaOm4GBCcIDfiyJxwu51E9agoAflAJL5kgnIISHvZT
+TVxTNgfkkN+2UGAc5eT4D2pE1cHSuk4LU6uun3KBgoVnWADXlL8pvck0p0G
+ySdZxteTwnguA5dziNlqQ4z0odHxMAOob4ef6t3fczWkcgPwhpLYx1JTSKF
I2p67Wtfm+LpAKkP7ZoPElIYicwy8mjzbqIklEQKR6SUYvEvUivaNR8kpJ1I
ZPlJdqjwWsF8kBD7oVkuGCq8VjAfJMR+aJYLhgqvFcwHCbEfmuWCocJrBfNB
QgghdYb5ICEZYe5QMFQ4yRfmg4RkhGa5YKhwki/MBwnJCM1ywVDhJF+YDxKS
EZrlgqHCSb4wHyQkIwWYZVp+L1Q4yRfmg4Rkx7t0muanRL/qD6w5uSg80YGk
jWE+SAghpM4wHySEEFJnmA8SQgipM8wHCSGE1Bnmg4QQQuoM80FCCCF1hvkg
IYSQOsN8kJCMcNhgweSrUiqcMB8kJCM0ngVDhZN8YT5ISEZolguGCif5wnyQ
kIwUYJZp+b1Q4SRfmA8SYj80ywVDhdcK5oOE2A/NcsFQ4bWC+SAh9kOzXDBU
eK1gPkiI/dAsFwwVXiuYDxJCCKkzzAcJyQhzh4Khwkm+MB8kJCM0ywVDhZN8
YT5ISEZolguGCif5wnyQkIzQLBcMFU7yhfkgIRnh9CYFk0IbMHRdXV0tLYJU
F+aDhNgPzXJGlpeXx8bGzPenwmsF80FCCgNhp8pKjo6O+vr6DA+kWU7NwsLC
iRMnOjs7e3t7sWF4FBVeK5gPktqylIHZ2dnbXMbHx/FuWOLx8TEM7OHhIban
pqZOnTpleCCOus3D9PR0OrEXFxdxOFxDlmtPBwpF0RAg3eG45BQKl6MuXzmG
E9zZ2Zmfn0+ncPzd6cRGiTg83bEZQe1C0UiE0x0+OTl5W1pGRkYGBwdTH36b
65JSS274F3thPkhqy4kM9PT0NG6QKHfAsVtbW6dPn8YG3KLhUShCCpL37u7u
dGL39/fjDHjPcu1Zik59OC45qcL39vZwFJzg/v4+jrp+7erm5qa5wr06x9+d
Tmyk/FmuOgsoGllw6sO7urq8VS7pe+oD5R3Cp5bc8C/2wnyQkIwk8oOSHeBu
RXrSOpHaG0OFw6YhK8HG2tra0NCQ47aRtlYyUk2YDxKSkUR+cH5+HknK7Oxs
6+RpewwVjkgDqj44OJiZmZmbm8NH8weypFYwHyQkI4n84Orqak9Pz+Urpi2i
JIi5wk+dOiUtk3gfHR2FuWupYKSiMB8kJCOJ/CCssTTWkdQkUjhCDtU3iZBQ
mA8SkpFEZnloaMi8m2i6ItqeRNrY3NxM0XeCCq8VzAcJsR+a5YKhwmsF80FC
7IdmuWCo8FrBfJAQ+6FZLhgqvFYwHyTEfmiWC4YKrxXMBwkhhNQZ5oOEZIS5
Q8FQ4SRfmA8SkhGa5YKhwkm+MB8kJCM0ywVDhZN8YT5ISEZolguGCif5wnyQ
kIx0vJq8ftUfWGfyUniiA0kbw3yQEEJInWE+SAghpM4wHySEEFJnmA8SQgip
M8wHCSGE1Bnmg4QQQuqM5INIBk+cODFICCGE1IyBgQEkg3CIl68c43V0dIT3
ixcvBt9Dvwx9VydJcezFMELPJqUE302K0wtmeEioPF6x8Y28axSr/zWRDjWq
S/Su+fvMS09RrqGq9UVoNJnju6/WJdoInsTwqGIurdXqosL5buE7Xk5gACkh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCSNvz/wBev8c4
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 4->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQFsJNlBpveyYBYfODEg62IucFiY6FqnIGTOISDOdwaMHPAJfPIlki/i
MGcgjs4XHAxnRVqJY6M9LNSwMibKkAkMrE9Zk2xCnMkGL+ucL1knJkknYXH2
zjBhycSZeHd7d9az8cx6ZvfdP/12KrXd7urXVa+7q7u+T6VWdXXVq79edb2/
/+qqV983898mf/llt91229vu0MvkL/7mv1tY+MWl//AKvZmaf9ubf2V+9r+M
z//67K/MLvzIzO2aOP5PbrvtjZr/5jgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQJoxAAAAGWZ3
d3dqamoaAAAgY8j+1tfX77zzzpWVlT0AAICMcf/998sN5YMaaXUqBQAAaDaP
PPLIm970JnwQAACyCT4IAABZxvrgO97xDnwQAAAyCHkQwBJ9M5GvT2NLappa
gKxBHgRoFWnzIGwRsgl5EKBVpM108EHIJuRBgFaRNtPBByGbkAcBWkXaTAcf
hGxCHgQwLbKA6DW2RA8+CBmEPAhgUmkBadMD0KmQBwEMPgiQYciDAAYfBMgw
5EEAgw8CZBjyIAAAZBnyIECrSFviS2EoBmgC5EGAVpE208EHIZuQBwFaRdpM
Bx+EbEIeBGgVaTMdfBCyCXkQwNCfzK014oOQQciDACaVFpA2PQCdCnkQwHSc
D05NTa2urnoUA9DBkAcBTFwf7Ovr29vbs+MTExPeJcVetr+/X4e2RzEAHQx5
EDLLcYh4Pjg6Orq+vq4RvY6NjSXUcFQiLKne0mTKk5OTAwMDXV1del1cXPSo
Jw3UuzkALpAHIbPc9lJilDA/P6/fkDKLwcHBCxcuJNeQRI8EyPu2t7fPnj2r
cCpVSoUe9aSBejcHwAXyIGSWQqGg73/wGqMEOc709PTs7OzKykqMxdWwhzVs
bGxsbm4WSsQ4qykZy8vLdkRHtEZGRkbq1SMCPbJUNQuBnjS81lsnAC6QBwFi
s7u729vbOzw8HG9xvwFnaGhINqqRXC4nCzs5Oenr66tXD5kLMgh5ECA2h4eH
NkDFW9yv6UxMTOgH7dHRUVdXV7FYnCtRrx58EDIIeRAgNvl8Xsah5BVvcb+m
s7+/r2RqL5JRNpS2GHrwQcgg5EEAE9cC9ANyfHw8yUpjf1qNpaWlhYWF2Hrw
Qcgg5EEAk0oLiKdnZGSEYxmgLsiDAKaDfBAA6oU8CGDwQYAMQx4EMPggQIYh
DwIAQJYhDwK0irQlvhSGYoAmQB4EaBVpMx18ELIJeRCgVaTNdPBByCbkQYBW
kTbTwQchm5AHAUyLLKAR/ckkAR+EbEIeBDCptIC06QHoVMiDAAYfBMgw5EEA
gw8CZBjyIEAlt4WI+Mjvp456oottjh6AToI8CAAAWYY8CAAAWYY8CAAAWYY8
CAAAWYY8CAAAWYY8CAAAWYY8CAAAWYY8CAAAWYY8CGAq7ihvGu6qogV7/NS9
ltw/bZAeAC+QBwEMPhirltw/bZAeAC+QBwFMKp+71HxSaENp0wMdCXkQwOCD
JfBByCbkQQCDD5bAByGbkAcBDD5YAh+EbEIeBDCp9MGW6IlYaUssCR+EJkAe
BDD4oANp0wPgC/IggMEHHUibHgBfkAcBDD7oQNr0APiCPAhgUumDANAcyIMA
Bh8swfWikE3IgwAGHyyBD0I2IQ8CGHywBD4I2YQ8CGDwwRL4IGQT8iCASaUP
ch99q1YKWYM8CGDwQQfSpgfAF+RBAIMPOpBEz97eXl9fn0cxAB4hDwKYTvHB
qamp1dVVO57P52dmZmIq86Qn4MyZM5OTkx7FAHiEPAhgOsUH9YN2bm5OIxcu
XBgYGCgWi/HF+dAjVlZWcrlcT09Pf3//0NCQRz0AviAPQmYZC9EqHwxrGBwc
lGWMj4/btzEK1FFsF1Qh8Y7osB7Zlswr0BND0vz8vJqX4+NjlVMoFJaXl5Po
iVcnADUhD0JmuTNEq3wwrGFqasr+KLXEKFAxUI6ztrYW7ySkrYRAgKKlTDCs
sF4xfX19MsGDg4Pu7m5N2d7ejiEptgAAR8iDACaV50Xj0dPTMzAwIOuJp8ej
JDUpIyMjGllfX7cj+Xw+hiRfegCqQR4EMB3kg7lcLobdWPxWQqFQUB48PDxc
WFhYWlrS28HBwRiSfOkBqAZ5EMB0ig/Ka1Tm5uZmbD1+JekHtsKpvUhmYmJi
b28vhiSPegBOhTzYTNQOxDthBY0mhT4YQ8/W1pYcJ/Zloo3oT+b4+Lirq+vo
6Ci2pHgLArhDHgxQVVRO3N3d1ZF45syZmnO6oJ/E9dbz4eGh9s7Q0NDY2Ni5
c+dOTk6Cj9S26KPh4WHtQTWA8SSBpTN8sKHE06NvZi6X8y4GwCPkQYs2v1Ao
lE2UB+kQrvRBuU/Yj9xRaXXVs9Yi+1tcXJQ2OfLo6GigRB9NTk7Oz89ruspU
CsAKk4AP1iRtegB8QR602LuPw8hopqenl5aW9Frmg3KlsinRKLgp0A0ODt7+
Uo6Pj6MXvHDhgmbb39+3b9fW1pQo7fj29ra8LyhBH42Pj7tLOpWDgwMbMEdG
RrThsWNvO2L3SPNXGvvT5pM2PQC+IA+Kc+fOVW7+8vKyspgsTLGr0vXq6rFK
lqp6lnuqJcnn84+UqIyfpyID1dpt/JRJBXciq5yFhQWNFItFfSqvVOEKsDUL
VCHh2WZnZ4NxmazeSpsy5urqqsbjxd52BB+sSdr0APiCPGhKvTKWRbPNzc2B
gQHFMY2f6oOaUu95SK1CLUm99SyD6+3tVUZTQJPO4HqD+fl5eaIcraenx46o
cJcEpwXDb4MgLMvTimL0+NEZpNAHAaA5kAdNyQfDb22nHIHNneqDe3t7qrS6
1lLNB+W58yGU8jY2NuxHcj35lFakeTQyODgYqNJs8iyVKXkq0/qgy3Xp4TPA
9kRo8FbrtZ1AaqJWVPO0bSeBD5oWVUI0adMDHQl5UDmo7CSnnOL20wj7QrFY
LAtWNYmRB+V0YW3yqe7ubnvnRT6fDwtwPC8qiw/fZC0xZfeaabs0Rd+HXC43
OjrqcqK1M8AHDT4IWYU8KFQD4bcyi70S9o882YF8QW/Df5Zpnhi9HSrQnTt3
rmyivKYQQmsM7jGcnZ0N25amByc/d3Z2wtfJqNjgEhqLHE02WnbyVns5PEUm
G77XLHyTl6bHOIvbvuCDBh+ErEIeNBU+WMap50W3t7crHa0m+r0xPDysZXd3
d8+ePWtdTLtgbW1NpQWvwd98imYyO+0aa82Li4tjY2OB901NTSm6yjrtfRNl
nRhrotqQgYGBsH2HrwLVePg5ODJWzSxVGtG6NKLsGaMDkDYFHzT4IGQV8qCQ
v0R083KqD8pEYpwzVOCyVmi78XfpW0buptRmz1La62HKSpOXTU9PV/bkL+tU
QgyeymqZLqHtVdLUItKgDQlioNxZU2S1Wp1mcLyitTNIoQ+2RE/ESltiSfgg
NAHyoClZRl0XvShhVd5v2BaE75KAMPhgTdKmB8AX5EGLYpH7vXL25GFD9TSC
/f392E8i6HjwwZqkTQ+AL8iDFkVC9176y042tgv7JVqtIqXggzVJmx4AX5AH
AYwnH9Svqa6urrpW6vhp2S08lXO6fFTvp170eFQL0CDIgwAm0geXlpb6+/u7
u7v1Gv0H68HBgUcfBIDmQB4EMNV9MJ/PDw4O6jCxnbiurKxEFOI3DwJAcyAP
ApjqPjg9PW37M6+cPjc3Nzo6OjQ0pFfbFW2QB4vFYt8tent7q/kdPgiQBsiD
AKa6D66ursrLFAPL+jCXD/b399s7QJeXl2WFpsp5UR1fZR3YhlfqRz0AJIA8
CGAi/x88d+7c2NhYd3e3NUQ7MZwTj4+PZX8yQaVCzRZeVvPncrlwh3VlK/W3
BQAQE/IggHG4XvTk5ETHiPzOdt0jHww/o0oWubu7KysM+6Dm7O3tjbhXBR8E
SAPkQQDjfN+Ewp29e1Q+GFw7avskL8uD9uldwSO0qq00sXAASAp5EMBU98GV
lRX7eMfj4+O1tTXlQeU+U/rXT1mvUCjYTvZGRkZM6f9B64OaeWhoqGZnffgg
QBogDwKY6j64vr4+PDwsy5PBydqCh4zY/wdlfz09PcH1okEelFeqtP4Q1Vba
sA0CAFfaMQ/mcrn7G4Zt0OKhJrFxwqLvXItmfn6+QarC/5HFQBbTIGEi/Nzk
mtTbgYl8MHlnrS5duCTvs8Vjty2xi22QHgAvtGMetNeoR/DFJ59b3n3qLX/1
+JvOf+2NG5fs8OYHD9/+8Se3/vHr0csm9MHYy9YkiQ/WfFTizsHxnZ94UlVk
62rqL26+qgJVjV94/FrEgvYkYWwmJyejZ3jwsWe1137po4fBftQw/9BNYftP
PRe9bAf4YJNJoQ2lTQ90JO2YB+1/Mafygf0r8r6fvf+rEYMa+bs/VTy+/vyp
JWTNB/OffloVEl1j0x++9Kd7z5y6eIN8UHvntx5+cvKDUao0/MJHLm38/ZVq
heOD9YIPQjZpxzx4qg9+6fJJTQcMD2pjZZqV5WTHBxWNazpg2e+Hv6+IYI3w
wbUvHv3cB1xVadB+/8rR9cpyGuqDXkhbI48PQjbpjDyoUODebIaHt3/8ybKi
MuKD2vB4NVYWDL374G9sPxFP2IOPPVtWFD5YL/ggZJMOyIPvfTSmCdph/qHH
w6VlwQe1yUlqLP/pp4Oi/PpgQmGb//ASK2x3H2yJnoiVtsSS8EFoAu2eB7f+
8etJWk473PXJYlBgx/ugNjZ5jQX/ynn0wd96OGZEDQ/hq3rwQb+kTQ+AL9o6
Dz5xfCN5y2mH4DrSzvbBzx1e81VjR9duXmjkywdjn9muHC5fffEKKHzQL2nT
A+CLts6DXhJEWcPe2T44/eE6LoyJHt50/mvGkw+q5j3uxzs/8eJ/vvigX9Km
B8AX7ZsH9596zmPjqeG9j94819fBPpjwj9TKQbtgZ2cnyUZZH3zPI8/4FfbE
8Q2DD/ombXoAfNG+eTD/6aejG8Mf+rU//Gc/8jM6eLte/l2O7afpaB9884OH
Eds+euaz/+Jnfkl19bJv+db+H5/U25rVpQKT58Fr15+Pvkti9F1//cofnZAw
7cq+oZ/8t3/w8ZrClnefMu3vgwDQHNo0Dx5fr30mrfdfvlbtuVrOb/62Xkcf
/MrR9YsXL8YWlmYf1KZFb/sPvOFt+tnwr9/+Z6+7635Vndzwp//s/0YvIv9K
ngc/c+lq9FqkR9r0qkGG+LJv6qopTIPsFR+sF+6bgGzSpnnQ/aSozTiOM//p
3jOdmge1aY6VoOH19z0mH1SgrjnnO/9iO8lGyQfPfP6yu7Dx935JDeNr5n63
5pxPHN/AB+sFH4Rs0qZ50P12ie+b+GV3H3zzg4edmgfv/EQd1xTJbhS7lA1r
zjm3+oEkGyUfXPiY643zUiVJahhdTo1+7vAaPlgv+CBkkzbNg2tfPGqED2ro
1DxY1y3qA//+V+/4zlfKd2rO+W9+58MnN16ILUw+6NK3m/KpbaLlzi4pVYO+
IfhgveCDkE3aNA+6n0yr1wcPDg5iC0uzD77lr1x98DVzv/uyb/nWkXs+5jLz
j/3P80k2Sj7oqGr0zGcVA3/gDW+TNpdrePQNOTo6cleSQh+kP5lWrRSyRpvm
wT/+20b5YKfmQUcf/MH5e2Q0r7vrfsfqSu6DdXWpreHbX/Xq/h+v7Z76hrR7
HkybBSTRs7e319vb61EMgEfaNA+6dz9Slw++ceNSp/4/6NJ/9Q/92h/WZYIa
/uM9H0p4XnTmgai7OSqHO77zlS4+uPkPz+KDfkmi58yZMzWfNQnQKtzz4MLC
wubmZvC2WCzKj4aHh6v9zFtaWsrlcnW1RY5ovV94vHb/YPZM2j8ffeM3f1uv
Rkbf+amai9z1yWKn5sHl3aeit33oN95tL8VUXdnB5faEt9/7UJKNUttYs7/T
V/7ohAx65Pf/t7Kn9ubLvqlL4zWFHVy5nkEfVH0G35N8Pq9DO6YyT3pOTk6k
R+2ADo3+/v6hoSGPegB84ZgH9X2W+wwMDJRNV1NTzQdVsn4EakFvWm8hJS49
i377q159ewjliJqLfObS1U7NgzsHx9HbrpB1+0v5V798d+3Ytf1wko1Su63g
Fr2KH5y/5+b9jN/UpazaN/STjn9cHjvcP7gSolU+GNYwNzenX5thSfUWqANZ
hZhSdxCDg4P6sVpvCWE9+imrxmF1dTW2nvn5eZWgHSETLBQKy8vLSfQkOQQA
InDMg/pUbam+zGXXHkT4YOOw/cm4X/jx+vsec5zz6NrznZoHT2684PjU3Z95
/4Edas75xo1LyfuTqXmDv5XkuAft8AsfuWQc+pMZCtEqHwxr6C8RvI1RoI7T
sbExjYyPj8f7pyOsR06qozs8pa6idCj19fVpLxwcHHR3d2vK1tZWEj3ESWgQ
jnlQ30B9q/XLcG1tLTxdtljmg/rOT0xM6DDU8VjWsOiIsAd7LpfTSHBl5vb2
tpKmltL0fD5fU7P1wQcfq5Ej6h1krKaj+1WL/ezdasOZz1/20s+2+y2EjoNy
vSl9Od2VpPC8aAz29/d1fOkgjfdnnN9KUJNiD9X19fUX+0J0OLorJfnSA1AN
lzx4cnKin3N6VcNif9cFRORB2VzZd1hzBs3m4eGhPWWqI1f2Z5ssTRkdHS0U
CtGa7TF1fP15x4DjOPz9U8+ZjvZBj4+p0jD5wa8qY3rxwZpdq9U7XLt+89Eh
7f7/YDz0JdSvyni3//itBB3IyoM60hcWFpaWlvRWATOGJF96AKrhkgf1c07f
ZDuuoyz8l19lHgwo80H5y6lfaVmwvO8dtwj/0V+N4LlLXh7Ca4fgYT0d7IPG
65Oq7OM5vDxvQtTV3U30EDyKN5s+6HhS5VS8V4KOaJmyfjwrpU5MTOzt7cWQ
5FEPwKm45MHh4WF9h6enpzWnjrLwqVH3PKhDoJoPLi4uHpVQaXqteWlN+Hn0
vhp2+/BB0+k+qATn5RGEKsQW6Os5vKp/Bczkwu765DeuDGl3H4yhR7tDS4Wv
665Xj/f76LUXurq66jpHnXylAHVRMw/ak6LB17jM3fSp3p7a4FSeF9Xb4HSN
FrRL7e/v6xdjXZeVhn1Q1HsDWuXwpcvfWHtn+6ApnU9ObjdBab58UHzxyaQP
lHzT+a+Fb2bMoA9ubW0pecW4TNSFePUjSfrx7F0MgEdq5sH19fXZ2dnwFB0O
YdtaXV1V+z86Olp2s1KlDx4eHspSNbOOi76+Pjmgna6fr5qu1KnpLn9tlPmg
GvYkVqjmN1xax/ugKf1RGDt8/dwHvhouyqMPis8d1r4ttNqg78Dx9efDpWXQ
BxtK2vQA+KJN+5OpnBjjYshf+MilgyvXy8rJgg+auCdI3/JXj5f1HuPXB4X2
iPZLvcJ+6+EnKwvHB/2SNj0AvmjT/kVPnb5zcOzYhCoNnfn85VMLyYgPWv50
7xnHa25lmlv/+PXKErz7oCX/6acdE6uEKUWeWgg+6Je06QHwRcfkwQA11/MP
PV6teZ954FCN/7WXnkALkykftLz30StvfvD0E8s/94Gbz2Tc/Idnqy3bIB80
pcT6nkeeqXbGW/tXe1m/fCIKb3cfBIDm0I55MJfLbTrwR+87P/+uD/3ne97/
n37v/XOrH8j/r40HPvqX0YtsbW0l9EEXYfFI4oOLi4s1y1flrLz3w6ooVZcq
TVWntzVrLGFXV/pJ4yJM+y4sTHvWpcbwwXppSSVEkzY90JG0Yx4E8A4+aPBB
yCrtmAcBvIMPGnwQsgp5EMDggyXwQcgm5EEAk0ofbIke7/3JJAQfhCZAHgQw
+KADadMD4AvyIIDBBx1Imx4AX5AHAQw+6EDa9AD4gjwIYG75YPOJllRNXoT4
6O2q61MvejyqBWgQ5EEAk0ofjJAX8WnsBd3FJCy2EXoAkkAeFGfOnBkbGyt7
rEbLOTo60n4ZGRmZmZmJ/fi2BjE/Pz88PJxCYaJYLA4NDTXo2UMA0HmQB8XG
xoY2f3R0tNVCXsLu7u7W1tbBwcHZs2cHBgZaLeclXLhw4eLFi9vb2/39/a3W
Uk4ul+vt7cUHAcCRtsuDJycnyyWkubu7u1Ao7O/vq91TNlGbbLdCaWV6enpi
YmJwcFAjdilZydTU1Pj4+KnddMt0kvtgIMye0tnb25Mwxcy+vj5ZraZoXFFl
cnJSUldXV+1SGpdIrT2i/3BtaV29ZYbRgpJkhdkng8u/enp65ubm9Gr7U9Xa
pUr1IzFKx5qiipVsCVa9yYhPLfnw8FDzxFNlF7fCFhYWVFGm9CxLCdCu1Fv7
GEqVL1/TV1TKbZ/eerXzSNja2lpZmSrKujM+CACOtG8eVDOuVtSUnllgXUZm
Z/1CPqgtsrOp/TSlBnZlZUUNr5pHtfY7OztlpXnxQYuczlamGmrrMnJq+0hu
td7W/iTVtvwSo1VbYdU8RU7h5ZytNFgr0art+Uyt1wY6bfv6+ropfR+sHWsr
5ONSZc2uzIU1XV6v2q750OSaqCqkQesNC1MF6meMnWIdTa+vec1rrl1/XlMO
S6huyx50rnq2P3vwQQBwp+3yoEWZRQ5ix9UYBg+JUAOoltmGAjvFRjPNLDfZ
2tqyTyKobCR9+eBcCXPLlO3EYFw+qLXbifYhTUqsMqDN0qMugo/CyDeVYZML
k60ET1+SGEkyITvWtl+8eNGUTnjKAU3JgPTrIqgxO38ZmnjHHXckFKZV21gn
BwzOsqpk+6sgsGD7qXachAWqgr1sUWXaPas5ZZQJhQFARmjHPKjWz7bVFuVB
K16Np8zF5sGghQzyYOCbL9wofwa9Kflg9GMNXZCMsDC1xtagFaxsclGsK/NB
iY94dJG8O+IJfe5o/6pOgren5kGb7PRqN0Gvshs7f5kJBm81op8ZSS6VWVxc
XFpaCguzRhbOg3Z1Wsv3fM/3aN9ph1rLrhSm0uZLqG5V1ad6NwBAGW2XB9VO
qiVUw/6OEmq39/f37T9ZatLtyb1wHrQ+KHOUEw0PD9vZypputZwyAhUi00ly
Pk2m8I5bmJL9aV12jfbMbWUeNCW7VJuvj8rOi2qPaB7Zt/3nLrawQqGgcoIa
U1Wc+v+g9cEgD+qLIQ+anp7WqstOP8q4lbzGxsa0eBKb3tnZ0bZbVXJ8E/p/
UFUR/D9o86BerWVrc+zfwYrJwW+bMjgvCgDutGMeBAAA8EXb5UGABuHr3vC6
7hx3l9Q0tQBZgzwI0CrS5kHYImQT8iBAq0ib6eCDkE3IgwCtIm2mgw9CNiEP
ArSKtJkOPgjZhDwIYHj+4K014oOQQciDACaVFpA2PQCdCnkQwOCDABmGPAhg
8EGADEMeBDD4IECGIQ8CAECWIQ8CtIq0Jb4UhmKAJkAeBGgVaTMdfBCyCXkQ
oFWkzXTwQcgm5EGAVpE208EHIZuQBwEM/cncWiM+CBmkHfNgV1dXrzOvePnL
e3p6NGJfg4n21Q7h+e3z2eMRXkU1wmJc5g9YWVmJLay7u9txLafWSXh6eIae
ErFVmVq7snKllcIisA+ydySFFpA2PQCdSjvmwZGRkegZbnz96PjC3xQfOHd4
7q5geOL+1Suf275+5fILN65HLJvQB2MvW5MkPnju3LmIT1UhqpZnH3n4yQ++
M6iur/3Jbxc33n38/wqqzIhld3d3Y6sSk5OT0TNImPaa9l14V2rPav8+f/XZ
6GWz7IOq2NXVVY9iADqYdsyDET743OHFx+/Lh9vMUwc1789fu3pqCZnyQTmg
DKVmdR2uLV87+NKpJTTIB7V3nv3bT1o7tsOpwp54/x9UE2aa4oNKnTqC7Pj4
+Hi9i9eUFHvZvr6+QBgARNMxeVDB4cm/eFe1BvP0tv0rf1dZTnZ88OTJS651
de6uS3/y2zIdVXJZIY3wwatf3tfecRR2M7eef0+lMOPgg9rXBwcH9jWeD46O
jq6vr2tEr2NjY/UuXqZBB+Pe3l4wJYYeLa4qHRgY6Orq0uvi4mISPfv7+4VC
ITzlQolqI9HTK1/dywxe690cABc6Iw/ebDlLTaJ7w26HZz71QFlRGfHBK1/4
RL11ZatX+TFcjncfvPzxD9UrzA6VwbCmD97+UmLoX1hY0G/Io6OjwcHBeN+c
26tTb1GyLXnf9vb22bNnFU6lSqnQo540UO/mALjQAXnQ6cxe9bb96e2XbHgW
fPCZnfOxa+ywdFY5KMqjD75w4/rTD92XZFdefezRcOHueTB21pDjTE9Pz87O
xts7atjD2acsD9ZbmmQsLy/bEf2yNQ7/pFfqCUuSGJsHYyQ49+l1pcJ66wTA
hXbPg9e+8ndJmvTKVNjxPnjlc9vJa0wB3Jbm0QeVBGMk+rLhucOLQYF1/T8Y
D21+b2/v8PBwvMX9BpyhoaHNzU2N5HI5pcKTk5N68yCZC7JJW+fB568+63JV
jMsQ/FfY2T5Y13+C0YO90MiXDyYJ9S8Z1paDK6Ca4IOHh4cyDoWmeIv7NZ2J
iQl7krarq6tYLM6VqFcPPggZpK3zYOz/ksoGxRD5qW0/O9sHn/jze5JnLjsU
N95tPPmgat7X7xkN+lbYwpvgg8vLyzIOJa94i/s1nf39fR0a/f398kFlw3w+
H0MPPggZpH3z4MlTh75azhevACn97dXBPqgN9FVjdtAu8OKDXk7Vhvemveex
CfdN6MCJd5losNLYn1ZjaWlpYWEhth58EDJI++bBZz71QHR7+Nn8r79r7g0z
P/HaX/3pH3NqQu+923S0D4Zvk68cvvrH/+P9/33mrRMjsz/1uj96yxv0tmaN
Fc+/J7kPvnDjesRdEpf+5LelRPtRwn7pJ3/k92Z+3kWY/cM3m/fR6+hoo2MZ
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
a2treHh4cXFRr1NTU62W8w1kMRMTE0tLS6Ojo0NDQ62WU8709HRXV1exWKNH
uDLwwZqkTQ+AL9ouD6oRzt1CB+bu7u7R0dHMzMzg4KCMzGa6+fn5c+fOyT76
+/u3t198SsLq6qpd6tTONlWOWvWE2sLC9FbC5F8SNj4+bp9LNTs7q6qWdwwM
DBQKBbuUfoTYpSL6KOvu7lZp8VTJEcLCVI7EaGMlTHZmO+HUW1WLhGme/f19
K161qreqRjulEs3T29sbT5VQsVaVasN2zaopVpgqygpT+Wtra3Y2a216nZyc
1Dz66VIZ4fXjQQat/V72ILCapNAHAaA5tG8eXF9ftw/zlestLy+bkpepRbVT
bLizDwvWiNxQrbreqnVVa1/ZfnrxQcuZM2ds99FymbNnz5pSL5pWqpp3ydDI
3t6eGnaN5PP5lZUVqZK2at10S7yX2LWwsKB0qZHAhWUxdqv1qkrTyObmpmRr
RA7+wEf/UqpUV7KVsqIkWIv09fXJ1pMLU52oHkzph4QVJqn6TmpEq7B1GAhT
Vaj2JKxyl8mX9ak+kuAOyIPNh+tFIZu0XR60qLVUm2kjg20Y7XQbBNSKBtnK
+qC2UbPJjMZLVD4lQVO8nBfd2dmxBhes2pRcw3qcfDAQZqco16gxt8KsV5ah
HaQCk/93qbgnH7H/mild2hEJs4FOGuwq9Go9VwYUVJeofHaDSpA3BRsbG/2G
sb8N5GJaqZ0oF7PmK3l21fpUU/SqWrWSJE+7NVyUNtB+E2T0+GAM8EHIJu2Y
Bw8ODtTQ6dW+VRsu97HjajbVVCraBKdDrRkpB9l8UQ0veVAmEj5PKKezJzNl
zbZVlw/KO4JPTcnEA6mnqpLRBFsaG5soAy/TqgNzsdaj3wB2LdqE4eFhU7KS
4NdFBME2xkPfuqDabSK2Bq2vpbVj1aedYn1QsmXi1R6oJOX2DKp2un5g1HWp
DD5o8EHIKm2XB9W4qYlbXV1VJLR/Dq6vr6sZV85SrJibmzOl86JlPqhGXg2+
MpFsaGlpqazp3trayufzaj9VCUkeWqdmXOXvljClE6TKLJoyNTVlXVgKy3xQ
XqOmXpug6fakZYB2jeZRIfeXiC3MurBKsDWmClT9SIm2Wh6kmjShPKiKsj6o
9WrErtqeMg1YW1tbWVmRZk3XvoinypQ8VztFMqTKng7VV1FlaldqX2i6KcXS
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

         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 5->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnXtwLNlB3hcMA94ExV5T40JgUVbggiogQgQkKkAVIizHjGtTkbEIUWwi
khVREZTKmBJEJCwl8wclqAl4bKdWWCSKS8YReIu1kbGAKGuFbLAca/HaMozB
XKwqtF7dvbNX+5i9uo89+bbP3q7eefacac0cTf9+dWqqpx/nfN0zc775+vn6
H/930/Nfftddd73jq/UyPfczP5DPz/2Ht7xKb966+I6Fn1i871+/afGn7/uJ
+/L/4MdfoZFv+rK77vpnmv/FYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnzEAAAApZn9/f3p6
ehYAACBlzMzMbG1t3X///cVi8RAAACBlPPjgg3JD+aAGep1KAQAAus1nPvOZ
t73tbfggAACkk9AHH3rooV5rAQAA6DbkQQAASDPkQQDh5yVLTeZsXk8nU+Nv
pfhTz0kPQCKQBwHMna64+412ucXmeGhDvumBvoQ8CGDwwQB8ENIJeRDA4IMB
+CCkE/IggMEHA/BBSCfkQQDjpQ/2RE+TRntiSfggdAHyIIDBB2Pgmx6ApCAP
Ahh8MAa+6QFICvIggMEHY+CbHoCkIA8CGHwwBr7pAUgK8iCA8dIHAaA7kAcB
DD4YwHUTkE7IgwAGHwzAByGdkAcBDD4YgA9COiEPAhh8MAAfhHRCHgQwXvog
95PpVaOQNsiDAAYfjIFvegCSgjwIYPDBGHSi5/DwMJvNJigGIEHIgwCmX3xw
ZmamWCza4UKhMDc356gsIT0ha2tr09PTCYoBSBDyIKSWSoRe+WBUw2lAVFK7
FeqHvLCwoIGjo6Ph4eFyudxuDZWX06EeIV8eHR0dGBgYHBwcGxvrUI+DAICW
kAchtdxVQ88FdChGv+LJyUkN5HK5ra2tnktaXFxU9yL/GhoaOjg4WF1d7VBP
u4sDxIE8CKlFPbO+//a1Vz4Y1bC9vb2zsxO+daiwVCopdm1ubrrthLQbIRSw
u7urbuEgwI5sqzZl0mw2KxM8Pj7OZDIaowodJEU3UbuLA8SBPAhgvDw+6MbA
wMDw8LCsx01PgpLUpYyPj2tAyXRiYsIEhywdJCWlB6AR5EEA00c+ODIy4mA3
lmQ3ghKc8mC5XM7n88vLy3p76dIlB0lJ6QFoBHkQwPSLD8prVOfOzo6znmQl
raysKJxmMhm95nK5w8NDB0kJ6gGoC3kQwHjpgw56dnd3BwcHHU4TDVts0qjb
9qlUKvLB09NTZ0luCwLEhzwIYPrFB88VNz2y5tHR0cTFACQIeRDA4IMx8E0P
QFKQBwEMPhgD3/QAJAV5EMDggzHwTQ9AUpAHAYyXPggA3YE8CGDwwQAP713m
mx7oS8iDAAYfDMAHIZ2QBwEMPhiAD0I6IQ8CGHwwAB+EdEIeBDBe+mBP9CR+
P5kOwQehC5AHAQw+GAPf9AAkBXkQwOCDMfBND0BSkAcBDD4YA9/0ACQFeRDA
nLMPDg4O1n2Ye/wW73o5TaY6L9jW6ndS7XnoAegE8iCAebkPnpycLCwsyLwy
mcylS5f066hUKp1UPjQ01KEPAsD5QR4EMBEfPD09HRkZmZyclHNpuFQqLS4u
7u7udlJ553kQAM4P8iCAifjg6uqq4lvdAChPnJqaGhgYkFFubm7akbOzs0tL
S/JNhUdNVZacn5/X8OjoaPj4dflgoVBQtNSymnp2dhY22pWVA4BmkAcBTMQH
5WUKgHXnkbUtLy/Lxfb29uRo+/v7JvBBG/cUHicmJuShW1tbmkfmmMvl7IKa
YXx8XBZZLpc1oJ9b2Gg31g0AmkIeBDARHxwbG1tZWamdQU4n7wujnGJdPp83
gQ/KHO3IYrGoxe2wflmyPzusAZmjHd7e3lYwDBs9r/UBgNiQBwFMjDyoP4oj
IyPhW3nlzMyMCXywUCjYkevr62EGLJVK8k07LB+04dEEv7hwPD4I4APkQQBT
c3wwzH0htXnQ2mVMHyQPAngLeRDA1JwvqlRYe76oxuuXUnV8UD+fOD7I8UEA
byEPAph41w9Gzxfd2NiwM8fMg+H5onNzc/HPF03kWvUEL1d3rvac9AAkAnkQ
wHh5XzWDDwJ0BfIggPHVB7uMhzbkmx7oS8iDAAYfDMAHIZ2QBwEMPhiAD0I6
IQ8CGHwwAB+EdEIeBDBe+mBP9DRptCeWhA9CFyAPAhh8MAa+6QFICvIggMEH
Y+CbHoCkIA8CGHwwBr7pAUgK8iCA8dIHAaA7kAcBDD4YwPmikE7IgwAGHwzA
ByGdkAcBDD4YgA9COiEPAhh8MAAfhHRCHgQwXvog19H3qlFIG+RBAIMPxsA3
PQBJQR4EMPhgDDrRc3h4mM1mExQDkCDkQQDTLz44MzNTLBbtcKFQmJubc1SW
kJ6QtbW16enpBMUAJAh5EMD0iw/qh7ywsKCBo6Oj4eHhcrnsLi4JPUK+PDo6
OjAwMDg4ODY2lqAegKQgD0JqmYrQKx+MapBzyTLCtw4V6lc8OTmpgVwut7W1
5VBDVI9sa2hoKDqm3doWFxfVvVQqFdVzcHCwurraiR63bQLQEvIgpJb7I/TK
B6Mapqen7Y/R4lBhqVRS7Nrc3HTbCWk3Qihgfn5efhpV2FZtyqTZbFYmeHx8
nMlkNGZ3d9dBkrMAgJiQBwGMl/tF3RgYGFCulPW46UlQkrqU8fFxDSiZTkxM
mOCQpYOkpPQANII8CGD6yAdHRkYc7MaS7EY4ODhQHiyXy/l8fnl5WW8vXbrk
ICkpPQCNIA8CmH7xQXmN6tzZ2XHWk6yklZUVhdNMJqPXXC53eHjoIClBPQB1
IQ8CGC990EHP7u7u4OCg82mi53E/mUqlIh88PT11luS2IEB8yIMApl988Fxx
0yNrHh0dTVwMQIKQBwEMPhgD3/QAJAV5EMDggzHwTQ9AUpAHAQw+GAPf9AAk
BXkQwHjpgwDQHciDAAYfDOjJRmiOb3qgLyEPAhh8MAAfhHRCHgQw+GAAPgjp
hDwIYPDBAHwQ0gl58Fwpl8sHBwe9VgGt8dAHe6In8fvJdAg+CF0gzXnw8PDw
7OwsfDs0NHRXhHw+H07SVnJrYnd3d3h4uK1Fjo6O9J9kfn5eGqruRiUZS0tL
Y2NjU1NTxWKxUqlEp66vr2t8LpfTgJvaNIMPtsQ3PQBJkeY8GH2cmQxRP/O1
tbW9vb39/X29Ru8JrOGNjQ2HJra3t9v1QS2ysLAgO6vyQfuEcSmUPM0jN4w6
daFQmJyc3A3QgMMDT1MOPtgS3/QAJEVq8+Dm5mb0qaByHP3Mm+zDlOlEw2NL
5Jujo6MDAwNf9oqvCEt8M93Z2dH8VXkwGgBVlSq3kk5OTjQchlYN6K1Gxldb
F7ntzMzMpUuX9A1Rc863Sr4Q2A+o+406T+0+vukBSIrU5sGqB3YfHx/rZ67c
p4G6Hb4SYrFYjF+/6tG2XVlZGRwc/EyATDb+01Hr+qBFI1WbAmMY+uxTBuwk
65VDQ0Mxn/2t7Fn3rRaXAFmh2pKY2dlZbYGY4i8i0b8r3SzNJTWS10R88/Vq
a2oiehJUC3BOpDMP7u/vR3eKilKppN9dNpu1P8D5+flaz9KGarchxah294ta
Gvng2tqaVRjVv7W1NTk5qYGpADugwBunocXFxXBYGyF8hKsW19Y4OjpyEH9B
eeHWze4PtKvNYYbmy7arpHM9zae66QHohHTmQSW7qnRzdnam7CPv04A6f22T
qsBoEvXBfD6/+HKqZmjkgycnJ8qVMr6JiYnQCkMf1Jjl5WUT+KBGtpSn/BsN
udF9xWp6bm4uk8nYnaKyyJirDABwsUhnHtT6Nu/Y5ZKyoapDbHKrdp9wKgcZ
GhpyUNhkv6hFFqYZ7AFNmZeyWzhJVh5zv6iMT9E4fCt3rjoHVV+P9fV1fUPU
VsyACQBwsUhnHlxZWYmeDmqCnBV9q61xzz33VJmC8lFbp8oI/buQg1TVY4LN
fvByqmao9UFZcHQvpd2Ra11Mk+SDYSUa0NuqNVoPqGolevKPBmZmZsJJVRas
2Ohm6AAAnpPOPCibq1rfuQCNVBJcW1sbHh6udQ3N0G5Dcq677767UCjIm7a3
t8OMpmylqBh9teNlRvakGvmObE5iNGyPVNpdrFKlkdJ/7733Tk9Phw6r+Scm
JvYCJicnq07psaZpTwSKjs/lcnZATjo7OxtdQXni/Py8PU9Gbqs5o5dpAAD0
DenMg+r2qw7JyVBkMer5R0ZG5Ajq/6sWUT5yMwIZkzxF1arylhvZnrZaVUJT
U0gMr6OXt1btpJVR5gJqHVz2uhBQlWdVlbxPdWpryLK14mFbqlz1aKqUq7n3
vOc9/X3dBACklnTmQRMc7GurY5dBdO0Oad05Zc6mzi40BADgM+nMgybYVRjf
BWyeOlc93cfemqbXKgAAekxq86AJjCDmnLu7u1VH1vqAnZ2dXksAAOg9qc2D
AFUkdY+Utu6gEl9S19QCpI0050GAKjq59YrD1JYe1Ml9V9z0YIuQQsiDAL3C
N9PBByGdkAcBeoVvpoMPQjohDwL0Ct9MBx+EdEIeBDA8f/BOi/ggpBDyIIDx
0gJ80wPQr5AHAQw+CJBiyIMABh8ESDHkQQCDDwKkGG/z4Pj4+FxT/sXb/+Wb
Zt72gz/8Yvnhf/5jTeaMPlYvPs1bb4u2HmQ/MDCQYNOeYB8dFZPJycmk2sVK
AKAl3uZB+WDd8c/duP3hv3h26eErb37wOFre/tHHH/iTa58v13lOblud8HnQ
lg9eunSp+QyXr9149Inr+48//9jJ9ScrtzqT5s6Xnr0pAZIhMX/9zI3mM7f1
EST4VfTcB32T52EoBugCPufBqjE3br0gB3zrhx+vcsCq8ov/96q66OiC/eGD
h1euFz5Z1urnPvTX0fVd3D3Z/NzT+nuQkNgWPH12e/2x0/t2nqja7LO/+6V3
P/qUPLruUvhgXXyThw9COrkoefD6zdv//n+dNHfAaFFOCZe96D6o0Cdzb76+
079z/KHPP5Oo6jpsfPa05ZaXWdeaMj5YF9/k4YOQTi5EHlQS/NGPtIiBtSX0
hQvtg58vn739o3HXXXapbZW0/BdRtbX7ohsVpcWqPaX4YF18k4cPQjq5EHnw
x3+vei9czGIPF15cH7x87YaCXlurvLx35RzWwCz8QXsfgf63XI0cu/TfB7mf
jMEHIa34nwd/ef8pNxO0xVxYH3z67Hb8JBgt7370qWT1K2ZWHZSMmQrDcIoP
OtCJnpmZmWKxmKAYgD7G8zyojrQTE7SmcEF9cOOzpw7u8+bgWGHLEzjj87mr
Z84b/w//6jlbCT7oQCd6BgcH9dNOUAxAH+N5Hlzei3tMqkm5iD74ZOVWJ6u8
8sjVpMS3dXpSrSPbc2b61Qez2WxoN7lcrt3FW0pqd5FSqXTvvfcODw9nMhm9
Li0tJSsJoC/xPA82uUpi4PXf/mVf8ZXqK97wG59u3htv7X+ht+vi4IMfP3qu
7rq87g2zX5555d2v/Ua9Dn7/P20UGGVAiSh/+ux23frf9MHLX/HKr/nqr/36
zMBrvupV2cm1Tzba+A6HaLvmg8UIbj44OTm5tbWlAf2NnJqaclAY1bCwsJDP
56OS2qpKJijv293d3djYkCmfnp7KpjvRs7y8rK9u0SfaXR2AOPicB682zUT/
+AN/8UNbX4zjg295/6d7uy4OPtgohWlltdahE2kj1J1N/vjIX1c6V/6hzz/T
aKtaGXr99n+z+trvnmo0W+GTZeOrD469HIf6ZVv67chx9KnJhhxqiAqQbQ0N
DTnrmZ+fLxQKGpCfrqysmMCmO9GjlRoYGBjziXZXByAOPufBRpkoWhQJW/rg
D64/2tt1cfDBOEcGm/vgA39yrXPlLa9blA+++lu+65vesthoBiV646sPds76
+vrs7KwMyC2qJCtPNrGzs6OB0dFRpcKzs7N286CHB0kBuoDPefCDf/p0On3w
uRu3W/rgN//IT9/92m9sMpsNYuVyeWtrSx+uXiuVlxKiPnQ7Mvqhqwu1I/f3
98OR/+q3DxvVLwu23ebr3jDbRIYmmf71QW0rJaZG9wBsSbLycrmcDaeZTEaf
+0JAu3rwQUghPufBNPtg8zX6jp/6tczAa+yeyeY+eHJysnYH9ZC2ib29PTtG
cSZsVyZoRypKhCOb+GBUTJP9ovLBG7de6Fcf1OZVEwcHB26LJyuvVCpNTEwM
DQ3JB5UN7T7SdvXgg5BC3PKgfnFHAbWT1DMkIizN+0WbXy0i3/mqV2Xf9MHL
zdd6/bHTzpW33C+q8r2rH/2b3/DNjaZelP2ibhYgr9FSZ2d17u4es1HnqY1Y
WlrK5/POevBBSCEx82C5XI6eBqDIoPn1z7NqNs2TzWYTscKW58nI/n7gvY/o
Z6t+uMn5im++mOfJLO7WP09GJvjlmVd+3y9/TKus1W8SCRM5T6ZRJNfG/3v5
90qANv7dr/3Gvz39U41k/PL+ixf196sP6ofjdppoHNwsSZHQt2McAJ4TMw/q
x57JZKL/eyuVyuDg4PkJa3ndhPreV3/Ld9nydd97bxMf7KfrJl7/5vvCtVZp
lIWnf+c4kRuNNrpuQv77TW9ZfM3fGX/td099z3/6QJON7/N1E1Vz+haFfNMD
0K/EyYOyP7nS8vLy4eFhOPL09DSaBw8ODkZHR8fGxmSX4fkYWnBtbU31Ly4u
7u3t2ZHKkgsLC/Pz89vb202E3bmO/smW++Valot4HX3zLNyycB29BR8EgJbE
yYMyLNnZ0dHR3NxcOLJRHhweHg59MJ/Pa0E7bD20VCqFt91Qu026R+uDLc8Y
aVne9amLel+19cdaP+SokfskeF+1wyvXnTf+zuVnbSX4oAO+6QHoV+LkQVmS
Qpx8cGBgINw12sQHw3nUpYfnKFqWlpbUXD5AhtjEfLnPttt9tpO6cjBKnLNl
asvCH1yk+2wDQGppmQfld+qZrXPJm8K7KcbxwZGRkaoOsFgs2kt9W8Jzl0zw
8EGeu9QJnvugb/I8DMUAXaBlHtzY2FhdXbXDpVIpPDtOZjc0NLS3txe93My8
fL/o9va2Qt9uwOLiogncU+YoK1S7zW/B0flzeD/8Fy475c6DDp/DG3/dFdyu
36x+FnwiPHfj9jsejnug8L6dJy5f4zm8rfFNHj4I6aRlHtza2opeBxG9OFfj
Nzc3q3xwbW0telrp0dGRapbxhSM1oLdasPn9GKvu0aF+uK0TNqJXDVxoHzTB
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
ydQdf/vs+Wcf3bv6kfdV98O/+SvXPv6gPSBYRX/4YIi8Rmm38oXHnj8qJfi8
3XbRn43rX/wzydDrjfITzWdOuQ8ODg7aM6hrG41Zg5UXliZTnRdsa/U7qfY8
9AB0grd5cG1t7f7kcBCQYOvtnovbf7T12J1km47ZaLTjPTk5mZ+fl3llMhn9
LWlXfy2d+2DIC7duOkxqOTXODMlKOj89AO3ibR4E6CahD8ryRkZG7DWwGi6V
SouLiw4HuKMk6IMAkDje5kGAbhL64Orq6tDQUN3bH8kTp6amBgYGFBLDR1bN
zs4uLS3JNxUe9aosOTc3p3lkpuGNleSDxWJRS2m8kmalUgkb7crKAUAzyIMA
JuKDcjp7a4haRkdHl5eXZZF7e3tyNHsJrXzQxj2528TExPDwsCxS88gcw3so
aYaxsbFywPj4eLi3Fh8E8AHyIICJ+KAMy94Fogo5nbwvzIkLCwvWLm0etCMV
+rS4HdYvS/ZnhzUQ/r62t7fDU6HwQQAfIA8CmIgPKsTVzYNR/zLBrSRmZmZM
4IOFQsGOXF9fDzNgqVSSb9ph+WB4/yX94sJ7K+GDAD5AHgQwMY4P1ubBfD5v
YvtgeD8l8iCAb/R3HlxaWhoeHm73kU+JoEa1VUdHR+Ofuu8Vy8vLEq/vRnhS
x4VjbGws/r+7qvNFp6amas8X1Xh9mrXHB+P44Pj4+MnJSblcnpiY4PgggFf0
dx48Pj6enp7uSU9uu1C9FovF8A7kF4jTAHlBuw/M8gSZlPJaeFZnSxpdP2i9
z14/2Oh80Tg+qHns+aJzc3Pxzxc9pwvku3/5/DnpAUgEP/PgC7duPhRg790t
O1MHsrKyYk880J9zdSmaqv/Y6m1McCKfVkEz7+zsVFWlbsrBB23rCgKqNmw9
m82qKv1hkAyrzbZuL7WWmLpXmWmkOlWXreCKFW8fiaUOPBRvb34+NDSk7lq9
sUKNCbaPhqWw9qY39t6wjU6ePCekSuLlMgryJnAQbVtplq9pXWRMq6ur4QXy
etX/nIWFBa1FVT1axNYTs10P76tm8EGAruBzHpSD2M5ZfZodoz/VGqmu0naD
6uiUtqRcfaM6yXK5PDk5WVXJzMyMWx5UbfY4jrzA7gGzz1Xc2tqyT1pUuxqW
80qDbT38/x+ipiW++4FUlqf/BiY4ncN+stpudqOFm0jGLWGyGxv9whMdQ7Sg
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
0AQ=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 6->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
Oi2rtTUoNPDcSA0P1XaVTmtvwq4PGnfe+0Q8609W/weauHG3trMHN4zO8kEA
yBSn5sHDw8Ph4eGjKouLi8EdcQ18MPA+GWj4JnyxsbFRKBSaERbOnj9zX8xT
czFOyp0FsdsfVKxrcIX0xO59D1w9gy2o/PyfRvsK3r59EG4UGB8EAG85NQ9q
0tramg073nfx4kW7JhieP5wH5aGKfpphfn5+bGzMRo6Ojs7NzSlgyl4bPGHh
tEff4IXb9bqnjl+0ZTvLB2vbo2++2aOP/r8vJSr8ZTR/rTZoATkAHwQAb/H5
fTLOGCWdJuvhiQ9fCV8g6ywfdNqjN7Ye/VLji3Rvu+esWqIPc+WZFxo3yKs9
v/N3J5yVxQcBwFt8fp9M7UhFvMbBUGZhbdCH6SwfrM2DAbIYbb6cSJtp3Vs+
+ti7dw+D5JsO+0+Xf+a+J80Q7S4mDb/jDx9/4OC5uovggw3xSqdXYgBSoIPy
YICq/fc+8Pc/8rGD2+/5ompgecEPb33xznufsCZ+auksHzwxD3Y6neWDXj2q
4JUYgK7E2zw4NTU1nBwxBCRY+uLiYlvKNYaGhhJfZ1QivWgl2aKjf/N+WY9X
YgC6Em/zIEC78Mp6vBID0JV4mwcB2oVX1uOVGICuhDwI4CAjCHexp0Za8KzF
OFPjiQHoSsiDAA7lay/544NJicEHAepBHgRoQPitOLXjT5zaYNKpUxMX04pU
gIxAHgQAgCzT3Xnw4sWL587dnEi7wFE5PDy8dOnS+Pj48PCw85LVjmBiYsLE
hxvb6iz6+vrW19fbrQIAfMfPPFgul2+/gRRqzOXLl6enp62dplKptLGxMTs7
q5E2v+aZmZlZWlqqfWHp5ORkDB8MSre3gqs4lb61taVhadC+mpubCxqQkh6V
rn3obIKJ2d7ebtzSYrK89OILgfjV1VWNkWyJD77flZWVxcXFoDlI7RxrHdIa
xnI4ODgYHR1NTbzQl2jibadp30q87WqTms/n9dWbWnv3uz7WPqevObX5+CAA
nIq3efDKlSuqhC9cuFXBKl9FVaK9xFsJRZWzpi4sLMhlVAeOjY3JCrUJtU+s
x/PBgyoKdNo/Kk4rUemKSDs7OypFQUmFqqbVJGuWUaVLidywdlWqjSU+5l6I
hYnX1yqpEizZkqdNsGSngKx8KjfX3qtUX1+zW8V55Fz7WXt1cHDQ3D819HVL
vNzQvsr+/n6JX1tbM++TeH0R2hB7RY++CA3rO3LePqQ55Z6bm5vBK+IBAOrh
Zx40JMyq7t7eXhuzUUV1uzmLqmgNqK5TZS5nHBkZuXjxYu1K4p0XNfPVgNzN
TmzK6ebn57WjLIeqdBWtxCGzGK1Se9+d/CXlPGVYXtaAHSpUqsHKxsgWbR7t
K+0Z7VsTX9uKlvxI+1+bnK72679JWbCMWHsvCN3SKXezl85pQK4tebJFE6+B
cCQcGhrSpskHyYMAcCre5kHFqOBMY1BFr6ysqFZX5ayBStWJVE+qrlN8UL2n
6rHW8uLlQbmGXNWGZQTaS1acQop2lJUuJYVCQZWtNBzdwFmJquv0r07KR2QN
dlZWe8a+WR08WAAMXnZqLUUqcZ8oPuDEVibPDsmWMHsPm3ZgcP62r6/P8UH1
ze9qxWtmubxm1talKR4AOhE/86CO7VWJFauoipMNKXPJdKxOVpUe9kHVhKr0
tAmKac55Uc2mqlLjg+aDm6Snp8dKV1WsMKjqVL6svjKI44OVqqHIblRK+H3a
llaUKDVzmqcWtTfOnz+vEk287UmJV18fKy/3QfVzudz09LSCrSN+fHxc+1Z2
41z3PGuUBKVW4vUtV6pncbUDdUyiLdIvwRrjMB/UgBKujnMkPmjd0jBnVCi2
K6QAAA3wMw8qFOzfwHKNAoKGLVtpjB3/WxawMaq6gxkCgpVEes9zeMHgfoxg
OFxoMGAzJ1V6izQQX6l6XO1AeAbDdngwT2qYGKNyY9+eqDms88Qwe1wlhgbn
GfN0ukiSYk+NtGBHiAFoHT/zIEAbUSUcfsA8hf6p1X4rz+Y3eEw+3nP0XokB
aB0/8yBAG0k/jBB/ANoIeRDAIeM+iBjIGuRBAAevfBAxKZcIGYQ8CODgVW2P
mJRLhAxCHgRw8Kq2R0zKJUIGIQ8COHhV2yMm5RIhg5AHARy8qu29MgKvxAAk
BXkQwMErHwSAs4Y8COCADwJkCvIggAM+CJApyIMADvggQKYgDwI4ZNwHEQNZ
w9s8KEm3J0cMAQmWbu00pV+uP0RqcSPZoqN/8375IGJSLhEyiLd58NKlS41n
ePGZq8997tPHpfuP9x4qP/GFl158od6c4ZbK20Kk2tia2OsyIn0Fm5ubSZUb
rxb1qrZHTMolQgbxNg/W88EXjg4Pt+96/P/86sHarzjdkx9+37N/vVu7SGf5
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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 7->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
8Nn+y4c+lXK/6MQD1RPVmxKMNizol5V/eT7PHiwUCvppOwwGoIWJPj44PT29
srLiP93f35ePBgYGOjs7y84/Ozvb19dXizEarfexp6tfH8zu4nvt237137y6
UxNR9qe9/5GLrerBqqdb/uTEB17/nrm3/PGDKj/29kl1wj/9vqWqLfb7H304
pQerXu/0db9xlw1GyaC2o0qUUwi/ffm4Dh7Ul9/XzcjISNzFq4YUd5HNzU01
aU9PT1tbmx71m3UbEkBLEjEfPDo6kn30yyp5/eDgoJIHVfPi4qKzQAMokihX
Fu348aJ/1EfEs+m//NTVVvXg+u5h+Gd/090f++HXv+Xm6ereefRRDha9mXat
PZLmQ6nTVuIWvorgRrTlp+78cNXADiOcP7gQIJkHh4aGlpeXNaFHTSdogWAM
U1NTMlcwpFhVbW9v6xe6tramzS0p67fZ1dWVJh79lVXnsJAl4n4cgChE9KDe
1Y+rUCiUHHugrqaSB2uHvZ5MlAM/fuG+Hbtnr+r+PVuk11b1oLK2WEdmRil3
nP9u+uvJVD3BP7g1I25Ke+3Tqh7s9ygWi/YxQfynTp26++679/f3e3t7k31z
ggFIW93d3YnjmZycnJubsxOnT582nqbTxKMPpV93SSulfEy5YNyPAxCFiB7U
l1A/c3XFS0tLwddP5oO7u7v6Lzo8PKzfYMkfWvVLqkcyLXpoTvu6/sHqf6yW
6uvrm5+frxqz9WDVPCJusTcibFUPmhT33q1U/vwfLjm5znasUwijFOX1pi7X
VTtz5sz4+Li8k2zruB2R1G9qdXVVE/odaeLo6ChuPpjBQVKAOhBlfFA/qPb2
dj3KepoIvhWSD+7t7ZX8pjSn323qXVWoia2tLf1+bZqpV2TPjY2N8JitB68d
33Cb4Pzz/vdMS3vQ4W2qftG7qJpyTCcerHpptbjlmnfrkDp4UB9frnnDG96Q
bHG30lFj6g+tktO2tjY9TnnEjQcPQg6Jkg8uLy/7A+5WiP5bIeODSvf0m3rx
+rF9ur29XfYnJgXLfadvEeV4b/++S05uwmuLf7OeFvagcXqnqo9//eateJ3c
b0JEv9xN1eLfircOHrRf8qr/3CrhVjr6S6mfRnd3tzyo/5ZRdq2cjAcPQg6J
4sGBgYGRkZFxD/2+7IEBlpB80HYR/tPNzc1KHpyZmTnwUG16DHq2LMH70bvq
2O1dZU2re9A4ugWhKrG1uboPr9pfCWb6wP7wi8/6ldfheFG5RktV/caGrDTx
u5WYnZ1NfJgoHoR8UtWDdqeof3iMNBH8pehdPS3b4ZTkg8b7lfljglrQLqU/
sT09PbF6kqAHRZQT0MLLk5deWnvLe/Cw2n2OohS/Nlf5oHjiYtobSt5x/rvB
kzjq4EH9cG6//fa4S0UkmZL062iic4EBskDV8UFlf5OTk8FXSv4Aq39W/z80
NKR6grOV5IPGGxNs97CHxsmA9vWVlRW9qKxTr8uJvisrUeJBdexpVKjuN1hb
y3vQeAOFiVWoBYNVucoHLV/Zq35aaKWi78Dh8Y1gbXk+jx4AotOk15M5+WKC
gyGVPuxeOS6pJw8eFMqbEuwgfe9n9krOmneYD1q0RbRd4gb2/kcunqwcDwJA
FFrGg8Y77DBi3z76iZvH/JetJCcetHxk8yDiMbe/cu6p1W++cLIGt/mgz/yX
nos4XKgtvrF3tWwleBAAotBKHrSou/6tzz5dtnt/x8e/85sP7qnzD7kUWK48
aLlv6/K7Htor6x29qBxw5V+er7Ss83zQR9vonscPKu3x1vbVVrbnCVYi+/dd
AoAs0Iz3HywWiysR+Iu/OX9q8VO/8aGP/dc/+djUhz8+///OPfDgQ1WXSunB
KIElI40HZ2Zmqtavxln460+rodRcKmo6NWDVFkt5qSv9pYkSmLadDUxb0wYW
pcWy78GsZXwZTIoB6kAz5oMArUHWpIMHIZ/gQYBGkTXp4EHIJ3gQoFFkTTp4
EPJJM44PAjinIQqoxfVk0oAHIZ+QDwKYTCoga/EAtCp4EMDgQYAcgwcBDB4E
yDGMDwKYEx60T8vKMfiW23dPzpyg2trFA9CqkA8CnCQLHkxWbX3iAWgl8KA4
c+bM0NBQyW01Gs7BwYHy9MHBQQXm3/cqI0xNTQ0MDExMTGQtMLG/v9/f369H
J7UFbxwW961KM4S/WzWY8GrrGQ9Aa4AHxblz5/TxpcJGB/IyLly4sLq6urOz
c/bs2e7u7kaH8zK2trZ2d3fX1tYKhUKjYymlr6+vs7PTlQcBoOVpuvHBo6Oj
OQ/F3N7ervjVJ6vfU26iPtl+CmUr4+PjIyMjvb29mjDeJZd7enrGxsaGh4fL
XqZb0knvQT8wu4tpc3NTgSmb6+rqkmr1iqaVqigwec2/MqfCVpBae8j1w/VJ
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

         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 8->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
bjz5cxOWo5OVCvl1xvJsiaSDXV1d6T68rIOwjJZX7gZduZ8Kp4pN4mH//CBO
P7gChQ8EEeEui8EcDlTzuQkZKSL1B3urOL5o0NDHK2cvW8b2//I3pz//nVd8
N1IfHQTz33vFZlizdzR/EFxuXPZuIXUdFP762XXLihVHXN0Y4yLhc/S9vb2V
G94ku+foZUTK7J6SQ1iWSrZaiYfc/gdByeI5+r6+vuzCcnWfo0duYJl42NMy
9aDi6TOXP7J0bv9jPuF9+JHV939lTW50DKJWOig8+cNX73lyzbdDEmKEGtBX
AYWMdFDAkRp/4qxvmY/j+9Gvn0PmY1g9lXHVKpQfOpvZ8tjYWOrjqi0sLKDM
tLxNNMb2KzqumoTlLMZVw9mLaJ+dw9W4atVKPGRcNcsBfOypYj145x3b0eBQ
O/B797zzv/3B7t/6H28bvfkX/+K4h66VUAeNG9cJbb97ySTHHXJj6THlLvFY
WLPvTTjpOdJRG1foDcMx3WyY7iufFTnOduFECsuVHmfbMvHIGkuHS78BcpvK
JR5Zj7NdoXqQ1BD9RtAcQFiem5vbX7Xp8KLOu5Q1lmFZ7pBELKpc4iGPsJVn
vmZLh+vzLlWoAnK0eZfSTTyqWA8SkinVnYdXHi6u3PToKixXbsJHhGV5zr0k
8/BaOlwJd+USj6zn4WU9SIigwrKatrsqSFh2mmNPleGKjhqWK5d4SFiuXOKh
/FytHg/lZ0k8UuzxYD1IiAsVlpUgFt0iW5T8KUGsBCosVyvx0OVPBLHoFtmi
6u5qJR7S4Y+6O/XEg/UgIS5UcFAdpEW3yIpGo4HWyhw9cjtB6ColmQ5PheVq
JR56d6j8bmVevjzzD6ru0GolHnp3aLqJB+tBQlzov1LJfYzFtscS/fYYuWEm
dJWyheVqJR56WJYbZszLl0cH1X251Uo8bg5wvXtQXtskHvawHiTEhX7zgDxA
UWx7LNHDsjxAEbpK2cKyU6nEQw/L8gCFefmS6KCMeCmPS1Qr8dAfl7Ds8bCE
9SAhLvSwfKA5UUKx7bFEv5lcHqgPfQq7bGHZqVTioYdlxM/QCXNLooOLi4v6
4/MVSjx6e3vVY9SWPR6WsB4kRMcVllEY6vNElxk9LMuD0qFT9khkVmb5UaRP
Q5vtCssykk/oWmVAD8sywJo58UjLpQkdfuTIEX0c1wolHvpwapY9HpawHnSa
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
0Wg0Go1Go9FoNJf9f62pOQ4=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 9->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ1sbFlh3zchuGQoFkFo1FgwEk7rxG06Ues2jUtllTgyASMndcIo9AGt
KTjFElt1aI3qpNnIoaQx0TTCERQTtzXICXJgk4UY4kJdcFICpuuFBQPDRx9r
Gi/r3Tf7vB/e9Xtv3+l/7+Hd3p3xzNw5cz1zPPf309Hozv0453/vzJz//O/n
S97wr6Znv/+2225763P0Mj3ztpcVizP/7heerzevvv2tb/7l29/0xlfc/m/e
9MtvKv7UG56lka/4vttu+yXN//QwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDPGAAAgBSzu7s7
PT19CQAAIGUUCoWNjY077rhjeXl5HwAAIGXceeedckP5oAa6nUoBAAA6zZe+
9KXXve51+CAAAKST0AfvuuuubmsBAADoNORBAABIM+RBAOHnJUsN5mxcTztT
42+l+FPPSQ9AIpAHAcytrrjzjXa4xcZ4aEO+6YGehDwIYPDBAHwQ0gl5EMDg
gwH4IKQT8iCAwQcD8EFIJ+RBAOOlD3ZFT4NGu2JJ+CB0APIggMEHY+CbHoCk
IA8CGHwwBr7pAUgK8iCAwQdj4JsegKQgDwIYfDAGvukBSAryIIDx0gcBoDOQ
BwEMPhjAdROQTsiDAAYfDMAHIZ2QBwEMPhiAD0I6IQ8CGHwwAB+EdEIeBDBe
+iD3k+lWo5A2yIMABh+MgW96AJKCPAhg8MEYtKNnf38/m80mKAYgQciDAKZX
fLBQKCwvL9vhUqk0MzPjqCwhPSErKyvT09MJigFIEPIgpJaTCN3ywaiG44Co
pFYr1A95bm5OAwcHB4ODg5VKpdUaTp5Jm3qEfDmfz/f39w8MDIyMjLSpx0EA
QFPIg5Babquh6wLaFKNf8fj4uAYmJyc3Nja6LkmmrO5F/pXL5fb29paWltrU
0+riAHEgD0JqUc+s77997ZYPRjVsbm5ubW2Fbx0qLJfLil3r6+tuOyHtRggF
bG9vq1vYC7AjW6pNmTSbzZ6enh4eHmYyGY1RhQ6Sopuo1cUB4kAeBDBeHh90
o7+/f3BwUNbjpidBSepSRkdHNaBkOjY2ZoJDlg6SktIDUA/yIIDpIR8cHh52
sBtLshtBCU55sFKpFIvFhYUFvR0aGnKQlJQegHqQBwFMr/igvEZ1bm1tOetJ
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
bfFkTWdqako/ZIXTTCZTqVTmAlrVgw9CCiEPAjhzeHgo43A+MzNZ0ymXy3Lk
XC7X19enbGj3kbaqBx+EFEIeBDCuFiCv0VKnp6fOjTpPrcfCwkKxWHTWgw9C
CiEPAhhXC9APx+000Ti4WdLY2Bi/ZYCWIA8CGC+jkG96AHoV8iCAwQcBUgx5
EMDggwAphjwIAABphjwI0C18S3wehmKADkAeBOgWvpkOPgjphDwI0C18Mx18
ENIJeRCgW/hmOvggpBPyIIDpkgWcx/1k2gEfhHRCHgQwXlqAb3oAehXyIIDB
BwFSDHkQwOCDACmGPAhganzQvj3THKOTkp1aO7NDteenB6BXIQ8C1OKDD7pV
2xk9AL0EeRCglps3rndlauJ1nocYgB6DPAgAAGmGPAgAAGmGPAgAAGmGPAgA
AGnG+uDy8nKhUCgCQLF4++23d1vCM6jV46yw6YK+rTtAB5iZmZmbmzs9Pd0G
AABIJZVKpeoyIgqFQqFQKBQKhUKhUCgUCoVCoVAoFAqFQqFQKBQKhUKhUCgU
CoVCoVAoFAqFQqFQKBQKhUKhUCgUCoVCoVAoFAqFQqFQKBQKhUKhUCgUCoVC
oVAoFAqFQqFQKBQKhUKhUCgelv8HRFbxgw==
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 10->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
lufBfD5fYhxylpKne2ueEteoiXUe9FlfX+/q6jIHJP2Dn4aKx0XLJ4UT/P9U
Kzg3Nxec6p9e29/fPzIyEqVCAAD3SU8evPHGGyuOr3iejJLU6uqqGS4/T8Yr
psgSm4hCX1+ff/qNjwxl9/n41xjKwoLJS59Re3u7GSPBCmj+VFXrn9QaMskg
j1PCLVkjjdTXwH+rpYL/FQavHDH7CS3/hQGAlJCSPOhV8kGtu3YDlHHUq6+t
rWnYPy1EVtLd3a1tYq6bKD+mKhMpd7SazM/PDw0NaVlVq8WNuahdta63/qv/
X54y7NjYmPxIejRJQSx4MFaqzMUR0llycUTIJK/op1pleWXwvyFth6WlJX8G
WXZwa+itdgw0oJEakB1HOdAKAOA+6cmD2Wy25F4usqSS8+WCfqc+v9p19F7x
EkKLA4Oqx1jh6Oioqq15bxllOtnf9PS0uY5ehhg8S9PUJoUVr6OvNskrhlkl
xJJLPzS/Vl9bSb4vp5OBmhNEzVRZqlZZsqVE42Od7AoA4DLpyYMKMhXPeLQ4
X05mVPFSxDNN8KwYAID0kJ486BVDXCInOpojhPXX4xT4IACkk/TkQa94PHBz
c7P+epaXl+uvxCmUcBPZMgAAZ45U5UGAEE7vRjHW92xx4bY2AC1PqvIgQAh1
3nfFYvGaHmR9lxhrPdgipBDyIECzcM108EFIJ+RBgGbhmungg5BOyIMAzcI1
08EHIZ2QBwG8JllAeItN0YMPQgohDwJ4TlqAa3oAWhXyIICHDwKkGPIggIcP
AqQY8iCAhw8CpBhn8+DQ0NBUKG9926+9dvLGn/uVZ8uv/Kt/HTJntSfRhxPe
eiy0haO329HRkWDTjlDzyRpBRkZGkmoXKwGAmjibB+WDFcc/denKnd97cvau
R15/+0GwvG3jwY9+9eJ38sfli8TqhE+DWD7Y19cXMvXS5asPFC7d/dDTOw8+
fe/Dzzx6dLludZY89OSJBEiGxPz1E5fCZ471EST4VXTcB12T52AoBmgALufB
kjGyADngm+58sMQBS8oH/vKCuujggq3hg9+8cPyhr+TLV39m6+GPf+tx7R4k
JLYGjx9fWb238M7NwxIZb/3MQ7fc/Zg8uuJS+GBFXJOHD0I6OSt58JmTK//+
fz8c7oDBopziL3vWfVCh7+bzF8LX941/evCp7zyRqOoK3PqNQs0tL7MuN2V8
sCKuycMHIZ2ciTyoJPjmT9eIgeXF94Uz7YPfyR+/bSPqussuk9b+HPoIyo9F
VytKiyVHSvHBirgmDx+EdHIm8uDbP1t6FC5iMX8Xnl0ffKBwSUEv1iq/b/uR
U1gD712fj/cRaL/lQuC/S/d9kPvJePggpBX38+AHdx6zM0FTvDPrg48fX4me
BIPlo1+9mKz+mkdlq6VCpUhTAz5oQT16JiYmWu9p0QCnhON5UB1pPSao8pF7
HjujPhjlz7hqpeRMoXr45oVjaxlf+KunTCX4oAX16Onu7tYuboJiAFoYx/Pg
+7aj/icVUs6iDz56dLmeVU7wj8JYpyeVlDf+6YE5Z6ZVfbCzs9O3m/Hx8biL
15QUd5FcLqck2Nvb++Lr2/WazWaTlQTQkjieB0Oukvhbr/yHL3hRm/qKn1u9
J7w3Xt+5v7nrYuGDX9x/quK6/PTMLeri/ubL/57WvaPnJ0MMKBHljx9fqVj/
z5/75os7Oq9/2cslRjJe94n9akos/qJtmA8uBbDzwZGRkfX1dQ3odXR01EJh
UEMmk5FzBSXFqmpvb0/et7W1tbq6KlMuFApKhfXomZub01d3eXl5yRnirg5A
FFzOgxdCM9Ev/NH31P3KDmr64C/f9rXmrouFD1ZLYVrl133y+2ZYTjSy8n+r
rfX5vz6qX/mnvvNENRna/ma4+1VveOXr31FNxoe+kvdc9cHBIgMDA+bVov6Z
mZmbb745n8/rU5MNWdTgt67Xrq6unp4eaz3T09MLCwtmYH5+3ivadNxKghtE
K6XAG9xKzR2w+4wAauJyHqyWiYIlig9qhuaui4UP1lxxJTKtu29G5SWRs2U+
8Je1z5Dp/cV3hfigEr3nqg/Wj5KXPlz5jl1USVaebGJzc1MD/f39SoVXTo5l
rHH1uPYnKUADcDkPfvxbj6fTB6sdjTTlX/zuhumvXvXbnw6ZzQQxRZX19XV9
uHo9OnouIepDNyODH7q6UDNyZ2fHH/lvPnlf+LZ9zfKXwu349fFP2T1DPqht
pcSk76p/ZmwskpU3Pj6uH3KhUGhra9NrpkhcPfggpBCX82BqffCpS2E+6Jfr
X/byV//XrXAfPDw8XLmG+kbTxPb2thmjOOO3KxM0IxUl/JHhPqgNq+3/L2/Z
Dtcpj2hVH9TmVRO7u7t2iycrL5fLDQ8P9/T0yAeVDRcXFy304IOQQuzy4N7e
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
mAd91NXXPE6oTFRPGDkN6vRBg4Lhs3+Vlq3+o7cvF760Eet2XvUgj7v453eU
PCD4oY+9XxlQ8i49UnlT44PVGrWe2nhc0wOQFC7fT6bi+CvHTz95z3Z5NlQ/
fPGLtx8/+ED5Iq3hgz6XHn3wmQe+fXT/vU/v5xJ83m5ctLMhAZIhMeYiwRDO
ig82vtjJC5lqvWAsm6un2tPQA1APzubBlZWVm5LDQkCCrcf977X1iPXYnWSb
jvWhX7180vgBO4WxJkVpLnE94VNPSQ+ABc7mQQAAgAbgbB4EAABoAORBAABI
M+RBAABIM+RBAABIM+RBAABIM62dB2dnZ3t7ext2jXkQNTo3NzcwMBD31H1H
MOL13Yj7wCx3GBwcZO8OAGrS2nnw4OBgYmKiKT15oVDI5XJqemlpyb8D+Rmi
UGRnZ0cbsNlabJDyuHe1Tera8FhXjkeX1DC1AGnD2Tx4RxHt0u/u7srOOjs7
5+fnu7q6NGlra6uvr09Th4aG9vb2vOINvbUKmnlzc7OknsnJSQsfNK3PzMyo
2v39fdO6XlWVdhi6u7uNNjmdV7wDjGaTmIq3UdXI6elpiy1gjRGvLCz98jLJ
ljxtOnPz856entXV1ampqe3tba94rxsNS2H5TW+0bU0ljRQvVRIv/1KQ11tt
aomXZvma1qWtrW1hYcG/QF6vsulMJlMuXouYeqI3jQ8CpBOX86AcxPRv6tPM
mMXFRY1UV2m6QXV0y8vLUq6+UZ1kPp8fGRkpqUQ+aHdcVLWZW5wpzZmHTJnn
Kq6vr5snLapdDct5lfhM6x0dHSWVyDclvvGBVJanfQPv2hOTveLGNBvN30Qy
bgmT3ZjoJ1svqUQLjo2NaT+kodKLaKNpe8qIfRfWtpVIY47m4SYSr1cNa/zo
6Ojh4aG/uJbS27g+6FPPjVli3UElogedkp7yGbBFSCfO5kFjQ+ZH+oIXtZmR
6pnVs8kHZX96u7GxIUtaWVmRVam7llvJ1kvqscuDsk7/gYnKSub2mLKSbDYr
DaZ1OaCC1blz56Rh5xrBSo6Pj/v7+01ibSRaX206cyszBTqTkSXDxFI/Okmb
5tGrZO8WqVhbzfudJo5MzYjRB609HzNSH4fUGjHGtfWhmMMFZssH93bMI8C0
rON/zrpmOvggpBM386D6NCUChRp16c+cXJHNSZ6cUZ22xpT4oHp49Xva/9cM
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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 11->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
EAfyIIA1Ozs7PT09IyMjlUrFYvV0z8xRfNvc3NSIQuXW1pYk9fb2JtXj2slC
ABlAHgSw5uDgQMaxu7trt3q6pjM+Pn6H/yNtV1eXhjM+SfXgg5BDyIMA1iwu
Ln73jd9jFwaF1k1RTKlUUjLt7++XDyobSpuFnnQlAZwKyIMAnq0F6Itz6623
ttKo9dxGzM3NFQoFaz34IOQQ8iCA56QF2OlRJOSYFiAR5EEAr4N8EACSQh4E
8PBBgBxDHgTw8EGAHEMeBACAPEMeBGgXriU+B0MxQAaQBwHahWumgw9CPiEP
ArQL10wHH4R8Qh4EaBeumQ4+CPmEPHiiHB4eWt98ErKkLRZwEveTaQV8EPJJ
x+fBqqdy6+Xa2trY2Njk5GTtkhGz7FovFosDAwOJVlFbs7Ozw8PDo6Ojy8vL
x8fH4bmrq6vmQWwaqVprbm5Oa01MTMQ/pNEqpusLSiKpnYSDm++aHoBOpbPz
4P7+vqwkPGVxcXFmZkZ+UWt2EbN0tHD27FkLATq6SOSD5XJZy6+srOzs7Gjd
kZGR8L0ipVBTij5yQ/OwObG9vd3T06Mt1Vp6H/v7+81D0psyPT2t+rdDJNq6
TgIfBMgtnZ0H1clX5SnD/Px8rdlFz1JViR4rIN88c+aM7CmctqpCXF3CgrW8
ajDtHhwcaDxIphrp7u7WRI1rgVKpFKyld1OpMI5ILRZHUi0bGxvaS4ODg/rw
aEuPjo4sKnEKfBAgt3RwHlS2anTjfQsfVFZSTIvfuqKo9q1q6+vr08ju7q6G
mhhzdbmhlh8fHw9CnzKgqtLIkY9GlPs0sXZdraL3NE4r5p7MBz61c6ueXhe8
3NraUhctK5RCDdWWcmjM7XKWKh+M+K04+pfkVubWLmxR7cnpAehUOjgPLi4u
1rUJz8oHRUxzCaO0lfT/QSHDNf2S3pdg4tra2ujoqEbGxsbMiIaaWLXu4eHh
8PBwzN9F+3xMW6qt6pSe8FGE8mbwPDs12tvbq8OMpNt1irh25XJb5lqvFbHA
SegB6CQ6OA9G2FZmPnj27Nm6PlioITxX6UwJS16mvBZYoV4a+9OUubk5z/fB
Wr9TVdIZ8ydcHSfoQEjZU+6pFCmpQTDU9PBfq9qQ4KBCaVRNdHd3ayij39vb
i9MWAICbdHAeTN0HZTHyi0QaZBP9/f2JVgmjd0dJzfwnKBtSCgvPVc1bW1vB
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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 12->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
qtonb8yl+7EzPT0t8eagVtJaLBkYGGjM3p0LPnh0dKTMtbe3543RLxj2JS8x
6hHb29udnZ0SlsvlJEZfa94bC5AIrZ0HDw4OstlsIj358fGxOiV9zs3NeU8g
byKOi2xtbY2OjiatxQYpV/e7vBzbexgDcMEHZ2ZmNL+s8Exbm/lU0Zjd3d1E
9BguXbqkHVHp0ae5gCcuMQAx4mwevK/I4OCgdiNlZ9qxvOuuu7q7uzVpY2ND
PY856mJ2gE3s0szlB4IuXLhg4YOmdXWkqta0rv9ofaoq7TBIhtFmOhmJ0WwS
U/H0h0ZOTExYbAFrjHhlYemXl0m25HV1dZmHn/f09KjTHh8f39zc1NexsbGJ
ItpQJfVo25pKGileqiRe/qWeU1+1qSVemuVrWhf17erwvRvk9an9nMnJyXLx
WsTU0wDN7lwv6iD6l9GvFupBCgANxuU8uL6+bp5Ipj7NjJmdndVIOYvpBtXR
zc/PS7n6xqMimUympBL183Z5ULWZwzhKc+qEC8XTHHLDlZUVc9mbvmpYzqvE
Z1rv6OgoqURNqydvfCCV5ZnLJCTY/LLeRvM2kYxbwmQ3JvrJ1ksq0YIjIyPe
C7YaRj6f1y+u7WneVGJGattKpDFHTTLi9alhjR8eHvae7l4oXqaor/hgWE7j
vgn9w1pcsePBdTLQAJzNg8aGzKk9792F6pnVs6lLl/0Vii/8lSWZJ7BtFdHq
lNRj54Nq13txsKKTeTqH/qPVwUqDaV0OuFhEGrZuU1KJegD/KZvGoPXVpjNv
flSgMxlZ0dW8MdmLTppHc/b19Un2dpGKtTX+nI5MzYhRNvSurNDPIb8zYoxr
60fRp9nsmt9/Flj+qDFa1rwH87TBB08P1/RAS+JmHjSJQKHGWJgSmeSpY5et
qA8s8UEZjfo97f9rhpKzIRqTzWY1KexhGbWublatS4l8RA6iqiYmJjRc4oOq
WVZiWve7sDFBSTWBJYaNUjeyfmkz4rWJJNsTb6aa2dR737pxvbOzU2tqwpdX
g5bVltRKaXFzpV/D0J+i/OukiL52dXVJmwxRskt8sFA8Hr6zs6OvJSee1oqo
Ku0GNEAzPnh6uKYHWhI386A64f7bmNNYCmIyOyWyQvE6NPNWX7mM6X+0FplM
ZmRkxMzs4VUStj/0FjTHEufm5tTxLi0tFYp9rGldbZmdB3XCal0pxn9+UObi
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

         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 13->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
WHmwr6+v0tlIW176e5+27ZUGqsxmg1gul1tbW9OPq8/j46cSon50OzL8o6sJ
tSO3t7eDkf/m47vV9+3Ll79c3Y5fFf+W3VPkg9pXSkyV3gFYk2TljY2N2XDa
1tam3326QFw9+CCkEJ/zYMv4YNw8+MTVaj4YlOe+8EUv+2+b1X3w8PBwuYCS
i1pIW8XW1pYdI4J6ZYJ2Tk0NRlb3Qe1Y7f9//r6t6jqvXr/Zqj6o3asqdnZ2
3BZPVt7e3p7+a7q7u+WDyoaLi4sOevBBSCFueXD/FqWT1DIkIqyVzovGvT4Y
8WmRrpe++mcm3lZp6sr9R/Urr3Je1Jrgy977v6qLtHfs+O+DbhYgr9FS+XyZ
t7tHrNR5aiXm5uacbxPFByGdRMyDuVxOR5vB183NzfX19dK70TSPRiZihTXv
k1E7/PLle9QUv/T3Pl3ldpFXeXCfjMP1wZnN8vfJyPi0vdrwgdk/1raPnPtW
pa1O5D6ZSpH8l//0+2owpUFKVKocirx7+xHTuj6ofxy320Sj4GZJQ0NDvl3j
APCciHlweHi4vb09fNx7fHzscFd2dGo+N/HTmbf85M/8Y1uUjKr4YNOfm3C4
X7RSFpYJvnj4N37y7/2CPqu4j1JY8C6Xeqh0pVLeF+x8lZ5fna6kxOfnJorm
9C0K+aYHoFWJkgdlf3Kl2dnZcCQs8sGdnZ3+/v6BgYG2trbgfgwtuLy8PDk5
OTMzE1x1Upacnp6emppSoqwi7NZz9A9XP+0WpTT9OXqHPMhz9ImADwJATaLk
wY2NDdnZ/v6+HC0YWSkP9vT0BD6YzWaDlxza127ISUdHR+0Y1VulebQ+GPGO
kSrlfV9r/nvV3N4vunK/43vVXvPJg5od40Zn98IV552/sf+4XQk+6IBvegBa
lSh5cGhoSGlOPtjR0RGcGq3ig8E8atKDexQtCpWqLltAhljFfFvpPdtu7xf1
5z3bUZ4iLC3Tnz9N79kGgNRSMw/K79QyzxSQNwVvU4zig319fUX3zCge2kd9
a9JK/S459z+4f+lq5lPxNpl+l8J47oO+yfMwFAM0gJp58Ny5c8GDSHt7e8Hd
cTK77u7urQLh+cPnRdfX1xX6NIO8TzZqCu4pc9RX1Vv9FRz198N71/ddTsqd
BPX0Ry8rn/jMgxE3WcHtyrXivuAT4YmrN956d9QLhW/eOJSDhxfHB8vimzx8
ENJJzTy4trYWznThh3M1Xi5Z5INKfOHbSvf397UG+5YnO0YD8sHV1dXwXTel
FL2jQ+1wrBs2wk8NNN0H6+mPXjx8fL1mD4Cv+eRf+/7JEaUrqPd8NfdovtiL
8cGy+CYPH4R04vP7ZEpHqqmveZ5QmajoLpGm+2A9eTDgWxfzspjSzVf4+sR3
Hyu1nhPi4vH1j3770dILl6+964E/vPdSUQwMwAfL4ps8fBDSic/vFy07XsFw
Y//x0mz4uk8/8IGvX7IXBItoug/WmQfDXL1+U15z7+EVld0LVxLsbzcuOti4
/6ErX3vwsj4lqfrjiv77YFMs4CTeJ1MP+CCkE5/z4GhVhl/xK//0F1/58y97
hYoGqs05POwgoHrtsYiVB9vb2xOsugGMjY3VnCeWDw4MDCSlzXMfrI5vegBa
FW/zIEAjwQcBUou3eRCgkeCDAKmFPAhgSnzQfi1rjuFJyU4tndlhtSenB6BV
IQ8ClOKDD7qttjF6AFoJ8iBAJW5er3Y7bj1To8wQd6mm6AFoAciDAACQZlo7
D05MTIT7gWokqnRycrKzs3Nqasq5v/ImYsUPDw/ncrlma3FE+ldXV5utAgB8
x9s8uH8L62KHh4catr1XaIwaZ30NXvimMfpa+pCaxo+Pjzv4YFC7rcJWF6t2
jbTzqym271ZtGEXiJUPDgZ1ppKRqTNH8ZVcV7ierMVhtgaSifWs3KqzWzl96
pKG/Z/1V44MAUBM/8+DV6zftG7z7+/t3d3d3dnYGBgaWl5dtDxca39fXp081
0ZqqptJOleWtra0VrUojHeKYrV2ZSKuVF/T29mqgp6dHjbB2lAY0dWRkRHtP
K5cYTVX2LK3dFF42ns1m3faDG1a8KtXPKpuQ2pWVFX3aF7pqH1qPsEc+2oe3
F8hkMqXKtQc0qZHitUslXoLtC4WU6bRvh4aGpFaGrnR/7ty5paWl2dlZTbXd
oMzPzxeJ14+iPwktgg8CQE28zYOm0NXF3NycKTSGdoyaRDXOaicXFhZM4Zhf
TaLcZ3p6erNA6dvY3PKgKewZ+yIaNbm2tylrH/LBoHY1s9KjGWzt7e3tRSuR
b8olG39iVoLlHRoIflntNLszgx5D5BS28yxNkngdchStRCO1Y7WBjdX+ZICV
GH3KuK3fiTNnzmiM3NwU4rl+aH21h0PSqW0Jvw1ef9L6ig8CQBT8zINCQc+2
5KbwqjE7oGZNrqemz3ZzryZalqTsIP1qM7VIaR8WbnlQbWzQu6K8wJ6I29jY
ULOsHWVr11dVLUnSsHuL8ErUXKs9b/zbTW299qysvM8ambTZWBq87FQh13Yu
WVZ8gLWeRqLf3f6OOzs7ynp2pPVB+/JVDVjj02dZ8dp8HURpe6emphosHgBO
HX7mQbXP9jyeTETDCn3Wa2y2KvJBzaP2UG2mPaUWXo8WGR0d1aRK178qIRO0
tavJ1TplplpVJpPRcJEPWiuxtYf3oe1pUWO0YNza60Gmr8QnbYF4yQ7Em6f7
oCnYnMZrY8P9I2tBbabtI7L0fOmJIvNSpQcFTOFUgMRrP2t82Adt8Fdg1x6W
+KIz0tqi7e3txcXFBp/UBYDTiJ95UMYxeQt7qC/r0bG97MYUbt7Y3Nw0BfE2
7GiM2kmFtaJcEKzEOld0ggUVK/RVO0ep0DqFNAS1W2eR2mwBe/rUolDmXHs9
yH+1o2y9sg9T8GuJDzw6EGNPk2p+/fozMzPh858yU5mR1iMrafBJXYmx4m2U
0y8r8fZEtJRYzZJnDU5jNEkzlL0yW3pcVJ2Te0De+Vl13x7nB2hJ/MyDAI2n
zifNHabW9KCTe5C/kh5sEVKIn3kQIA34Zjr4IKQT8iBAs/DNdPBBSCfkQYBm
4Zvp4IOQTsiDAKZJFlC9xqbowQchhZAHAYyXFuCbHoBWhTwIYPBBgBRDHgQw
+CBAiiEPAhh8ECDFkAcBACDNkAcBmoVvic/DUAzQAMiDAM3CN9PBByGdkAcB
moVvpoMPQjrxNg8eHBzsJ4eDgARrD3cR28h6/SFWF5DJVh37h28gvpkOPgjp
xNs8WNqzfBE3ruVvXH7i+mOXVDRcZc7G94RbhPZw9JltF3stRqyfIME/xeit
Ou+TMfggpBVv82AlH5TlXf7x3sX1Pzn88DvD5aE/+4PHvrZ57ShXukiL+aB8
/2ru8OrDD+hTRwL1SXMnLEPD1WfGBx3wTQ9Aq3K68uDx/u7hR36/yAGLyqUv
3VnULLeGD8pujr782dLNf/jODxx/777qiThB5LyP737loY8vhTU8+KF3HK4u
VDoOMfigE/XoyWQyjez9GeBUc1ryoNr5i5/78JPtbVUTDMqVg/1g2dPug7Ke
R754R81NPv7B/YmqLoMcsKaMo69slJpyq/pgZ2en/oPs8NjYWNzFa0pyXrar
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
KBQKhUKhUCgUCoVCoVAoFAqF4mH5/0mfBLI=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 14->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ1wLVdh3x0c37pOUYiG0SQMaIaX1slrU2VatW5eGTElyogQIYKcoAkl
pRUFpeoM6vTSihFN64xBSUeglFEYtSQVhccogAIGmwhQANWIVAERZGwwID4q
QM2zZftd+9p+su/78Onfe3ib9f3Yu3vu6t6ju7/fnLmzd7/Of/fee/7737u7
54Wv+3c3Tz3rmmuuedP1erl58s0vKRYn537tOXrzqpk3Tf/WzBte/7KZ//CG
33pD8Rded61GvuxHrrnmNzT/08MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5jAAAAcszOzs74
+PhrAAAAcsbExMTa2tott9yytLR0LwAAQM647bbb5Ibywdtvv73TqRQAAKDd
fPWrX7U+KEPstBYAAIB2o0hIHgQAgNxCHgQAgDxDHgSwxN9MlNVUZ0ltUwuQ
N8iDAJ3CNw/CFiGfkAcBOoVvpoMPQj4hDwJ0Ct9MBx+EfEIeBOgUvpkOPgj5
hDwIYDpkAfE1dkQPPgg5hDwIYLy0AN/0AHQr5EEAgw8C5BjyIIDBBwFyDHkQ
wOCDADmGPAgAAHmGPAjQKXxLfB6GYoA2QB4E6BS+mQ4+CPmEPAjQKXwzHXwQ
8gl5EKBT+GY6+CDkE/IggOF5MldrxAchh5AHAYyXFuCbHoBuhTwIYLrOBycm
JpaXlzMUA9DFkAcBjKsP9vX16Rdkh8fGxjKX5LyshOkQN0MxAF0MeRByy1EE
Nx8cHh5eW1vTgF5HRkZa1FAOiEpKu7a9vb3x8fFTp04VCgW9zs7OtqLHSjry
ibSbA5AE8iDklmueicMaZmZm5ufnZRYynYODg9Y1tKJnf39fMra2tlZWVhRO
pUqpMEM9PpB2cwCSQB6E3LK7u6vvf/jqsAY5jn4+U1NTS0tLDourYY9qWF9f
39jYCN+mXZtkLCws2AG5swnialo9UUmyVDULuwHRHdXB17T7BCAJ5EEAZ3Z2
dnp7e8+cOeO2eLYBZ3BwUDaqgdOnT8vCKpVK2jxI5oJ8Qh4EcObw8NAGKLfF
szWdsbEx/ZDL5XKhUCiVStMBafXgg5BDyIMAziwuLj7r2h9V8nJbXMtmKGZv
b0/JtL+/Xz6obChtDnqylQRwIiAPAhhXC9APx+0y0bBS56mNmJubKxaLznrw
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
fLAuvsnDByGf+Pw8mdqRauqbnidUJqq6SuRk+WBVHgz5+vmKLKZ286c/ffjB
bzxqL8tsA+ePLqu62j8uX3XHfe/+yiP2RHQt+GBdfJOHD0I+8fn5onXHq8Hf
2H+8Nhu++uMN2+GT5YO1eTDKxctP7T9y8a7DJ1XuffDJDPvbTYsONu554GkZ
epWk+NsV/ffBjljAcTxPphXwQcgnPufB0ViGX/or/+QXX/bzL36pigbi5rz6
n2Yq4mtPRSofvOGGGzKs2hNS+eDg4GBW9Xrug/H4pgegW/E2DwK0E3wQILd4
mwcB2gk+CJBbyIMApsYH7du65hidlO3U2pkdVnt8egC6FfIgQC0++KDbatuj
B6CbIA8CNOKpy3GX47YyNckMaZfqiB6ALoA8CAAAeaa786A2LdoPVDtRpZOT
k319fVNTU879lXcQK354eLhUKnVaiyPSv7q62mkVAOA73ubB/atYFzs8PNRw
uVw2gcWocT44OAgf+KYxelt7k5rGT0xMOPhgWLutwlZnHSGsPayubu0aadWq
KbbPVm0bVeIlIxRvgj0pqRoTzn8QUHdVe3t7o6OjbdAcIm2hflOzb+1wVK19
W3ukoe+zvtX4IAA0xc88ePHyU1sBAwMDcmrbye/Kyort6Wl7e/v06dOaqiZa
+tVUDg4OLi8vy/Jq2z2NdIhjtnZloqWlJTXIp06dUu39/f0yEe0ovdVUZSXV
rpVLjGrXblxbW6td1fr6erFYdNsPbljxqlQfq2xCaiVPr/aBrtqH1iPskY/2
4S0BYb+QUeXaA5rUTvHapfp8tbftA4WkVuKHhoakVoaudK9J+lBmZ2c1dSZg
fn6+Srw+FH0ltAg+CABN8TYPmqCri7m5ORM0hnaMmkQ1zmrk1fSZ4JhfTaLc
Z3p6ejOg9mlsbnnQBA2yfRCNmlzb25S1D/ngwsKCfatmVno0g61drXTVSuSb
csn2n5iVYHmHBsJPdmdnx+7MkZERO4+cwnYiqf0p8TrSqFqJRmrHagPbq/3p
AKudplcZt/U70dPTozH2oXPKtvqg7WxWvLYl+jR4faU1Dz4IAEnwMw+awKBt
Sy5Cf1GzJtdT02e7uVcTLUtSQJB+zb8XULUetzwY7WV4amrKnqPb2NhQs6wd
ZWvXW1UtSdJw71WiK1FTLHNp/9NNbb32rKy8z3b4KG329Gz4kDfbQ5ZerfJG
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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 15->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
PQCthLN5cGlp6bbksBCQYOtxz8VtPYJbmzZ+C8T+4EME57smPjXKDHGXaooe
gBbA2TwIAADQAJzNgwAAAA2APAgAAGmGPAgAAGmGPAgAAGmGPAgAAGmmtfPg
9PR0T09Pw64xD6NGZ2Zm+vv76zx1v1kY8fpuBPcLOnNIf0t+qwEgWVo7D+7v
74+OjjalJy8UCrlcTk0vLCwEdyA/QxR8zOMjm63FBimPe1fb07tAPpFr5xtW
oisEaA2czYN3+wwMDOzs7MjOOjs7Z2dnu7u7NWlzc7O3t1dTz507t7u76/l7
/loFzby+vl5Uz9jYmIUPmtanpqZU7d7enmldr6pqdXVVMow2OZ3n3wFGs0mM
hJVWpZETExMWW8AaI948EkteJtmS19XVZW5+nslklpaWJMmo1ac/Pj6ut6U3
vdG2DZ6r1TC2trYkXv6lIK+3ki3x0ixf07q0tbXNzc0FF8jr1TzlWZ9yUT1a
xNQTvWl8EB+EdOJyHtzY2DCds/o0M2Z+fl5Op67SdIPq6JS2pFx9ozrJfD4/
NDRUVIl6SLvjoqrN3OJMac48ZMo8V9E05/k3G5cnSo80mNY7OjqKKpFvSnzj
A6ksT/sGnv9kEPPJyvXMRgs2kYxbwmQ3JvrJ1osq0YLDw8PaD2modP+Qsjaa
tqeMOHBhbVuJNOaoSYODgxIvzUa8Viq4u7vQUnob1wcDTu82MkVTq5tOeGqw
4KkO4IOQTpzNg8aGzI/0RS9pMyPVM6tnU5e+uLiot2tra7IkpRtZlbpruZVs
vageuzyorjh4YKKykrk9pnw5m81Kg2ldDqiml5eXpWH7BuFKjo6O+vr6TGJt
JFpfbTpzKzMFOpORFV0nJye90M1ONY/mlELJ3vEpW1vN+50mjkzNiNEOj/Z8
zEh9HFojI8a4tpxOr0a8XsN7O+YRYFrW8T9no/tgY8AHIZ24mQdNIlCoUUf9
7PGJbE7y5IzKOOoDi3xQs6k/1FR1jEWmo5Gjo6MaH+v+lp6fQOV9al1K5COy
QlU1Pj6u4SIfNJ2zmtAMYRfWglIrqRoft/U6kfVLmxGvTWTE69UYYtgHNUNX
V5fW1ISvoAYtK9/USmlxJa9Gir9w4YL869DH84+LSpsMUStV5IOefzxcO3J6
q9dwJes++lZrN6CR4uOCDwK4gJt5UJ1w/w3UB3r+owzV9ZnnGGpXf3V11fOP
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
oVAoFAqFQqFQKBQKhUKhOFj+Pxjwz7U=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 16->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ9sNGl939+mqtNYtYoVyTRbKoQlRN1ErsBFNY2sJm5jwZbUOMgowSXl
3PPFqO1W5lIct4lTKMVZGmKd1bukRjFcUgwx4T33FPPHjQW+EvcCWegBCz5F
BrbBvOd7WS6v3/N753tfbvtln3uHeXd2xzOzs7vPznw+Wq1mZ2ee5/fM7j6f
/c2fZ142++9+7p4funTp0r1/XU8/d9fiT7/97XctvfFFejGdu/dtv5Sbu/t1
uV+e+6W5t4/O/lXNfN1fuXTp57X896cBAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADaSQUAACDFFAqFqampGQAAgJQxPT29tbW1
vLy8trZWBAAASBmXL1+WDd/1rndpotNZKQAAQLv58pe//Ja3vAUPAgBAOsGD
AACQZvAgAACkGTwIAABpBg8CgA/+1xoHfzfUiq0Lo/lIIHngQQAASDN4EAC8
WJIZWRIGJBs8CABeLBGQJWFAssGDAODFEgFZEgYkGzwIAF4sEZAlYUCywYMA
4KWdAvKpq81hoN10ggcBoLNYYh88mFrwIAB0FkvsgwdTCx4EgM5iiX3wYGrB
gwAAkGbwIAAApBk8CABeLNlDaEkYkGzwIAB4sURAloQByQYPAoAXSwRkSRiQ
bPAgAHjp9uvoi8XiwMBA2DDQbjrBgwDgJawRpqen19bWzPTq6urs7GwsdUUW
0/r6+tTUVKhV8GBqwYMA0DzqQ3K5nCaOjo4GBwfL5XLwdeO1j3Q8PDzc19eX
yWRGRkbUxQUPAw+mEzwIqWV0dFT9ZDPPQ0NDfU3TU6X5ctT5N9MctaW/v9+Z
E3Zjbm9vj4+PayKbzYbtTGQfdzAKQ8FEi0QuVod2dnYmCRYKBWWmY2NjwcOo
iSRU1dC94EFILWu3UW8ZYVrPS0tLU1NTk1Ex66rLVV8duRCnqOXl5Waao9XN
vk0zJ+zGVBoo9WxubobdG1mpCsgdjMJwtyV4OaVSaWBg4Pz8/Pj4uLe3VxP7
+/uKKngYNZGEbQh0KXgQAGJBOeng4KAc1KkAlJPqT4Um1JuZNFAum5mZ6VQ8
0C3gQQCIBUnQOVWmIxQKBeWDJycnCwsLStX1UiEdHh52MCToCvAgAHgJe8aI
pKNV9vb2OhvGysqK3NdXPUlmcnKyWCzGGw8kEjwIAF7CCkgGlHpCnSbaijDE
2dlZb2/v6elpvJFAgsGDAODFkisIIoQhIw8PD7ciGEgqeBAAvHT7eDLRwrDE
/tBm8CAAeMGDkB7wIAB0FkvsgwdTCx4EgM5iiX3wYGrBgwDQWSyxDx5MLXgQ
AADSDB4EAIA0gwcBwIslewgtCQOSDR4EAC+WCMiSMCDZ4EEA8GKJgCwJA5IN
HgQAL1xHD+kBDwKAP5fupBXvNh9JXEEGjASSBB4EAIA0gwcBACDN4EEAAEgz
eBAAANIMHgQAgDSDBwEAIM3gQQAASDN4EAAA0gweBAAfWnR9uv+KjRZrA7Fs
NOgu8CAAWEs7xYQHUwseBABrwYPQBvAgAHixxAh4ENoAHgQAL5YYAQ9CG8CD
AODFEiPgQWgDeBAAvLRZQJaEgQfTCR4EAC94ENIDHgSAzoIHobPgQQDoLHgQ
OgseBIDOggehs+BBALAWPAhtAA8CgBdLjIAHoQ3gQQDwYokRWhrGzs7OyMiI
uy5LWg1tBg8CgBdLjOAOI5fLGVX19fWNjY0VCoUmC8eDYMCDAODFEiPUeFCd
lSbK5fL8/Pzg4GCThe/u7uJBqOBBAKiHhdfROx4USgb11unpqfNSGWJ/f//w
8LDsZmaqW8tkMkoeNXNvb8/M1CrT09NacmhoaGVlBQ9CBQ8CQBzs7+8bp0hD
UozjnSAE9+Ds7Gyl6jLlg3Kcma/0UF7b3Nw0YWj6+PhY05pjJjY2NgYGBs7O
zjQ9NzeXzWY1XSqVlFHiQajgQUgxa02zvLw83TRjVZovR7/iZtqi1VWI8zLs
xszn81KMCpFlTk5OQq0r+7gjmZmZ0YY103WPDwp5TcpzPseJiQlnMbVC4qup
QsozxxOVHjoHFldXV70edEcSqhXQveBBSC0jTaPetbdpeqo0X46ysGbaotXl
COdl2I05NTWlRGx8fDzCByH7uCNROSZTE24PLiwsmP2iyvJGR0cdTy0uLpr9
nFpLz8oTJeVKNR9UCZkq2sJKVJVIqkDlj2bF7e3tEY8H3ZFEaAt0I3gQAJpH
rllZWZGO1aWEXTfsftFKteOStU3iKSHKwjUrHh0dSY5OMFKkOW6otYrFopm5
vr7u9WDY4CEB4EEAaJJSqSTpVKqpWbxpVN180JDNZpeWljQhGw4MDCj7O6+y
v7+veAqFgtRsjgnu7OyoHD1XqscH5+fnNaG3apI+PJha8CAAeAllBDlIVqpU
5aLMK8Yja43ywUr1lBgld2Ynp6w3Pj4uF0uIExMTSgYrVSkrGAWmieHhYePB
09NTJY/SnxZTv4cHoYIHAaAelhiBcdWgDeBBAPBiiRHwILQBPAgAXiy8jr4N
YeDBdIIHAcALHoT0gAcBoLPgQegseBAAOgsehM6CBwGgs+BB6Cx4EACsBQ9C
G8CDAGAteBDaAB4EAC+WGAEPQhvAgwDgxRIj4EFoA3gQALxYYgQ8CG0ADwKA
F66jh/SAB2OnWCweHx93OgqApnAb4dKdeJds/l2fMNpMc5sNupLkefDk5MSt
odPT093dXTWwv7//4OCgZuFyubyysjI2NpbNZtfW1rSw81aE24kaVNT29nbw
5c/OzjY2NmZmZoaGhubm5gqFgvvd8/NzvTs5OTk6Orq0tGRuKFOp3ma05ve7
tbUVpLrDw8NcLjcyMqJnTTvzIxcIANDVJM+D8pq5+aZBXf38/LzaqI69RjGy
nnSgd/f29uRKLWPuUGZYXl6WgyIEMDw8HGpjKmBTtTStD8J9v+xK9Z5r4+Pj
end/f19LagEzXx+cWqSwD24TJAnVMoODg6urq9oUeta0s1a0AgEAup2EeVBJ
TT6f985Xl65OviYfVAI4PT3dqCiZYn19PXjVsqpSNpmlJqu6UKZua2u6t7fX
ScTkvkwmowzXu5baosLd6wZBTVbK6bzUfwDZsJkCK9Vta+5nqrRaGWvkPBoA
oCMkzIPq2Otao64HnVtUaxX3HlEH982vL0S+Ux4ne6oi6ebLtwm+usLY2NgY
GhoqlUpmpnJSkwAqvJp2KXEbGBiQttS04PKamJgwH7QpTdOaE6RAGdm9m1T2
dPapZrNZbXa1VJvXeDZaHg0A0BGS5EF1v1NTU3XfMh507xeVWTRHGd/k5KRJ
3CSdmv5fVtrb2wsbg4oKuzFVr4lB6aT7mJ3SVUWVy+WUJOrdmZkZZ1+lqtBM
mUvzNaEsOIh9+vv796qYXaCyW19fn1nRv0CJzzk0KZykUsuozLo5OABAV5Ak
Dyodcw6f1eDNB5Vzac7o6Ki2gDpzvRwbG6vZEaoCV1ZWQsXQyIOSTu5O3Mci
K9UPQlZS/MoHHRWOjIxISVpX1i6Xy1pLH5Z5Sy81X8+qUesqt1UudmF40pwk
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
nA==
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 17->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
Hcu4zLkN9YtVRHbWW3aQgwCyYHh4eGtry4ZdLkjPzvbc343M6urqxMSEy5yT
Vi5uEdlZb9lBDgJI3dHRUZ+vGxmXDsqysz33p/bx8bEmOT8/v+GqXS/dQ6/k
IABEsrKyMjU15f3r0mF1RnIweBR3ZGRkc3PzZmvmgBx0Rw4CSN3Y2Nja2pr3
r3fmScgkGcnB4Fk9pVIpC10BkIPuyEEA6bJuZNSw8j85Nze3sLAQMlVGctC7
fbBnb29vYGCAjmVyhBwEkK6NjY1CodDwpF2ZHjJVFnLQupFpuOpfCUjHMvlC
DgJI18zMzPLycsOTdi1eSMcyWcjBVmFdLBZLpVL4nJNWLq58HbHsDHIQQIqs
G5lKpRJ8KbxjmSzk4Pz8fNO7Y1zbsQw5mCnkIIAUed3IBF8K71gm9Ry0k3l2
dnaCL13bsQw5mCnkIIAUed3IBIV3LJN6DoZf3DExMbG6uhoy5zbULxTX0bsj
BwGkaHh4eHt7u9WrhUJhfX296Uupb8/DL/bXRnVycjJkzkkrdx1y0B05CCAt
Dd3IBIVkTerb85CMrtU3rel2LNPe9TM3N3dtT3f+oslBAHDR0I1MUMixx3Rz
0I7Znp2dhUzelo5llD7KIBvWbsPY2JjjTYrbu360LC730fCKJgeBXDhPQBvA
TydweHhYqVQ0cHx8HO9R2+HYlT85OTk9PU2y+LHZevP+HR0d9XcjE2TnoihN
bHxVW5W34Y7loFdb/3rTNlOVD5+8VCqpMdt0wd3roM+JFaRVMT4+7n6HYn/N
b9fFKF2LXCwW1fLV3ogeg5e3tCraX3qkElNBDqJn9SED1OILf5u0+W01bbqf
kPCWrJTL5eQ1r1arAwMDtfqdLJaWltpSecc5KPS18hXE2g+ZnZ1Vq1ytwmvf
r6alu1c7FeQgetZpAtq7riSwv7+/u7ubZA5qEsauvNoU1rTpMLWJVK5K957R
glx7lO+kzsbX9uro6MiGO5aDXm39600DDR3BBSk4/AurYU1iw5GqofTRB0aR
FN7xeAP/mvevN/fSFxcXrbW+sLBg575OT087HulteOvdq50KchBAHnUsB29o
zu4jz8zMKArb1VGbe9Hj4+PKXw2Mjo6qGag9luHhYe0AtKUamUIOAsij3slB
tcvaeAML96JVqKLBOvzRY6muXdXIFHIQQB71SA6qFTY0NBTSv9zNFX379u2p
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
XTjvGGzwr1UO6s87VhnVxx97rlUI/tvtv1Br9wf+12PB+rzhw4/XyEEk1js5
uLi4WCwWO1+0NmKTk5N2kozahuVyuV11yBpyMKpIOahgCvm9TM2lfzD575vm
oP1EqDUzULe+vm6zVXzYM2dnZ/aM/Wtb+89V77UqKyQHVdxonXcY//Dw0J7R
B8Oe0YA94x0VGRsbm/yZt7UKwa/+xlcEG4P+2CUHkVCP5ODV1ZU+wzFONWnX
9YPLy8tRm4EZOZ7sjhyMKlIO2oHKhj+1kry8+MqBr2kaJa26YQnnXcIQKQdj
H4b98F8+G5zbzPs++zX/+J+9+rcrrWpCexBt0SM5eHFxoW9BpVJpVxFRl2hq
airqZrNbc/C8zobVEFC7oGEPYWtrK3bEdHEO3nvwQvAXtH/+lne8/Fv/1cir
Xvuyl49816/sBJMi9jmcTZuf3/euT33T9/3oV33t16tEFdfqQGUMTZufCtyv
+/ZXq0T9qehgcXYWEDmIhHKdgx2Qblfe+VpvjjmoXYLJyUnv38vLy4YcvKiL
V4cuzkF52x9XQw6NNv0rfTT+1fSv/z/nrQ5+turvpXz0dLyy7t57IXxBmvYt
88k7L3bpRg4iIXIwHDnoziUHr66uSqWSXUdpz/hz8Pj4WCmpRqKahN48l+rs
nNvT09OV+nXH9m9Qd+fgyRdb/mbX6u9jZ8/Frt7v/fmXms6zVWcveibY+ae7
X/qDL0ZaNK+pSw4iIXIwHDnoziUHlV97e3vKO2+cYHtQI1gO6iUlpvX8o2E9
FgqF8/PzarWqgabz7+4crEUMi4Rdqz1//8VO1dyL+9XDRL2Mhp8IFPzzuhMn
B5EQOYh2cclB6wOhWCyq0WfPKODUQvSPoxy0fgbOzs4WFhb8L42MjJTqWp10
1PU5+PTzD97w4ccdm0tJWmfmL56+59jBS+xfBv3UenUMQe0PeFORg0iIHES7
XJuDatl5/fCMj49bE896utOm3jtS6uVgrX6HDjUhT05O7Jn5+Xm9enp6euvW
raZFdH0Oyufv3v+pjzwRHhOve+T8c9V7CatnPnnn+WujUPW5ey/OWalBH7jd
/GCs/+/XP/GShic5iIRynYPpHrRMq+jMujYHz8/Pj46ObPj4+Ng7a1TDirlq
tWr/Kua8u3IoJZWDu7u73qsHBwdbW1sap2kRvZCDtfpZJe/4k2daxcTb/rga
71qJVs6fva/oaVXcez/T5g6aTr54b+ljd1rl+4f/svHuiuQgEiIHc1d0ZnH9
YFQJ70evePr902dX/+gppYb+FFW/9+dfurlb0p8+c/X+P7urUkoffeJnD+6o
3I+dPXdDt6S/9+AFpeG7/vTiVw9fLO4XPv7k2x99+hN/fdm0bxxyEAmRg7kr
OrPIwagS5iAMOYiEyMF4ReR6vd2QjOTgbGKOZWkxExZk9wK7lnIw+UJ1Mfcc
TFgQOditcr09JwczJQs5CABR9XVKxxbB8SX3V+MV3YHSs4YcBAD0MnIQANDL
yEEAQC8jBwEAvYwcBAD0slznoCo/NjYW9V7J8Wj9FAqFmZkZ61mua6yvrw8P
D3t3ou8mh4eHXDQB4FpZyEHVYWRkxLbGFxcXU1NT4+Pj5+fnel5b6dHRUbth
kx6VRA39e2u0SDmomagsbR5XVlY07cTExOTkZLVa3d7e1jMq6/j4WKNphWi0
4AX+2rQ6XkffYaqVKjw4OLi1tVWpVLSiFhcX7z14QW+u1pgWUwurfzX8yle+
8uDgoGFyLZd326xM0Tui5bJzsG0ZrZfa2dnZubk5u7OJ3r7p6Wm9j2dnZ96E
2l3Rm0gOArhWFnLQaLt9+/bthYUF64Z0fn5ekbS3t1erX5CizZ02dCcnJzs7
O15/p7XoOVird39q208VoU2okldz0GyVBXpVDUw9o42tymrIXNGYej7hkt4Q
VdsuTrfH3Tq9ued1m3V6l1V/pYnX15nWg0LT60E9g/Sp0BuhpVteXq7VPyd6
tAasPh5aRgWiPipaLnvJ2EogB5FNbbxkL3zCpkXfxLWKubtm0C8jOah2nzZo
tfq9Kqx3bu3wq24WOpaDxWIxOGGMHNT41umZyrqq02ZWOWj9hCsjFMTBWwZr
NK2lYEsqI1Q9tYn0qDhTg7pW79tcwac3155cW1tTe6pViGuFqDnc2So70YdB
+z+1espb89zqqfeu9rD/dn1U7H6XHi2v9mcU7vrkpL6DBwSlGBn5Taubk4Uc
VB20e68KqKFXqVTsToXaxPlzsFZvAmhLqO25d7MnhaC27Xq+1Z3ug5S2ajWo
HaE5q0QVpH/VEtze3vZysFZvFSpEtFq8CVWQ2o+qgDUbs0ZVVd20XGdnZ0qK
crmsdNCK8ueg/tW6UnD4201a29oJ0T6GHRDOGr0desu0XFoKNfHUTreWoD8H
9T5qifR+aWemYXLag8imDoRRqyI6U3S+0jYLOQgAPYUczBRyEAA6jBzMFHIQ
ALpPuj9BkoMAgHSRg+7IQQBALyMHAQC9jBwEgA7j+sFMIQcBoMPIwUwhBwGg
w8jBTCEHAaDDuH4wU8hBAOgwcjBTspCDW1tbw4k5lrW3t9eZsm7fvm03k0JT
jnc8HB0dTVhQoVBw/GwA3aS9STQ3Nxe8D11I0eRgVO6rN7nki+l4/0G7pQVa
sbtIXGvYeQ+nFbraRq5p82i9ysvR0dHY2FjD3VVaaW8Saa/e7kTgWDQ5GFVv
5uCD5+7qL2Fl3N2/eOqF57/cmbL+5sH9F4u7uhcyjt0f8FrkIHpcpVIZHR2t
1e+tNj4+7n6/m7YkkbZjxWKxUCj09/fr0e4B6lI0ORhVV+Zg0zv9KRqe/tjO
E+/99cff82t6tL/zd/+3pz707psIqQdfeuaLj7xTZdmfFaeBiz98JDyk4rm6
8/k7O7/lL8uKe+6zR8GRs5CDgw9pHH1tg7ddbrC0tKTRvKn8wx3WX2fDAwMD
164lbUJVW405+HBhbbjDVLTKTbLebPIUJVlv/gV3/wBXq1UVqndwbW0t0r1W
G9ab94FxL/309FTZpyDe3NycmZm5uLhQq9DxHqwNy+5e7VSQg1HFbg8qDrx0
8P95qfGlR9t5k1+FXdPivL/nv3DarrIU4grcVgVZMiqU/ZNkIQf3Htrf39fX
fHZ2NnxW2jGenp62SXZ2dvRJ2EuJvjK3bt2yYW0etYH1bsrZlBZQW0J9+G1h
y+Xy1tZW56utohOuN22QNbm2V/Eel+qSzGF7eztezbXybTOrlaB/I32GlT6a
SpEU/i43aFhv6+vr3r+Oc1hYWNCnSwOLi4u23ZuamtKsopYedXk7jxyMKl57
8O7RR8JTyf6q++9LWD2jBqa/UdYqnpq21KJSCD6x/ZsuS3f11OPeVFnIQb/d
3V3ttYb88qKXNELwVr+pU8W0jKp/yDja+DuemITO6Ity2FDvnb4I7UoT96LH
x8ftFuejo6NqFeqTpmo0PdKVd+RgVDHag5d//kmXmGhXq/Di8EMuBVlQ3nv8
sSRl/c2D+yEtweCfd/g3azmoPe3+/v6QYz7aDmiESDvkHTM/P69d95AR1JTo
5LcM14qUg6VS6dqDFTdRtApVNNhXo1qtqhqRDszmCDkYVdT24IvNJeeYaAiL
GNTmilbc9m/GLku+fHoSqTiFpk2YtRys1fe6Q77my8vL09PTCStzQ7a3t0NW
lL7j2vSdnZ11skoI5x5G1t5fWVnpfNHamZ+cnLSTZNQ2LJfL7apD1pCDUUVt
Dzb9WfDV31r4mpd91Ud/9aebhsXTH4t/8K26/76Gue0s//h3vuKbvvWbvqH4
L7/tL9/5y8Hi1FyNXVxwbiv/4Xu//Zv/4bf8o29424+/pumxWUv5DOagPoch
FxvqpfX19YSVuSHaV9fGrdWZhPrEaiPW4SohnHsYqTmmb0GlUmlXEZGaorX6
HmDUZqCdUxRpknSRg1FFbQ8++YHfCWbBY7/7K69/1XirHLyz81vx6hbe9vzp
H5h8z5t/pEkb7YPviFfcg7tPB+f2aPnnnqgfdP0nwy9/tPzzwRHuHn2klskc
VItJX96mP39or0YvnZ6eJqzMzVFbtVWTQbv0+oJ3uD4I14GYaFcOTk1NRd1s
koMxdGUOWnswJJhCclB/8ep2/+KppnNTk/A//cCrWgVT7Nh9/rHPtaq/5eBn
f2cl+NKT7397LZM5KGNjY3aCXINyuWzXcGWWaqjKB58/Pz/XFun4+LjzVUK6
UkwicjCGLs7B+196Jl4OKtFq9e4j3lqnAZvt5uamPeOdsGH/Wq1a/Tj4md/+
RZWlEv9w9c1NRnj4E+HOzo7NTRtPe0ahYM94J1LavxYWz37qD1qF4A//6/H1
n/yhkNZuNnNQTSrt/QafV2vL8QritFiLNfgj4NbW1sjISCpVQrrIQXfkYFSR
cvDBc3fj5aB1NaM80p68QtALppOTE3vGC6ajOtvhDz9J5oMrb3zj9353SA6q
zjbzy8tLe+a4zkthe8YrrulPn+fv+TUt2tt+/DWtqpHlHDw8PNT3t1qt+p8M
//UtO5qeFFosFsNPJUW3Igfd3UQORs21Ls7BF67uNc2C9y//x6nRwm/M/6Cy
qekI8erW9LioIul/vPG17yjNvXLk73/gF3+incdFv3AanNuPfs93vOY7v2X7
LW/QX9PTcr64++Lbnc0ctCuk1IbyP7m9vZ2LztnUYm24SFD7M4ODg9xKBggX
IwcVW0tLS5pEu5pNR4h6xW4X52Ct2Qmc+vvdn3n9xpvm9Pe+/zIffPXJD/xO
vLr9zYP7wbk9Wv7597z5R9750z/8/37jPzc9gTP2xftNW7taIls0/X3uHb8U
HMFOT81mDtbqfWh43Rqb+fl5fUcSVqMDglc4WjcyXuseQFPxctAO03nHWzST
lZUV78CRcnBvb0954XjRcXfn4Jf/6s9CjlU2/UtyKb1jxzX+P383L1GpcRe1
OJswszm4u7urSbzDznb1Vga7kQmyHm/8HcvQjUxmpXvQMq2iMyteDk7W2cnY
R0dHy8vLSsa1tTWbyfj4+MnJyenpqeN3sLtzsNbi0olWf7GPUpoXvvxspFSy
o5SxRb1s/+LwQzZhZnOwoWMZa2Q1/GKYWQ1N10KhcOvWrRTrg1bIwUyJkYP6
ZinmtGXQgDYXygXb5iv47Dvoxd/Y2JhLk7DrczBSWFzd+XzCGkbq4yX5fS7U
enUtztd3TWZzsPbSjmU0kNluZIL8HcvQjUyW5ej6wXhF5yttkxwXtU7U9Wj7
nLu7u5ZoloOXl5eOG5Cuz8Fai1NKgn+Xf/XZhNUzz/7poUtxD+4+3Zbinvn4
B5wy13ezpyznoL9jmdHR0Rx1J+U/tXVtbY1uZDKLHMyUeDmobYu2Y5ubm/Yz
ihJQ2eedZbewsLCysqJHx6NJvZCDtXrvK0/+7/WQmLBrBtvl3uOPhZT15Pvf
3t5bEIb3JR48FSfLOXh6emody2S/G5kgr2MZupHJMouJhpsbNozQ6iX3V+MV
faOlZxPXD0aV8H70V089/tSH3v2SSPq9dya86UOI5x/7XEP4Vj+ybRcn3oQX
ryh86T2YLv5or2ngZjkHaw87lsl+NzJBqrYqb93I+C/8BNAKORhVwhyEyXgO
Wscy2e9GJsjasEpwupEBHGUhBzc3N4cScyxrb29vcHAwxvz9U7kUpM1R8oVK
xWCoVmNGLcXxXOJCoeCVFV7hVq/GiwPrWKa/vz9GP/+p00obHx9fXFxMuyJA
PmQhB4EMUrYODAykXYs4lpaWlOB8owFH5CDQlFpVOT20uLa2psas1yctgHDk
IBB0dXU1UOd1LJMjpVJJ7UF/xzIAQpCDQJB1I+PvWCZH1IydmJjIRZ+oQBaQ
g0DQ8vLy9PS0v2OZvDg5Oenr69vY2Eh+qi3QI8hBIMi6kfF3LBOir1Ncar66
ujo+Pu5+z8SQ66CbFprkVXjauGJZ58nlOgdV+WKx2Jk99s3Nzfn5+dnZ2S67
MPDWrVu2XN13WsXa2tpQrIsH7RI8PZ6dnfXVO5YJH78z2x/HIrxuZKampqxj
mbbMFu3Fas+ULOSgtsDLy8uLi4vaIGubMzc3p4Hj42PVrVQqvbWuVj9Upchr
+NVD00bKQc1fGwdt9rXbrL1lFaQk1ZPb29tWlvUOp+c12+CNvDWJtq6Jl7j9
9vf3tVzT09N7e3tqxWhlajVeXl7am6sF0TLqXw1ouYJdAezs7GjCVGoeTpXX
ctn1C3qnSnW1eu9hWgotnT4AR0dHWi4tsr/5o+W1OyjFKNTfjYx1LBM+fnZy
0LqR0XenVl8KVb4ts02IbX4Qqz1TspCDtfrpeYoefYvtsVbf6KludhWz3lCN
UCgUFIWqrf/S5qg5aJNo5pqhJYUGtGlVEFgnVCpFrQBrZmrXuqGStuFtwwLf
gNPTU609LZFVW7mmcFeFLy4uqtXqep3yQutwcHDQfxqk3aUus8ulPRO9O1oE
i297u7Uno8eDgwMto71ZWi7//XO1KmpxO5PxdyNjHcuEj5+dHNS68q71cOwc
NSM17zWs9kzJSA5qO2Y7sV7QWA7aISnLwaabI2VWpJ6vLP6sCG0qlREKDpWu
La2Kq9XPtdOrXp/hHo2m8TPb5bKqZ+vHy0G9oVoorU8tsp5Uo0Y52KrDSW0z
s9mBmD4AVjG9U3ZYwHLQIk85qHdKH5WG23tpke0wghqS9ra6U+D6u5GxjmXC
e4zPTg5qVfi7kdFOnd70m6yUEzbIqWC1u8tCDmpToy+stmza4VfQaFdfzRNt
AP05WKsf59HXXLXVVt0m1NZbu+6a1v1YpZoP4+PjKksDmr+VpULt31o9B/Wo
jUnDJkWb37GxMY2czRubqkmrumm5rImk5VJqWwNWj4oJrSL7t2G5bEI9mc32
4PDw8Fxd7eGbYr95+XNQHxI9r2eCV8zFaA9q52HopfejVx20SkMmyUgO2v3o
/V/kjNyPng1yKljt7rKQg0B2NNzSvVY/RuE/4hqUkRzc399X+9fbS6w9vArS
5V7YN4oNcipY7e7IQcCjJpUag2oS+p+0821COpbJSA4GW3/WQmxYHAANyEHA
Yw2ohl8D1Z4K71gmIzlYKBSCB+2DzVsADchBwGPdyASfD+9YJgs5aN3InJ2d
NTy/vb0d/iMpR89SwWrPFHIQ8LQ6wVJPhnQsk4UctG5kgs9f27EMG+RUsNoz
hRwETMgFd3rSephpOmEWctDrRiYovGMZNsipYLVnCjkIGH83MkF6qdXlOann
oL8bmSBVO2S5Uk/w3sRqzxRyEDD+bmSCQjqWST0H/d3IBIV3LMMGORUx1snG
xkb49TvJi+hZ5CBQC3QjExTSsUzqOajNo79vhKB0O5Zhg9wW8/Pzkd5EVrs7
chCoBbqRCQrpWCbdHAx2IxPUlo5lTk5OvHsaXlxcuNyRyrBBTkKr2jqz0mrU
Op+dnQ3v5c/DandHDqJnbflMTk5a390hisXixMSEjW839bDhjuWgV1vrPdWG
l5eX1ZL1dyMTdHBwoMlv3bplk2i7Wi6Xbdi9AgpcFWT97zW9a0kIr+Zab6VS
aSsuFVpKQG+xd9eSeLTetC8Uo+abm5ua3HsL3Nf5+Pi4Vtrp6al1j6/9mVYn
RLVa57beVlZWYq/25Nw/KqkgB9GzCj4DAwPX3rhEiaPRbPyRkRGFgg13LAe9
2g7V2bDaaCE/DhqLMI3mLaw3HKkOapVUKpWjoyNtnEPazkFezf3rLQYtbH8C
9k4lmYO33mLwT+643pS51pD3Buw2apHWeaH+gVGMxq55cu4flVSQg0BCqf8+
2DHaVqhtohBsdW4q2ku7XnbNi90dtVY/KKG3IO16dRtyEEgo1zkYabZra2tq
WWTzFl354rjay+WyNQO177G/v7+1taWB8GPgiIEcBBLqnRzc2dkZGRlhO5yc
42q3254W6sfeR0dH1SpM/e4hXYkcBBLqnRycnZ21uzzfXBE9ItI62dvba9pp
XhuL6HHkIJBQ7+Tg9PR0pNNEYxTRIyKtE22frz2JK2ERPY4cBBLqnRzMbBG5
w2rPFHIQSCjXOdgB+a15rrHa3ZGDQELkYLj81jzXWO3uyEEgIXIQyDVyEEiI
HARyjRwEEiIHgVwjB4GEcp2DxGsqWO2ZQg4CCZGDiIrVninkIJAQOZh6EbnD
as8UchBIiBxMvYjcYbVnCjkIuFhZWfHunWc3gDs6OhoYGLi6urIcLJVK9q+N
r3/994mbnp4eHBz091C9tLRkE+r5qakpu5ORvoatbiZ4o5u1vpdyf9Vxwpur
ea4lX7Gs9rYgB4Frlcvl0dFRfVkUZLdv315fX7fnFXyHh4e2zRmt07/2koa9
23CfnZ1phKGhoe3tbW+eykF99ZSb5+fnSky7V6m+hq1uWspmDbgh5CBwLX1H
mnZ0PDMzs7a2Zjmodpy+R9YNdbVa1TOnp6c2mp6cmJhQi9LuJWc0Q6/BqMag
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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 18->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
dbBWF8KGr4Bxtjs5obbiPBfOA4CQOH5wdHTUjJsU3mKSH5yfn49uE+qgPGOZ
DjYcBB4dNEQHhrrry1VGd6n1aubJYJSkt2QvP/7MoKYWxtlOIYImPHSwcxNq
K85z4TwACGnoB+Xv5ubmzPLMzEz49+BsNivhC0fSkw5G74suLi7KRZodNzc3
FxYWpLMTExNVk0AHDWUDJK5/9kqc1r6Z7vOVPPDNs1r/S4m+Xv2Bhz53cj3c
y4IOXrl+o04HisrXp792zeyIDnZWQs5z4TwAsA/9B5Nicx7ePz2+VnW4s/D1
2/d8s+VhSHHq92GU/Syb3sLO/IOyq/VLI9ToP3/orzUaHeyshJznwnkAYB/6
DybF8nz04o77i/MfOwm70amdlxK9895Hr5091aZIxP2PPPGWTz3y2g//te7I
Jy584nJUYkKszUd/duM7ynidEWZ+9ROXzRQYIehgZyXkXB2cBwD2wQ8mxb4O
hkgF2qp9tWg4uaE1HTSoED74patv+uTl2z/y9dvufljvEugL910pU0ADOthZ
CTmXIecBgH188IM7OzszTRMzrb29PWtpJUU6ODs723x49llZWWlTmczNzTUZ
W/h0u+upM7Fsy7GQi/q5a+G3dTZOnUozAYB9fPCDAAAArvDBDwIAALgCPwgA
AL0MfhAAAHoZ/CAAAPQy+EEAAOhlOtoPKvh8Pm9mtWg36+vrKqWZmZmLFy9a
SM4aFy5cWF1dnZ6ePjw8dB1Li9GJ3TudBwEgNT74wWKxuLu7qwZ5bm5OC/Pz
85K2nZ0dxab2uVAomG7aExMTm5ubM9/dfe/4+DiRDp6cnCiJpaWltbU1Sb/2
VaJKQkdWOShRfaXNxsbGtra2xsfHy3aXCLavr1wzHB0dKXgVnfKyuLgo1Z6c
nFTBKlPKqep3b2/PfKwsw6Ck8trRSeT1UVTK18DAwNnZWS6X29jYMKPUqoLM
uLWSb526qjXVS/RaTjvu7++jgwDQEE/8oJroqakpvc/cHMpbHxWbWu+g1AtV
X6kxVEs4MjKihjHcMakOBiXJMDNiKC0zs7CkUKqnZlPLw8PD2kDvSiubzZYF
acSl6ey2hYODAxWFwjPyrVKSaqhyiyVk+paXl1V6yldfX184pbJQ3lUU3vpB
aZyypiyYcYfMhYq5NNIljdRQlZIroYVwL3NWpNbBNnXZpht1ItrXd56KgCg+
+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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 19->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ9spOld31PADRO6pDFEK43AkpHiClPVYtVaGMlVu01dYs4VcsWoxAoQ
nBhqCbc1WOA2pDSJnLrEKQZdN6zCAq5MOlyySTZMD4dYDSZscljxHQmG1IkP
YsLe+S7nu7nN+e68uzf97vyyb+bemXnnfd95/c7jeT8f/TR65533fZ7f+8zM
832/75/n7f+pfz85802veMUrfu5b9TL55l/45/Pzb178N39fb3507uf+3U/P
vfUtb5j7+bf+9Fvnf+Cnvlkz3/B3XvGKf6vl704DAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAkRQUAACDDbG9vT05OTgEAAGSMQqFQLBbf/va3r66u7gIAAGSMq1evSg2l
g1c/eq3TrhQAACBtPv/5z7/pTW96xzveIUHsdC4AAABpYzooP3jtGn4QAAAy
h6eD+EEAAMgg39BBzg8CQA3Bd1eF/KjZp8kmcHo5QBbg/CAAGKlJQ0BFLuQA
WQM/CACGCxrkQg6QNfCDAGC4oEEu5ABZAz8IAIYL0uBCDpA18IMAYLigQS7k
AFkDPwgAAFkGPwgAAFkGPwgAAFkGPwgAKePCSUAXcgBHwA8CQMq4oEEu5ACO
gB8EAMOFe/dcyAGyBn4QAAwXNMiFHCBr4AcBwHBBg1zIAbIGfhAADBekIV4O
q6urhUIh8WQgI+AHAcA4uzo4NTUlKUw8GcgI+EEAiMHu7m5vb69Nl8vlgYGB
9HNQvXNzc4ODg9/8Ld/S398/MTGRfg7QBeAHIbNst8fW1tZaG6yvr8vCLC0t
tVOI0B5sO1tRLBY3Nja8t+Fb7+TkJJfLHR4ealpipA2J1/jWjPESGB4eVhvu
7++fO3dObyPpYG0jqA3bbMb2idR6kCz4QcgsMhGELyI14NDQkFTs+vXrFy5c
kAwl0vLhC9GOhAmfJsbGxjShfiyRHNxveUgW/CBklpP2OG6bcpX2y2l/K7y3
kRpQXYfsmERwZ2cn0orq9uubMWoC8/Pzi4uLlaobNQWM5Afrc2inGdsnUgNC
suAHASAey8vLvb29CwsLUVdMxP6srKzIBkpBJMQbGxtra2vDw8Mp5wDdAX4Q
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
gFEC5JXQQR08uf3Sm0qRDzDO/uFhw9JSyr/mpxjj6Ki+rONbd2x1+ttIoIOQ
TVr6wenp6drBY2XxvOm9vb3JyUmJXe3yo6OjtdfJSDpVQu11MprQ26mpqc3N
zYDE3NHBSlUK3/j7jUf6ahjv+vRTtat39nn0ksJmw3U2jF/4oycDSksB3y5Z
JEsr3fREsEJ/G5FM6WDHc+h4AuDBeDIhkZq8+zNHLU+3/djHHtv88nO+dTur
g8b7HnmmpastXLvxgb98Nkxpp0r9T/GBL9xseXRaW+cdiPagq4kEOpipBMCD
8WQiIWP4zk8/1fBI48zG4/UiYrigg5WqlL/nT48aJi8b9b6Hn2k4DoYLOmgo
w4aHSbVFyw8d1dpAD7qaSKCDmUoAPFz2g0qpVCq1/7q2thYjAa1bi6/Y9Q9+
9O2Xf+9nf734H+4v/srvfMi3sI/0dbBZUygZvf7e1Y/+1/d/0JJ/95UP6q0t
0HBLRZrJC/s1+pKp/SKUszJX/toKfRH1C3ivdDWRcEEHO55DxxOA9HHWDwJA
yrggAR3PoeMJQPo46wcBIGVckICOq0PHE4D0wQ8CgIEOupAApA9+EACMGM/t
jR0tcwjOLcFPAxaOXUs7CUD64AcBoJY79+7/TWGinfRifBq+6ti1JJUApAl+
EAAAskx3+8HV1dVCoXDSiR0wVXrp0qXp6enLly+nX3v7KHnbQfKNm3eGUOMn
+0QeAOhKutsPlkqlsbGxjvTk5XJZTbq3t7ewsOAbeu5MsL29reSLxWLKNz8m
xe7u7tTUVLxbRwEgU7jpB2WmVqoMDg6qQz48POzr65udnR0eHtan2snXhLze
6OiojRUzMTExMzMzMjJy/fp1X1HygzF0UFVLvNSRLi4uqnalodqHhoZUlBpK
E6pd1R0cHGhhSa3VvrOzU1+UspUxidMKcbGm09eqnJWwJa9Xe/CxJrRpk5OT
lq02UE1kW+orR22rzUw5eSmvkteOmT3NRF+x2nZgYEC6pl2LXC6nj7Q5squV
qt8fHx9X8trZ8JXT399/7dq19fX1NJMHgLOIy35QHbUErlLtuk3LlKeUTspi
nbYkST2hPRFD0mnP9vUVEk8HK1VDZ8+QWlpaUhWao05VCqJK7QEcxSrKRzO1
mD2Aw1eI5ks0ExzYLSSSvAsXLthjPswT6fs1W2r7EpXqYyWVs3Yw7KEh3nwv
c60rGQr5nKxkUaNpH0PtZm7UHvKlzVG2lerWWfLa97Dk9bb2CV/22Oi7w/6g
gwDQCjf9YKXa9VkXXam5o0dJqleX9Ej+KtXDnuqrZQ1kEO4OpXX1qglWLbHP
D9pTpSrV00zmpDY3N+fn50187e3lKncfKHyP2hJeun1LOiI/G6P2dtD2SgTN
q8oo2XM99vf3Zaw0Ifdki8lkSVn0+vXUG+0ImY6nmPtdlKF9j/qi7XFdleoz
oC3bSnUXRaotlVRuXsvX7u2YVddXY98UAEAAzvpB9XiejZISmZqo99Nuv/xg
rQ5qz192wJb0Pfa3EtcPmh+xabWM2U9pinW5Vrv6aomyavSUwuTSQyLYkes0
tFfgfZvK1o4ZmlhXXq6Dkjnpi72t3Vswc12p/jxS1kG1be3pVDOA+i70Fft0
sFI9+GnfuGXrIRuor0Y7LSb9AAABuOkHd3Z2vHtOzc5MTEyoxy4Wi5WqTfB0
0PpMyU0+n1ef6fODXiFe5x8SW6unp8c6UomIare61FB2ckp12bWgysdqr92X
UNft1T45Odlee0RAuuDVa6f2lLaS907/1eqgLS+lk/ldWlryCtGegxo8l8uN
jY35JOa0UTKWvGqvVE23krf9nHodVPLa2VDy9ecHK9UdGI6LtsMp3TYe/l7y
07t3nvvZoRZn/SAApEy9NJzS7eQhx1Vr85702DlA1nDTDwJA+qQmDSF1sFM5
QNbADwKA4YIGuZADZA38IAAYLkiDCzlA1sAPAoDhgga5kANkDfwgAABkGfwg
AABkGfwgAKSMCwc/XcgBHAE/CAAp44IGuZADOAJ+EABSxgUNciEHcAT8IAAY
Lty750IOkDXwgwBguKBBLuQAWQM/CACGC9LgQg6QNfCDAGC4oEHxclhdXS0U
CoknAxnBWT84PDxsj56/HhdbV6/xNi12vbVV26s9VD0kfX19zcpp2SDeMmEW
TnADWy7vPUoyDMvLy0kl4ELHfoZwobni5TA1NcUzlyE2zvrBkZGRpIqK1Amf
BpF00B6x12VE+goC9lue233oyY+874nie5/4wHvuRvG9X/3w/7z5Z1vNnrDj
Qsferezu7vb29tp0uVzu7+9PPwfVOzc3Nzg4qC9aCUxMTKSfA3QBzvrBbtLB
SE8BDtDB40f//KsfuaT+//B33mWh6ac3i7fKTyWRZlhefOIrRx9f/3oa/+u/
WRqSpxe+8sVmq7Svg0//8Ue9rW4YSqleDYN1UA7iUhVNzM/PhzEU3pJaS77V
bIhXSPoT81Vq82m5CfouCoXCysqKlTM7O7u4uGglRLJUJycnPT09R0dHmlYh
9pTq8Hg1KhOvGSMlcHx8PDw8rFX29/fPnTunOePj4zES8DVj+Nf6iXZeI7Ue
JAt+MAXa94PyQcEqIGd0++apPzj+1tETtSrcMI73P1e/Yjs6KJVXsY/99juD
6/167Y/+ee26wTo4NDR04R6yNrIVLXPTKlrSVtTyuVzOpmuLSpN8Pu/lo1+O
tvfg4CB4E65cuaLFhqrYhvf19XkFtmyBWrS8HZTWxEmrZ+bWYglYu3nNaHPC
F7K+vm7Cp4mxsTFNaH8+Rg6+ZgxPsl96+MwhcfCDKdCmH5QHDCMBCslloom/
jPKnroVM4+gP1nzrxtbB4y8+ErJSL8qfedBbPfxx0Y2NDbkbWYyAZfSpfIdr
/5Ra1J+3dBbybkkdPzQfpz58Z2cn0oqJHK+Wg5OT1cTc3JwpYKTt4pg5eOAH
UyC2H7xzctLSf/lV4FOn0ktL2iKl8eTV+2uPUsbTwRef+Mrj4WxgM08avq+T
nWmpcaVS6VWvbKGVnSWMxvX39yd1FG55eVk2amFhIeqKiWjQysqKbKC+OAmx
dmPW1tYiuSp0EDzwgykQ2w8elX4rhhD4jg22z82HPxlDjJ7Z+rBXQgwdfOn2
LTv5GCPUaHbONFJfNzk5OT09HbCAVCbSGaj0kVLncrkApdb/XW3S7OuIKg3F
YlEONMaOQSL30ate/bMk61plcHBwZmamXI5wagAdBA/8YArE84PHX3wknhuS
hWx2/WQM1NvEEyPFi3/7qBUSQwePPr4eu97D6gnTSsS+TobCuwCyIX19fY5f
z9DyyO3S0lKAaYoqDfKeo6OjkVZpWVHUHCT98U6uoYPggR9MgRh+UELWjgrU
niNrk3b0SGIkW1eJroO3n3+unc0/rF5Xc+voiUh93eHhoZbf3t5u+Kk5qZZX
oXQcuVo5o2af6m8VcDFJVGm4ePGihDXSKi2JmoM2Z25uLtkcIGvgB1Mghh+U
k2rYvX/sbW+98D3f9Zpvy/W99jXv+5lCsBtqn7sHJxuVL6P6ln/5A8pB7iNY
jyRGleg6WP70/2lW4Lt//L6B/Gu/PffK1w8NPPKrCwFVP3n1/qidqn51dulF
PfqPDA0NRSqtI1y+fDmfzzf8SN+CGiTgmhYXLJILOUDWwA+mQAw/+PRmsWHf
vvPen//ipbdp4i9+ffFVr+z5y/v/UzOdevGxv24/8+P9zzVzW7/yk/968x2z
0qNgHXz2s5uV6DrY7BLZx6r6ay3wtsKYBDGgajVC1E414LBhsJNyBxO7hq5W
EtnX15d+SgCOgx9MgRh+sOVxv4P3/7JcodSw2QI3H/5k+5k/s/XhAJWRCrf0
g08+cPfO6Kg6GOYqWe0SaE8gWR1sdvAzQFwcZHh4uKFkBx8yBcgs+MEUiOoH
g08OyoV9z/nv6OnpkTMKuLvcbqA4Pj7e2dnRt6xX77o+9fM2R69evbu7uzaz
VgX+5upvBOvgq1/1rS0FqxJdB1uWqfiFyX9x3z8eTFYH1fJyTPWjmgQcbHSQ
hq7Wbgy5ds2tvzmAC+AHUyCqH7zzQutLNKWG6tYC/KDdtrC3tycXUCgU9Hp4
eGhVrK2tTVapFei5uTlbrFYF/uR/NC1fEUYHpdSViF+B+uqWm3/pZ350IP9a
O0CaoA5WmtyCd7aclHZm6m+O2NjYCL6lIk1cOAnoQg7gCPjBFIjqB5tdneLr
5OWG3vnGNzT1g0lcMnr0iQ8E6+Brvi13Kn4w8M5BiaAcccA+QDs6WD+wjKal
IK79QYKpH1gmwWFk2scFDXIhB3CEU/WDg4ODNgxvDLpJB2OcH3zyg7/WsG//
2NveevD+X9bEI7+6IA2SK2wmAcdffKT9zJ/d/kSbOnj08fVKdB188oHVABHs
e+1rWopgbB2sH1jGKScVknrVC3PzowvPgnchB8ga8fyglte/bGZmZnx8vFQq
NVtsaGjIOxYXlW7SwRjXizYbWFsGUFboO7/9VdKCd//4fQHnB++8kEC/bWNc
NwzlIBFUZ6LX1w8NNFvMHkIRVQePSr/VsLTHqtL2qlf2qFIloLC9ggR1sFI3
sIz7w8jU4xtYJngYGQ8XNMiFHCBrxPOD0kG7dk4y543Srz+dPUXF0z59tL+/
v7S0tL6+HjWxbtLBGH4wQIDChHQkqeSfvHp/sOcKHvTm9vPPVaKfH3zhYC+g
upDD7Nx8+JPx+rorV66cP3/ee+v+MDL1+AaWCR5GxsMFDXIhB8ga8fyg/lbS
wZOTk2KxaKPslsvl4eFhlba7uzs6OmrXHMoPaklJoT21LVJi3aSD8cYXbXYL
YZhI5OZBI8YTH7x4dvsTVkhUHdTrE8X3trMnoLhzchKvr7OBZa5fv145O8PI
1FN7bU/Imx9dkAYXcoCsEdsPTk9PLy4ujo+P266yHJ83EIembbSl2vODuVwu
UmLdpIPxxhe9XT6KaQbrHnvUJsGWMEiJ7h2bjaGDzSxhyPja5/6k0kan6t2C
p1/ymRhGph7vXo+Ww8h4uKBBLuQAWSP2+UHvb1UoFLS3LDVcWVmxOaVSyfqQ
2vODPT09kRLrJh2M/byJF77yxaj9/5Mf/LUEB9k2JGdRH/9015M+8RWvhBg6
WIn+sKdvNMIDX7/1I3an6h1IbHZPuvuYq9X/NNLNj1rFotn8+k8DPmr5aSIJ
JJ4DZI14ftCOi1aqpyH6+/v1qo5OqmfPpB4bG7MbtOUHbUIOMWpn0k062M7z
6CMdlnyi+N5ELo+p51b5qUhSaJfHeES7Tqbmpxjv6KidlKy0oYN2ONRuxDsr
w8jUY4dDJycnZ2dnkyozYC+r5Q5YIntowYWkkwN0GbH9YC6X6+3tnZmZ8U6d
aGJ6elr2cHd31+ZIGTc2NkZHR+sH6GhJN+lgm8+jl7EK0/l/9aOXE83ajzqQ
gNsZvqHF6//dnv1XS+zn0b90+1ako7LSTU8EK23ooA0so7/GGRpGph47qKu/
asBF3QDAeDIp0I4f9Gh2J8Xjv/1OObXazv9UCb6QtdkjgGProPG1z/1JGBF8
+o8/6luxnYNgc3NztqcXu4SOY672zN38CJAyjCeTAm36wVrkU6Q15c88WP7U
tZsPf7L2HFzKvPjYXz/72U2l8ez2J1442AteON75QR+qq6kCbhYbHu9qRwfl
obR6jFt+nEIiGO8xtQDZwVk/ODExob3xfD7vez1//nykaXuNkUDt6pEm6muP
dHamfpN9m+8jePkwr/UTYV6Dc7D53ttIwynUr95s21s2Qu1tgFHRnqF0sFgs
xi7BBc6dO3dGr3cFSA1n/SBAZ9Hei2S0C46L+oZLBQAfzvpBgM7S19c3PT0d
72CCI2j/9sKFC77hUgHAB34QoJ4Y9034blI71Qi5FSMjI9rFjf3QqPA35cVY
MdkETi8HyAL4QYB6vGFkQo5IVnn5NTneRTunMRGyA/eGkbly5Uqbd38kfs9g
VA06jXsG0UHwwA8C1BNjXLXU+tWQFXnDyHgDyyRVcvsEVORCDpA18IMAPsxJ
2eHQ8ONsu9aB1w4j49o42+ggOEV3+8FSqbS8vHzSiZGUVOnGxsbq6urm5mb6
tbePmk7JF4vFjrReIih/b2ijSNQOyGkDy4R57pJTHfjx8XHtMDJytXK4iZR8
2riQA2SN7vaD+vtrT7gjPfnR0ZFqlxROTU2duafXVapDwm5tbWkHaW5urtO5
xEEObmxsLN5d8L4LS9QCvme7N8QpHdQPz+Xn8DqeA2QNN/2glGt2dlZ9kXbF
r1+/Xi6Xh4aG1DsVCgV9qv5ZXdzCwsLFixftuU5aWJ+Ojo7asN61aJUYN0+p
apWp8ufn51WFSlb5qlSJaYdB81W7ZlrHooX1qQR3b6/BsCrKv/bh5ingJa8J
bbvStsaxtpIv0EZp5v7+fqVqmtTJj4+P148Bq+XlByMNhtM+KysrSl6/Sbth
QRNKXt++dE0/A82UKuk7td02+y6UvPesE4/BwUF9urYW+RFU+op9NxpIU8Lc
gueUDqoNa7X7pdu3wrhaFzTIhRwga7jsByUr6r0r1bMbnuIoYemgmRT10pcv
X97c3JQqqftSv12/364+M54fVL+nrkPr2uFBzVE3omk1lD16WF5D08pncXHx
pEp/f7+vEM1UR12vzqeNmkKNptfVKpatTUggbBlJoW1jpbqxvtG3bFdEAhTv
0GKb6HtXvd4XKgVU2+qtZXt4eKhWVc7SdL0qVS2vZbzVJX/6kUjLYvjBetXz
Pdu9GU7pYL3q+ZQRADzc9IOVaj+srs86N++PrySti7MuvVQqyQjo/y6xW6pS
v8cbzw9WquN8mvjKzdmwYKa/0j6rXR2mqpMQqwGX7uErRGYq/R0MNZ0skl0f
KI22E5Ryf3bVhHnqSnUD1TL5fN4yr7dUlaoEhDmvlCyyq6ZfstKeS83lcvox
2OCrmlBW+nb01mv5Wh2Upusr008lxoNO1EpqPd/MMLfguaODDY+C+o6UAoCH
s35QdsZzIuq6zVKpgzo4OPC6R7sMRh2+t6Nb2xl668b476vfk+rZtPpk0wjt
LahrVUOZ2qpjkQjaeShb0g48ekhAYxyXax/l6e0PeE9+VENZMt5xTomIHQO0
t7WuWdPWaLLknn9MB1lv74ykcrB7FiRqEj6fDipJvbVv3PcVv72Kvnp9j1ET
aHj88MqVKy2HKnVHB20YGd9M+64deQCTCwc/XcgBHMFNPygF7OnpUQ+sjk6q
Z0cXNW165NPBSvU4mDpM/fd9oyKrT9M+sCxP1OeQ6j+i6pSAWka1S9H0Vj6l
Uu2oa3WwUtUaLana7a0hfVQhqtqG52q3RUIjLVa91nR2wFZpa9rOFVZeroOV
6g9Amav17GCvIXGRuCvz0dFRO42YGsqkv79fuZkCqqk1rZ2icpVaHaxUfyfK
UBvb0KzFOC7a7C4JuwUveGAZd3TQu/nRR+yBZRLHBQ1yIQdwBGf9IED6BNw1
Ly3WfkXAuo7ooDeMTP1H2l0MHljGhU1wIQfIGm76QYCO0MxJVaoSGfwgP0c6
8NqbH320dLUubIILOUDWwA8CGLXDyNTTcmAZRzrw2mFk6gkeWMaFTXAhB8ga
+EEAI8BJGcG34LnQgdswMteuNf0vBw8s44I0uJADZA38IIDR8jKShrdUeLig
g6VSKfjmiOCBZVzQoHg5rK6uejcEAUQFPwhQaTSMTD3Bt+C5oINhbpYPOVxq
S9R1eA8ptoEO2i8zNlNTUzHuFQUw8IMAlXCDpwUPLOOCDobRuJDDpbbk5PZL
ajFvYMP6QSRSQPqrzRkcHFSbSIgZMAfigR+EzDJUg6yN3ZwYjLpcLWmraHnZ
Q6+ENHXQqzSfzysfuwNU+YQZTHttba22BCm71NN7GykTLb+1tXX9+vXgK2mb
rduwGcOXYIMBygbu7++rEWwYpRgJ+JqxU0RtQEgQ/CBkFnWhl6poYn5+PsyB
NS0sA2JrLS8v2+E4KyFNHfQqna9i+ciRhRkUXUKpxWxAQpUwMzNjAxDZ20iZ
qOvQKpKPMA/5bbYJvmYMX8j6+roZwGKxaGM6hXnGYsMcvGb05qT/GqkBIVnw
gwCJ4MJx0ZSRhMlG1Y5EFJJENkHKZSMbzM7OmgJGOi7qTjNCx8EPAiRCF+hg
1JJlxPL5fIzxexO5f1CW9u6j0G6/JEO6sbEhexjp8Cw6CB74QYBEyKAOyn+N
jIwkW1H4HKS/U1NTfX19NqDuzMxM/TD78XKArIEfBEiEDOrgxYsX410mmuB4
MnKCMa7SiVERdDH4QYBEyKAOupCD+i7vQV0A8cAPAiQCOtg1OUDWwA8CJEIX
6CBANsEPAiQCOghwRsEPAiQCOghwRsEPAiQCOhgeFzbBhRzAEfCDAImADobH
hU1wIQdwBPwgQCJ0gQ66sAku5ABZAz8IkAhd0IG7sAku5ABZAz8IkAhd0IG7
IA0u5ABZAz8IkAjoYNfkAFkDPwiQCG124NPT0yHH6jxVHfQi4CPfpwEftfw0
IIdI5SSbA2QN/CBAItR3sNvb26Ojo7lcrre3d2RkZHNzM2B1F3RQ3Dk5iTS/
5afBK4anZTkp5ADdCn4QIBF88nRyciL50x5muVw+OjoqlUpbW1sBqzuigwAZ
BD8IkAg+edrf39ec+ifi7e3tnTt3Tv+44eHhgYGB1dVVm+/poCykBDSfz+tV
JdT/MdFBgGTBDwIkQr0flJYVCgU5QflBb750UEtKBzV9eHjY399vx0vr/eDl
y5cllLXrNqwIANoEPwiQCPXydHBwMDc3Jy3TR2NjY3pbuaeDnk/UX29mZqZS
p4Pb29vyg/p7hqkIANoBPwiQCAHydOPGjfHx8YsXL1aqOtjT0+N9tLq6qo8q
L9dBLd/X11csFqNWBAAxwA8CJEKwPGk/U/6ucu+8oZTO5s/Pz/v84MnJyejo
6MLCQryKACAq+EGARPDJ08HBgXYvd3d3j4+PpX1jY2Pm++y4qFRP8/Xvkzj6
zg/Ozs5q4fAVAUCb4AcBEsEnT0dHR/pn9ff39/T0nD9/XtPmAe160dXVVc3M
5/MrKyu2vKeDWt6uFzXq7zpMc+CakDenx1gx2QROLwfIAvhBgEQI2a/KG0oH
U6go2ZJj36Xe8NMY42zHvpE/Rg6QNfCDAIkQsl+VH7QThaddkVMlh6/IhRwg
a+AHARKhu/1gahW5kANkDfwgQCJ0QQfugjS4kANkDfwgQCKgg12TA2QN/CBA
InSBDgJkE/wgQCKggwBnFPwgQCKggwBnFPwgQCKgg+FxYRNcyAEcAT8IkAjo
YHhc2AQXcgBHwA8CJEIX6KALm+BCDpA18IMAidAFHbgLm+BCDpA18IMAidAF
HbgLm+BCDpA18IMAidAFHbgL0hAvh9XV1UKhkHgykBHwgwCJgA52MIepqSlJ
YeLJQEbADwIkQhfoYCTsIcI2XS6X+/v708/h6Ohobm5ucHBQbaIEJiYm0s8B
ugD8IGSW622wvb29ubl5+R6XLl1KUwetRnvVP7edDVlfXy+VSt7b8GmcnJzk
crnDw0NNz87O2kOEw+PVuLW1pa2IkcDx8fHw8LBsoD3CQ/mMj4/HSEAUi8U2
m7F9IrUeJAt+EDKL75Hl7ccZTTv2JgwNDUnFtEtw4cKFk8An4YbfhPCFSMHN
AGpibGxME+rHEsmhIxE+c0gc/CBApeaR5bEn0j8u2n7OzSZCoq5DdkxquLOz
E2MT2kxgfn5+cXGxUnWjpoCRjovWfl+n15Kn0eyQOPhBgETI2vlBsby83Nvb
u7CwEHXFRDZhZWXFbKDc6MbGxtramiZSzgG6A/wgQCJ0gQ5GLblYLObz+ePj
4wQrCp+D6p2amurr69Mqg4ODMzMz5XI5kRwga+AHARIhgzo4MTExMjKSbEVR
cyiVSpFsYOyKoIvBDwIkQgZ18OLFi1EvE008B+3Dz83NJZsDZA38IEAiZFAH
uzUHyBr4QYBEQAe7JgfIGvhBgEToAh0EyCb4QYBEQAcBzij4QYBEQAfD48Im
uJADOAJ+ECAR0MHwuLAJLuQAjoAfBEiELtBBFzbBhRwga+AHARKhCzpwFzbB
hRwga+AHARKhCzpwFzbBhRwga+AHARKhCzpwF6TBhRwga+AHARIBHeyaHCBr
4AcBEqELntlqT1FsWEVAAsG5Rc08XjnJ5gBZAz8IkAjd/cDW4KoDPo2ac7Pl
W5aTYA6QNfCDAACQZfCDAACQZfCDAACQZfCDAACQZTwdXFpa2gIA2Nra3Nw8
7ZLDV5F4MjFygO5mbW2tUCjs7e3NzMzMAQDcY3Z2NuUVE8SFHOCsoF+LdorS
vPWJIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAgiC/H/AVC4Rb0=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 20->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnX1wJGd95zmMitXlrARxJyoKqIJyYpfNHyqVU8ohKnEpL+KyhUJAhQ7O
58vJFUEQoCsM6LJQvj0cSuVCKCl0gT0ERCxbOiiRWjDYAmGjQtgokbkpv1CO
bVECn65kW2ZXa6+sXXu8677vzuNt2t2j7me6e6Se6c+nfjXV09P99O95Zub5
9rdfnn79Df/1He95+cte9rIPH9DLO4b+W++NNw4dHfg1vXnn6Iff997R4b/4
k9GPDL93+MZ/d8NVmvkn/+JlL3uXlr88DQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADxcAAAAHLMysrKwMDAdQAAADljcHBwbm7u2LFjU1NTDwIAAOSM
W2+9VWooHTx16tR+u1IAAIC95ic/+YnRQQnifucCAACw17g6iB8EAIAc8uCD
D+IHAQAgt+AHAQAgz+AHASCE8HuN7T+taMXqpZE8E6g/8IMAAJBn8IMAAJBn
8IMAECQjRwgzkgbUN/hBAAiSEQHKSBpQ3+AHASBIRgQoI2lAfYMfBIAgeylA
Idva4zSQ3XyCHwSAIOgg5Af8IADsLxlRH3Qwt+AHAWB/yYj6oIO5BT8IAPtL
RtQHHcwt+EEAAMgz+EEACJIRZ5SRNKC+wQ8CQJCMCFBG0oD6Bj8IAEEyIkAZ
SQPqG/wgAATJiADFTkN7+C0tLekmA/UKfhAAgtT6ffTT09MDAwOVppER9Yc9
Bj8IAMkZHBycmpoy05OTk0NDQ/brpqs+SqOzs7Opqam1tbWrq0tdnH0a6GA+
wQ9CbjnmYaiEzVrq8IeHh81aIyMjfX19xzJAb2/v6OiomVZ6+lPb1EWLuXXR
6irELTBGY6oETayvr7e3t29tbdmvK/Xx1kVNqoaNl4lyUKV2dnba2toKhcLE
xERPT499Gr5MKto01C74QcgtfR7kIBobGyNXUQf78qte0d3dbdbShExHXwZQ
Gm5WMkENDQ3FYjG8LlpAi2lhs5ZWb2lpcQustDHVgZi19Do3N1fRulKf3epS
USaSYFVB9drY2NC3qYmlpSUJon0avkwqqgXULvhBALG5uSmBW1lZCV9MfxPT
we5NVvHY3t6WwC0uLoYvpgW0mBZOZaNra2vSr9nZ2UrPyqWIvh0JqFMSZWMD
JycnLa0x5Bn8IIBBXWjkobDh4eF97OftkZcxRylD0ALpWp6mpqb29nZ5sRTL
rIhCoSA/uLW1paodPXpUnVtHR8fq6up+5QO1An4QwDA+Pt7V1RW+jLrZmZmZ
PUknEVNTU5KA8GW0gHtlSxC540o3evjQwZAC41FpGvoSpcVS5La2tv7+fvVv
6eYDdQl+EMCg/4J63RA7s7KyogU2Nzf3Mqt4rK2tKdUQKySB0AJabLcFKhUg
eTGtsrCwUNFakcSQ452dnYaGhoou1IGcgx8EcJGJCHE0+puY0081gdzZ5OTk
bp9OTEx0dnaGrF6pAC0uLra2tqauPjF0UJmEVw3AB34QwGVkZOTIkSO7fdrV
1TU+Pr6X+STh6NGj11577W6f9vT0aIGQ1WMIUGxCtrXHaezl5iA74AcBXBYW
FhobG3d2doIfbWxsqJMsFAp7n1U8lpeXlXBZg6aZ+kgLhKyODkJ+wA8CuEgB
m5qayu4TTk1N2d+JlhGam5tnZ2eD8zVTH71w8fm9T6ksGVEfdDC34AcBvAwM
DAwPDwfn9/f3j4yM7H0+SbiuhP38/SIj6oMO5hb8IICXmZmZ1tZW30z5xAMH
GlO/GLLazM3Nyff57vrXW3neSod8qSoZUR90MLfgBwG8lB1YpiaGkQlSdmCZ
dIeRAagD8IMAPoIDy9TKMDJBggPLpD6MDECtgx8E8BEcWKZWhpEJEhxYJnwY
GZeMHCHMSBpQ3+AHAXz4BpapoWFkgvgGlokcRsYlIwKUkTSgvsEPAgTxDixT
W8PIBPEOLBM5jIxLRgQoI2lAfYMfBAjiHVimtoaRCTI2NuYOLNPT06O3Nmtx
Hz3kB/wgQBB3YJmaG0YmiDuwjGhoaAgfRsbFqwhGINwILpn8U5s0wktLK8nd
MoE6Bj8IEMQdWKYWh5HxUSwWW1paZmdnT5w4YR7XHruo8CFoknyaYiax08jO
ADuwx+AHAcpiBpapxWFkglznYb9zAcgc+EGAspiBZRoba28YmSBmYBk5XP7m
AEHwgwBlMQPLHDhQ/vETtcX29rY5+cUwMgBB8IMAu9HS0uK7Cb12aSux31kA
ZBH8IMBuNDU11Y12NDc3S9b3OwuALIIfBCiLGUZGsb6+vt+5JMUMI6PQxH7n
ApA58IMAZTHDyMgPTk9P73cuSZmYmDh86KB3YBkAcMEPApTFPHWioqcz+G7W
rnbY16Wnp+doCXdgGXuqdH96pXXZg3v5uY8+t+AHAYKsr6+rS9ReojuwjM1a
WsW9F7vaE/Y99tbWlhZeLmEGlrFc0bfdeAukdd969dKoNBOoP/CDAEGOHz9u
rpApFovSQcu9xL10E/bbmp2ddYeRaW5u1ttq5gVQe+AHAYL09fW5w8gMDAwM
DQ3ZrJVNHRwcHHSHkbEfUiYjRwgzkgbUN/hBAB87OzveYWTMwDI2K2ZQB2UD
vcPImIFlbIYYzYgAZSQNqG/wgwA+9F+QDrpiYQaWWVlZiVwxgzq4uLjY0NDg
DiNjBpbRzLTKrzYZSQPqG/wggI/h4eGBgQHvHHPtaOSKGdTB4PWuequZaZWf
CvbPXap2GshuPsEPAvhobW2dmZnxzhkfH+/q6opcMSPa4aWjo2Nqaso7R29t
BovLSF3QQdgD8IMAXswwMhsbG96Z+pvYDCyTEe1wMcPIrK2teWeurq5qpl6r
llrFZER90MHcgh8E8GKGkfHNfOHi8zYDy2RNB80wMsH5mqmPqpBUTDKiPuhg
bsEPpo52LXxuAmqIrq6u8fHx4HybgWWypoNmGJngfM3UR1VIKiYZUR90MLfU
nx/c3Nz0ypDeatdXPVhvb+/U1JTv+WuLi4uqvrkKwveR9hDiJdDf319RY66t
rflGdpqbm3M/LRaLJ06cUJlKUt2Xe2gufK3wzalLV2+vV+/BsdgF1hP65aji
hUIh+JHNwDKZ0kF3GJngR5rZ0NBQ6cAyAPVK/flB7cy7nZVEsLOzU/KxtLQk
yfNdKaeZra2tqvjKyormS2u891WpTWxuswpy+NDBinTQnHuan59fvoL3PJQS
k4LrU2WrqrlXLQbXsjGhWqa9vV37A6ry5OSkpt214hVYZ6hldnvQks3AMpnS
wdnZ2ebm5t1GDGNgGQCXOvODMjW+Ex9eW6dO3ju+ooRPVstMSzolCt77qmQK
KnrQgOykLFtHR4fPVUUOTWlGfSy7mFFqqXlFa4Ug7RseHnbfjoyMuM0Vr0Cn
pK3mnJo5ChfbR2eBI0eOuMPIBIkcWCZTOugdRiZI5MAyGTlCmJE0oL6pMz+o
Tqysahgkc9qlN8c/zc3Rq6ur2s83yjg2NuZ7Ko3laFoGlaPGlHqqWJWjCfM2
csWFhYWWlhYJkATFJ0PHSjglkfUdxQpZKwQ5YvNFm1bStHvOK7xAKbL3MKkq
6B5T1e6EtNVUVn5K0/F89L5jhpHRztJuC0QOLJMdHfQNIxMkcmCZjAhQRtKA
+qae/KD+1L7bn31IJW+88UYzbS4pN2cP1fup81ff7ru/WH7QZuQNL+pLVWxF
janOSglIg7SiJpSPK0PapTeP/tF8faq37rFK31rj4+M26qOub7GE1pLwSd3U
W5oVwwtU43gvv3dNk5ZRmZm6+DA2+tbUGiE7FZEDy2RHB33DyASJHFgmIwKU
kTSgvqknPyhpCxn0Y3Z2tqOjw3WLRgclK+r9pJ7qFoI6qGXKXjoYgtHBYGNK
dEZfius7ZPQ0rVfjKDs7O90bn7u7u81Al8YPaq3rr78+cq0QJHPq+lQv2UC9
alo9v02BvpbxHlzVWm1tbV1dXWp8pVqjZtApN4xMkPCBZbKjgzZXt4YPLJOR
usROQ79h/dorTQPZzSf15AfVq/uGAXGRMOlP4T1Kaa6mU/XdOeoTfMdFjfRU
lMNuOmiP1MftwYaGhrznKEOeH+ddKwQt4z286T0uGl6g96yZEvBdja85UkD9
ig4fOtjb21ujFyLqF7Lb78clfGCZjGiHU24YmSDhA8tUWhftQrhb1P+oonMK
1dBB/XEi92qC20IH80k9+UHJRNn/vnn+WvACcv1N3H5P+iVT41tmfX297O1X
4UgL3MtvXORD3TOGZsI9wuk7oTk2Nub2IUrP+1+W1rS2thrDFbKWYXV1VV+r
b9gQc/7Ofatpt8VCCpSueU2Qauf9tXgPvpmjbbXyW1r1oJzNcfLwVcz536Wl
JbOWvkftfbmF7LEOevNXGkrGTOt3EhxGJoi5U0YLayJYl0rz0S/E7CzpX9Pe
3l7RvlBIXWJkIhXu7OxsamrSn0U7LfYXbhkd9GZS6aahRqknP6hOLGjf9KfQ
b1s7hytXcH/e7n0T6ty0ohTHd0xPCwQVLRJZhp6eHq2rbWl1c75Jf0ZNS5FP
lNCE+Xuqu9A+udrfnLbTRGNjo+tbzTWomqmFlaemjXCHr2WQkKnivgZRExmn
YK5p0bSR4/AC1VW6TllpaElvG+qtstIuhH5LmtCKXpedZXxX9rqHiMNpaGjw
reiNaufsEpKDQknaFHLgQGNaFVEH0tvb63iuxUqrLhUVpR+8OjSzW6sf8MTE
RHB0IPs0Kto01C715Aed0tXg3rfmnjhfeC2euvHd7qN3SsNuRBqEICpHUqgy
1SGo2Mi78MwlOoODgzKS2qP27b4qAXNXgule3NvBwtcyVdMqevXN995H77UM
IQWqOpovYdV8Kd38/LysoruAehs1lLalFWUwbZ5PlBE2X4qlfGsxdxU1mvft
HuugN3ntmciIpViXSvPRb0l7ldrBq/RoZGRd7MvRWi0tLdqbVV3Mk7P0+9/t
htCyafgyqbQiUKPUkx90Sofsgj3/brcSh6NdypBbyXKF91AqhJCd84P7ggy1
d2SGvUedmHF/2mM0A8dp1y78NkkAp+78oPYAZVtSKUrGp4asTVVhf8CSnOvg
4UMHfVea7TGFQkF+0FzedvToUb31HsMH2I0684NOaZ8wlQMaNrch5AHtWiws
LOx3FrVBPelgpeWbK4hS/6lUmsb4+Lg8qZxpW1tbf39/rZyqhv2lzvwgwD6S
Zx1cXFxsbW1N/ZaZGNXc2dkJH0MAwEf9+UGA/SLPOlglYqQhRe7s7KxGMlCv
4AcB0gIdTH1be38ryp5tDrIDfhAgLTKiHTVHRuqCDuYW/CBAWqCD8chIXdDB
3IIfBEgLdDAeGakLOphb8IMAaYEOxiMjdUEHcwt+ECAt0EGAWgQ/CJAW9aSD
GdHZjKQB9Q1+ECAt0MHUyUgaUN/Uoh/s6upaqRrr6+uxE2tqaqpeYknGedP3
W42UlpeXIx9cG05vb281EjOYJ17tJehg6mQkDahvatEPmpHkq0RCHQxf4B83
zo8t/eK62x5/562P/dk3Locm/tNtj3/w+0/e+WhEp51EByOfonjHozvKwST2
jm9eDk1cf/sTyvaexy6ErBh8unFFRD6j59afbr9nYVOJmazcxD5+1+l/Pv1c
+LroYJbLt9wW99HDHlCLftA87rNKVEkHP1M4qz78rafCQgvcvHxmtxKqpIPa
ouQ4MrHP3Xu27OoryR7JsZsOni9ekgSHZ6WQJn7toXO7FV6LOtje3m65a4EO
ViMNdDCf4Ad9pK6D8lORQuOLhZ8/EywndR28fe2ZirJSPHLGb8GqoYNfeuCp
irKSTP/sbDFYTkZ0UI1/+NDBAwcaW1pa+vr6wh/Plx0d9G0r5CntqXyaPJO0
krTMBOoJ/KCPdHXw8/dV1qW7cdPdp31FpauDH/z+k/ESO37fU95yUtfB2IlJ
1n1FZUEHC4VCY2Pj/Py8kpECzszM1KIOuoQ/0jrJpylmEjuNdDOEGgI/6CNF
HZz88Va8Lt3EX/3wF97SUtTB9yxsJkls/J9++WydFHWweOmF992RKLFTqy95
1E4WdHB6erqrqyu4pOZrd05/PX3a2dm5tLRk5nd0dBgd1I+8tbW1pYSKDf49
cS4AaYEf9JGWDqpPTtKlm5CSugWmpYM3L59JntjXH3nxrFyKOvjxu04nT8x7
VU8WdFD/r4aGBv2/pG7efKSDWtjInz5qbm42T+4L+kFZSM0MPtcPHQRIC/yg
j1R0cGP7+eRduol/3DhvykxFB1VaWomdPn/5IFJaOihhTTcxJxs66JRkbnBw
ULausbFxZGTEZOXzifpJz87OOh4/aFDzakWJqeW2ACAG+EEfqejgO29Np0tX
XH/7E8VLLzhp6KDKue62x9NKTEU5KemglCutrBRjSy8eT86IDroUCgU5O/3X
nJLL6+vrcz+SUE5OTjov9YMbGxttbW1zc3MxtgUA9uAHfSTXwX8+/VyKvfpb
r5z2Sq6DX3soNc9l4r4nL6Sig7GvJtot5Med7OmgGB0dleQ5JT94+NBBd768
oc8PFotF/c6PHj0ae1sAYAl+0EdyHXz3t8M81x///f2/3tP/yle9Rv3Y1b95
+JqPTEf26u9Z2HTS0EFZy5CtvOXkw7/19g/8q9e9QYm98c//u43cKLHkOni+
eCn8vpKe8VvVYle9slGhiT/4/D2RiZkrebKgg/Pz85I8/aika2or+buJiQmn
pIMNDQ161bQUUL8c3/nBkZERr2G02RYAxAM/6CO5DoZ30erG3/Cuj6pv//2/
uVMT6s3efMttkR37z84WE+pg5CnLP/xCoeWaP1JKDVe/ylIHpV/Jx5OJPGXZ
/Ntven3/e9VKb/rkNzSt9GxyK156IQs6WCgUJGetra1SPWmc6++kgP39/UND
Q/rNyBguLi6a+a4f1PLNzc2tV3AXCNkWAMQDP+gjoQ5WelC08d+8Vp185GK3
/nQ7oQ7a35yulCx1UPE/v/GD2Fk5JR2s6KCo3LT6f+1FRC751IVLWdDB3TA6
uDfbSkiV7k8PX7F6aSTPBOoP/KCPhDr4uXvPWnbpR76+LoNz1SsbbXr1zxTO
JtRB+7sSKtLBv/jCQuysnJIOVnTjvEyreqrezy1HLll44ll0MBUi7y7fm/vW
q5dGpZlA/YEf9JFQBy3vBJfWmJ1PS8X5qx/+IqEO2stNRTr45ltui52VU9LB
iq6tbbnmj67+zcM2S37toXMZ18HIMcbT2lY2y7ckI2lAfYMf9JFQB8MvknHj
LScflrW55iPT8oO/e+yrkctLxRLqoP1QLXusg/Yi+Ft/NtJw9av++O/vt1lY
xjzLOpj9bWVEgDKSBtQ3+EEfCXXwhu+GXZMZjNf94X+0ufBjbKlu/aC9CGqf
QTsPlst/5cGn0cEsl29JRtKA+gY/6COhDlY6alnzb7/pla96TeRi4/+0lVAH
bR5jFEMHf/9v7oydlVPSQZvBTiWC6g9t7phw445Hd9DBLJdvSUbSgPrG3g9q
Me8yW1tbfX19smbNzc1llx8dHW1ra9ve3i77aRKy7AfV/Yb3z4dv+MQb3vVR
2SiFzKD+5r/7iTkbd5NQB20G/b72Mz9QSJelO5qIPAJ55Ovrya8XlcRHiODb
P3C5lY591aSneMvJhyPr8uTO8+hglsu33NYep4Hs5hNLP1gsFqU+ra2tvvnq
anbTwbW1tSp5zCz7weKlFyIN1K/39Ddc/aqrXtkoM2hz8+BbL1/9eCGhDt7z
2IVIUfNdQC41jFxl8a4fxc7KKengws8jHoOohvIlds1HprXp8LXOFzN930Rt
bavaZKQu6GBusfSDs7Ozc3Nz0kGfv9Pb3XSwemTZDzpR99HHiHd88/Jd4cnH
k4m8MtOIi/c1PK677fGVlRUz/Gk8pIOWY5L7cgtP74bvPOFkYzyZ+thWtclI
XdDB3GLpBzs7Ozc2Nqanp2dmZrzzgzqoxQZL9Pf3+35U6pfa29slFiqtra3N
VZyFhQUVouXdUYjDybIf1OtXHnw6XR38TOGsk8a4ajfdncKDjbzxpQeeSmV8
Uftzl5Zx35OXn76EDtYKGakLOphbbPxgsVhsbGzUq1TP9zsJ8YMSRN/CDQ0N
a2trZtrtoyTEXV1dKty87evrixyqK+N+MPLQaKVhHiSUXAfPPXcpxayMS01F
ByVb6baYsajoIADYYOMHZ2dnx8bGzLQE0ftRiA5ubm7qr+oO1LC6ulr2n6tN
m3H1DdLByA4/435QRJ7zso/P3/eUKTOV5w9GXpRiH7evPeOk9/zBVJ4ObOKR
M8+ZMtFBALDBxg92d3drmeHh4ZGREU17H26ursb7EHYvPj+4mw6Oj4+HPFym
LBn3g4ZKbyQsG+ZJE4a0nkcf/tQJyzAn4Jz0dPB88VIqD22cuOeXz21HB7Nc
viUZSQPqm0g/aJTOvTzGp27FYrGhocF86h7bNPj8oFPyktqcmd4q4ZT0saOj
w0w7JYMZmXP2/aCTRseu1c89d8ktMC0dVGLv+GbSxNzS0tJBIR8X/gCmyHjf
HZvei3bQwSyXb0lG0oD6JtIPqguVDfTO0S/TK3laoKWlRR5NhtG7WPD8oMSu
vb29ubm5s7Pz8KGD7rnCpaWltra27itIQMNzrgk/6JTOx8V+/vu7v/24OS3o
kpYOiq0LF2NrtHkMvUuKOuiUHmEcW6Pff+fms8+/5MpVdDDL5VuSkTSgvmE8
GR8p6qBQzxzjYsgPfv/J4M0IKeqgU7qYx2YgF1+oLr5y0tVBIfWPcUh58sdb
wcLRwSyXb7mt2GloD1/755WmgezmE8YX9ZGuDhqW1s9bnpXTYrf+tPyR4XR1
0HBqddvSsd7wnSfueexCsITUddDwpQeesnSsUnNzl0QQdHAvyx8cHHR/opOT
k0NDQ6lsK3Y1jx8/XukTPdDB3IIf9FENHTRIDeWnyh7308wPLT658PNnQlav
hg4abl97Rlsvm5jESDkr893WrZIOGr7+yLn331netEq+b7r7dOGJZ0NWRwf3
EvUho6OjTmkgKe8ZfxvSrYtUuLOzU3/G1tbWrq4u7erbp5G1VoW9oRb94OFD
B9Wxz1SHhDpos4m/npq+/hOfffvH/+5tH/u7dx/7rN7arJVEB4eHhyPLn56e
NokpK+WmCZvEKr3W14e6qchN6Lv+0Kf+lxrKNJdlYiJSB3us6e7uLjvT9Lcu
e6yDTS9FydjXqGxdmpub3beV5qMOpK+vzyndAlxpZ6K6uC2sCXMJQbxMpMXq
0PTVt7W1FQqFiYkJ+91mo4PeTCraNNQutegHAVJhMhnqY8fGxvpLqPMPDqBU
VbQts1EX7ZOYrCJfy9ZFq6sQ922l+ayursp/zc7Oxni+sOriJqYJlaCGjZGJ
dmJbWlqKxeLGxsbloT8uvWCuwbNPw5dJpRWBGqUW/SBANsnzcVGndDykvb1d
GrRfCczPzxsTp97M2EDJ2eDg4H7lA7UCfhAgLXKug4cPHUxy9D45hUJBfnBr
a2t0dFT2Vjv5HR0dMqr7mBLUBPhBgLSoJx2stPyVlRWtsrCwsL9pjI+Pt7W1
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
9ygFV6enHlXGamxszCmdcfPpoKREHf7ExMTc3JzEyNd1q+5qAfX8MzMzSR5a
py5aySgrs3WlpD5ZW1T/PD4+7pT8oE8Hpenm6KIWc/2aQVqgZSYnJ2dKxE5M
0qZNqI5LJaQOqmx/f7/mmHZzyungiRMnzClLbdqXmGZqp8IYzMOHDsbLyrmy
26AGMYk5pSO3KlMp6bsw+zbSQVeyzb6EOV2o5tKEOcwbhOOiAGBPzflB9Yqz
Hkx3JzVXx+gaq4LnaX2mn3dKh9pOlQhe9aG6uwUm0UFvYm4mSsy9JEbS5h7h
NKe9nJJbNIn5/JckyVtg7MTUFN5yjKxId5SAe6uIxMiUr1dXqfXb0DJqHN/p
VEmSDKaKUoMn8VzexNzWUJmadi+A0fQLF593St+7u6tmWlWJ7Xa4WB9hBgHA
kprzgwAAAClSc34QAAAgRfCDAACQZ/CDAACQZ/CDAACQZ/CDAACQZ/CDAACQ
Z/CDAACQZ/CDkFu2E7O1tbW5OxsbG+5ryJz1EvFW96JkktcleZskJ3ld0mK/
f6GwR+AHIbe8/KpXEERI7PcvFPYI/CDklp+UKBQKsSeWl5dPJWa6RPJylEyS
Gml17QwnaY20JpSGkslCJvv9C4U9Aj8IAAB55if4QQAAyDH4QQAAyDP4QQAA
yDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4
QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAA
yDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4
QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAA
yDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4QQAAyDP4
QQAAyDP4QQAAyDP4QcgtA4np7e1tTUxzc3NTU1PycpRMkrr09fW1tbUlb5Pk
tLe3J6xLWuz3LxT2CPwgAADkGfwgAADkGfwgAADkGfwgAADkGfwgAADkGeMH
JyYmhoaGpIY333xzRa9ifHw8UxNewj8NWayqWZWd75tT6RdR0VeW+lZSbJkg
SSqYek15zefrsf3u1pio6sTo6KgUcGdn59SpU7KEMV4zNWEI/9TLqSvsQVbB
LZad465bpddgK6X1mrBlyn47SSpYvZrymrfXin7VTNTixObm5suvegVBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEAQRI/4/4UvM
vw==
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 21->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQtwHtd139WULKXphHUQF05QoxOjGTZBO2gRF5OMGSelXZM0bE466FAT
F1N2DD8Qxo05hQOrMdwwsWO4FWx2TBe1wwSp1bHQgSv5oQwkBzWsQKmYgR9o
bA8UizI1NWVZ+kSKEiFTJEHS2z/3CNfLfdy9u/fu6/v+v/nmm++xj7Nnd8//
nLu7975q7MjIO3/slltuec+teBt56x17Jibe+jv/6mX4cvDd7zk8/u53vP2N
7/7td4y/Y+KXxv4mfnzj37jlll/H9Dc+E0IIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBigkcIIYR0MKurqwcPHhwlhBBCOgzI38LCwtGjv3f8+PF1QgghpMP4
whe+ADWEDn72s5+tuiolhBBCyuZb3/rWoUOHqIOEEEI6E6WDKAyrtoUQQggp
G9aDhBBCOhnWg4QQQjoZ1oOEdCzRZ4f1Txbb/Eucu5QOdwXrQUI6FgbPMqFa
1RbWg4R0LAzLZUIdrC2sBwnpWIoOywz7QUrQQTo8H6wHCSEFwbBcMnR4PlgP
EkIKgmG5ZOjwfLAeJIQUBMNyydDh+WA9SAgpCIblkqHD88F6kBBCSCfDepCQ
joXlQ5nwuYnawnqQkI6FYblMqIO1hfUgIR0Lw3KZUAdrC+tBQjoWhuUyoQ7W
FtaDhJCCYNi3p7u7e3193XBiOjwfrAcJIQXBsGzJqVOnurq6zKenw/PBepAQ
ksrBgwdnZ2fl87Fjx8bGxkzmYljOzeLi4u7du3t6eqCDu3btMpyLDs8H60HS
sUxZMDo6utuC3t7eoaGh3LOPjIzkM3tychKzT0xMyFdzX01PT4+Pj+PD6dOn
EZbPnTtnMhfCslo1VopVw4B8lmOTc7sLrobDc88OsLvzmX348GHMrr4aehvR
eHBw8MyZMwjOyDpWV1cNZww6HPtrz549+cwG+/ftze2ugYGBvr4+G4fD+NyW
G/oqCOtB0rEMW4Aw1W3B9u3bkefnnr2/vz+f2QhumB3v8tXcV4jMmEuctrCw
YDgXwnLSqrMC8c3tLrgaDs89O8DuzmTtgQMH5H23X9Op3w39ho0V7cOHkydP
mu8mcbisPbTqrEDIbBy+Y8etNg6H8bktN3eXgvUgIR2LeTPaqVOnEFTn5+dR
lxVqUhtjeL/oxsYGJtvc3ETRDfnGh7W1tRLM62RYDxLSsWS6nIQMH+XJmTNn
irOnvTF/bmLnzp0rKyuIySiLWq0W3ou2rcNhPUhIx5JJB/v7+48fP16cMW2P
uQ5CAeFtaWCECC4uLhZtW4fDepCQjsVcB9fW1jDx0tJSofa0N1mfo4cCMiyX
A+tBQjoW87C8vLzc29treJtojuV3Apl0cHNzc/v27a1WK+sqsttFWA8SQoqC
Yblk6PB8sB4khBQEw3LJ0OH5YD1ICCkIhuWSocPzwXqQEFIQDMslQ4fng/Ug
IYSQTob1ICEdC8uHMuH4g7WF9SAhHQvDcplQB2sL60FCOhaG5TKhDtYW1oOE
dCwMy2VCHawtrAcJ6VhuuRnDvzL9W+wGNApXLqXDncN6kJCOhTpYMtTBesJ6
kBBCSCfDepAQQkgnw3qQEEJIJ8N6kBBCSCfDepAQQkgnw3qQEEJIJ8N6kBBC
SCfDepAQQkgnw3qQEEJIJ8N6kBBCSCfDepAQQkgnw3qQEEJIJ8N6kBBCSCfD
epAQQkgnw3qQEEJIJ8N6kBBCSCfDepAQQkgnw3rQOevr62fOnKnaCkIIIUa0
Xz147ty5oAy1Wq2ZmZn9+/bu2bPn+PHjGxsb6i98XlpawrZ3dXWdPHkytBx4
Jp8Bw8PDWZOKzc3Nubm5kZGRoaGhqamp06dPq79WVlZmZ2cHBgbwHpwF09xy
MwsLCybrwoyHDx8eHBzE+6lTp+wXSAghjab96sHp6emLFy/KZ4hgf38/lAVq
sry8DDWcmJhQU0IFxsfHsfmI+aurq6HlYC7IUw4DoFlZkwpIEmR6cXERdsJ+
7A75HQaM+/T09IR0EDsOZkPHT/rAfpMiFNPs2rUL+QCmx3tfX5+aK98CCSGk
6bRZPYiiBtVf8JdgWQehQahHwRicANEeP8bWgydOnDBfNapLVHNQmVBVlSqm
0D7IHCRbM83u3btDOgiDsXCl+IYcO3YMqqq+4jN+sVmg5zsQxw+2HUYiechd
RxNCSCW0WT2IwK4RFJSEO3fuDIV60cFoPQjGxsbMVw29gzOxHCwNpda3tkid
EdohBSCUNKTRiqgOonDr7u7GtsB+87p1eHhYWjvFS0h+UCObLBBiHWwmhXqq
NtUDBw7A7dhSKCmMxOd8dTQhhFRCO9WDCL8jIyOaCRCiJycnQz9qdBD1IKQz
qw1YWiZnHjx4EP6fmJjYseNWzDs6OhptkIzqIPIWTA/lwiz4MD09baI+mH7Z
B3PhHeqGxEBm1C8Qwhe8aqmKSkzT1dUVqsEJIaRBtFM9iG1RV9aizM/P79q1
KyoxGh1cX1+HHGSyIUkHUW0dPnwYYqfe8Yv8NTQ0BN2BKkk9iH+xR0KzR3UQ
U2IJUj9iwwcGBlCEpponOohSDmUgtk4KZJMFwuDgcoKNq4uLiz09PYODgyhs
scAcLatVEdwj2Aup2QumREEt06MK3rNnT3CHlvYOG7D75DMSP+RRerPX1taw
d7DLMD3e5XP5ZqtVy2ccYKmtJSM+Mjs2GT4v32y8y6rlsxwAerMRanA4yew4
l+WetPLNxqqVGWNjY3B4aqqMOIM8XGbBZxxalVgeMkNdu0kCURono5pdP3Es
7VQPIozfddddsX9h6yABCAjRv6CD27Zti9VBiEJWr0IFsLRMzsQhGrwQefLk
SSwheF+rF6eDIaBZqoVTg2oXFWDnG/fvM1lg0A9wCyQvOLFoKI4inGs4IJNa
d+sGzrVDWyAfCG1UFAS0/v5+mR57BF9HffA1uCg9wenN5wqCVSO+ybz4gCRE
bzZOChxRMj0iW19fH95tDMgHFE2tGpg0m+CcxQbK7PC2hMfSDFbItW8xGwcA
LNGbjWjc1dUl80JAsdXl2yyrRuavPsPh+jvfrly9jmlw1ouT5VyuxOFwsjID
h3dqpoew1tvbq0zVTxxLO9WDcn0q+jvSM5xQ0TthBNHB2H/xV2psjIJjLyrH
rVZr7WbUMSlPTKgppbwKZW5RHQxdBp2cnAxdzUTRh90afDLC89UtOBk+q6JP
s0DoWrDQxtYFxTQo2ZgyaxpQExAoom3mIbBnsbPKsccQpB87dtyqnwa7ODV0
l4+JM7dv3571wkTRIGWFQOinQdKYGrrLB85cWVnRTIBYgZO3bneJI6kw0cEc
gTpIO9WDiOTBxyIE1NTYuTh6IT2rPkoa1tfXsfmIJJgAsR2fQ6qBwyapwNSA
Ih2yhXmhrZhdZAILx2cosnpXjUJyoyl2ASzEXsC8Kj7gmJSbbXDqya2YMhfk
BmEEs8jFvqNHjyIYhkpaRHVsV8ghWCByLfgE60J4xEJE/vQLhIuUXMJCTKkc
hW1EuguD8QH+xHZhRnzI6rTKgbsghZoJkJmkRpLyOX36dGrsqmdYTk086hmW
cXbgMNBPYx+WiwCnrf4GeGTg6ipJfZCnp/XTIATlCNRB2qkeBKGiGFu3LYI6
+6A4ob9C4QIHs/5xhliga5BCSBtKezjW5ET2C66jmAXBIVhqYTlR+0VYsVjI
GQyGriHQRaUHERsGRON28Dn64K0vmgXCDFSs8Nv4+DgkD+eL3CAq/0Iu4Sic
+5gRv8c2PtcfbBcChWaCeoZlz6BowmFQw7CcmnjUMyxL81HwxIliH5aLAKdw
tEwIgtMfIag0ewzBsa1v8ZBLUbEXtsxpp3rQ86OZJmPXXCaO/iXPsDuzzAVV
PY9QNz8UAQ4bCIrGw/UMy57fb4P+2nE9wzJqEyROmgnq2ZwLEJbVTW5RJCwn
XYWpkNTEA6f56OhoafYYIomHJv+UYsfynoQ2qwc9f3c7WY609TlZVNPpBB1E
4Y+zKdQwHqSe2bLnP3ejuZvLSbZcBKmJRz3DsuffLqW5N3t9fR0Oz9GOVDSp
LR579uzR3G9fFThC9ImH3ANpuZY2qwc93y1ODkJ9jt054DjUHITtBMo9TTYo
XfCVaY8h0iid9K+TbLkIUhsY5bJCmSYZIrf0J/2L+NPV1VWmPYakJh49PT31
7FIYiYcmGsv9GJaraL96kJB8oNzTPKlUz2zZ82/f7evrS/rXSbZcEEg8FhcX
k/7t7e2dn58v0x5DkHhonlGamZmxD8tFoG/x2NjYwL/1vLivb/EY87FcRfvV
g4TkAyeCpgW4ttmyPHCalOc7yZYLAnl+UuJR57CsTzychOWC0LR4wNXRx5Zr
AhKPpMecPf92R/v+rFgPEiLgLEDRF/tXncOyPLOZ1DdLncPy6OhoUuJR57C8
uroK25L6TUJYztoJVWloWjxQeqd2yFAV+sSjq6vLvohjPUiIgHIvKRRI6Ktn
WPb8fleSzl8n2XJBaBIPzb6oHH3iodkXlaNp8dDsi8rRJB7S2Gv/wDLrQUIE
TQ1S52zZ09YgTrLlgtCIXZ3DsueLXWwjuV4iK0fjVf1FgWrReFUuCtj3acx6
kBBB0/hZ87Cc1PjpKlsuCE3iUeew7CUnHvom08rRJB76m8QqJ6nK1jeZmsN6
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
eODAgXyXMIjC3OHT09N9fX07dtyKd3h+fX29UMNIQ2E9SIglmXRwz5495reJ
klgyOXxjY2P79u14L84e0nRYDxJiCbs3KZlM3lheXh4YGCh0FaTpsB4kpP4w
LJcMHd5RsB4kpP4wLJcMHd5RsB4kpP4wLJcMHd5RsB4kpP4wLJcMHd5RsB4k
hBDSybAeJMQS1g4lQ4cTt7AeJMQShuWSocOJW1gPEmIJw3LJ0OHELawHCbGE
Yblk6HDiFtaDhFiy7WZc/aufsZNx5fBMM5I2hvUgIQ7Z3NzM8Zd+gtQZO5nc
DrfZU6TNYD1ICCGkk2E9SAghpJNhPUgIIaSTYT1ICCGkk2E9SAghpJMRHVxY
WBgaGtq/b++ePXv43q7vbyB2JHlVfQ79lfR79D33jCUfP+UfRSZOi90FmTZN
P5dbszO5mqdtCcDnu3fvnpqagiC2Wq1zpK2RXcz3rO8kRKe5vVqb63AKtOt7
EC/yACkhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggJ8f8By5wwoA==

         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 22->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQ9sbNlB3rcNxE+mNeCCJVxqkZFwcUWtgqtQA7Uag0zIRgZM61Ks0JgG
IyMxtBNk5EK14KAoNV2368iLYsUReYtL6k033SQmMiGGNcQFb9cJm84qa9o4
yTbe3fd2vW/yNt7127d7+u09eVd3x5479565njlv7u+no9Gd++ec796ZOd/9
7tw/b/j5X5mY+Zt33HHHOy/pZWL6195UKk3P//S36M2/KL5z9heLv/COHy/+
6i/84i+U/snPv04jf/xv3HHHz2j+V4cBAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHzGAAAA5Ji9
vb2JiYkpAACAnDE5ObmxsXHXXXctLy+XAQAAcsYDDzwgN5QPaqDVqRQAAKDZ
fO5zn3vb296GDwIAQD4JffDBBx9stRYAAIBmQx4EAIA8Qx4EsMRfTJTVVGdJ
TVMLkDfIgwCtwjcPwhYhn5AHAVqFb6aDD0I+IQ8CtArfTAcfhHxCHgRoFb6Z
Dj4I+YQ8CGBaZAHxLbZEDz4IOYQ8CGC8tADf9AC0K+RBAIMPAuQY8iCAwQcB
cgx5EMDggwA5hjwIAAB5hjwI0Cp8S3wehmKAJkAeBGgVvpkOPgj5hDwI0Cp8
Mx18EPIJeRCgVfhmOvgg5BPyIIDhfjK3WsQHIYeQBwGMlxbgmx6AdoU8CGDa
zgcnJydXVlYyFAPQxpAHAYyrD/b09JTLZTs8Pj6euSTnZXt7e/XTzlAMQBtD
HoTcchLBzQdHR0c3NjY0oNexsbEGNVQCopLS1iZTnpiYKBQKlzo69Do3N9eI
HivpxCfSrg5AEsiDkFvueC0ONRSLxYWFBZlFf3//4eFh4xoa0SMB8r6dnZ21
tTWFU6lSXM1Qjw+kXR2AJJAHIbfs7+/r+x++OtQgx5mampqZmVleXnZYXB17
VMPm5ubW1lb4Nm1tkrG4uGgH5M4miKtp9UQlyVLVLewHRDdUC1/TbhOAJJAH
AZzZ29vr7u4eHh52WzzbgDM0NCQb1cDg4OD29vbp6WnaPEjmgnxCHgRw5ujo
SMbhnFOyNZ3x8XH9kCuVyqWOjuPj49mAtHrwQcgh5EEAZ5aWlmQcSl5ui2dr
OgcHB0qmfX198kFlQ2lz0IMPQg4hDwIYVwvQD8ftNNGwUeeptZifny+VSs56
8EHIIeRBAOOlBbjpGRkZYZ8WIBXkQQDTRj4IAGkhDwIYfBAgx5AHAQw+CJBj
yIMAAJBnyIMArcK3xOdhKAZoAuRBgFbhm+ngg5BPyIMArcI308EHIZ+QBwFa
hW+mgw9CPiEPApgWWcBF3E+mEfBByCfkQQDjpQX4pgegXSEPAhh8ECDHkAcB
DD4IkGPIgwBnuSNCzKRspybUE19tc/QAtBPkQQAAyDPkQQAAyDPkQQAAyDPk
QQAAyDPkQQAAyDPkQQAAyDPkQQAAyDPkQQAAyDPkQQBz5oryppFcVbzgDKcm
30rJp16QHoBMIA8CGHzQaSsln3pBegAygTwIYLx87lLz8dCGfNMDbQl5EMDg
gwH4IOQT8iCAwQcD8EHIJ+RBAIMPBuCDkE/IgwDGSx9siZ6YRltiSfggNAHy
IIDBBxPgmx6ArCAPAhh8MAG+6QHICvIggMEHE+CbHoCsIA8CGC99EACaA3kQ
wOCDAZwvCvmEPAhg8MEAfBDyCXkQwOCDAfgg5BPyIIDBBwPwQcgn5EEA46UP
ch19qxqFvEEeBDD4YAJ80wOQFeRBAIMPJqARPeVyuaenJ0MxABlCHgQw7eKD
k5OTKysrdnhpaWl6etpRWUZ6QlZXVycmJjIUA5Ah5EEA0y4+qB/y7OysBg4P
DwuFwvHxsbu4LPSYwI4HBwe7urp6e3uHhoYy1AOQFeRByC1jEVrlg1ENci5Z
RvjWoUL9ikdHR02wam57tlE9sq2+vr7omLS1FYtFdS8nJyeqZ39/f3FxsRE9
btsEoC7kQcgtd0VolQ9GNUxMTNgfo8WhQsVAxa719XW3g5B2I4QCFC1lPVGF
acX09PTIBI+Ojjo7O09PT3d2dhwkOQsASAh5EMB4eVzUDTlOf3+/rMdNT4aS
1KUMDw9rYGNjw6bUpaUlB0lZ6QGoBXkQwLSRDw4MDDjYjSXbjbC/v688eHx8
XCqV5ufn9VYG7SApKz0AtSAPAph28UF5jerc2tpy1pOtpIWFhUKh0NXV1dfX
Nz4+Xi6XHSRlqAfgXMiDAMZLH3TQs7293dvb63ya6EXcT+bk5ORSR0cjktwW
BEgOeRDAtIsPXihuemTNg4ODmYsByBDyIIDBBxPgmx6ArCAPAhh8MAG+6QHI
CvIggMEHE+CbHoCsIA8CGC99EACaA3kQwOCDAS3ZCPH4pgfaEvIggMEHA/BB
yCfkQQCDDwbgg5BPyIMABh8MwAchn5AHM6dcLrvd5RhaiIc+2BI9md9PpkHw
QWgC7ZcHjwKibxcXF8fGxkZHR5eXlyuVSpJJJtgybgJUYdqNeXp6evny5fHx
8aGhIX0Wh4eHdvzJycna2trU1NTg4OD8/Hw43gQPtbnjtWxsbCRpSwsWi0VV
qNeDg4PGK2wP8MG6+KYHICvaLw8uLCzIVuywnM46yM7Ozvb2thyqVCrVnWTR
NgnrSYWqTeuDsiR5sZba3d2V/vA5a1MBW1tbGq95hoeH5Yx2kj64O4I7Ku/e
IkkI1TyFQmFpaWlvb0+vGg6XcquwbcAH6+KbHoCsaLM8qFBT9czr6C3uNzc3
9VsOb/kbM8kEt+5fXV1N3rTipNJcf39/Vaqqa6Yy4t7e3nNNR3ktND6b12RP
9q0G9DacmhB538zMTPh2dnY23FxuFZrAW/X90bqPjIxov8I5R7cWfLAuvukB
yIo2y4Pq2GNSjHJfZ2fnuV39uZOmp6eTNy2/08a0D76R3XzuFnUXDB+0LSeN
uS2/1ks1q377VsEtfNh3cvNS7LUftN1KGtaYJBXKrKOHSbWC4TFV1SBv1Zoq
Y66srGjYLUe3lgv1Qe3nhB9cVaPxkqLDUc7OmWRS2qmZ6MlQLcAF0U55UN3v
5ORkzAzqoufm5pJPUh6UP6bVoN9vqp0Kadb2LxaLMmItOzU1Ff0fMOTy5cvK
XKFDqQnNL+fSIhpQrEviht3d3dsBWsoOdHV1JalQb6OqwlCp9dUiVRn8diTa
8WpPQDtUMq9LHR0K+Pp0HGJylL6+PgcfBIDm0E55sFwuh/+snUU+oj7t3LRY
a5IqXFhYSKXB+uDZnQqlreJr2dzctJPkbvIdzWDzoCbpE6laXB+TDCs8KCo0
p2rQq82hg4ODymJ15cmz5H2KcgpxWjsNyxltfIuvUKqi9UQPrmop9fP2DB+t
xe0YBk3EB/UpDAwMaPvIuTSsbaV1VxxupHK3PAgAzaGd8qB69bW1tXMnyeVl
AecepYyZJFOoOnmmLg55UJ4SdRz7P1305FUZlmx6fX09ppLl5eXR0dG6bal7
jx7ejB4Xja9Q+Sgc1maZn5+PzqwxckB9i+QgWsr5oastJPRBZVvZ+rkBUIlY
m0s7JNGPQ/l9bm5Oa62dGb1qb0ofqObRpgj/gJYPLi0taSntdWhqWDk+COAD
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
vMpzlxI02uQW4+H5g5BP6ubBy5cvh3cFPDg4CI9qyuz6+vqUE6vulRQ9Lrq5
uan5NY+8z972UJNkjnqrduPvFuiPDzb+HF63PGhJ9RxeBbdMTo85izZCrVu9
nS3aXF+q3Igujg/WarTJLcaDD0I+qZsHNT7aiUUv0dV4uWSVD66urkZPKz08
PFQNMr5wpAb0dn19PXrWzVn88UETuECqZ/CF/4tZGnkevVCwqtv6T33k6MG/
vt7gatYlyYlDSw8f26PBUfDBWo02ucV48EHIJ9xPJiHKWZ/84temPv5k3cOS
//e5G1XLNpIHQx575vSeR547e5h09pNP3//4dXtaZhN49uSm3PDtn6iOqD/z
sSd/9zPXDq9Vr7sFH6zVaJNbjAcfhHzC/UVTIbuRG77zT6svJZA9/ef/dSyr
OnepBvNgFNmxvObRKy8+8tQL5asvZvi83bR85fpLVoZev1S5EX88Fh+s1ajz
1IvgIu4n0yD4IDQBn/Pg2NjY+Ph446/2XvdpqVXbnXfeqYEfffNbfmD0zYMj
P6aigXgBqfJgZ2dnfG133iKr7VP3tfHmUvng0NBQVuLxwQzxTQ9AVnibBwGa
CT5YF9/0AGSFt3kQoJngg3XxTQ9AVpAHAcwtH2x+iZdUS16M+Pj1SjU1Ez0Z
qgW4IMiDAMZLH4yRFzPVecFUvoMPQjtBHgQIeeXmS01+dVOYdlKSBTPXk6TR
zPUAOEAeBACAPNPeeXBqair6HKhmokanp6d7enpmZmaiN9i5XbDiR0dHL+ih
rk1A+i9fvtxqFQDgO97mwcNbWBc7OjoKh/Wqzllvw6vSNCb6NkTjJycnHWwo
bN3WaZuzz85I2LpG2vnX19ftvVWbRpV4ydBwaGdHARpTNf+5VUXvKNscrLZQ
UtW2tcNRtfbt2Y94c3NT32pt/CbpBoDbFm/z4E7A0NBQuVy2D/ldW1vr7e1V
j7e7uzswMKBXddGaqq5Ss62srMjyNjY2qupRJHTIg7Z1ZaLl5WV1s4VCYXV1
Va/qdbWhNKCpal1b78bNVyRGrauhs62boEMulUqOW8EJK16N6mOVYKnVptOr
vaGrtqH2ecI9H63FXQETExNnlWsLaFIzxWuT6pOVYHtDIWU6bfmRkRGplaF3
dnYq4ulDmZ+f19RiwMLCQpV4fUn0hdEi+CAA1MXbPGiCR13Y7k6doR0ju1Hn
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
laWlpTADlkol2aJy4s7OTu3KzscfHzSBFaZ6Gu/zj346ungjPmiCc2bqH5lc
X8zkRmrxyNzrrvtz2xsvnzxftSA+6IBvegDaFe4nkxy5W91o9uzH3m+vFIjS
oA9aXjz6wqtXtb/2H0NZs2Ja5S/+MPwn7qLRLsG1hz5yNiBryzz30ANn192C
Dzrgmx6AdoX7yaRCdiM3PJvOrvzB3df+5MMvfPnxc5fKxAdD5DUvHJZPDj6r
5jJ83m5aXqocS4CVceP46fiZ/ffBswuGJWZStlMT6omvtjl6ANoJb/Pg6urq
XdnhICDD1tOei9t+hLc2bf4WSP3Bv5aYoF13Uq0Z4qfWFRNfbTP1ALQH3uZB
AACAJuBtHgQAAGgC5EEAAMgz5EEAAMgz5EEAAMgz5EEAAMgz7Z0H5+bmCoWC
fQpGk1Gj2qqDg4ONn7rfEubn5yVe3420D8zyh6GhIfbuAKAu7Z0Hj46OJiYm
WtKTVyqVw8NDvS4vL4d3IL+NqATs7e2Nj4+3WosLUl4qlZLf1bbqivKmleSq
4gVnODX5Vko+lcv5wWe8zYMPBmiXXgplZ93d3QsLC729vZq0s7PT39+vqcPD
w+ENvbUKmnlra6uqnqmpKQcftK0Xi0VV+8QTT9jW9aqqNjY2JMNqs08clhjN
JjHn3kZVI2dmZhy2gDNWvLKw9MvLJFvyenp67Lbq6+tbW1ubnp7e3d01wfbR
sBSevemN5reVNFO8VEm8/EtBXm+1qSVemuVrWpdLHR2Li4vhBfJ61X7O7Oys
1qKqHi2ieuzDMZOADzpspeRT8UHwGZ/z4Pb2tu2crf2JpaUlOZ26StsNqqNT
2pJy9Y3HAaOjo1WVTE5OuuVB1WZvcaY0Zx8yZZ+raJszwc3G5YnSIw2aWb30
2WdLqWl1yM0PpLIw7RuY4Mkg9pOVHduNFm4iGbeEyW5s9JOtV1WiBcfGxuwj
lZvJ6empVGnnxz6pxI7s6uqSSGuO2tojIyMSL81WvHRGb92mJKi31k8TNmp7
4OidVZrwmrzPd7sVTNqpyW0o/uYzbjfhOXcqtghNwNs8GNqQifwW1DOrZ1OX
vrKyorebm5uyJHsHtr0ArU5VPW4+qK5YHa8dVlayfax8WR2sNNjW5YAKVkoc
0rB3i2glaldmZFNYM5H4gYEBeyszBTqbkQ8ODuwTk8PopM0rhZpTsvcDzq2t
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
UCgUCoWSvPx/smOmhQ==
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 23->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 24->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
oVAoFAqFEr/8f5qcbo4=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 25->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
hcN4a8st9s58kHQts7bMzc1NTk6OX6MeHVS7Gxsbw97nWpS1HFc6toBXi3Vd
wO4OHHif7NpuCxMTE+Mxqq7w8RczNTVlV2MzMzNYvebaVrves2eP3bowGOvW
VtvpCp+enrY7w4HF3tk/SIgjbBetGVZ4zXR8hTMfJMSRjvcSocEKr5mOr3D2
DxLiSMd7idBghddMx1c480FCHOl4LxEarPCa6fgKZ/8gIY50vJcIDVZ4zXR8
hTMfJMSRjvcShHQ27B8kxBHqICGNhvkgIY5QBwlpNOwfJMQR6iAhjYb5ICGO
UAcJaTTsHyTEEepgzbDCa6bjK5z5ICGOdLyXCA1WeM10fIWzf5AQRzreS4QG
K7xmOr7CmQ8S4kjHe4nQYIXXTMdXOPsHCXEEl3ANpd1HGRDx2tDXkubXwhUr
Mr6J2FW45qfQKpz5ICFeeP7yparfEA36WnL5lWSiqbTC+gytwtk/SAghpJth
PkgIIaSbYf8gIYSQbob5ICGEkG6G/YOEEEK6GckHkQyOjIzsvmnXjh078Lqz
ReAf8Vp2+cRrDbb5PaKyxqcN0GxB/1PeBmv7mHjVHG8VuzP87yp9dTyTNV+a
773sWpmWl6359Lpq45nGZB5jpjH6Ayxrs/m/UKrS3CvcxWPoKzzzrMirQ48V
7vcjXkdHR2dmZiCIa2tr64QQEiqlfFRnOLT2HkVn1KEhUV0PArOwsLCwsLCw
sLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCw
sLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCw
sLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCw
sLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCw
sLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCw
sLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsDS3/H9XgXby
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 26->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
Dg4OlArn5ubsmPX1dfu4++B1Mq9QHzQNHBh8du8vbA3O7126VHyq3kaf/srd
jaxsNc7fe2d9StYWgs/6xgcdaL0erhSCdOKWB2VzGxsb6tx2dnbUb5+cnBwd
HQ0NDRUKBfuQQ/uGFPmg/FHDMzMzwVu2o5AcH7TvP6o/lH3Zr6GR9/CePPXj
s58Nu5k9WJr08kFT58uIlQQvXzgXXBwfdCBpegA6Fbc8KNMcHx9XElxdXfUv
gNHA8vLy4uKinwHz+bxsUTlxe3u7emWVSY4PGs8FlLPqSIKPfDu4eCM+aLwD
pLVbX1uI/bWD5cjca677M1vrwTfwWvBBB5KmB6BT4Xky0ZG71YxmT3/p05fO
/aRkwQZ90PLC4Q9lMWf/S6mA8/feefTnX7GvN2oBSscXHvhCSUB+8jMf1ZZ5
5oF7y9fdgg86kDQ9AJ0Kz5OpC9mN3LA8ncmeLnzj88//+PsVl4rFB33kNc8/
9ujzP3hEzcX4vt16uXxUlAAr41LxqfCZk++DJafGgndHltfZpKnhKxKx2tbo
AegkEpsHV1ZWbo8PBwExtl7vtbidh/9o09Zvgbp/+GupdumIHd+MqTXFhCzY
Yj0AnUFi8yAAAEALSGweBAAAaAHkQQAASDPkQQAASDPkQQAASDPkQQAASDOd
nQdnZ2f7+/vtWzBajBrVVh0cHGz80v22MDc3J/H626j3hVnJYWhoiL07AKhJ
Z+fBw8PDsbGxtvTkR0dHBwcH+lxaWvKfQP4K4shjd3d3dHS03VpckPJ8Ph/9
qbYld5S3rERXFS44xqnRt1L0qdzOD0kmsXnwPg/t0kuh7Ky3t3d+fj6bzWrS
9vb2qVOnNPX06dP+A721Cpp5c3OzpJ6JiQkHH7Stz8zMqNrHH3/ctp7JZFTV
+vq6ZFht+/v7xnsCjGaTmIqPUdXIqakphy3gjBWvLCz98jKJlzyJt9uqr69v
dXV1cnJyZ2fHeNtHw1JY/tAbzW8raaV4qZJ4+ZeCvL5qU0u8NMvXtC5dXV0L
Cwv+DfL61H7O9PS01qKkHi2ieuzLMaOADzpspehT8UFIMknOg1tbW7ZztvYn
FhcX5XTqKm03qI5OaUvK1TcWPXK5XEkl4+PjbnlQtdlHnCnN2ZdM2fcqygft
mxbVroalRxo0s3rp8ndLqWmJb30glYVp38B4bwaxv6zs2G40fxPJuCVMdmOj
n2y9pBItODIyYl+p3EpOTk6kSjs/9k0ldmRPT49EWnPU1h4eHpZ4abbipTP4
6DYlQX21fhqxUdsDB5+s0oLPKH1+kx5cU67HRH7IaiyNRpyKLUILSGwe9G3I
BP4X1DOrZ1OXvry8rK8bGxuyJPsEtl0PrU5JPW4+qK5YHa8dVlyyfax8WflI
3qcW9VUOqAElDmnYvUqwErUrM7IprJVI/MDAgH2UmQTbjKzoat+Y7EcnbV4p
1JySXfCoWFvN553Gjm++2uHRno8dqX0MrZEVY11bP4p91ZfVHzwLLIvXGC0b
/eRsW5JI0jr5BMaxpOmBjiSZedAmAjmIOmoNK5FJnpxRtqI+sMQHNZv6PfWK
mqHEdDRmbGxMk+p6vqXxjqppKdu6fEQOoqpkiBqWEtu6hldXV23nbFsPurAW
lFpJtVExho0SGVm/tFnx2kRTU1PSoE9riL4PygE1QyaTKd90WnZvb08jtbiS
VyvF609R/nXsoa+SJxkyRK1UiQ8a70oYq1OfwUo2PVSVdgMitosPGnwQ0koy
86DCy+BVbMjK5/Pq9JTINKxdfYUy4x3rkxMZby1yuZxyhD3n5eNXEr0/LFnQ
BoqlpSW1bk82qYO1rastu/OgTti2Hjw/KHPxK5H4hjZHPdi9haB4yZZ4693G
S4h2wF4AI7uRxcjs7Ja0yB9nZma0lHYAWnxQV2KseOt0+q01YE+wSomv2bq5
DFE7J9oL8mNjEP0c0f+q8UGDD0JaSWYeBGgxCfTBtugJabQtloQPQgtIZh4E
aDH4oKn16iUsCToV8iCAwQcjkDQ9AHFBHgQw+GAEkqYHIC7IgwAmkT4IAK2B
PAhg8EEPrheFdEIeBDD4oAc+COmEPAhg8EEPfBDSCXkQwOCDHvggpBPyIIBJ
pA9yH327GoW0QR4EMPjgVUJupceSoFMhDwIYfDACjehRP5PJZGIUAxAj5EEA
0yk+OD4+vrS0ZIcXFxcnJycdlcWkx2dlZWVsbCxGMQAxQh4EMJ3ig/pHtm8u
Pjg46O/vLxaL7uLi0GM8Ox4cHOzp6clms+XvegZIAuRBSC1DAdrlg0ENmUym
r6/P/+pQofZmc7mc8d5l7PYfHdQjJ+3t7Q2Oqbc2mbK6l+PjY61XoVBYWFho
RA82Ck2CPAipZSlAu3zQF7C8vDw1NZXP5/0xDhXu7+8rdq2trbkdhLQbwRcw
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

         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 27->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
wA9W48IrV6Nc/ev5QE4eLUQL7vra2bg6qAa55i25NxzZW2+VDlbTqS98L4Gn
ZT7zpy9Uq11JoqwYwuMc//IZz1UdrB85L3250h07q5JseJKJ9fV1zQwODm5s
bLx+9dW4ftDBm6QATQA/WI2nzr0SLkNvf8/Pv6njlp8d+ge+N6yYfu2Pzljo
YPgtOa197+2zt3T3hty+/Pzjbxixg4OD1dXVU0VkW0wV+tL10Sz361UTapZs
b2/7C//Jl54KCSOKDkrQtTvtqoM6VnJM1r/VZMPL5XLGnHZ0dOh7nyoSNx50
EFIIfrAaT58/Dlcik37xnv9l9ChBHXzp+LVwcfnb079989vfEa6/Rgf39/eX
isi5+Dq4tbVllgi/Xomg2XJzc9NfKB0MqSKKDip7G+ugDq+q2NnZscuebHiF
QiGTyfT29koH5Q0XFhYs4kEHIYXY+cHda5SvUsuQSGAt18Eo10XVyEuM1HRo
Wm2buNdFBwYGJBwhNUoEf+qnu80V0RCRSuq6aJ06aJ7YcV8H7SRgfn5euY6O
LG/FNuI9+pmZmXw+bx0POggpJKIfPDg40Nmm/3FjY2Ntba2np6dkM22jhYlI
Yct1MESMPri09Tc/+Z///uK3f+m+b7z9PT9f7blNk+yek5neeL6aE3zzW96a
WXhUMSiFSGEiz8k8XKjajYBq/3vzX1Mwmsn+7hPVdt/l52RKtrSQAP1xRkdH
4+aKiJ0kyRJa3+PgJXpIJxH9YDab7ezsPD4+9pfoHLhcBxOk5TooqrXt8mLv
vX32Z9/3QaX35ZfCfZndexOPPne5Ymnv+ZVP/Mx7/46fPvzAkxWrlgtLpE17
8eWr1XYtGIaiqrb7Lr83UbKla1bItXgA2pUoflDyJ1WamZkJWsISHdzZ2Rkc
HBwaGuro6PAvEynj0tLSxMTE9PT01taWWSgvOTU1NTk5KUcZEpgLOigJq3Zx
MpjCLwzavUf/wlHlq7Il4ztUqzTZ9+hD9i78ILT9e/QNxbV4ANqVKH5wfX1d
cra7uytF8xdW84N9fX2+Dubzeb+TQ9PthpTU73ZD9YY0jy7oYMil0Sip/n7V
7OqV+tQcGDc64c8Lhe8+/arVg2vxALQrUfxgJpPZ3NyUDnZ1dfmXRkN00N9G
Tbr/jKJBplLVmVv5o6OjIeLrgg56xRfJrXWw/n627/raWYt6E3lCJki1twjD
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
v1f2nj1Yf2j/wc9clx767Evb61cOKvu+ZHVQyquKrpw/o6m0OEb0iXL18kt+
GAopfGN00AL6kwFoDvjB6Lz848LzX1woVcDrkyTy1cODkoyJ6KDk5vDPvirB
Lanx/CNfOHrmexJo+x2Lg5T30lN/fu5Li8EYzv7ep/dX5i8+8Sfl+25ABy2o
J56xsbFmjv4McEODH4yCVObCY6fCFTCYpJjB7HXqoKRHtZ+R1jz4GTOtmKSG
de5mTaSANfddYl0uyu2qg93d3foHmflcLhc3e82QrPP29PT4gQFAOPjBmqhV
l+eKLoImXfqLTb+EenRQNvDcw/dFrPTFx/6gnj0NQQfhha8+GDGM86eWSoyh
mzq4u7vrP45lp4PZbHZ1dVUzmo6MjFhEqKpPnz5tIpFy6f/oL7GIp1AoyAn2
9fV1dHRoOjMzU088Km1nZ8c/Sv5yM28+RpmaLMFCoucqKSHu7gBEAT9Yk4P1
h85Wd2FhrvC5p00J1jr46ovn9lfmY1WqaOvZ2WrEPRN4/osLVy+/5Gd3UweN
9vnJ4tbY9PS0/juHh4f61iyeTVWNJTEEU9zSFIC0b2NjY3l5WeZUUckVxi0k
JB4XUtzdAYgCfjCcyz98wkIB/39amTePktrpoPKe+9KihQRffOJPrPe3IrKZ
Frv/wh/9d/8CqZs66L9bYUyHRflSHH25k5OTi4uLduEFX/GQ+TJ+0IQUtzSF
MT8/b2bm5uY0k8lk4sYTDEl+cHt7u56XVhLE+jsCqAl+MAQ14/YiaC5UfuNL
nq0OXvzuNy3rfeizNR/gjM6Vcz+x3n3/lqWbOlg/komuri7r32qy4Q0NDa2v
r2tmYGBArlC/3u7u7rjx4LkgheAHQ7j45Lfr1EEl2ToLHZSQ1VPphY1Vu10u
R7bOPpKVeWMJ21UH9/f3VYV8nF32ZMPL5XLmIm1HR4emU0XixoMOQgrBD4YQ
0sK/v+9dPT/z9u5b3/Y3ev7q1n/6FyFbytZZ6ODLzz1dsbTfGvuQ6n3XO259
x4lOzVd9fHRl3m6XS5CIVyx/74G5v/Xud5645adu7XxLuBTKTnrtq4Pz8/Oq
4ujoyC57suEVCoVMJtPb2ysdlDc010jjxoMOQgrBD4YQcm/u//y3f2M06NMf
u02KECIE8lMWOljt4cyv//tPPrP0Kc18/7f/tZq75373noqbKfJXfvRDu70O
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
RCKRSCQSieRg+n/hZ0+M
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 28->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
9nA6psEHTcrBiOUEr4lxeCNbooMA+cTND0o0BwYG5ATn5uaCToY1Mzs7Oz09
vbOzY5dI/jY2NuQTV1ZWyhd2NP7ooClJYfLR2F93gk98J5y9Gh00pWdmKtc+
P5X5sIOHkbhX3Pdzywuv7l+MZEQHHfAtHoBGhf5kkiN1q2jNXli8174pEMb5
umiYS9tPS2Ke/6/RAGTTJE9u4985oFOC899+KGKQn/vip3Vkzj1y+vC+W9BB
B3yLB6BRoT+ZVEhupIaH3Znk6dy3Hnj5RxtH5qrSD0aQ1rz8zJMv/98nVF2G
4+2m5ZW9XQWw/9R3Nb28uxO/sf86GLk1FrwaebiE8Koq1ya/H5e82AyjBcgJ
3vrB2dnZu7LDIYAMa0/7LG7jEXRtWvsjkPqLfyPlpMouP461FYOJyVjjeAAa
A2/9IAAAQA3w1g8CAADUAPwgAADkGfwgAADkGfwgAADkGfwgAADkmcb2g+Pj
47bbt9pXrUp1VDs6Oqp/dL8uTExMKHj9NoL+gq45Ojs7ObsDgIo0th/c3t7u
7++vS0u+t7e3ubmp6czMTNAD+TXEXom1tbW+vr56x+KCIk/Vq23kjfKapZiQ
Ll95rTav8yc8RNUUy+v84DPe+sEHS+iUXhFubW01NzcryJaWFq1aWVmRy9Pa
kydPSmtMaWALrdXGS0tLkXIGBgYcdNDWPjo6qmJt7ZOTk5qqKJ0wKAwb28bG
6x3IKBhtpmCO7EZVC4eHhx2OgDM2eHlhxS8tCw6d7fy8tbV1bm5uaGhodXXV
lIYL0bwiPNzpjY6tLaSWwSsqBS/9sv3qKGwFr5ila9qXQqEwNTUVvCCvqc5z
RkZGtBeRcpRF5djBMZPgoQ6aWnVrk/AQVVMsOgg+47MfXF5eto2zlT8xPT2t
hWoqbTOohm52dlaRq21UI7m7u9vd3R0pRDrodl1UpdmmWG5OjbCtTmq4sLBg
R1rUR81LeeX4rHtqamqKFKKqFXztDakkT+cGpjQyiP1mJcf2oAWHSMKtwLSP
NnjJeqQQZezt7Q0G2KoZOmhSMR1/CXGgwjq2CtJ+I1plg9dU81re09MT9O5u
Sh28b29vWz1NWKltgcM9q9RgmrzNz7yjmMPxmMSdrGZSacK1yCLUAG/9YCBD
JjR2oVpmtWxq0iV/+ri4uChJsj2wrZXQ7kTKcfOD4UrllWz3mJJgNbCKwdYu
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
X84=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 29->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
H3awFol7w2N/fmPVtAb7QQctcC0egKRCfzLNI3VraM2e+/LnzZsCfqL4QY9X
Dp6QxDzzn6sDkE0r/dlXzGOZLUAad/mb91cZ5Kf/4JM6M88/fG/tsRvQQQtc
iwcgqdCfTCgkN1LD2iH5JE+XH/rSyz/6/ol7RfSDVUhrXn7y8Zd/8JiKi3G8
3bC8WioqABPG1eJh8Mbu62DVrTHv1cjaHPyrIq5t/n5c89nGGC1ASnDWDy4u
Lt4ZHxYBxFh62HuvycPr2rT1ZyD0F/9G6kmVWX4aaxsGE7Bji+MBSAbO+kEA
AIAW4KwfBAAAaAH4QQAASDP4QQAASDP4QQAASDP4QQAASDPJ9oPT09Pd3d1h
h3yKBRU6MzPT29sb/dH9tmCC12/D6y/ozNHX18fVHQA0JNl+8ODgYGRkpC01
ealU2tvbU9Hz8/PSlNYHEJFShe3t7eHh4XbHYsPW1lY+nw/bq61TXL32uvVb
8Kf0+nyMfQgErG0+HoBYcNYP3lfB9N0tOevq6lKQ2WxWqzY2Ns6fP6+1Fy5c
kNaUKx16a602Xl9fr8pndHTUQgdN6VNTU8p2f39fpRcKBU2VlS4YFIaJzYw4
rGC0mYI5sRtVLZyYmLA4A9aY4OWFFb+0zDt1pvPzXC63tLQ0Pj6+ublZrvR1
o3lFWNv5m86tyaSVwSsqBS/9kpHXR4Wt4BWzdE3H0tHRMTs7670gr6mucyYn
J2t77NEuymd5+VRG32gZ6CBAC3DZD0pBTOWsOs0skbfSQlWVphpURbewsKDI
VTcWKwwODlZlIh20axdVbqaLM7k5VcKmOKnh6uqqGWlR5WpeyquoVEVr+0wm
U5WJdFPBt96QSvJ0baAZBWy+WZ03c9K8UyThVmCSG0Wu+CXrVZlox6GhIW+A
rZah70snTVGZkUrMQp1bBWnEUatM8Jqa4BWn17t7udLBu66djJ62OPjTwLo3
mCZXeRs0KUOn1JfOiauQRWgBzvpBI0NGwrz/gmpm1WzSQcmfPq6trUmSTA9s
WxV0OFX52PlBlesNmCivZLrHlJSoglUMpnQp4FIFxbB1A38mKldiZBxrK1G5
OnVm5EcZOuORd3d3zYjJnnXSNtqyp6dHYW9XODG3hv2dxo4nvvqi5+bmzEJ9
HdI7E4xRbX0pmprTru39VzvSRy3Rvmf05my7cNCOuRYPJBI3/aBxBKroTL+U
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
JBKJRCKRSCQSieRg+n8JX2Gh
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 30->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnX1sJOd939X4zNiMSyV0Q5SGQcQsek6IVK3NgukZZVBv4tKWsn+sg7KG
BdliWjMwgbItlbBlXVQ17QouXbZwmG5gJxRCqExcWpWj2qVBq6EjxmKaNUS5
sqWaaivKVk3pXrR39J2o4+mk6ff2wQ3m9mV25tnh7HM7nw8eDGZn5nme3zO7
+3znOy/PvOPX/vEHJ3/slltuuedNmnxw4p+9d2ZmYu5Xf1If/t70PR//9emP
/cMPTP/Gx379YzN/69feoIUf+Au33PIhbX9tHgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAZTwA
AIAMUyqVCoXCnQAAABljfHx8bW3t3nvvXVpaegoAACBjPPTQQ1JD6aBm2u1K
AQAA0uY73/kOOggAAJlFltDo4MMPP9zuWAAAANIGPwgAAFkGPwhgCH+YKKm1
1iGlFi1A1sAPArQL1zQIWYRsgh8EaBeuiQ46CNkEPwjQLlwTHXQQsgl+EKBd
uCY66CBkE/wggNcmCQivsS3xoIOQQfCDAJ6TEuBaPACdCn4QwEMHATIMfhDA
QwcBMgx+EMBDBwEyDH4QAACyDH4QoF245vgcNMUAKYAfBGgXrokOOgjZBD8I
0C5cEx10ELIJfhCgXbgmOuggZBP8IIDHeDLXa0QHIYPgBwE8JyXAtXgAOhX8
IIDXcTo4Pj5eLBYTDAagg8EPAni2OtjX16d/kJnP5/OJh2Sdt7+/X4e4CQYD
0MHgByGzHAaw08FcLre2tqYZTcfGxlqM4aBCMKS4pe3u7hYKhcHBwa6uLk1n
Z2dbiceEdOgScZsDEAX8IGSWW27EooTp6en5+XmJxcmTJ/f29lqPoZV4FIC0
b2tra3l5WeZUUckVJhiPC8RtDkAU8IOQWXZ2dvT796cWJUhx9PeZnJxcWlqy
yK6OfaeCCWB9fX1jY8MPKW5pCmNhYcHMSJ29il2NG48JycQgSVW3EIyw7dO4
+wQgCvhBAGtKpVJvb++pU6fssidrcIaHhyWjmhkaGpKEHR0d9fX1xY0HzwUZ
BD8IYM3+/r4xUHbZkxWdfD6vP/LBwUFXV1e5XJ6qEDcedBAyCH4QwJrFxcU3
vuENcl522ZU3wWB2d3dHR0cHBgakg/KG5hxp3HiSDQngpgA/CODZSoD+OHa3
ifqVWq9txNzc3MzMjHU86CBkEPwggOekBNjFI0tofUx75errdhkBbmrwgwBe
B+kgAMQFPwjgoYMAGQY/COChgwAZBj8I4HFpDCDD4AcB2oVrjs9BUwyQAvhB
gHbhmuigg5BN8IMA7cI10UEHIZvgBwHahWuigw5CNsEPAnhtkoDjGE+mFdBB
yCb4QQDPSQlIPx5umoVsgh8E8NBBgAyDHwTw0EGADIMfBPDxTwwaWawrjsFV
ya6NGE94sccaD0BHgh8EqCXkSplZ1WiDVtY2jSe82DTjAegk8IMAAJBl8IMA
AJBl8IMAAJBl8IMAAJBl8IMAAJBl8IMAAJBl8IMAAJBl8IMAhuN7QN76WXVH
HucH6GzwgwAGdBAgm+AHAQzHN1BMo7VNNSik2GOKB1mEDIIfBGgXrokOOgjZ
BD8I0C6cEh3ZQ3QQsgl+EKBduCY66CBkE/wggNcmCQivMeV48IOQWfCDAJ6T
Vqgt8fAOJsgg+EEADx0EyDD4QQAPHQTIMPhBAI/zgQAZBj8I0C5cc3wOmmKA
FMAPArQL10QHHYRsgh8EaBeuiQ46CNkEPwjQLlwTHXQQsgl+EMDjOfrrNaKD
kEHwgwCekxKQfjzcNAvZBD8I4HWcDhYKhWKxmGAwAB0MfhDAs9XB3t5eHUma
+Xw+n3hI1nn7+/v9wAAgHPwggGerg7lcbm1tTTOajo2NJR5S3Cw6rJUTHBwc
7Orq0nR2djbZkAA6EvwgZJaxAFI0ixKmp6fn5+cPDg5Onjy5t7fXYgxSrqGh
If9j3KIUgErY2tpaXl6WOVVUfX19rcQzPDw8MDAw5hJxmwMQBfwgZJZ7b8Si
BCmO/j6Tk5NLS0sW2eX4ggGMj4+bP6NdPApjYWHBzEidvYpdjRtPMCSVI+m5
1yXi7hOAKOAHAawplUq9vb2nTp16/eqrFtmTvTNH9m1jY0MzMpVyhUdHR3H9
oIM3CwGkAH4QwJr9/X0Jx87Ojl32ZEUnn8/rj3xwcNDV1VUul6cqxI0HHYQM
gh8EsGZxcVHCIedllz1Z0dnd3R0dHR0YGJAOyhuac6Rx40EHIYPgBwE8WwnQ
H6eVmzeOYzyZ2dnZmZkZ63jQQcgg+EEAz0kJsItHltD6mJbxZCCb4AcBvA7S
QQCIC34QwEMHATIMfhDAQwcBMgx+EMDj0hhAhsEPArQL1xyfg6YYIAXwgwDt
wjXRQQchm+AHAdqFa6KDDkI2wQ8CtAvXRAcdhGyCHzxWyuWy9eCTkCZtkYDj
GE+mFdBByCYd7wer3sq9vr4+NTU1NDRUKBSqpP/g4ED74dSpU9ohm5ubIYVE
Z2tra3BwMFaWw8PDYrGYy+VGRkbm5+elpMG1y8vL5kVsmqmKcG5ubnh4uLZd
4ezu7k5PTyujWr22tmY9VObNjoMSkH483DQL2aSz/eD+/r40xf+4sbEhmVNL
t7e3V1ZW1M+Yl4kL9f9SEElkqVTSBv39/UEp1NGCtrcIQEcXcXVwYWFBMqcI
VakUSt+Ov2pxcXF0dHSrgoTSH0hZG/f29qqlJviBgQG/XeHo21dGlaMClVH1
2r1MtgNABwEyS2f7wZmZGdmr4JLgx4mJCQmNmZcQSD78taurq1XjJ6uoWF5J
uinX2dfXZzpYk6pMXF2Uyz8mkU4p15kzZ7yKpkuzfGeqmZ6eHi30KiIuW+eX
oG9Tmh4lyPHxcbsXyMpWK+/Jkyf141FLZaUtCnEKdBAgs3SwH5S1aTTwfrlc
lt2TU/NNn6yW2VirjKyoFzIqY5DnClrLpiiv9u38/Lys5c7OjuY1DRbYCH0X
UmejLJIbX46l1CrKq5y/NWsl3FpYW4L8XdBFNkL7R200BlCB1ap81dvr/I/a
acqo2NQoTVWXfGjT6hzH6KB/YjB49FJ3y+NYW7tx3XjCiz2+eAA6lQ72g+Z0
X+1ytdf864NNlvRoe+O57rvvPs2cOHFCO6cqY9wY5JXinheVxkn7pHH6UuQN
/ROVsqi5XE4z5vqgZEtTLazKLh0fHh6Ocl5Uym7ODKsWzci6VpXmm2WvchlR
hwp+o7Rxh51Brbo0FnKlzKxqtEEra+1qjLIq2XgAOowO9oONZEtduvyLzJ20
xpdCmUHp4OHhYaFQ0ELznvHj00FVN30j/qqlpSVzo46+FBlAxWmcmgTL6OC9
FbyKIFbpnbZUycoe5RSurJzaqKqlaNpestjd3e07O7U96H/VEP+gQkqtKnp6
ejRdXl7uMEEEgKzRwX6wqWxJRORrzDVBmZ0q+1N1XtSr+KOquzebIvmQ2kbf
XvKn7f3LbZIY+dONjQ2vcl5U0QY3lkoGDa+0TN+jtDJikDs7O2pj8NKejgF8
7VPkwbOdtVdadQQlETTm2u4mIgAAF8iUH5S6BTtzNVkOyAiB3FDwPhl17LW3
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
bGzEKiHZ5yb0PZp/8draWi6X00zwEmr0kJKKB6AR+MFGPHX2crgS9bzj50+c
OPHTw7/se8O66UNfeSGuDr585bWmT0m88865N/cNhGxmjFi5XFYvpC9XUx2Z
myr0pZuFwS9dfaZZqP7cX/gPHnwqJIYoOihBj/sVOK6D/n0yYmxsLHhHylAF
X4wSDK8p+qLluWTB/CWzs7P5fD5WIcnq4M7OjrRYgclEay/pY9MxA+uGlFQ8
AI3ADzbi6XNHTR2ZZn7h3v8crkd2OhhuQv/G9G9JgKS/Idv4JySLxeLy8rKm
5s5Gsb29bRYGLyFJBIsVguf0pIMhp3yNDoaHqs1kbztJB4PfpvaVLKG6evPx
vvvuUyHmKmGy4TVlYWFBpXXdiJbs7u5GLyTx5+jn5+cHBwcl0PLI5gaeuCWg
g5ACdn5w7zq1q5IazLPtOhjlvKi5Tqe/aogk2Z0XDalRIvjjP9kXLoJKSZ0X
DZH4KDrYYedFw1ldXY11S2QWnqM/PDyUIvvHYBYh2WUEiE5EP6gj3uCB5ebm
5vr6en9/f9Vm5sp4IlLYdh0MEaP3Frf/2sf/3d9Z+uYvfu4bPe/4+ZD7NpXs
7pOZ3jzTyAn+WNebRxcfUQxKIXfyJHWfTKMrlar9by98TTqomV/63ceb2tLo
ld6kOqgOXz/aWHdpuqaD4YPy2cWjvmJoaMg2IoA0iOgHc7mcuePLX6J/fa0O
JkjbdVA06ts/8MVn33nn3E+/671K75ophj/tvvJdy+cm6pb2jl/52E+982/6
6X33P1m3armwRAYavfDK1UZNC4Yx8L47GzXf5ecmqrZsRXfU2+sPks/nYz21
55oOhuNaPABJEcUP6q8tVZqdnQ1awiod3NnZ0VHf8PBwV1eXfz+GMhaLxYmJ
ienpaf9JK/UYU1NTk5OTcpQhgbmgg5KwRicngyn8xKD1c/ThxYanZJ+jtw5D
XrLDnqNPFnQQwAWi+MGNjQ3J2d7eXvBOuUZ+cHBw0D8knpmZUUa/Ik2lpP49
bKo3pHt0QQeb3q8SUY+sx1Wzrrfpi3GjE36/UEjqyHHVkgUdBHCBKH5wdHR0
a2tLOhgcLSqKDqpLr7o+LlOp6jSVRI6NjYVU6oIOioeeuWgtRq2Ps3331160
qDeRO2SCNHqKMDxNfr0Dx9lOFpQFwAWa+kHpnXrm6QrSJmPrvGg6ODQ0VNUB
yh5GfLbXER0Us4/WH9qlaUrkvUtxLdgnts610thGSNRiRfKhr7zQke9dShbX
dJD3D0I2aeoHV1ZW/FEgdnd3ZeLMvBkzcHt7u2oIqaAOrq+va3ttI+2TjHoV
9ZQ46qP0NHy0QHd00LyHN64Irnw3sffw3vnVqK7wk48d13t4tRMaDfVWm2Rj
eQ9vxEpTrjEcdBCySVM/qOXBTiw4MpKWSyWrdFCOL3jL3N7enkqQ8PkLNaOP
q6ur4U/4uqODXkUFJDHRRfBrz14KZm9FB73KPTNNay98ef+hZy622MymRLlk
+dlS2ZwNDoIONqo05RrDQQchmzCeTETksx557uWm1uwTW+f2LlypytuiDhqe
PnckifngH1XXKK/6pd2L5rbMFDh/+arUsPbC5Ye+8sLvPHHh+wfVbTegg40q
TbnGcNBByCaMLxoLyY3UsPaKoezY5x4//+SZy3VzJaKDBsmxdPaJ05eVpIwJ
3hcaF1Wt9ioMTTUffj4WHWxUqfXa4+A4xpNpEXQQUsBlPzg2NpbP51ufmrHu
41Jbzh0Bfvn9t/9C7v23/eKYkmb85drSn/EzxtLB7u7uRg25ox5J7aW401iR
xNLBkZGRRIJUSOhgLI5jPBkA93HWDwKkCTrYFNfiAUgKZ/0gQJqgg01xLR6A
pMAPAnjXdTD9FB6Sf6IyPFfEVXHXJhJPgtECHBP4QQDPSR30kfq4oIN28bQS
7TE9DAtQBX4QwGB63fSndhFGX9XiWrt4ji9agMTBDwIAQJbpbD+opgXfA5Um
qnRiYqKvr29ycjLWO+kcwQSfy+XK5XK7Y7Gkt7d3dXW13VEAgOs46wf3rmNU
bH9/35/XVJ2zPvpPpWlJ8KOPlo+Pj1vIkF+7KdNUZ96dEbF2LTTbqys2Y6um
RlXwCkPzvpztV9CSqu3rFhUcUTYdTGx+SFX71swHozUfa7/i9fV1/arRQQBo
irN+cGtra3t7e2hoSEqtIDWzvLwsh2JW6aPWqovWWnWVw8PDxWJRkre2tlZV
jlpn4Qe3KsgTLS0tqZs9efKkyh8cHFSvqx2lGa1V7QpMPbCC0VpVVFu7V+mQ
Z2Zm7HaCHSZ4VaqvVQErWu06Tc2Arv39/Trm8Y981Ip7KxQKhdrItQe0Ks3g
tUv1zSpgM6CQvnHt29HRUUUrQe/u7l5ZWdGXMjc3p7XmNSjz8/O1wetLURZ0
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
WMeDDkIGwQ824urFC1HuUbk7N3L7u3+u0VqVcO6hooUOmrzhVUuDnv38v2q0
9kff+u8Wra7i/OZaSABS5KY6aJxpp+rgsWIXjyxhK/9lxpOBDIIfbETT+0Pe
Pfh2ObL3/OzPNDJlJp35w8W4OtjobGQwfe5jH+y79S0vNNZK34itXufg4MBU
USqVVlZWzEK/Xv0AzJLt7W1/4fceCBs/J5IOrnw67leADhpciwegU8EPNuLo
9A+a9vD7989LjySI4YYocR384m98VBLsn5utr4OVZ+rVdknecoWgDpolWuXX
qx+AWbi5uekvfHrls63r4OtXX0UHLXAtHoBOBT/YiNcOLzXt4U1SfxVyfvLs
g0txdTD8eY0/uOcjEsFnip8Ij+pHpQ2LVlfBedE24lo8AJ3KsfrBoaGhcrn+
wMtNabsOhojRtxbvkSM7XbmEN/pzg+/52Z+RMWy0sd19Mo3GbzFOsKkIKr2y
95RFq6u49ORjLerg+Uev/a7c10GPS2MAWcXOD95bYXl5eWRkxAxhUZebWge9
xveLyv3dnRvpu/UtSp/68O0hImh8mYUOHj7z7bqlSXalg/4wU0/8h9+sX+8D
n7FrchUhprirq8sPQ1E12qyzn5toEdfCc9AUA6SAnR/U9ubZYcmcxM4s3Nvb
m5iYGB8fl7aaJVpVKpUKhcLMzMzh4WGswFzQQUlYU9vVNElK0n+OPsFRRkNG
Fo1yP21nP0ffIq6Fhw5CNrH2g9peeTVj7rVQRyfVMw8U53I5884XLVlfX/cq
N2bEfczKBR1sfVw1o0d246q1osKN3gNowdELz1mH8fL3HjeFoIN1cS08dBCy
ibUfXFxcVJbZ2dnp6WktKRaL/glS9WPawLvxvGh3d3eswFzQQa/ZBbIm6YHP
tDjOdtyXTZhknphIELs3bpz90uccH2e7asv0JeA4nqNvBXQQsom1H/THVFT2
vb291dXVubk5s0TzZrj7DtBBL/4rh/x06ak/NyVYv3fpSvm0nQNNnNhvYFxd
cP+9S1VbuiYB6cfDnUKQTez8oGRufX1d8re9vW1Oh0rvpFzmxTG5XG6v8hYb
rVpZWdH8zMxM8JHtKLijg9fefxT5TbgBU/ZVv4RW3sN7dPoHZ74Y9jB7CiLo
mZcRRz4e0O66Kd7DW7UlOgiQTez8oERzfHxcGYvFon8DzMHBgT4uLi76HnB2
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
iRQ9/X/M13rl
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 31->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
d+S/5ubmgpl0w2uIvmh5LlmwYInMablcTlRIujq4sbEhLT537lylUtFe0seG
YwYeGlJa8QDUAz9YD+lgdPdu0i/e95+NHqWrg9Hi8rcmfu/mzrdF629wQnLh
GubORrG+vm6WLC4uBvVKAc3CsImQDkZUkU8dDF/+056UB5QGSXSkiWahMYZx
zo6m2MnLaqm0wjVuKdysaaKTtN4RPEc/PT1dLBYl0L29veYGnqQloIOQAXZ+
cOsaB1elNZhny3XwhVeuRPfwppOXGOmvqmm9bSzOi16+8npEjRLBn/rpbnNG
NEKk0jov2qQOttl50XTJw3P0e3t7UuTgGMwiJLuMAPGJ6Qd1xBs+sJRlWFlZ
6enpqdnMXBlPRQpbroMRYvSB+VN/455/9/fmvvVLD3yj812/EHHf5ofTvk9G
IvjGN79lcPYRxaAUIYWp3Cfzhc1L9W6aVe1/d+ZrCkYzv/yHj9dr/meq7t4n
U7MlOhjxEL1nG4/6Crs7dgAyI6YfLJVKHR0d4SeSdJh3UAdTpOU6KOr17fJi
775j6mff+wGl91bmo32Z9XMTh5b2rg9//Gfe/beD9MEHnzy0aolXdJ8Wk4sv
X6nXtHAYvR+8o17zXX5uomZLdDAa1+IBSIs4flDyJ1WanJwMW8IaHdzY2NBR
X39/f6FQCO7HUMaFhQWVPzExsb6+bhbq+HB8fHxsbEyOMiIwF3RQElbv5GQ4
RZ8YtH6Ovl6B4fc71Nsm3efooxsYkdrvOfp0QQcBXCCOH5RgSc62trbCdwjU
84PFYjGwjZVKJXiY11wil5IG97Cp3oju0QUdbHi/SsPUzLhqDz55uArHUZ+G
L8aNT/T9QhGpLcdVSxd0EMAF4vhBSZLcnHSwq6sr0Lg4Oqguveb6uEylqtNU
Ejk0NBRdqU17DqOZ65Unn7nUjBtqcpztu7/2Y4t6P/ed9MfZtgjjnkfacJzt
dEFZAFygoR+U3qlnnpiYkHJJm7R9sLyhDvb19dV0gPPz86urq3ECc0QHxeSj
5+10MJX3LiW1YEf03qWxr59NFMkdX/3x+XZ871K6uKaDvH8Q8klDP3jixIlg
FIjNzc3gISmJXW9v77pPePuwDq6srGh7bSDtk5J6vnpKHPVRehr9rLE7Omje
w5tUBE98L8338Mas9He//Xwqt8ccRDvht74R93hANpb38MasNOMao0EHIZ80
9INaHu7EwiMj7ezsSCVrdHBhYSF8W+nW1pZKWFtbCxZqRjq4tLQU/YSvOzro
+SogiYkvgl979sVw9mZ00PPvmWlY+/CXtk8+c6nJZjak3o1D4fTZx3bM2eAw
6GC9SjOuMRp0EPIJ48nERD7rkedeamjNPrF+Yevi5Zq8Teqg4ekL+5KYg0/z
yat+YfOSuS0zA1545YrU8OCFy5Evn/mDJy4ebLsBHaxXacY1RoMOQj5hfNFE
SG6khvd+s/ZRAsnTA4+/8NT5Vw7NlYoOGiTH0ponzr6iJGVM8b7QpKjqJ89d
DUPTH+xejj4fiw7Wq9R67VFwFOPJNAk6CBngsh8cGhoql8vNT+OP/x/mYDm3
33572Uczv/Krt/1i6Vff80tDSpq5/RraMpgJMibSwY6OjnoNuf0w0tpLSaeJ
IkmkgwMDA6kEqZDQwUQcxXgyAO7jrB8EyBJ0sCGuxQOQFs76QYAsQQcb4lo8
AGmBHwTwrulg9ik6pOBEZXSumKuSrk0lnhSjBTgi8IMAnpM6GCD1cUEH7eJp
JtojehgWoAb8IIDB9LrZT+0ijL+qybV28RxdtACpgx8EAIA8095+UE0Lvwcq
S1Tp6Ohod3f32NhYeICdGwUTfKlU2tnZaXUslnR1dS0tLbU6CgBwHWf94NY1
jIptb28H85qqc9bH4Kk0LQl/DNDykZERCxkKajdlmurMuzNi1q6FZnt1xWZs
1cyoCV5haD6Qs20fLanZ/tCiwiPKZoOJLQipZt+a+XC05uPBr3hlZUW/anQQ
ABrirB80I3j39fVJqRWkZhYXF80bLsxyTdVFa626yv7+/vn5eUne8vJyTTlq
nYUfNLXLE83NzambLRaLCwsLmqrXVRWaMbUrMPXACka1q6KDtXt+h1ypVOx2
gh0meFWqr1UBK1rtOk3NgK7ahzrmCY581Ir7fIaHhw9Grj2gVVkGr12q4BWw
GVBInlR7fnBwUNFK0Ds6Ok6cOKEvZWpqSmsnfKanpw8Gry9FWdBBAGiIs37Q
852U6e7UGZolkht1zuonZ2ZmPH8ALnWJUp/x8fE1n4OjsUkc7c6LqkM2A9FM
Tk6at00Zi6EDhqB2RaiF2sDUrl66phDJkDrk7E/MBsEH32y1WjU7M/B3AwMD
Cqy3t9cErzhrCtFC7Vg1MNvYrxpYBaOphFv71izs7OzUEqm559tzfdFmMxO8
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
SYTkRl7voDszKvDyc08fmisVHQyQ1qiil//3ky//cDPF9+0m5dXdHYWx98x3
FMblnbPRG7uvgzWXxoJHIw+WEF6V7trohsQsNpt4ANoJZ/3gwsLCfelhEUCK
tSe9F7f9CIY2zX4PJP7ir6ferSNm+VGsbRhMRMaM4wFoD5z1gwAAABngrB8E
AADIAPwgAADkGfwgAADkGfwgAADkGfwgAADkmfb2g5OTk8ViMekrn1JBlWqv
9vX1NX/rfkuYmppS8PptBOMF3XD09/dzdAcADWlvP7i9vT08PNySnnx3d3dr
a0vT+fl5aUr2ATTJrs/GxoZ2YKtjsaFarSYd1fboHpC3flbdtcf5AdoSZ/3g
wz5m7G7JWVdX1/T0dE9Pj1aZwb219vjx48GA3mqCNl5dXa0px87RmNonJiZU
7OnTp03tmqqo5eVlhaG1shubm5uePwKMNlMwhw6jqoVjY2MWe8AaE7y8sOKX
lilshdfd3W32VW9v7+Li4ujoqIlW+0fzivDgoDfa3hSSZfCKSsFLv2Tk9VG7
WsErZuma2lIoFGZmZoIH5DWVTCvCg8EriyknftXoIEA+cdkPrq2tmf5NfZpZ
Mjs7q4XqKk03qI5ubm5OkatvVCe5s7NTKpVqChkZGbHzgyrNDHEmN2deMmXe
q2iq8/zBxqWJUl7FYGrv7OysKURVqyfP3pBKwnRs4F17Y7Ln64vZacEuknAr
MMmNIlf8OoqoKUQZh4aGdBySaeg++sYVlVoRqLD2rYI04qhVg4ODCl4xmz2v
OMNDt8kJ6mNSHTQc0UAxh66Ko0EZxBNsgCxCPnHWDxoZMpf25ALMQvXM6tnU
pc/Pz+vjysqKJMmMwFb1kazXlGOng6o3EDV5JVlCz9dldbCKwdQuBZSxOnHi
hGKoXqOmEImRcWFZYuo1Q5nJ0BmPLOs6Pj7uhQY7NdtoKqVT5PX0ruF4p6kT
iK++aB35mIUdHR2K1gRjVFtKp6mJXNPwVWBJvBYqr+MXZ10THXQQ8ombflB9
mo78pSBGwuTIFJ6U0XTdNTqozdTvqVc0DiJcjpYMDw9rVaLxLT3fjyiXalck
0hFJoYrSVPM1Omg6Z1N7WIWVsb+/X6Eat9X8PomPpF+xmeC1i8LBeyEdNIcZ
3d3dB3ed8uoASQuVXc4ry+D1U5R+aY+Zr15u2nzjalSNDnq+lJs4NQ0Xsuqj
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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 32->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnX9sNHl936+gM5ypIZjGqlNkFVd9qKXUKrhy6khYBQcnnOM/lqgu4kQ4
p8URlrptl8StQ6VrAEvUqamIFUc4kRXrapWa66UHGGROMXcGnNTofMnBEfYq
zkee4ud8zz1+nuV5zvf4uee56fv2i4e5/TE7893x7vfZeb301Wo8OzPfz8x6
57Xv2dmZt/3Gv33/1GvuuOOOj71eD++f/A/vzuUmZ3/tZ/THv8h+7KO/mf3I
v35f9rc+8psfyf2z33itRr7vb91xxwc0/SvDAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu4wEA
AKSY3d3dTCZzDwAAQMqYmJhYX1+/7777FhcXnwQAAEgZDz74oGwoD2qg2akU
AACg0XznO9/BgwAAkFoUCY0HH3rooWbXAgAA0GjIgwAAkGbIgwCG8B8TJfWs
dUkNqxYgbZAHAZqFaw5Ci5BOyIMAzcI16eBBSCfkQYBm4Zp08CCkE/IgQLNw
TTp4ENIJeRDAa5ICwntsSj14EFIIeRDAc1IBrtUD0KqQBwE8PAiQYsiDAB4e
BEgx5EEADw8CpBjyIAAApBnyIECzcC3xORiKARoAeRCgWbgmHTwI6YQ8CNAs
XJMOHoR0Qh4EaBauSQcPQjohDwJ4XE/mtEc8CCmEPAjgOakA1+oBaFXIgwBe
y3lwYmJiaWkpwWIAWhjyIIBn68Guri69g8zw+Ph44iVZz9vd3a2PuAkWA9DC
kAchtRwHsPPgyMjI+vq6BvQ4OjpaZw2FIsGS4i4tn89nMpne3t62tjY9zszM
1FOPKenYJeKuDkAUyIOQWu54NRZLyGazc3NzksW5c+f29/frr6GeelSA3Le9
vb2ysqJwqqoUVxOsxwXirg5AFMiDkFr29vb0/+8/WixheXlZb5+pqanFxUWL
2bVjD9awsbGxubnp/xl3aSpjfn7eDMjOXjGuxq0nWJKUqt3CXpHghmriY9xt
AhAF8iCANbu7u52dnYODg3azJxtwBgYGpFEN9PX1bW1tnZycxM2DZC5IJ+RB
AGsODw9NgLKbPVnpjI+P641cKBTa2tr0OF0kbj14EFIIeRDAmoWFhTtf+1ol
L7vZNW+CxeTz+aGhoZ6eHnlQ2VC1WdSTbEkAtwXkQQDPVgF649idJup3av1s
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
ouLw8HDF+4nbeVC9lI9XUM2+Gv8pda2OlLn0osiG5SE0xIOaxdweXR70v/qs
SUUP6mNAsGutiP+hQlOqwo6ODj0qNbeYEAEgbbRwHqypLZlCuSb4rZ8kOD4+
Xu2rQNkq7u1Eq3mwGtKfpveVJMVIN/JUcJpybWkurUhwGgm0zuOiqjx4tLP8
m1b950iCJlzbnUQEAOACqcqDSoLBnblWub293R9zeHgoCUp2JTt8n8nJyVin
ynjF80WlifK5zNeFQcx4CWVsbCw4pYJeiWXKtSU7y4P+QrTwzs7OkvNklpeX
q52lU9GDwQ8DGpiYmPCfKplSATaW6wEAnKKF82B5fJPIZBnFwJ2dHUmhv79/
bm7OPKXkNTQ0NDg4qKd2TykRomaPW4MWK9UuLCxIUhsbG35GW1tbk92Cj/70
corMotdF1laRSnbmwKNk9J0iS0tL0pbq1PD58+fNjJrF/G5CSJ0lx3W1KPOV
aPBLz4oL9M/k8XWsbaj/kOC6y4lTU1PmPBltJU1Z7XwkAAD3aeE8KLOXfEem
Pb+Mo324+R29nvUjj/kteUkLfvOlEGS3t5dfJA71qC6ibGR1OjMzIyMPDAyo
R99cGl9eYclXeOZ39BooSaD6c3p6WgUEx8uh1RaoyVSA3KdK9HFCXeufxHer
zChB61mtlHrULNUSNACA+7RwHjQ7/+jTh5/LJwu4cIW0ZE+oq7Y0fTqqeKYQ
AEDr0cJ50CtGpETkFVeptzvLy8st8JNAAIAotHAeNES5hEtNzFXO6l/O7ULJ
GaoAAC1Ma+dBgOgkdY2UWFdQiV5Sw6oFSBstnwcBIlLPpVfsrqBS00FndKGY
as+iRUgn5EGAZuGadPAgpBPyIECzcE06eBDSCXkQoFm4Jh08COmEPAjgcf/B
0x7xIKQQ8iCA56QCmlIP9zyCFEIeBPDwIECKIQ8CeHgQIMWQBwE8PAiQYpzN
g0NDQ5MJEbx3XnTCl/mhD99797/89ZFf+5Ba5oO/Hj5xrBvZd3R0JLXi7uDf
zikKIyMjSfUbSyV8NQaQTpzNg/JgUouKtRMO54Ubtx5+5oWPbz+f+dODsf/1
I/Oods+XL3z2sctPXrxeca5YHjx37lzIs9pX/7Bw47FnX9y98OITz12/eHwz
3gokh7p+/PC6ytDjj66+FD5xrJcgwX9FxyOVa+U5GIoBGoDLeTCpRSXlwc39
a/d8+dkSA5rmj/xP37j4g8s3SmZMxIOS7Ge+fTTxxQvB7vSY3Xpu7XsFCdp+
xeLw45NbK08Upr52WLLi2jL6JCBHV5wLD1bEtfLwIKQT8mAUZJnf/dYl33q/
+uBBSSsR4lefvhacvU4PXjq+qd5LzFvS4/v/98EX8lfrXM2arH63EF6GHn9v
96hcyniwIq6VhwchnZAHa6K9uuKP2c+XG7CiEDXx5/7yir+Eejz41NGJH0JD
CjCdSpf1rGkIN26+/LFHnotShpo2V8mRUjxYEdfKw4OQTsiDNdH+P3znX02F
Dz/zglmCtQd/WLihoBeldz+XfXz7+XpWthofffgw4hYw6z7xxQuXAt9duu9B
rifj4UFIK+TBcB76v1fNjj2iBIM6kMJ+fPLKEUI7D2ree758IWIO9Zum/8PH
r4R3EZdP/fkli08CSoX+GZh40IJ66slkMktLSxYzctIspBDyYAgv3LgVV0MV
D1TaeXD1u4VY9gn2++y1GidwRufJi9ctPgaY7eYnYjxoQT31dHd36yNugsUA
tDDkwRDWvmdjohIrvRLr4nvw0vFNuxxqOk3wi8Ls1nPWZSgRm3NmWtWDXV1d
vm7Gx8fjzl6zpLiz5PN5JcHe3t672u7UYy6XS7YkgJaEPBhCSBi8q6vndW/5
u2p3vvEt71p4uNpkGq9YZ+HBR88fV1xmz3vvee3r36De9fhz78pUO3lVArJb
5RIk8WpdaMVf03bXnW94U3gyferoxHPVg4sB7Dw4MjKyvr6uAT2Ojo5aVBis
YXp6WuYKlhRrUfv7+z09Pdvb2ysrK5JyoVBQKqynntnZWf3rLi0tLTpD3NUB
iAJ5sBo3br4cEgbvXv+heeoduaX2n/sHIZnx33/9ooUHNVfFpY2uftd0rUep
8H2ff7raYclv/b9ji7Uu4Qv5q9U8+Mv/Pf/elSdCPGgm+73dI89VDw68Gouv
xrLZrN47Mo5eNWnIosJgAUqXEpn/Z9xFTU1Nzc/Pm4G5uTkNDA8P11OPEmVn
Z+eAS8RdHYAokAercfn6zShHRLt/cVwZLWTKe7/6bFwPaoccfijSCFqJTDKq
NkHwhxvWfOrPL4UUICmHe1Bt4osXPFc9WD9KXnpx5R27qJJsedLE5uamBvr6
+pQKT05OJNa49bj2JSlAAyAPViP8/BBZ4I1v+/nXtN31swO/5GfDiu0DX7oQ
y4Paib1w41a4XNTd2++ZvaurJ6Tfz3z7lSB2dHS0vr6uF1ePx8c/SYh60c3I
4IuuXeh6kd3dXX/kv3rgyZAyonhQ21Bab1UPalspMVn/ryZb3vj4uAmnbW1t
et2ni8StBw9CCiEPVkMerPmDcbVfuO9/hvsorgeVB2t68J9kf18CCvev8eDh
4eHyKdpDmi52dnbMGMUZv18Z0Izc2tryR8qDIV1E8aBmb2EPavOqi729PbvZ
ky0vn8/rXdPT0yMPKhsuLCxY1IMHIYXY5cH9U8qf0p4hkcKa7sHL12/WTDrm
ezrtOvRYbbK4x0WVByWOEK1Igq/7ma6QHk1beaJgsdYlmF8O1uNBc8aO+x60
U8D8/Lzm8oN2XM7id/Szs7PWp4niQUgnEfPg0dGRPm36fyoybGxslJ+Npmk0
MhEVNt2DITJ699LOP/7of/3ni98c/uzX3/i2n6923qZpdufJZLeeq5YEX9N2
17sWHlYNaiFn8jx6PpnzZKodHFbvKuO1r3+DBkb+6LFqq+/yeTIlU1ooQG+c
sbGxuHNFxE5Jw8PD1t9x8CN6SCcR8+DIyEh7e/vJyYk/Rp+BLc7Kjk7TPSiq
7dvf9/mn337P7M++491q78gthf/G0Pp3ExWX9rZf/cib3/5P/fbelScqdq0U
lsg+rdrvJtSCZaiqaqvv8u8mSqZ0LQq5Vg9AqxIlD0p/stLMzEwwEpZ4cG9v
r7+/f2BgoK2tzT9MpBmXl5e1/Gw2u7OzY0YqS05PT09NTSlRhhTmggelsGoH
J4Mt/MCg9e/oqy0wSr/J/o7eeiO0/O/ozxTX6gFoVaLkQQlLOtvf35+cnPRH
VsuDvb29vgdzuZxm9DvyigdO/ctuqN+Q3aMLHqx5vkrNVud11ew6lX1q3hg3
Ok9evB7eXbXr3nBdtTpxrR6AViVKHpSSlObkwY6ODv/QaIgH/Wm0S/fPUTQo
VKo7PUqRY2NjIfJ1wYPiwaeuWkuw/uts3/vVZy36TeSXg0Gq/YowvH304dvp
Ott8NQaQWmrmQflOe2ZpK5vNyk3+1RSjeLCvr69kB7i0tGR+6lsTRzwoZh6t
fGmXmq3++y794PIr912K3uPZ3Xdp6muHsdb9ni8/e/G2uu9SU3CtPAdDMUAD
qJkHV1dX/R8iKRKOjIyYYclOylNO3N7eDk4fPC66sbGh0KcJ5D5p1CvaU3LU
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
YnB2PGiBa/UAtCp2eVDSnJiY0IwrKyv+RYYLhYI5OuofC83lcvl8fnZ2dnt7
u/rCKuOOB73Tu7FHl+C1J74VnL0eD4qbV6/U7v3+T1997M/qXM2aSO411/3y
1ro5GhwED1rgWj0ArQrXk4mO7FYzml3aWDF3WAhSpwcN1w+evvL1B8oPij7/
0OcKf/EV/5u4s0aOu/LNL5YHZG2Zy498oXzdDXjQAtfqAWhVuJ5MLKQb2fDS
V1ZLfCQLXPnGQ9Vu8ZCIB33kGnX04g+e0GOC54XG5aUrF/0ybhwdhk/svgdL
vhoL/jqyfJln9Gz4ikRcbGPqAWglnM2Dy8vL9yWHRQEJ9h73XNzWw7+0aeO3
QOwX/tVUO3XEjD+LZ2sWEzJjg+sBaA2czYMAAAANwNk8CAAA0ADIgwAAkGbI
gwAAkGbIgwAAkGbIgwAAkGZaOw/OzMz09vbGveVTIqhTbdX+/v76T91vCrOz
sype/xv+9YJuOwYGBvh0BwA1ae08eHBwkMlkmrInLxQK+/v7elxcXJRTGl9A
nRSKmNtHNrsWG1R5LpdbW4txH8az+4G89W/VXfs5P0BL4mwefKiIuXa3dNbZ
2Tk3N9fd3a2ntre3z507p2eHhob8C3prFTTx5uZmyXLsEo3pPZvNarHnz583
vetRi9IHBpVhajN3HFYxmkzFVLyMqkZOTU1ZbAE7Xr75kine3BJLLlPZKq+r
q8tsq56enpWVlcnJyZ2dHa+4fTSsCssveqPp/ftqNQxVpeLlLwV5/alNreJV
s7ymdWlra5ufn/d/IK9HaVoVlhevWbQcc3PMiOBBgHTich7c2toy+zft08yY
hYUFmU67SrMb1I5OaUuVm4t7i5GRkZKFTExM2OVBLc1c4kxpztxkSt3Jhuvr
6+ZOi+pXw6pHNWgXrek7OjpKFqKutSdvfCCVwvTZwCveGcS8stKx2Wj+JpK4
VZh0o8pVv7ReshDNODY2ps8hDS29eEhZr7iqMncqMSO1bVWkkaOeGh4eVvGq
2Wz50dHRw8OfXttNSVCfnYxP4/Z+RheKqfhUFAc1oB5/ArQI6cTZPGg0ZL7a
UwowI7Vn1p5Nu/SlpSX9ubGxISWZK7DtFpHWS5Zj50H160tNWclcHlNe1g5W
7jO9y4ArRVTD7iklC5GMTAprJOrXvwOyAp3JyPl8fnp62gtc7FSbV1tGU6rs
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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 33->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
JLKH/i1Ce3NQsiWntri4qHn/oVBlGRsbU/AqQjNlj5VqD7aJ83dlPHWzT+9I
H7VKeYNP8vhyrDqU6QseuzRxZmbGPiej49KWtZ5HgvqggwAu0MF+UA112T0y
tfxSHP9l+eB76HVWWWSC4rX20hcJh3Yr7QhzsiGpWlhYGPFQibu7u8G19vlM
7U3blN2Y89+jr3w7Q8cy6xE8KEle5TUx/56gSpf2qRR7R1KF+toqZVRZWjs4
OKjilIX3JuKBDgK4QAf7QbX5kp6k9iYVSE8PaTrSSC+JQDzQQQAX6GA/aLzb
bYmIl/VTje/ntLC6upoe0be0RQLQQQAX6GA/aAnf2WYdtra2YncxehrJ5/NR
nwg67TgoAeggQGvobD8IEBIHJQAdBGgNHe8HAcLgoASggwCtAT8IYJyUAHQQ
oDXgBwHcBB0EaA34QYB2wfOiAC6AHwRoF+gggAvgBwHaBToI4AL4QYB20V4d
XFhYKOsqEB2EdIIfBDCnoT+Z4eFhG2Rvb282m/W7WI8NOghgccEPbm9vLzRM
yLJ2d3dbU5aaqcYL6mBC9l+qX2YjpSwuLtqBiU/EQQmo1EHbOdL+/v7o6GiM
0U/KWEAHATxc8IOt7NK5cbmvHI+pKsERjqCSkZGRMJv19fU1WFBPT0+YzRyU
gFo6KFZWVvwKPD4+ltz39/fLJ0oc7aCZWjg5OaklOvyJiQl/aBKdB0pDu7u7
tXBmZmbh3pM6BysBoAW44AdbqYONy/3y8nKYzcrGS4IyQuqgWvIGC2qqDuqP
Yy2VfhXSl8jBnRRS8KOvgwcHByrLHxlZIjg2NnZ4eCgF1MK5uTlzdxyxUqmk
hdI7fzTJoaEha5Dz+fzZs2fxgwAmfX6w8cNs0A8++vT139h69r6Hv/3WPzpQ
mvrsJX387JNXG4yqFp/euzr/yLMq5S0P3inuvocvve8LlwuXbjSjrNKLtz/6
lednP//M2/74TnHZz1x6x+e+fe7/PPfUlSpddodUjabqYC5APAmQvqyursp5
SVDi9UwejGF2dlb7CYYU3FJnDmfuonl/xGRV0fb2tp3X2Velg5YZlAE03nBa
qg0/zkwmU1UH/QCksGoc9PfMOUOMGgY4EfxgVELqYKUffPI7x+/MPyOBqJqk
UF+7/GKDsQX5wl8fWT2qmqRW149vJ1jcA7tXJHy1ipPWl23vgh8cuZd4O1eE
IW9BnhiDdtXf3+9/rOUHC4WCNrMDY8nuabPBAH6NScXk/iSLAwMD2kbypx+/
duLvUM6x6nVRPwDtTQc44hKx6xmgDvjBqIS8LlrmB6VKsmO1ZMJPsm8NhmeR
Kp1YluKRNCdSnGTuxOLkSW/efsnP4oIfbBB9xdq55EZ6Ye/KRSXq86L+/UE5
I18UFEPloGDaUhvYZ0rlHK0OSjqD9Tk1NcV1UQCDH4xODD8ouTlRJvz0lWde
aDDCR755PXxxjbvC3M53QpYlw+jnCnlu77IOSmsmJyeNdywLoZ9YDhJVBy9c
uGDnJbuqmXw+bzzf5z8JI8nb2NgwnlBmMhm7sWLTrqxSS7LX19eNd7GU+4MA
FvxgVGLcH7zv4ZoXDOuLRQyKN26FL0vpHZ/7diPFRZJ4pQ/+2XM2Ywf4wZmZ
GXtxQH+irq4ue6EyErH9oPEe0RkbGzPeIzGaHxgY6O7ulszZkEqlksRRAq2p
/l++DtrnRYUUfHp6Gh0EMPjB6ES9Lvro0+XubOL3vv7DP/X6l/3AD/7oa3/+
59afqhSLj37l+djh/bcvlbuzn/kv+R/6ydHv7/2xVy18rKo27RXj35e0T+AE
0+j7P63ivrent5YU2oyu+UH336NvAeggpBP8YFSi+sE6984kGS9/9c9VLv/F
P4np0W7efqlyb/9seePNf/i0Znr+4T+VJlZu8OuPxOyZpKr3fMMDj2v6fT/U
V+uoH37ymnHPDzooAeggQGvAD0Ylkg5eP75dVQveePEJSZJE8JVTi3VMU1S+
dfVmnWuSsp/SxMrl9z0cU3Z3nrlRq6w6OmivxOIHTwQdBGgN+MGoRLoueni9
+t06maaffs8DP/xTr39t7tGqG8hqGe9xiAMP/3HEw8NDu8Qv6OAumt9/vubd
Oslu94//Y2sMy5J/R7JYLNpd+a+YBXceXGIfRPyjJ67G0EEru/jBE0EHAVoD
fjAqkfzgpWv1DJrSy37gB6suV0bjvSmmr2ZxcVEzdrerq6u2z8xSqWSX3H8X
U/upFdlAieCb/uAvq671dfDixYu2OF/4dLB2ia+M9qM9Gfjk10qxdRA/eCLo
IEBriOEHtz38HgstshJ+yxyVDtbBqtdFX5d79LUfeuT1Hyn85C++X5awqljE
i63qddHXnPvM97/8Fa87vz3+3//vGy9+o3KDqc/GfEK1cKnKddE3XnxCBX1v
T6+mVZ8CstdFXfODDoIOArSGkH7Qdvtv53d3d3d2dmw3hj7yKf7LTVE5XToY
tX/Ryj5kfvbDf/Zjb/g3UsBXTi1WVYrYN+yqyq5K+XvDP2PT6Ps/XbnBr/zP
mM/JVHW7P/2eB/ziXlftqu/vPHbFuOcH2wLPiwK4QEg/qLP3wcFB/+LY0dGR
r4OHh4fr6+uS0aBD1G7lGX2HaD/W6oDxdOlg1OdFH/pGzZtotdIHvliMHd5/
/N/FqMU9+vT1eGXdvP1SmE5yypJ9cx8/aNBBADcI4wcPDg5WVlakVn7bHtRB
zWv5moddMjMzo3kJn12iLbVzWchaFqCzdbD04u06HW9WJilLI328PHUl2ovt
b/vjhl7br3w7sn6a+1/f9Z74QYMOArhBGD+4uLi4sLCg9t/vfSKog5aNjQ1/
UBjtMLiqr6/PDoo6MDBQdf+nSwdj9C8aqaOzB3avNBjhh78ctqOztzTcjZss
4fwjJ3cuWmYGDX7QAx0EcIEwflBNllr1/f19NUr22qZ0sGw4bF8Htcof7Mxe
F/UvqKbzuqjldx47uePrtwS6HWsEadP7vnA5THGJdOstw1tnHI1gCnZc45of
pD8Zgw5CWjnRD0r+5AftvDydfxNwcnJydnbW/ygd9J+T0bzconJZZdzZ2bF+
sNbwNGnQQfHwk9fq30375NdiPnBblY9+5fn6qpTgKIRyefXvS9738KWyUQhd
84MOSgA6CNAaeH8wKvHGXbIcXr8leaq8XZjb+Y59YTBZ9p8/lsEsE19J0gO7
V5IdfNCy88yNdz9a7kNlFXUCEBxxyYIfPBF0EKA10J9MVBocj94ic/TVZ1/4
yjMvaKZSI5JFkqdSVNbXLr9YdWj4ZCm9ePvJ79wpbq/4Yh1xxw+eCDoI0Brw
g1FJRAfBcT94JkDVLZuxtv7GLSNMdQF0Ei74wYODg82GCVnW4eFhI6VsbW2F
LOvo6Kjxg+pgQo7Wt7293WBB+spC/jaC1NGF+qrRyNr6G7eMGNUFcKpxwQ8C
AAC0Cxf8IAAAQLvADwIAQJrBDwIAQJrBDwIAQJo57X6wVCr5Y7U3lePj45JH
C8pqJTquRsaOdBn7lbU7CgBwHRf8oNqrfY/DwzuDERx4HHtI47Tc755U82q0
g8Hncjm/9+8w2B36+7FlGU9PhV+WnQ8q7Pnz5/P5/MzMzPr6ekLHnSQ2YKGZ
YEUdevjjy2uhf4wWfe+FQkHHtb293Z7Q66LI7XGZe7+UsuPyv8cgIyMjLney
DQCO4IgfVMu8ubm5uLh44cKF5eVlO4rTzs5OJpPRKjtQxeDgoJrB6enp4Em+
lvgDBIcvS6J28eJFO5iUipO06aO0QHuempoyXm8n2nPlu96SwtXV1YYPtylI
IFSBu7u72WxWojY5OWmra91jY2NDH3XOsLe3Nzw8HMyo34DqUNN2RV4Hey7U
399vfwY6OvulaKqfx9LSkqb6HvWz0Q842CGD5vVtooMAcCIu+EHjnc+r9TZe
991W5iYmJh7zMN4LxWoMe3t71fpJoYLOxbbtkcra2tqy0qmy7BIpoHTQlqUm
VzNDQ0OjHsGMKssG6Sb6BqXRqqjx8XHjHaY+SgePPCT3+pZtBYqgJZQySkA3
Q/dF0GL0S1D8+lXYjtylfQrefhE6Ri3UBva4ZmdnbRZtoHn9Trq7u+1FhhNx
86X1OlvW308ja8PXUvi1TYoHIBFc8INq5eT7rPxJodS4WXVTbDr/18KX/a3v
UcsmP1gsFtWsBdtwbTA3Nxf+FqEEV/Jn96CMKsLaCjkmXwe1VnVir6AGC1J7
27LbkVFReHYkLAU/NjamipJLUk3qQOxtMumgLKGUUfO2Vv2M2lirQvYX12J0
FJIz6wrtOZI9ewnqoJU8rQpeGrVXU6WDIW8R6jem1KSjqFNoi0usT1sqoT6u
xQMdiQt+UDGocVPLpjDU4kkKrbT5N4Zso6d5haq1vg7KyNiMai1DlpXP5yc9
1H7a0YS1Q82oIbVlyRvazaampoLSkMvlsh7+8FJOoRqwxyVbZyvKXr9V2PZO
qz3PWVtb03EFrx9qMy0JOYhG69GB2OMy3nheCtVeDbABS8StjdUvR1sWCoXK
7CELQgcNOghpxQU/CNB20EGDDkJaccEPArQddNCgg5BW8IMAxkkdbEs8dQpt
iyShg9AC8IMABh28S51RoZEk6FTwgwAGHQyBa/EAJAV+EMCggyFwLR6ApMAP
Ahh0MASuxQOQFPhBAOOkDgJAa8APAhh00IP3JiCd4AcBDDrogQ5COsEPAhh0
0AMdhHTigh88f/78UcOELEuHWX8/pVLpWulKnQ1UV02qB9uJ92nEH7kjcXp7
exuMLeTQS+igQQchrbjgB4PdPjebqnJ/89qV5z73wLd/9/1l6fKD529eKZZt
3LwuqeuMjPDSrZsvXvqrq19+9OqXtm785W5wxI2mcvPq89ceL1z9801NK6vC
p6k62OAeuru7w2zmoA7Sn0y7CoW04YgfbFlZZXJ/+4WjqgoYTM/+YU6b+Vma
Nz5RpQ5K/o6f/dYzv//BqoFd39tpkiDeqZbNP6gs8ZJq46HVYG1YXNbB0+sH
6U8GoDWkzQ8GD1M28PCTK/VF0CYp0fHlSzZXy3RQGvfcn5yg0Uq3blxPNgz5
zRMLlT0MZnFZB/GDSdFIPLu7u41/lQBNIm1+0D9MmZoyEXzm4+cqk11up/bC
YGuui5aFVxaJP7WpzhXLqFz90latM4GyJTKMfi6XdTBVfjCbzfr/ppWVFTs0
c1I0Uj+rq6vN+5EANEhq/WDx4bWgpjxz4QNVUkBr7AXSl27dbIEfVCk2vJoy
7cUWDK/yWmUMgk7wuzUTkL9KKbz22BdtRpd1sI4f3N/fPzg4sMM9t0sH/Rg0
1Z9RvslfEiMe/ZHn5uaMd2gDAwPFYuQTpGA8e3t7Ozs7jcRjvJGgh4eH9S30
9fWNjIw0Eo8dKRsgcdLmB60O3njq6/dITFURDKihrzhq+c+dO9ek2HwdvPHU
4zXlr4ZSSzcbLP3Wjetlul+muZX6qxl7VdZlHazjB632BVODZUWlMoAGg9G/
eGJiQjOaxvtHJxuSRFnNy9HRUX9/vyQ1xrWU9n5BkBLS6QcvP7R6Tzt/N33m
3b+09u/+labl4uhtpoWHn1xpth+Us/Odlx/e0x/7zYff964Lv/qvP/+fZsti
S+pGoSS+0iB/9UMLn/qNd6jcWicGz33+E8ZtHazvB8U3v/nN9vpBPwwphf6P
fkgxdigHJ9t18eLFeN+IrQQ/JO2tUCj48WgaaW/KomAkgrJyZ8+ePT4+3tra
ihGSXz9RAwAISQr94K3Sd2o5wfv/5YR08L7XvepdE6+p6g2V5f3/4d83KTar
g354QZmWNCukj/zbX3jNK/+BplUt4ZU//WwjpZfdjrQH+1tvf/N7sm/o/Tt/
u1ZtHH7ivxq3dfD03h+Mh3R/YGBA0hMvngRD2tjYGB0d1cz6+vrY2JjxblnG
CCmpeABqkUI/aK86Vr3MqOVPfPi9ckDDr/iRWi2/tLJJsVkdtE+q1LplKT/4
1lcPV3Vnz37qQ7GLvnntSpkDDV4gfXlPd51LsjefO3RZB0/v86LxGBoaiiE3
lmQrQfZWX9/h4eH8/Pzi4qI+Dg4OxggpqXgAapFCP3jtq1+sdU9QIviWV/0j
Nftf/+13t0sH7bsStW5Wyg/KG1a/ifn7H7T7Ob5L1Y/Vlzz7rSoXiu8qXXUd
vFshR0982WUdTJUfLBQK2mc+n48dT7IhLS0tyZzqVKS/vz+Tyezu7sYIKcF4
AKqSQj947ctfqP9szNMf+82qVwKtKDRbBy8/tForsH/xmn+yMv3Pa0bu6aDO
ujMeFy5csLtVW2SX+LecstmsXWI/6oz9l9/+C3XqpKYOekJ57fGCyzp4ev1g
jHg2Nzf7+vrqdEx0YjyJ9yejYLq6uhoJKV5GgPCk0Q8+Xqja5j/5kffa5V/9
0IL+fbWa/fdk39Ck2L7rBz//iaoS/NZXD9cTwQsfsLfq4mFvSkbWQS/deOpx
l3Xw9PrBzuhPRtI8PDzcQEQATSeGH8zn81NTU4uLi7Wuctgnt8PTYh184a+f
rHr37Qv/eW7kJ/qHfvTvD7/iRzRf6zLgb739zU2Kzerg0Tf+orLc//Erb1Mr
pMAU3n2ve1VVzbr8YPxqvP3CUdV9SnlVoorWVKcHVbe5deO6yzqYKj/YVFyL
ByApYvhByZZyHRwcjI+PV93AcR2882JCDY07+V3CCx9o6ngTmt66XqofQNWH
Xb9d0ddZVIoPr0UtVMk+nOOyDuIHk8K1eACSIoYflGxJBNVo294hNJPJZHK5
XDabtS358PCw3OLCwkJIgWv9+4N3rj3W6kOmbpLnasF79ColamBSqAZLv2OT
6xRRo7qufunOG2Eu6yB+MClciwcgKWL4wdXV1aWlpZWVFfm+4+PjtbU1+3ps
oVCYn583AT8oQTwKMTJg63Xw5nOHMURQSWLRAh08vnwpqkxf/fPNxgOIqr/+
HUmXdfD0+kEAaA0x/KB00L6lu7OzIxGUE9ROjNel/MzMjAno4NDQUJiBgdrS
v6iEI8xV0GCyfae0ZryJa499MXxgjbw5GOS7T8uElOCPn9PphM3osg6eXj/Y
ehzsu8y1eKAjiXd/UGqSz+dHRkaKxeLh4aF8nz5K/uyT+Wq7tM3i4qIUM+QO
4x9ARHwdfOnWzapPZtZK8kq2L+sW+EHLlT/9bEhTpmNJKoY7VjScCMoa+7lc
1kH8YHjQQUgnMfygLN6RR9mS4MeyJfVp1/iDko/nH/lUGPtz+aH/L+itHIe3
6rOjwaT4Ew/j1o3rMpj1q6VseAuXdRA/GB50ENJJCt8fLFvy4qW/qtfmf/zc
0RNfDm7fmvEHg9y5RloW4cfPPf/oQ4mMtVSLm88dVt4ulD6quio3dlkHT68f
bNf4F3XWtjKYNhYKacOR/mSKHoeHhyGnlYQsS4dZNfsz+3vf+GTu67/9bqUn
PvzeO9Pf/eClr/9F5ZZNfW+iamzu01QdtEXU//brcHr9YOvjqfMSvUGSoHNx
wQ8CtB108ERciwcgKVzwgwBtBx08EdfiAUgK/CCAQQdD4Fo8AEmBHwQwTdbB
vr6+nZ2dqoWG3IMNz0911sbOGOnwG9ltM+IBaAT8IIC5VwcPDw9nZ2clXmfP
nh0cHNS/I/xLQFXRrmxfE5WFRtqP7ZWi6tMsdmGtB13qZDxxbbx4GonWLg/T
BQdAIuAHAUxAB0ul0tDQ0Pj4eKFQ0Pze3t7c3JztOTA2jftBAGgep9oPFotF
v3fTZrO/v7+6uqpa6rDTVLXPuVzuNH77JyJbF/7VVF8Hl5eX+/v7qxpAaeLE
xERPT49M4sWLF+3CqamphYUF6abMo6YqdGZmRvPDw8P+wGTSwZWVFeVS3unp
af8nhA4CuIALfvDg4OB+D9u2SG7UfKkh0nK10mqXbHemmi4tLeXz+WDGjY0N
27l3SNSU2bI2NzdVhApScWqXVA9acu7cuaL3KuL29rbKCl7LktqqWVNrFrKz
uBaj4O1x2SGxVGmqGS2XwOmbtfWpj1ro16dF20viJYVuXhBQtPa4jNeRu74U
Ky7r6+v6tegsyHgX0PzfTDCv1ayQBfk6qFwygFW3kU9cXFxUcfp5dHd3Kx7j
6aC1eyp9bGxMGqrYtI3E0e9oVwttJ4RidHTUfwUVHQRwAUf8oB23Qi2bGjpF
ohbGNulqdszdLkHUkuhkWy12sBlXGx5JBy3KooZLO5d8SFi1TxUtjbt147od
REMbVH09XEG6qRcv3bqpdjibzapybEevOjodo77cbQ81zpoqftWhjImf0bbY
OtJgrbqD7aBPX72m1m1ZcZHi6Bh1OPoGFb9+MPYMx88oU6YsMXRQZVXtOk+V
Ke3zrZz2b+XS+kG7UD8kOxiZ8f5Z0kc7rxnVv53XqYhf/+gggAu44AeN579s
Y+IPYqjm7jEP4zUXatN0Im1P+21v3ha13lF1UI3nhQsXTKA3MLVp0kFblk7d
rf6uegQzSjGb15lM4yhme0vLjo8sgVD8+nKtlPjGqvK4pPhqpa23chApiw5B
QdpvzYqUfifGM+laqJ+KPSj/N2ylc3Z29uzZs/pphSnlRD8o/ZIf9D+qPu3v
RzqoMyi7UDH4Pyrpsq/C+lFZ82i8YVkUlV9olJoAgKbggh+UlqlZU9ul5k5n
1GqQ1eaobVFs9iKYmoubt19SY6K2Rc2af/nLXqGanp6WTQhZls7q1crZs3p7
1GpIrRX1dfD2C3daUUUVvAarkCSXkuBi6D7cWokkQI2wrZlMJmPHwFJ1BXXQ
LtRxBSVPh2+dlFUZ15CsqM5tz+36UjQvJ2ju6qC0Xl+cFXetCkpeySPo4OpT
dn+wMlcdP+jroCpWlW/nVat+l274QQCXccEPSsUe8rDtmE7y1b5ZC2C9oY1N
8xImrfUft9YGalW0turDeFVRa2nLkiioiC0PzUgdbFlW+7SZ9uyfwxuvGVQu
LfQffnAKG55Q5DoQxWll3daMDlDNsvHMiFYFq0ublS1xCvv92h+A/VL8sS+N
98uxH/XL8VeVZQ9ZUNnzonKFKiL4vKjqUMv1T6m8P1jVDyraoA6Ojo7azlG5
PwjgGi74QYC2U/b+oOyexKurq8tqnz1HCj4v6tvnkH4w+Lyof0HjRB1s0gvy
rX99vknxACSCC34QoO042K+aQQcBWgJ+EMC4qoOmsa5XTuzRpWyDkJXQYDcy
kaJFFqEF4AcBjMM62DIkQA7aMdfigY4EPwhg0EEPdBDSCX4QwKCD+EFIMfhB
AOOkDrYlnjqFtkWS0EFoAfhBAIMOhhh3CUmCTgU/CGDQwRC4Fg9AUuAHAQw6
GALX4gFICvwggHFSBwGgNeAHAQw66MHzopBO8IMABh30QAchneAHAQw66IEO
QjrBDwIYdNADHYR0gh8EME7qIO/Rt6tQSBv4QQCDDt6lztv0SBJ0KvhBAIMO
hqCReNTO9Pb2JhgMQILgBwFMp+jg5ORkLpez8ysrK9PT0zEjSygen9XVVcWW
YDAACYIfBDCdooP6I8/NzWlmf39/YGCgWCzGDy6JeIwnx8PDw93d3X19fSMj
IwnGA5AU+EFILSMB2qWDwRh6e3v7+/v9jzF2qLPZ8fFxzUxMTMT7RwfjGRwc
7OnpCS6JujeJspqXo6MjHdfOzs7y8nIj8SCj0CTwg5BacgHapYPBGGZnZ+fn
5/2PMXa4t7cn23Xx4sV4FyFtJfgBLC4uqnEIRhhpb/KkUvbj4+ODg4OzZ89q
ZmtrK0ZIsQMACAl+EMA4eV00Ht3d3QMDA5KeePEkGJJOrcfGxjSzvr5uZ1ZW
VmKElFQ8ALXADwKYDtLBoaGhGHJjSbYSdnZ2enp6isWiTK6spT4ODg7GCCmp
eABqgR8EMJ2ig4VCQfvM5/Ox40k2pKWlJZlTWdT+/v5MJrO7uxsjpATjAagK
fhDAOKmDMeKRAkpxYj8m2oz+ZI6Ojrq6ukqlUuyQ4mUECA9+EMB0ig42TuL9
yWxubg4PDzcQEUDTwQ8CGHQwBK7FA5AU+EEAgw6GwLV4AJICPwhg0MEQuBYP
QFLgBwGMkzoIAK0BPwhg0EEPxuGFdIIfBDDooAc6COkEPwhg0EEPdBDSCX4Q
wKCDHuggpBP8IIBxUgfbEk/i/ck0CDoILQA/CGDQwbsk3p8MgPvgBwEMOhgC
1+IBSAr8IIBBB0PgWjwASYEfBDB3dbD1qX5ItcKrE3z944q0NpF4EowWoEng
BwEs9taYnR4fH7dsPmqENm+d4CupX1yd3dan/m5PPMZaJcaOByAe+EEAAEgz
+EEAAEgz+EEAAEgz+EEAAEgz+EEAAEgz+EEAAEgz+EEAAEgz+EEAAEgz+EEA
S1J9pETqQSV8SC2LFiBt4AcBgjTSR0qdtVX7ewmjQfU7V6m/NmSPLv4GyCKk
E/wgQLtwSnSkhuggpBP8IEC7cE100EFIJ/hBgHbhlOjgByG14AcBDOMP3i0R
HYQUgh8EME5KQIvjiToIFEDHgB8EMOggQIrBDwIYdBAgxeAHAQw6CJBi8IMA
hrtjACkGPwjQLlxzfA6aYoAWgB8EaBeuiQ46COkEPwjQLlwTHXQQ0gl+EKBd
uCY66CCkE/wggKE/mbslooOQQvCDAMZJCWgknsnJyfPnz0fNxUOzkE7wgwCm
43Swt7dXf+0EgwHoYPCDACauDgblJpPJJB5S1Cy7u7tyggMDA11dXZouLCwk
GxJAR4IfhNSyFEB/gRhXBcfHx9fX1zWj6cTERIwYVK4fQzabnZ6e9uOJuqv9
/X1p39bW1tramkS5VCpJpmPHo5nZ2VntJ1hFicxUUraq1scYdQIQBvwgpBYp
17iHnYmxh7m5ObXPUpzBwUHJUNTscnzBAKRiQ0NDflRR9zYzM7O8vGxnFJVm
xsbGosZjQ7IxjIyM9PX12fmq01ofa2UJUnVtnbyxvyOAE8EPAsRmdXV1ampK
upPL5WJkT/aOpGQrn89rRmIqV3j7haOoftDBm6QALQA/CBCbQqHQ09MzOjoa
L3uyopPJZPRHljnt6urSdNYjajzoIKQQ/CBAbA4ODiQcOzs78bInKzp7e3tj
Y2P9/f3SQXlDe400ajzoIKQQ/CCAiSsBKysrynV0dBS70Nhra7G4uDg/Px87
HnQQUgh+EMDElQD9ceI9JhqGeJIkS9jIf5lX6SGF4AcBjJNWyLV4ADoV/CCA
QQcBUgx+EMCggwApBj8IYOHWGEA6wQ8CtAvXHJ+DphigBeAHAdqFa6KDDkI6
wQ8CtAvXRAcdhHSCHwRoF66JDjoI6QQ/CGDaJAHN6E+mEdBBSCf4QQDjpAS0
JR4emoUUgh8EMOggQIrBDwIYdBAgxeAHAUyFDtqPVcUxuKrBtfUvQtaKp/5u
E4wWICXgBwF8fGFqjQ7GiwcdBEgW/CBAGVZ9jo+PE19rl0d9FiW4z6p566xq
JFqAlIAfBACANIMfBACANIMfBACANIMfBACANGN1MJfLZbPZeQAAgJQxPT09
Ozt7fHy8CQAAkEqKxWLZa0QkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFI
JBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJ
RCKRSCQSiUQikUgkEolEIpFIJBKJRCKRHEz/D6nfH6U=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 34->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
mUU/CBhyEMgw+kEAQJbRDwK94lrH52BTDHQB/SDQK66FDjmIbKIfBHrFtdAh
B5FN9INAr7gWOuQgsol+EDAcT+bGjOQgMsiFfnBvb6+YWMi5KpVKd+Y6Pj5O
PlEfC3n8Uv1lJpzIfjHxmRyMgCT1LCwscIRYICQX+sFu/sMm38yWX9XUrOHL
c9FgamoqzNVGRkYSTjQ0NBTman2Wg7rfMnUkQCAJF/rB9fX1rs1FDjpieno6
zNWGh4cTTnSuOajy/LjJ5XJRb35mSVFvUqlU5ufnx8bGBgYGdMr3QgJh0A9G
lTAHP39U/9e7D9+6/eA/+kRVY/HTD+jHT3/jSsKq2vmvB1eW/vhYs7zhnuvT
3br9wPu+8PD+A0+ex1yXn7724fseK/z3h970B9enW/jUA2/7owdX/uf3vnXS
4pDdIfvBc83BtYB4OTg7O2u/41KnWo5RXrCGQqGg5AqWFGlVh4eHyr7d3d2N
jQ2F8snJSYx7L1hPsVjM5/NrLom6OUAY9INRxc7Bbzx6+o6dhxQQLYcS6quP
PJ2wtqAvfOcJm0ctxy9/9jjdL8+9u3Ki4Gs3nbK+4fou9INTzxVj5Yot/e/U
arXx8fGjo6MYawgWoI0dHR2NXY8ya3V11S7Yv9IY0RysRxule2/KJVE3BwiD
fjCqeDmoVFI71i4m/KH2LWF5llLpzLl+8eNVRXMq0ynmzpxOPWnwq35D7tO6
9rxoPOq89O9jm6YYN0/3FUndpTs7O1qYnJy8dOnS6elp1HvPwRdJgS6gH4wq
Rg4qbs6MCX/c99BTCSu899v18NPVT68lnG6t/GjIudQw+rdyoR9Mbn9/X+sP
uS3N0g2dXC6nf+STk5OBgQG1qAVP1HrIQWQQ/WBUMXLw1u0HwwdTMCxiqD35
TPi5NN72Rw8mmS5SxGv85p9+z96wP/rB4+NjBUe5XI5383RDR39yMzMzo6Oj
ykHdvfY50qj1kIPIIPrBqKLm4Be+80RDFtzyu3/+o6947Q++8MU/9qo3zm19
qzksPnzfY7HL+49/1tidvfLOnZe8fPpHhken/tVvt8ymg1r81yXtO3CCY/r9
92i6H3rRcLsotDd0rR+MFwHKGt3q9DTm08vn8Tn6YrEY+22i5CCyiX4wqqg5
2OG1s+kPfPxl0/+g+fy3/7eYPdrVa882r+3vr/6hXXjRT9+sTGy+wrvvPY43
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
F9dl2gr7sEd3u35xKlWn5sZjGJuD+j3qOroo+NTooUc5GP4lwoSfNI9x6ZkZ
dH4f5G9XD7GIDHKhH1QN2rlpz2a/mElRqD2b9nvaj9kksjs9/ahSdamfg2pk
5j3aW4acS1lgb6L9p6awXwilBRu+xusj7NU0aTAa1tbWbJH+10s5RfeA3S61
dfaOss/fquxTj32co5ZqcXGx4flDnaOU7FnpHWlD7HYZ7/u8VKqNRVuw/nL0
i9PW6S9Hv7j9/f3mm3e/5vBcCx1yENnkQj8IZJNroUMOIptc6AeBbHItdMhB
ZBP9IGB6FAGdZ+xJPeQgMoh+EDBORoBr9QD9in4QMOQgkGH0g4AhB4EMox8E
DDkIZBj9IAAgy+gHgV5xreNzsCkGuoB+EOgV10KHHEQ20Q8CveJa6JCDyCYX
+sG1tbV6YiHnUtwnnMgeBPVMBwcHyTeqj9mvTzrT8PBwwolc/uol10KHHEQ2
udAPdvMb/ZJvZshDUisHE07U3xq+06od5WDCiULmIMeTMeQgssqRfrBrcyXP
wZDfT9QuB5995uoTB196+J7feujiBzQe3vr3j3/5i9eefDxhVe1ozVfK9x5/
rPT96e75rSe/WVEN5zTdM5cffewLn3joI6t2utr2XU8/+O2W04XvBxOW5HIO
duZaPUC/oh+MKnYOKg4e/dw9D/7O+21GNAxFRrrx9Ez98iOf+s/NE6kAjcv7
n0lxLnn64e/6ads8nvj6fQ3Xpx88U5J65ufnu/nwEnheox+MKl4OqlE6/uid
NoPahYXG1cceTlie9dR3DzvMYtNQXVtafWj9K/udp9NQKAdv0h/9oMqzX98s
uVwu6s3PLCn2bUdGRvzCAHRGPxhVjBxU3PhPFZ45kmeTWrOQc6mq5E3oEwdf
CjOXklc9r38rF/rBo4B4OTg7O7u1taUFnWo5RnnBGvTPWKlUgiVFXZturk5w
bGxsYGBAp8ViMUk9+hsul8tHLom6OUAY9INRxcjB7+38bthg8l4xTFKeci18
5mqotiTTqc8NP5eGOkd7Qxf6QZt9/oix8uXlZf3v1Gq18fHxeHvphhqS1HN4
eKjs293d3djYUHN6cnIS497rUI8LI+rmAGHQD0YVNQeffvDbDc+FHm3824+/
9+0bv/Lm7V+/rXrXHWFeTQtPQdMw3cEHf+33i2+7+1/+03Lp3S2z6Zn65djT
fe8zH2lYW2XtPZrud371Le06UHtDR/pBZUeSXkOJs7i4mM/n4z2W047dL0AL
ar6C/WDUtakM+2Zmf2FmZiZqPcGSVIztB4NF9nCBfhDnhH4wqqg5+Ojn7mlO
it940+uUg7/4dyfvePPrW7yU9vEPxS5PQdOQg7f/k1s01m574/Bf+ctf+nfv
ap7usd2Yv/rrz/c2re2D7/zH7/qHr9Fc7Z4dfeo7XzNu9IPJ7e3tqcKQmd4s
3QZHd+nOzo4WJiYm1BWenp5GvffouZBN9INRRcrB689StooDtYFq0z70zxfe
/Mq/3aFpiuqZK491eE7yn7325k+895dSfCa2wwuRIy8ebHeRfZXQhX4wuWq1
quBQ0xTv5umGTi6X0z/yycnJwMBArVYreKLWQw4ig+gHo4qUg8/UL7fMgj9Z
WZp7xcRPvuyl6g1bXsF/t8ypx1/t6Q0tz7n62MPt0kexq+l02iF2O6+8+ZwO
75DpkIPHHyuZfukHS6WSgiN4/0SSbujoT25mZsa+SUZ3r2qLUQ85iAyiH4wq
Wg62adDsByiUSj/7kz/e8grPXH5UN9/e3s55tGBXWywW7Tl6wG/PsT8uLCxo
+fSRarsQ/Jmf+GsK39bZdCMHtWl2bf6TuvrbsOf4u3r7o87X8pU/242dg671
g/EiQP84t9xyS/Si/v+ksS9tR38hy8vLseshB5FB9INRRcrBlq+gfe1D77M5
qGD6sZcMtfxEYbyPM7TsB88IQQXTR++MMZc8+c1KjBy0T8O61g86GAHx6lFL
yHfHAJHE6Ad3dnYWFxf1sLNSqbS8wtzcXKQa+rgfNN4bVxqC4OPvfbvawL/5
4y/T6f6dyykGU8vYXfj5v/XSF/4lTafx0Xe9tUUw/X7MxyEtY3fjV96sibQP
12nL8H30c9f30v3RD54r1+oB+lWMflDtm25VrVbbfXA4ag72ZT/oP0i4Ur63
3VOj7Tqm4OfNo3rkk+vtVttuPP7lL8abq927gDqPZ648ZugHQ3CtHqBfxegH
FVsKwZOTE/uQXgu5XE5nLiwsaFnnTE5OFj0hA66/+8GonzR/6MaLg/GceUS1
xpHskDLK0EjT2RcHDf1gCK7VA/SreP3g6upqqVRS31ev1zc2NnZ3d3X+/v6+
fYHe7xMViGHeStff/aBp3xK2HN/7zEcSVhjp8DX+AV7iiXr4mqsn3397j2v9
IIDMit0P2tuqlbNPkxpvz5/P503gedGJiYkwOdjf/aDVfNyVzu1SEteefPz4
o3d2J3NNxw9rNIzgcXJc6wd7wrWOz8GmGOiCGP2gYktpsrOzo4f0tVrt+PhY
fZ9+VBto83FkZEThWCwWQwZc3/eDxuubrn8xX8eYeOSTqT0e0HRnvlCY4lcv
XX/ut2NXeP0wMt89DN6EftCQg4AbYvSDavHqnoZz/Nav+cPXnWWhH7Sut05t
8uL0kWrCwpo9+X+/2rrr/OidqX/zr5L3yv9u/XHC2vZdzdPRDxpyEHADnx+M
Kl4/2EDN0eNf/qKCwx5s81wpoZ761p9fKd+rGZ9+8NvnPZ0i74mv33f5f322
/pX9Dl+n6Fo/2JMIOI/P0SdBDiKbHDmeTC2xkHNpMxNOpPsqzETqB5NvVB8L
3w8mnMjlHOzMtXqAfuVCPwj0HDkIZJYL/SDQc+QgkFn0g4AhB4EMox8EmtlY
bBmOwYvSvTRkPZ1X2516gH5CPwi0c/Xas+d0aZgrRL1VT+oB+gD9IAAgy57X
/WCtVrt48aI9uul5Ozw8XF9ffz7eS52Vy+W1tbX+2y45Pj7u5kdTATxPudAP
VqvV2z2bm5vG+zihdl/1el3nay+9urpqD9em05WVFf+b2e05+jHSt28fHBzY
uXZ2dk5PTzXRxsaGFnQ/XLp0SXPVvI8i7u3taS573FRLaVupVEqlUjePfhOe
irfbZb8SSxti7ygFnH6z2kx7eB+dqYsUEP4Ndf2joyNdwc0nBFSt3S7z3F/K
1taW/lr0KMh4xy/y/2aCt83lci4fTAaAI9zpB5VH2q1pR6dKFH92l14sFo13
SJCr156dmpqyj/BtLFrah0fKQeMdX0U30RRaueJDgah1aqdqw2J2dlanuoIC
cX5+vrnInt9R7SgFVLDuIm2C7hZtnbZRv9w9j4JDp6pfVxgfH/dvpY3VNXXD
4L3qFG2XfvU61XbZrTPet65rG7U5+g2q/v39fT1KCR7qJ5/P6ybkIIAzudAP
Gu+hvo087ZDtlxjOzc3d7zHeu9q0u9bO0D7s1w7Qv2GMHLzosXPZc7TPVA7a
uUZHR23+rnuCN1RihjyYTE/YONC9Z5NCDazq16bZo7/6jVXzdilclJLKlB4V
fgZ7BDb7HLjxjmunLVpYWDBeF6wztb12o/y/YfvXUigUBgYG9KfVw+IBuM+F
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
GAwGg8FgMBgMB8f/Az5ihq0=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 35->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
RovmHZfEpUKtnf5ytMr7+/uNs3e/5vC4Jh08CMnEhTwIkExckw4ehGTiQh4E
SCauSQcPQjIhDwJ4PVJA+x57Ug8ehARCHgTwnFSAa/UA9CvkQQAPDwIkGPIg
gIcHARIMeRDAw4MACYY8CAAASYY8CNArXEt8DoZigC5AHgToFa5JBw9CMiEP
AvQK16SDByGZuJAHNzY2Kh0Tsi+tZocdaVuF6ahQKHS+Un1M4z2tmjI8PNxh
Ry7fesk16eBBSCYu5MHgZZ9Pm851H/KS1IeHhx121N/U3dOqFfJghx2F9CDX
k/HwICQVR/Jg1/rqXPch70/U6ra2N65drRx+7YnPZB//xAfVfvDpjzzzja/e
uPpMh1W1Qkt++s/+WL2or+I9q+r36ncLquGUurt+XP7h/7639Kk1s3bl+++5
9vjFG9VrjVOGz4MdluSyB9vjWj0A/UrS8mDXPNiYB2UfOcIIorFJGfHq6bnL
l5687+Otunv6wS811ZM115541Ni2aat8+6G66cmDJ9JJPXNzc938twI40yQt
D3btuGhdHlRQaqUJPz2pXX8q7M3T2/Pso0etlBTsNy7zXvnmgyd2d0v0AfP2
Rx5Ueeb2zSKVSkWd/cSSrOcdGRnxCwOA9pAHo2KRB5+78nRQgkZ8Qf35wxpQ
juuwQkWz+r7Of+hHLdDpj1TYcSqsHH6tqdObqtCfy4U8eHR0VCwW9Xjx4kU7
D87MzOzs7GhAj7Ozsxbl+TXoUf+M+vjkv2JRj2ZXEhwbGxsYGNBjJpOxqOfi
bfQ3fHBwENxK/lj/xWD9sTwGFx4cNo9RVwcgDOTBqFh8P/hU7g/amKLulSd2
/ksn5VWr1XrZ+RK83YKdqrZOulPObdORMW+wR0nTzOhCHjTu85vFwldWVvS/
c3x8PD4+breXrquhk3pUgNyXz+e3trYUTlWVxdZrU48LLerqAISBPBiVqOeL
Bg9RGjUU71n93F3v/MR73n7/b6eDr7f5Ni08/iFKIyC1Rz76gc/e9Zuf/Pf/
6uA/vy/Yka9CxVXr7p760qeCfakdbvzWZzKL6q7OjH6nZkZH8qCfcewsJuMs
LCyk0+lsNmsxu3bsFwMofOn/0c9cUZemMswfpwbMp7Xp6emo9QRLMnnwogNY
bxOAMJAHoxI1D/rnxvg6KGTf/ztvfePWv3vbr/+jidW3vSnoCzPlk5/9qHV5
zzvcWlvg3f9yVi2bfsvw3/wbvgqD3V3KW26TG1efqVO8Bjbe/S/e+89er74a
E6KZ8tnvP+K5kQc7Z39/X8uX028+d91i9ngDjjZpLpfTwLlz55QKq9Vq1K1H
5oJkQh6MSqTvB7V7rItLvjiUmz76b+bfNv0Pmh60tKvtucuX6g5RBg+Q/us3
vFo5tLE76yOx5ovIRtOp/exLhlodkjXfErqQBzunVCpJHApNdrPHK51UKmUO
0g4MDJTL5aUaUevBg5BAyINRiXRc1E9MdS740w8v/9qrzv3Cy16qbNhUFuZM
zmoAs9i6p3WvXH+q1Mo+j3z0A+pOj02/wqtbVMjuzBkyTbtr5UE1o93+yIPr
6+sSRyX05YzqiFc6+pObnp4eHR2VB7V5VZtFPXgQEgh5MCqR8qAJaE0PD5pI
+Mu/8HNNPWLOGt3d3U3V0IBZbCaTmZ2d1Sv6wG9eMRPMz89ruPpksal91NEr
f/5nJN/mbrrtQa2aWZr/5ab+NvRUPfoqNBPodQ1f/nre2oOu5UE7BWiL2Z0m
6ndqPbYV+gtZWVmxrgcPQgIhD0YlkgcV6xp1oFBmPCgxNfWFXrGrrVG7xrav
fPmIkWDTEzt/8OmP2HV39buFqB70D8O6lgcdVIBdPYqE3DsGIBIWeTCXyy0s
LOhjZ6tLh0X9hHy28mDU80W1268zwufueqdi4N/7uZe95u++/Gvr741RTOYw
bJ135n/l77/0hX9d3cmGn37vOxq7e+IzNuc6ei3S7ife83b1pX24L9+6esxp
Of2RB08V1+oB6Fcs8qC0pbmKxeLMzEzTCVz2YJfzoLh88ECrk0ma/srv1m/6
vnjeurwn7/t40xTW5heFl7+et+vrRvVam6O+rdbOHPIlD56Ia/UA9CsWeVDa
kgSPj4/NR3oNpFKpbDY7Pz+vYb0yMTGRqRFScGcrD0b1oHb7Tb+Sa/Xbc98U
djz76FHTb+Vatk+t2Z3zb3jmG19ts+Qm2fP2uankwRNxrR6AfsUiD25ubsoF
6+vryn2VSmVrayufvxUo9vf3zRf0fh6UEMOcSne28qDFfZcUCcOLqcMLvHi1
y9eE7+7KNx/spC9FwuCvQtq3oOJdy4MAkFgs8qA8qDxo5tWwkqC5om+hUEin
017Ag+fOnQuect+K/s6DhpBu6vCiaga5ScsJ5dwvfarz7q5feiKkB4PXyXEt
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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 36->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
borRD6rFK1cEv21d9W/Vl6+bO139YJLfo7/63IXaj4+acfRsMWFhtV7+3p/U
nUs1JNmnaCONXv597mvnan/Vgn7QQuQg3MT3B6OK3Q8GvfyDg5e+9U0FR1WX
1ArXXrmqWV7MP3Dp2w9dearleyo+vvzS5e8WNF15/+EmH/ihHzwR36Pv1KRw
jSX7kyklFnIuraY5f7FYDH8gSNdVmImUg8lXqouF7wfN+UPeOrVObz9IDnZq
UrjGhn4QONW6ph9szrZ6gLTY0A8Cp1rX9IPN2VYPkBb6QSAh+kHgVKMfBBLq
ms+LAm6iHwQS6prvDwJuoh8EErKqH1xYWOjp6TF7tIiqdd8f1HYm3ldgeDEW
bXCq+8FSqeTv3bTVDg4OVldXT+O11Fw+n+/K9RJlQXu+mmpPP1gul/v6+mZn
Z7PZbIyLty4HdUNMTU3FuCA5iDawoR/U9uqOivX167u7XK3QI1rHayu9vLxs
ntzq79LS0tbWVvCCm5ubZufeIe3v75u5tre3NYWZ6+joSNeDjtFcpcpXEXd3
dzWX2W+qobQtFAorKyvt/NZ/eCrerJf5SSytiPkJewWcbllzfXqVH7j3r09D
51fE53I5/yfvraJqzXp5lR2560Yxv3q5sbGhe4tJH918/n0meNlMJtOGLw96
NvWDKmNyclJ3cjVfYXZxX6UVOai71sjISG9v78DAQMidJ1SVlG49QC1L+kFt
yvQQ1mZNGzpVoi2e2aSbp7Vma6YHkXmGr+22f0EdjpSDZi5dRAmrhSs+FKx6
qGqjqr/adGgzYs6gQKx9BqsirX0BWcVPT0/rKtIq6GrR2mkddePuVig49Ff1
6wxnz571L6WV1Tm1pvFeSWs1s8s+3fT6a3Zga/biPj4+rnXU6ugWVP26w5hn
OP4F5+bmTHPUhiLt+byorihz/9T1E+MJW+rfo19YWNA9UDfE4OCgeU4bo6So
FwGisqEf9Cr9l4k8/0cMtbl7tMKrPBb0UBobGzNP+4M5qA1j1Bw0gasDfsxp
m6kcNHPpAWvy18wVvKASM+TOZDrCxIHJC6/SwKr+2dlZszNYv7GqXS8lvlLS
ko6mlrbtSkPdK8ytZvZrp/uJV1lHHam7ilkpv6U10Tk/P9/T06O7VqsrtOT7
g1pT9VzmsG5QdWExZkwxB/U4NW2pHqRnzpzRjRjjLQxyEG1gQz+oh4k2a2ZP
3WrKTM9lfs7JvAhmHgtKKD3nN5t6c0GdX499pVj4XkZPSvUc1ewD3Ky1NqSa
0c9BsyUxvad6Df+C2sZqIj20S6H34dZO5sVPs16ZTEbromp1denGNS2VclBH
Khq0XsHmRYdNJ2XJO1xV9FxF17nZbbtuFB1Wp+PdyEHdQLrhVLxuQZ0UjDzd
TIpO9YPh9/cemyX9oHkgm8Naa2VQ8E2E9tej+6TZe54eZeZWW1lZSbEeIC02
9IPmbT4VoIzzKk/ytX3TA9lsyrwbPxKhw3pcB59S6gw6SZdVuoWcS1tLM5dJ
WE1kFqjjzVxm02HOZuoxNIWZy1zQNqY8MSuitTCxbq4ZXZmmidaRVVdX7TFW
MTeWuQOYG8U85zEFm72MepVWyD+p6uJtKNKGflBXhXqu4Esl2WxWz4g6VY9X
uY2UxeYVGxWje5quqBTrAdJiQz8InGo29IPq93X+np4epWHPDTqm+e+etK4e
Y2lpaWhoqLe3V38VynY+hwRs6AeBU82ez4taqFwuK5HtfDcBMOgHgYTs+f5g
Qq343sT29naMT+z4+JwM2oB+EEioa/pBfo8ebqIfBBKiH2wd2+pBV6IfBBKi
H2wd2+pBV6IfBBKy4fOiac2Y7v5kkiMH0Qb0g0BCNnx/sA1sqwdIC/0gkFDX
9IPN2VYPkBb6QSAh+kHgVKMfBBLqms+LAm6iHwQS6prPiwJuoh8EEuqafpDv
TcBN9INAQl3TD5KDcBP9IJAQ/WDr2FYPuhL9IBCb+VHjvr6+6enp4K82p4Lv
0XdqUriGfhCIZ21t7UyF+eE/GRsbC/4SbkLkYKcmhWvoB4EYVldXzQ/dVo2B
gYHDw8NUprAtAmyrB0gL/SAQlZq+uiGoofZwdnY2lVlsyx3b6gHSQj8IRKVm
0Lwc2igKU5nFttyxrR4gLfSDcNZoXP39/Y1C0IyRkZF4ix0cHPT/7fh1MjQ0
1NfXFzyms/V06jpB16MfhLNycU1MTDTPweXl5RiLnZ+fX1xc9P/t+HVy++23
a+MQPKaz9XTqOkHXox8EotKDpdH7g+ajMp0uMCa+Pwg30Q8CUR0dHZ09e7Zu
CCof19fXO11gTOQg3EQ/CMRQKBR6e3trQ3BmZqbTpcVHDsJN9INAPMViMZPJ
+CHY39+f7t7V+B59pyaFa+gHgSSuHl/L5/Pnz59PfcnkYKcmhWvoBwE72RYB
ttUDpIV+ELCTbbljWz1AWugHATvZlju21QOkhX4QAOAy+kEAgMvoBwEYfH8Q
bqIfBGCQg3AT/SAAgxyEm+gHATvxPfpOTQrX0A8CdiIHOzUpXEM/CNjJtgiw
rR4gLfSDgJ1syx3b6gHSQj8I2MnPnapfd6o9W8hTI12wDfVEqhZoHfpB4LS4
enwt3qnNLxjmDOnWk/BUIF30gwAAl9EPAgBcRj8IAHAZ/SAAwGX0gwAAl9EP
AgBcRj8IAHAZ/SAAwGX0g4Bh4W5S2lAPe24B6AeBKi3aEUrtSSEzqKU7Zgme
gViEm+gHgU6xLXTIQbiJfhDoFNtChxyEm+gHgU6xLXTIQbiJfhDwOhQBzWe0
7ffogW5FPwh4VkaAbfUA3Yp+EPDIQcBh9IOARw4CDqMfBDxyEHAY/SAAwGX0
g0Cn2NbxWdgUA21APwh0im2hQw7CTfSDQKfYFjrkINxEPwh0im2hQw7CTfSD
gMf+ZG7MSA7CQfSDgGdlBCSpZ2pqanV1NcVigC5GPwh4XZeDAwMDeminWAzQ
xegHAS9uDvb39/txk8lkUi8p6kUKhYI6waGhoZ6eHv3NZrPplgR0JfpBOGsp
QA+BGEuYmJjY2NjQAf2dnJyMsQTN69cwPT09Ozsbu56DgwNl387OztramkL5
8PBQMR27Hh2Yn5/XcoJXUZIDVdd2vANRVwcIg34QzlJyKcjMX4mxhIWFBW2f
lTjDw8OKoagXV8cXLEApdvbs2dj1KENXVlZ0YG5uTlXpwPj4eNR6giWNjo4O
DAz4//p/6x7wNTpP7TlDXjB4hqjXCRAG/SAQmzqvmZkZ5U4ul4tx8XTfkVRs
bW1t6YDCdHt7++joKGo/aOGbpEAb0A8Cse3t7fX19Y2NjcW7eLqhk8lk9EBW
c9rT06O/8xVR6yEH4SD6QSC2YrGo4Ij9ycx0Q2d/f1+JbD4ko95weXk5Rj3k
IBxEPwh4cSNgZWVFlyqXy7EnjX1qI9lsdnFxMXY95CAcRD8IeHEjQA+ceB8T
DSNeJI2Pj/NYBiKhHwQ8K1sh2+oBuhX9IOCRg4DD6AcBjxwEHEY/CABwGf0g
0Cm2dXwWNsVAG9APAp1iW+iQg3AT/SDQKbaFDjkIN9EPAp1iW+iQg3AT/SDg
dSgCWrE/mSTIQbiJfhDwrIwA2+oBuhX9IOCRg4DD6AcBjxwEHEY/CHg1OWj+
rRuOwZPSPbX2zDEW27p6gG5FPwjUsiEH4y22PfUA3YR+EKh19fhaR06Nfakm
Z4h3EuAO+kEAgMvoBwEALqMfBAC4jH4QAOAyk4O5XG56enoRAADHzM7Ozs/P
Hx0dbQMA4KRSqVT1NSIGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPB
YDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAY
DAaDwWAwGAwGg8FgMBgMBoPBYDAYFo7/DwPAYqI=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 37->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
rWd5eVk7h1WbBN0cwA/6waBC5+B3Hqu9I/+QAqLlUEJ985FnItbm9ZUfPGny
qOVQWim2YpzuowcVBV+76ZT1Dde3IQdHflSIlS8sLNx+++3lcnlwcPD4+DjE
GrwFaGMVZKHrmZuby+VyZsH8lY6Pj0epRxule2/EJkE3B/CDfjCocDmoVFI7
1i4m3KH2LWJ5hlLpxLlUj6I5+lxXrl5Tj3nidOpJvV/1a0MORqfOa2ZmRrmz
srIS4ubxviKpmMjn81oYGhra2dmp1WpB7z0LXyQFuoB+MKgQOai48ROCZtz3
0NMRK7zn+1Wfc2lUa1G7wtXCYz7nUsPo3ioZObi/v6/1j42Nhbt5vKGTzWb1
j1ypVLRa/ZyvC1oPOYgUoh8MKkQO3rr9oP9g8oZFCOWnnvU/l8bsFx6MMp0i
PtB0799/1NwwGTlYKpUUHIVCIdzN4w0d/cmNj49nMhmtVndviBaVHEQ60Q8G
FTQHv/KDJxuy4PzH/uqnXvG6H3/eC3761W+a3Ppec1h86L7HQ5f3B3/R2J2N
35F/4cvH+gYyI//+D1tm02E5/OuS5h043jH23rs03U88f6BdFJob2paD4SIg
l8vpVrVayKeXT+Nz9MvLy6HfJkoOIp3oB4MKmoO/vdv2tbOx9336xWO/0nz+
2/8kZI925eq15rW96v2fNwvP//nRX/qP+eYrvPueUrjpWvaev/zRb+jnT77w
Je22evs7TzhJyUH944R7m6gf4SJJLSHHSAQCoR8MKlAOVmtXW2bB6ze/pTbt
746+/uff9nsdmqagfnj5SofnJP/eq9/0S7nPN5//5j8O+Uxs4aGn2s3VIQfN
M7HJyMFTZVs9QFLRDwYVKAfbvVqnpukX33PnT73ida9e/XLLK+iGunm1Wi3W
acGstlQqmXPc5+KKN2j56PG2r9Ypdvt/9uW/8qnj5ovcVyTL5XLDyt3p3O0y
J3W+lj/zrcshcvDWbXLQF9vqAZKKfjCoQDlYqp7wrpUff94LWp7/wBNXnPrb
Ec0RMrVgVru+vm7OqVQq5pzbbnDav2vlVe//fP8tv/CGT3635aVuDm5ubpqV
ux+Fy+Vy5hw3GbWsc8zn1P7om5fIwdNjWz1AUoXoB/fqjo6OvGeqlXD3zEEl
OAdbPi/6mtUvv/o/3/O6/3rvy9/+XrWELcMiXG0tnxf9pxc+2/fil77mg3sT
f/i1129+u/kKM58L+bzovQ+0eF709Zvf0kQ/8fwB/Wz5LiA7nxcFkFo++0Fz
2H+zfHBwUCgUGj6apD7l4sWL4WpIcA5K8zFkXru2n/nltykBf+6t72mZFKZj
CqFl7P7cW5deNDxuxitv/+/NV/i3fxryfTJqWpvX9o9/56PudK9p9azvnfdf
f7xEDjr2dXwWNsVAF/jsB8fGxgYHB91XqWq1mpuDpVJpa2tLMeo9rpRWq57R
7RDNyXZvL092DnZ4Ea3deN//Kocu7/f/vBx0ui8fV8PNdeXqNf/HB3CH+eQ+
OeiQg4Ad/PSDxWJxZWVFaeXu2705qHDU+Rt15py5uTktK/hMh6hrauVqIdsd
HjDZOXjpmasdDrzZPJQsUY7x8r1KsA+2h36zqKEMDTTdwp/9de9JDjrkIGAH
P/3g8vLy0tKS9v/e7Gt4XnR7e9vkoEJTK/RedO7cOfOlqJlMpuX6k52DTsAD
nX30IOTLrK61v/R7oLM3Rj6Mm1rCxXtOPrhoQzPokIN1toUOOYh08tMPjo2N
aa9+dHSknZJ5blM/Z2dnvddRDprur1KpTE5OmjPN86KDg4OdD7iR+ByUO+8/
+cDXb/QcdiwKZZPPZ0djOay3Gt63/4mvA8d5D1xjWw72JAJO43gyUZCDSKcT
+8Hj42P3HTJacN8mOjU1pZbQPenmoFnWReoiTYdYKBRMP6hzWk6RhhyU7e88
0fnVtD/65qWItXl96L7HO6dSjN9CqC6vc/Leuv1Aw7cQkoMnsq0eIKn4/GBQ
Ub6H94Enriieml8uXC08Zj4wGK+jx2tqMBvCd+ZzD6g5DX1IzA4KDz3V/AVM
78g/pAcA3m9cMsjBE9lWD5BUHE8mqIjfR2+oOfq/Dz9930NPa6E5I+KlZk2z
aK5vPvLMDy/Hn7YNLj1z9TuPXZ/usPxMh3AnB09kWz1AUtEPBhVLDsLyHDQn
W4aj96J4L22+cojVnl49QFLZ0A8Wi8WdyHzOVSqVujNXtVqNPlGC+fzOvr29
vYgT7e7u+vzb8LIhB8Ottjv1AEliQz8I2KnzU9ZRLvVzhaC36kk9QALY0A8C
ANAr9IMAgDSjHwQApBn9IAAgzW72frBSqbjfgnGqarVapa4Lc3WTtivKd0fa
zPzKel0FANvZ0A8qyI7rSqXrX0ZQLBbNVziZ/ZiW3YOaalk7bfeGBwcHq6ur
i4uLIeYy6ynWmfN1jjuXmdebsGtra/l8fm5uzs7G2RQvqtx7R5XqzDaak+42
Gnr8s7+/r+3a29vrTekdHd/g/OgvpWG73N+j1+joqM0H2QZgCUv6QfNpu+Xl
5YsXL+ZyOfMtTqptcnJSO23zRRX6eXR0pD2290G+doyBctDMpVDb3Nw0Xyal
6ba2tnTSrHlmZubK1WtjY2Oaq/mLora3t9fX16Nvb+x0L2m7lpaW9NhgampK
oaafunP0y92qU+U6ubCwcHh4ODw87L2t7mdzw14V30G1Tr9682egIs0vRRmn
+NbvTj/1e9SfjTbQe0AGLeu3SQ4COJEN/aBTfzw/PT3t1A/fbWJOCVgoFFSe
U/+0r3aDAwMDY3XeziVEDu7u7pojh2suc44SUDlo5tLOVgtKCjOX94ZKRlOk
nfQb1IMHpcbExIRT30xFtn65JiIVFvotu9vlbQmVjHoEsuP7WARdls1mVb/+
Ksxh2y9cuKDizS9C26gEPH/+vLZIyeh+F5j5fkz9nfT395snGfw4vQ/Ih/6s
um0f5wcSyYZ+UHs5s69z6l9poZ2bEkfpptpMk2JyUAmlnaES07sP1xW0x/P/
EqFyU/Fn1qAbagqlrXat3hzU2mZnZ82zcN6JFM1dezkyKJWnms12jY+Pl8tl
BZ/uSZODKlsnTTOr+r2tn5Z1qX77Po8X12Uq2zzsUdnmMZJ59GJyUNmtHDSR
Z/423Bse1SkH/b9EGPGT5iEuPTGDTu+D/O3qIRaRQjb0g6pBOzft2VSGdtrq
TUy0aT9mksjs+syzfApKNwfVyEzVra6u+pwrn8+bm2j/aboGrVBzKTLMXOoN
zdVUjzcaNIUp0v16KasoL8x2KRp0v+mOMs/fquxanXmco5ZqZmam4flDnZPL
5XpWekfaELNdTv1JaZVqYtEUrBA3baz+cnTN/f395pt3veQAbAsdchDpZEM/
CKSTbaFDDiKdbOgHgXSyLXTIQaQT/SDg9CgCOs/Yk3rIQaQQ/SDgWBkBttUD
JBX9IOCQg0CK0Q8CDjkIpBj9IOCQg0CK0Q8CANKMfhDoFds6PgubYqAL6AeB
XrEtdMhBpBP9INArtoUOOYh0sqEfXFtbq0bmcy7FfcSJdF/5mejw8DD6RiXY
6Oion7txYGAg4kQ2f/WSbaFDDiKdbOgHvYd9Pm3RN9PnIamVgxEnSjb/ORhx
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
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 38->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
QqFYWP4/VZ5lZw==
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 39->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
HqCf2NAHATu1fsq6nUujXCHuUj0ZD9AHbOiDAAD0Cn0QAOAy+iAAwGX0QQCA
y857HyyXy8F3tZ+parVa9nVhW92k29XOd0fazPzKej0KALazoQ9qf2WOX1os
Fj3/YxRS9SnjdH5weFLNa6cdLJjP5zOZTHD07yjMCoP1mG2Z87XPDLZl5sMJ
u7m5mc1mFxcX7SzOZsCimfAdpVPdq+Y2mh+D22jo8c/h4aFu18HBQW+G3pJG
bm6X9/xfStEX3K7g9xg2OTlp80G2AVjCkj6oPfPe3p6Gsb29vb6+vu3T2Mwh
u80XVYyNjWk3uLCwEH6QHz78afRtKdQuX75svkxKm9vZ2dGPS0tLWvP8/Lzn
H+1Ea67/rPfu7u7W1lbbN/dMKCB0VxwdHaXTaUWbTs3dtePTyPWjHjPoChMT
E+EFdT9rweCLg61iHguNjIyYPwMN0vxSdJrL5dbW1nSq3+OlS5f0Bxw+IIN+
TfptkoMATmVDH/T8x/Nzc3Oef/huE3NKwAd9nv9pX+0Gh4aGtPdTQoWbi9m3
x9rW/v6+iU5ty5yjNqQcNNvSLlczSoopX3hBbcsM0k76DerBg1JjZmZGP+px
hX7UL7fiU9zrt2zuQAlXQiWj7pC9yMci6DL9JZi2bg7kruzT4M0vQr9Knanb
a26UHsmYRXQFzevvZHBw0DzJEMXZfUA+8WfVbfs4P9CXbOiD2sulUikTf9oh
a+dmWp4e6puSYnJQfdA8yxfeh+sKy8vL0V8iVOAG8acFdfNNrVBjCnJQ6zfx
EXybhtmQdsjmWcdO3fAO0vBU/czYpqendUepJeme1A0xlUo5aMqsbkK4+mle
5+iiiMeL6zLdCvOwR4NU9unU/PrCOWgiTxeFnxo1z6aqD0Z/ibDNT5onuPTU
DDq7D/I3Gw+xCAfZ0Ac1Bu3ctGfTMLTTVgKaaAteGDI7Pc1rqLo0SCLzHKAu
1d4y4ray2WzaZ6qT+X4ozWhHaralbmiuNj8/H46GTCYz5wu+XsoqugfM7VKt
M3eUef5Ww/b8RxrmcY5utW5XzfOHOifil2h0n26I7nOTfQprDdXEohmwQtzU
WP3l6JqHh4f1i3d9yDHYFjrkINxkQx8E3GRb6JCDcJMNfRBwk22hQw7CTfRB
wOtRBLTeYk/GQw7CQfRBwLMyAmwbD9Cv6IOARw4CDqMPAh45CDiMPgh45CDg
MPogAMBl9EGgV2xrfBaWYqAL6INAr9gWOuQg3EQfBHrFttAhB+EmG/rg5uZm
pW0Rt6W4b3NDuq+ibCifz7d/o/pY/XdaNTQ0NNTmhmz+6iXbQocchJts6IPh
wz6ftfbjPuIhqY+OjtrcUH+r+U6rZpSDbW4oYg5yPBmPHISrLOmDXdtW+3Ef
8fuJmn2t7Y3rz1SOvvrYJzOPfvT9mn7wiQ8+9fWv3HjmqTZH1YzW/OSff1Fb
0bYK96xpu898J68xnNHmTsqlH/7ve4uX182tK913z/VHr9yoXq+/ZvQ+2OaQ
bM7B1mwbD9CvXOuDXcvB+j6o9FFGmIConxQZnY2n565dffyzH2m2uScPv9Aw
nhK7/tjDJm0bTpVvPVBzffrgqdoZTzqd7ua/FXCuudYHu/a8aE0fVFFqFhNB
e9J08kTUL09v7dmHj5tFUni7nUrep79xeOrmbgV9KHn7ow9qeObrmyWVSsVd
/NQhJV52eHg4GBiA1uiDcSXog889/WQ4BE3wheMvmNeMelybI1Q1q93WpQ/8
aApt9EdR2HYrrBx9tWGmN4zCYCkb+uDx8XGhUNDplStXkuXgzMzMzs6OZnQ6
OzubYHjBGHSqf0Y9fArOSTAeLa4mODo6OjAwoNPV1dUE47lym/6Gc7lceIQ9
P417c4Ao6INxJXh98InsH7VIippzHtv5T+0Mr1qt1oZdEIK3p/BGNbZ2Nqee
22JDJnnDW1RomgVt6IMm+4IpwcpXVlb0v1Mul8fGxpLtpWvG0M54NABl3/7+
/vb2tsqpRpXg3msxHhumuDcHiII+GFfc94uGn6I00VC4Z+3T733bR9/55vt+
bzF8fotX06ILnqI0AaTpoQ+971Pv/e2P/bt/kfuP7w5vKIhC1dXEm3viC5fD
29J0tPm7n1x9qzZXk4zBRs2ClvRBtZ7gNMHKlTjz8/OLi4uZTCbB4tqxXwlR
+dL/Y9DI4q5NwzB/nJoxj9amp6fjjic8JD2WM33Q/NjzGVXCuPcJEAV9MK64
fTB4b0wQB/nMe37/ja/d/rdv+if/4FfX3vS6cF6Yaz7+qQ8lHt7znm71V3jX
P5/VlFl8w9Bf/2tBFIY3d3U/4X1y45mnaiJeM5vv+Gfv+sev1rbqG6K55rPf
f8izow+27/DwUOtXpt987iTB4p0tOLpLs9msZsbHx9UKq9Vq3HuPzgU30Qfj
ivX6oHaPNXUpCA71pg/9q7k3Tf+9hk9aJhvbc9eu1jxFGX6C9F++5uXqofWb
S/xMrHkhsj7pNP38Cy82e0rWvEpoQx9sX7FYVHCoNCVbvLOhk0qlzJO0AwMD
pVJpyRd3POQgHEQfjCvW86JBY6rJgj+9e/n1Lxv/pRe/SN2wYViYd3JWQ8xq
a36sOefkiWKz9HnoQ+/T5nTa8CW8mlVF3Jx5h0zDzTXLQU0mdvujD25sbCg4
KpEPZ1Sjs6GjP7np6emRkRHloO5ejS3BeMhBOIg+GFesPmgKWsOnB00l/LVf
GmmYI+Zdo7u7uymfZsxqV1dXZ2dndY4e8JtzzBXm5uY0X3280DB9tKGJX/w5
hW/jbLqdg7ppZm3Bi5v629CP2mIQheYKOl/z1762nzgHbeuDySJA/zjJ3iYa
bDTxpc3oL2RlZSXxeMhBOIg+GFesHFStq48DlTKTgwqmhnmhc5KNrT52TdpO
vGTYhGDDN3b+4BMfTLa5Z76Tj5uDwdOwtvVBCyMg2XhUCfnuGCCWBH0wm83O
z8/rYWezQ4fFfYR8vvpg3PeLardfkwiffu/bVAP/zsiLX/G3X/LVjXd1MJjM
07A1uTP363/3RYN/VZtTGn7iXW+p39xjn0zyXkevSdv96DvfrG1pHx6Eb814
zNty+qMPninbxgP0qwR9ULGlpQqFwszMTMMr2JyDXe6Dci33pWZvJmn4Kb9b
n+n7/KXEw3v8sx9p2MJafKLw2tf2k23rRvV6i2d9m90685QvffBUto0H6FcJ
+qBiSyFYLpfNQ3rNpFKpTCYzNzeneZ0zMTGx6osYcOerD8bNQe32G74k1+yz
50FSJPPsw8cNX5VrOl1eT/aef+Opr3+lxZobdM/b702lD57KtvEA/SpBH9za
2lIWbGxsqPdVKpXt7e39/VuF4vDw0LxAH/RBBWKUt9Kdrz6Y4HuXVAmjB1Ob
B3jx/MPXRN/c0984bGdbqoThT4W0nsIRb1sfBOCsBH1QOWgO7KBlNa8maI7o
m8/nFxcXvVAOjo+Ph99y30x/90EjYja1eVA1Q9mk9UTK3C9cbn9zJ1cfi5iD
4ePk2NYHe8K2xmdhKQa6INnrg0qTbDarh/SlUqlYLKr36UfFnzk4lfZdus7q
6qpSMuIKk9+AmLr/+mDg6pc/3TomHv/sR9ocW+DG9WcavlAYnp788y92anO3
nvs9rRU++/DzDlxGH/TIQcAOCfqgKl7FV3NO+MeaD1+3dr76YDvfR3/yRLH+
7aNm6tQ3LoU9+92/aLgtjaH9b7Wod+1r+41b5+cv1X/BE33QIwcBO/D5wbgS
98Gw649eeerrX1FwmINtnqmbz51oK9dyX3r6G4fa7llvTpFX+dYD2lzl6Ksn
Vx9rdjXb+mBPIuAsPkffDnIQbrLkeDIlX7FYjD5TI+K2dDMbLh6d7qsoG1IO
trmh/ha9D5rrN/u9n8rmHGzNtvEA/cqGPgj0HDkIOMuGPgj0HDkIOIs+CHjk
IOAw+iBQz8Riw3AMX9TZSyOOp/VquzMeoJ/QB4FmTm7cPKNLo1wh7lI9GQ/Q
B+iDAACXnes+WCqVgqObnrXj4+Otra3zeC+1lsvlNjc3++92SbFY7OZHUwGc
Uzb0wUKhcJfv8uVbh7tU3Gj3ValUdL720uvr6+ZwpjpdW1vLZrPhBXd3d2N9
+/bR0ZHZltZTrVa1IW1OM7of9vb2tK2S/1HEg4MDXcccN9VQ2ubz+Y2NjYgH
i+syDd7cLvOVWLoh5ivsFXD6zZr70/O/4F4XKSCCBXV9RXwmkwm+8t4qGq25
XZ5/IHf9AZhvvdzZ2dFfix4Fef7xi4K/mfCys7OzNh9MBoAlLOmD2pVpn6Y9
m3Z0Gon2eGaXvrq66t0+JMjk5KR24Npjm1g0tA+PlYNmW1pECauVKz60/9c6
tWmdakeqnae5ggJxbm6uZlkN0s4nkG8+d6LBa8C6c8yBXnXrdBv1yz3wKTh0
qvHrPhwbGwsW1I3VNdPpdPhetYc5ZJ9+9TqdmZkxt87zv3Vdt1E3R79BjV9/
MOYRTrDg4uKiliUHAZzKhj7o+f3LRF7wJYba3T3o8/x3tWmfNjU1ZR72m6N5
G9oxxs3BSz7NaOdvztE+UzlotjUyMmLyd8sXXlAVMuLBZHrCxIHJC88vsBr/
wsKCiZKgWNXfLiW+UtJ0KwspBHUT9FdhRmiOa2ceoug26lepPxVzo4K/YROd
S0tLFy5c0J9WDwcPwH429EFlmXZr2ndpd6dSZjqX+Ton8ySYcvDkxk0llB7z
m129WVDX115Ou/rwE32tqSItLy+bY4CbW60dqamiQQ7qUu1FNarwc7CqjYpL
RXAp8jHcukn3mHmCV8UwlUrptmi0urv0yzUHRVcOmi/G0n0VjjzdfNOkzGMD
2+ixiu5zc9h2/VI0rybo3c5BlUH94ky466Jw5JV9g4OD0Y/3DsBNNvRB7ZmV
MhqAMs7zH+Rr/2YqgOmGZmya19XC74pRJJkFlW4Rt6W95Wd8JmG1IbNCnW+2
ZbJPP2rNZjyGNqGldKZZ0DZmeGJuiG6FiXVzz+jONCVaZ+omhO+u+nOsYn6/
5g/A/FLM87dmwPoDMD8qAYOLahbv+pABnDM29EHABmf3AfmOfHa+a1OCuw44
12zog4ANyEFyEG6iDwI1zu4wMjWXtg6d8KXBgmc6Qw7CTfRBoFei52B3kINw
E30Q6BVyELABfRDoFXIQsAF9EPB6FAHkIGAD+iDgWRkB5CDQHfRBwLMyAshB
oDvog4BnZQSQg0B30AcBO5GDQHfQB4Fe4X0ygA3og0CvkIOADeiDQK+Qg4AN
6INAr5CDgA3og4Dn5OfoV1dXV1ZWarZIDsJB9EHAszICasYzMTFhBjk0NDQ3
N1csFttcPzkIGPRBwLMyAupzcGtrq1qtHh8fT01NLSwstLl+chAw6IOAZ2UE
1OfgpUuXzPzGxsbk5KSZVzIq0UZGRtQTFY7lctmcmU6ndc7g4ODs7Kyi01z5
6OhIC5ozFxcXyUHAow8CvmQRoH8cEyV33323OlrHhxT+UTm4vb2tmUKhoG3N
zc0FY5ientaZlUpFZ5rxKAd15YpP4ajUM1ceHx9fW1u7+dxJNpu9cOECOQh4
9EE4bPL5EqxB+bK1taXmpUBR9LQ5BtU31brgx2avD2rSpQo+c76WOjg4MPP5
fH54eLhmEyqDKoCayeVyFy9eDMaZSqUa5mAwgNHRUV1/0iYJ7mHgVPRBOCvz
fAnWcNGnf59kA1DohAewtLSkYAp+bNYHDw8PFXYKNc2r7ulqCiwVvbGxMZ0q
FlX3zJOl+nHEp+vomvof10qCFa74asYTHpJul3YOGZsku5+B1uiDQDIqXwod
xY0CSCmTYA2xPjcR5KDnJ3jwNKyC2GRi2KVLl9SezHtK1RxNDupq4bY4Pz/P
86KARx8EklLWpNNpz39uU2mYYA1xczB4n4xCTRG8u7vr+W/7nJmZMe+EUeSZ
MxWUqVTKXFlXMDmoeUX2zs6O5z9ZyuuDgEEfBJJZXFxcX1/3/H8iZUp9KTtV
rBxU2gZ90PPfHhNUQs2Pjo4ODg6Oj4+bIZXL5dnZWS2i04z/FKvJQXXYKZ8S
fGFhgRwEPPog4HPweDINt0gOwkH0QcCzMgLIQaA76IOAZ2UEkINAd9AHAc/K
CCAHge6gDwKelRFADgLdQR8E7EQOAt1BHwR6hfeLAjagDwK9Qg4CNqAPAr1C
DgI2oA8CvUIOAjagDwIex5O5vUVyEA6iDwKelRFADgLdQR8EPCsjgBwEuoM+
CHhWRgA5CHQHfRDw6iLA/NgwF8IXdfbS1lfu2pT0LgTOK/og0MLJjZs9ubTh
Nbs5A7iDPggAcBl9EADgMvogAMBl9EEAgMvogwAAl9EHAQAuow8CAFxGHwQA
uIw+CBhnd6CYxEdrseGwNkDfow8CNbp2DJmIGXSmR60JX4FYhJvog0Cv2BY6
5CDcRB8EesW20CEH4Sb6INArtoUOOQg30QcBr0cR0HqLfP8g0B30QcCzMgJs
Gw/Qr+iDgEcOAg6jDwIeOQg4jD4IeOQg4DD6IADAZfRBoFdsa3wWlmKgC+iD
QK/YFjrkINxEHwR6xbbQIQfhJvog0Cu2hQ45CDfRBwGP48nc3iI5CAfRBwHP
yghoZzzpdHpzc7ODgwH6GH0Q8PouB4eHh/Wv3cHBAH2MPgh4SXNwaGgoiJtU
KtXxIcVdJJ/PqwmOjo4ODAzodGVlpbNDAvoSfRDOWgvRv0CCNczMzOzs7GhG
p7OzswnWoO0GA5ibm1tYWEg8nuPjY2Xf/v7+9va2QrlcLqsVtjOepaUlrWfN
Gsl+R8Cp6INwlpJrxmdmEqxheXlZ/ztKnLGxMcVQ3MXV+MIDUIqNj48Ho4q7
NmXoxsaGZhYXF5Uanh/TccdjhmTGMDExoSQ18z0/Tfw7Ak5FHwQSU/Oan59X
7mQymQSLd/YVycnJyWw2qxmF6d7eXrVaHRoaijse214kBbqAPggkdnBwoKyZ
mpq6+dxJgsU7GzqpVMqU04GBAZ0u+eKOhxyEg+iDQGKFQkHBkcvlki3e2dA5
OjpSIps3yagbrq+vJxgPOQgH0QcBL2kEbGxsaKlqtZp4o4kvbWZ1dTXx20TJ
QbiJPgh4SSNA/zjJ3iYaRbJImp6e5n8ZiIU+CHhWViHbxgP0K/og4JGDgMPo
g4BHDgIOow8CAFxGHwR6xbbGZ2EpBrqAPgj0im2hQw7CTfRBoFdsCx1yEG6i
DwK9YlvokINwE30Q8HoUAWdxPJl2kINwE30Q8KyMANvGA/Qr+iDgkYOAw+iD
gEcOAg6jDwJeXQ6aHxuGY/iizl5af+UEqz278QD9ij4I1LMhB5OttjvjAfoJ
fRCod3LjZoKL2l+2yxtNPB6gn9AHAQAuow8CAFxGHwQAuIw+CABwmcnBTCYz
Nze3AgCAYxYWFpaWlqrV6h4AAE4qlUo1HyNiYmJiYmJiYmJiYmJiYmJiYmJi
YmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJi
YmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJi
YmKycPr/IKrxiQ==
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}], 40->
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
+Xx+YWFBw3bBJvWwr6+v7Pqhe3t71U7fXZG2jT09PZ2dnbOzs5p3cHBQzR0c
HKytrWk5astOIqdH1VbwMm3b29t1/o7+lKmreg612deKaB3V+fHx8cKtV/Xi
Tk1NaTX1fGqyiYkJfXKwS5P7bW1tacYkOn4MvSJaL9v26kXRsJ11QW+VsbEx
+1iil08DWkf/ifs0fm5ujhxsLHIQLSkNOWi0iVYgauttWzNt5dQ322Lbld20
oVNIrayseOc7FW3ew9aD2kLatRS14kclWoJSQBmnRxUTGqNYUStlF84QTemd
RjVt9BFCT5Gyz36ivr6+rtdU63hQslyikVqvrq4u71xndsp07wzqKaQnXE+7
umcfeOxFsYsc6e2hdRwdHdVrV/Z62ZNADjYWOYiWlJIcVO7YGc8Uf3Yqb0WV
+mahYzk4MjISnDFsPSiqKC1qtf20nYEaoxy0i4mrLNWjwYpJU6oeUd0UZfVO
nrqXyWR0f+3aNTu7jlZhdXVVL65GWrKrkq12wXS7VvLpdrkuejPY6mgV7Hol
1k+9dsVSda911FulbKeuJh4s0Tun2tWfg7wtfNvtgpOdxKPVZqnYwzoXdUL9
r9FDoBmlIQfVB23r1IGtEn2qn5qa0ibOn4PF0qbPNuZe5aJiUD3XvPVv66xE
0r3KB82lBFQFqmrCn4PF0u64paWlubk5b0Y1pIxWB9IZheqq+qZyTyFuw17N
6+WgXSJZVaG/btJTrYf03Pqr7PRQ6aqXRutVLJV4ikL7OGQ5qNdCOajXUS+i
Xi+bzI+LDwI4VhpyEACApJCDAACXkYMAAJeRgwAAl5GDAACXkYMAAJeRgwAA
l5GDAACXkYMAAJeRgwAAl5GDAACXpSEHl5eXO2Krs62NjY3TaWt3d9ebvr29
/dhl2jT1TBlt+lD8C699H22ZYmfPPlZPT0/MdbETxgJANWnIQbui3Omwq1rE
Uef1B5WDMRtqbQMDA/VM1tnZGbMhTrUNoDZyMKyG5OArL1+/+eIV3TSgW8wu
Heu15i4/d/PqkQZevXXzpNt6rbnDS69cv1pj1ez6gMciBwGcNHIwrDg5qGi4
/MgXLn7+voOH/r3/9txXPquHYnYsSGH03MOfLmtLtyuPfukkwvfGxacufeF+
f0PPfP4+3V763reCzVEPAkgJcjCsyDmoOAhGkj8yjh777zH75lHRd+WPvly7
uRsX9hrVnEL8uS9/xlKvWosqfv2zUA8CSAlyMKxoOfjC9kaNVPJuh197KGb3
iqUQfH7jc7Uber1S+5/fiN/czatHl9YWjm1O94XnL3pzUQ8CSAlyMKwIOXjt
B9+pJwTtFr8qrDNz7Xbj4lNx2lLmqhKsvzlv9y/1IICUIAfDCpuDr7x8vf6Y
sNu1a9cid081V6i2VMpFbkuu/a/zNfaFBm8KTZuRehBASpCDYYXNwZf+5Jtl
WfAnn/pX/+hn3tH/9rcN9r79sU/eEwyLy498IXL3Dr/2UNnSfvPD71dDf+cd
f/mudw/+8LP/rkLsfv+JyM0Fl6bmtGo/3n5H1ZKwdMwM9SCAlCAHwwqbg8/+
/q9XS4T/cd/kewZ+ukKN9oX7o/WtYu3pRe17/17fxr+dqFCjPfzpaM3dOjoM
Lu3PPvMx3Xf9xFuqrbXt+KUeBJAS5GBYoXKw2k7Rx/7TPR/5hXeqRvud6TuD
jz7z+fui9e3mi1dq7JPM/K2//ugn/mUDY/fG07vV2qqWg1q1Z3/vU0XqQQCp
QQ6GFSoHb149qvj12VMP3qtIuvef/cKn7v7limFhvzLY3t6eKdGALXZxcdHG
HB0d2Rj7c25uTsOFS/+3WjD9hzv/8V3vHgz+dPHA9xXh6uqqLW1v7/WfVOiN
YWMKhYK/OY3X8IvffTRCDlrsUg8CSAlyMKxQOXirSg56tzff8aaK2aQZNfvh
4eG3Sw4ODrzF6iXL5/NeMNmfui9WP0jmvrH3KgQvfK5yT7wcVPzZoryQPV+i
kd56+Zur8YvIGvtFLQepBwGkxEnk4MJCuEMQWzgHK+4X/d2Pfuhjo+/5rY+8
/z0DP33PP8lUDItofav4hZ0qwf63v+1zUx/U7TsPzDRyv+jFp4JLe/yT96ih
s2/+Md1//9P/JjiBfR1JPQggJSLkoGJrenpacZDNZitOUG18jQWGmj6O0z9O
5vC//U5ZECgdvvhrdz30q2P/9d6PBGs01Y+RD1wpVjqAU61YCOr2xAMfDU6g
HkZrS0VrcGmPlXLQbhVz8NoPvlOkHgSQGtFycH9/XwPj4+M2Jp/PKxm3trbs
z+HhYcXN3Nyct3vt2AWG73hEp5+D159+ssZ+0eAt5gnWNG+o5nS7eXgpcnMV
z19a+2YzUg8CSIloOThQYgdLKATtsI2FhQVLGT2kFFBW1nmNudbOwWLIsLj0
nz8Zp3uvXL8aKpXi1J7FkD/b90c89SCAlIiWg3t7ewq+1dXVXC6nee3wQt1r
UUXfftH+/v56SsKWz0EVXPWHhf8knNHceOpP628u/oUn6qxAXztS1HfuGupB
ACkRZ7/ouZLNzc3l5WX9qSVYolkZWCgUqAc9FQ8pCd6uP/1kzO6Z2te28G52
VGp8Vx49V09z/ksfUg8CSIloOdje3q7P82trazZG4aLI8/6cmJiYnZ0dHx/n
+0G/m1ePnv29T51CKpkavyXU7dnf//XGXpD32vefqNFc8Exx1IMAUoLfD4YV
83r0N1+8UnYK0Oe+8tn4+0KrUR1a9u2kIukkrvlrlIb+azDZF4IVAzcN9eCZ
1Gtra0u6C8fT596YrxGQLHIwrJg5CJOGejCXesvLy+vr60n34hi81dHs0pCD
q6urXbHV2dbm5ubptLW3txe/oRY2PDxcz9PY398fs6G+vr463xsA3JSGHAQA
ICnkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBlTZ2D6vzo6Oj09PQptLWysjI+
Pj48PLyzs3MKzZ2a5eVlrdfIyIidK6+V6F3NyWQAHCsNOagtsDowNTU1Njam
/oyV5EsmJycXFhZmZmY0mfJOA3Yqb8/e3l6oHNzd3VVbSs/5+fmtrS01pGE1
ura2NjExoZF2rlSNDLYl29vbYa8yfDpypROeZ7PZjY2NBx54QM+bVuHo6Mhe
XK2a4lt/KvJmZ2fn5ubKZl9fX9eMifS8Nj3b6n97e3uxdD0vvdZ2ta9MJqOH
NKw3j14UraBW2bvyl2h9z507Rw4COFYacrBYOim3SpKDgwMFkxUm+lN9sy1b
W1ubJuju7ta2TuP9mzvloKVk/dSKMkILtKTQgBarHFTs6tHe3l4tU5tc5XLZ
OU80sbqn2RuwwidA3Vb3tDpDQ0P6U7mmldKLq24fHh4uLS0pODSBVrajo0OT
2Vyv3rqpZFSAprYeVCWuN6dWwT6B2MttP8Pf3NxUgmt4skQvqDeXfYYhBwEc
KyU5qI2YelIsbb7sKk5WEtpOSMvBimek1NY7VD1ogauNqjVxVKLIU2RYB5S2
Sjpte8tmtBC0vqWQumfx5z1RqoaUEXo+NcauDqkotKwPUpkc9uPE6dCLopgu
llbQyli9WMXSxyTd6xPR6uqq94J6NPF8iQpJe1kBoJo05OD29rbSR5/qtaFT
rmlA5Ym2zOqbl4PF0mlINd7Cy2bUo9rma946z/lZLJ3Drb+/X00o6TR7tkTp
psjwcrBYymWN959AWGmrUjGTydiO07RRV9U3rVcul9O6qPOWgP4ctD/L1kvD
GmPFeIL9r0YF3XBJ8Y0XxdLQSj+trF5QvVVsmuB7mHoQwLHSkIMAACSFHAQA
uIwcBAC4jBwEALiMHAQAuIwcBAC4jBwEALiMHAQAuIwcBAC4jBwEALiMHAQA
uIwcBAC4jBwEALiMHAQAuIwcBAC4jBwEALiMHAQAuIwcBAC4jBwEALiMHAQA
uIwcBAC4jBwEALiMHAQAuIwcBAC4jBwEALiMHAQAuIwcBAC4jBwEALiMHAQA
uIwcBAC4jBwEALiMHAQAuIwcBAC4jBwEALiMHAQAuIwcBAC4jBwEALiMHAQA
uIwcBAC4jBwEALiMHISzBgYGBksaO9DApXV2dvb29ja8h40dmJ+fT/qVBGIh
B+GsxXRbWFjQ/+bMzEzSHalFnczlckm/kkAs5CAAwGXkIADAZeQgAMBl5CAA
wGXkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBl5CAA
wGXkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBl5CAA
wGXkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBl5CAA
wGXkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBl5CAA
wGXkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBl5CAAwGXkIADAZeQgAMBl5CAA
wGXkIADAZeQgAMBl5CAAwGXkIJw1mW5TU1ODg4MjIyNJd+QYa2trSb+SQCzk
IADAZeQgAMBl5CAAwGXkIADAZeQgAMBlloNzc3MTExNLQOotLi4m3QUALWV2
dnZ0dPTo6GhlZWUZSDfepQAay7Yq+/v7bQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACAlvD/AFNAxKU=
         "], {{0, 329.}, {600., 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{600, 329},
       ImageSizeRaw->{600., 329.},
       PlotRange->{{0, 600.}, {0, 329.}}]}, Dynamic[Image`Utilities`i$$]], 
     PaneBox[
      DynamicBox[FEPrivate`Which[
        And[
        Image`InteractiveDump`play$$ === False, Image`InteractiveDump`hover$$ === 
         True], 
        PaneBox[
         GraphicsBox[{
           Thickness[0.020833333333333332`], {
            FaceForm[{
              RGBColor[1., 1., 1.], 
              Opacity[1]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
             24., 1.4794999999999998`}, {11.562000000000001`, 
             1.4794999999999998`}, {1.4789999999999992`, 11.5625}, {
             1.4789999999999992`, 24.000500000000002`}, {1.4789999999999992`, 
             36.4375}, {11.562000000000001`, 46.5215}, {24., 46.5215}, {
             36.438, 46.5215}, {46.521, 36.4375}, {46.521, 
             24.000500000000002`}, {46.521, 11.5625}, {36.438, 
             1.4794999999999998`}, {24., 1.4794999999999998`}}}]}, {
            FaceForm[{
              RGBColor[
              0.8196078431372549, 0.8196078431372549, 0.8196078431372549], 
              Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
              4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0BFg7tYjfPfQ/+b9841bk7Z7k6nD8BSjdBxWH8
/2BgDucvkNK/qyLm5ADTnzHxbY09q7sDzHwYH6YOxvcx73RMQBKH8WHmw/gw
+2HqYO5Ddz+MD6Ya3B3qs/aUTJ6hBudD5D/Yu3TnPP8d6QTnw+yD8WH6YDRE
/j3cfBg/4ekFpdtAc1DksdiLYj6QD7Mfph/VfQj3AwCFYKZd
             "]]}, {
            FaceForm[{
              RGBColor[
              0.4235294117647059, 0.7176470588235294, 0.9882352941176471], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{15., 9.625}, {15., 
             38.375}, {38., 24.}}}]}}, AspectRatio -> Automatic, ImageSize -> 
          Automatic, PlotRange -> {{0., 48.}, {0., 48.}}], ImageSize -> 40], 
        And[
        Image`InteractiveDump`play$$ === True, Image`InteractiveDump`hover$$ === 
         True], 
        PaneBox[
         GraphicsBox[{
           Thickness[0.020833333333333332`], {
            FaceForm[{
              RGBColor[1., 1., 1.], 
              Opacity[1]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
             24., 1.4794999999999998`}, {11.562000000000001`, 
             1.4794999999999998`}, {1.4789999999999992`, 11.5625}, {
             1.4789999999999992`, 24.000500000000002`}, {1.4789999999999992`, 
             36.4375}, {11.562000000000001`, 46.5215}, {24., 46.5215}, {
             36.438, 46.5215}, {46.521, 36.4375}, {46.521, 
             24.000500000000002`}, {46.521, 11.5625}, {36.438, 
             1.4794999999999998`}, {24., 1.4794999999999998`}}}]}, {
            FaceForm[{
              RGBColor[
              0.4235294117647059, 0.7176470588235294, 0.9882352941176471], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
              1, 0}, {0, 1, 0}}}, {{{27., 13.}, {33., 13.}, {33., 35.}, {27., 
             35.}}, {{15., 35.}, {21., 35.}, {21., 13.}, {15., 13.}}}]}, {
            FaceForm[{
              RGBColor[
              0.8196078431372549, 0.8196078431372549, 0.8196078431372549], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
              4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0BFg7tYjfPfQ/+b9841bk7Z7k6nD8BSjdBxWH8
/2BgDucvkNK/qyLm5ADTnzHxbY09q7sDzHwYH6YOxvcx73RMQBKH8WHmw/gw
+2HqYO5Ddz+MD6Ya3B3qs/aUTJ6hBudD5D/Yu3TnPP8d6QTnw+yD8WH6YDRE
/j3cfBg/4ekFpdtAc1DksdiLYj6QD7Mfph/VfQj3AwCFYKZd
             "]]}}, AspectRatio -> Automatic, ImageSize -> Automatic, 
          PlotRange -> {{0., 48.}, {0., 48.}}], ImageSize -> 40], 
        Image`InteractiveDump`play$$ === False, 
        PaneBox[
         GraphicsBox[{
           Thickness[0.020833333333333332`], {
            FaceForm[{
              RGBColor[1., 1., 1.], 
              Opacity[0.8]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
             24., 1.4794999999999998`}, {11.562000000000001`, 
             1.4794999999999998`}, {1.4789999999999992`, 11.5625}, {
             1.4789999999999992`, 24.000500000000002`}, {1.4789999999999992`, 
             36.4375}, {11.562000000000001`, 46.5215}, {24., 46.5215}, {
             36.438, 46.5215}, {46.521, 36.4375}, {46.521, 
             24.000500000000002`}, {46.521, 11.5625}, {36.438, 
             1.4794999999999998`}, {24., 1.4794999999999998`}}}]}, {
            FaceForm[{
              RGBColor[
              0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
              4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0BFg7tYjfPfQ/+b9841bk7Z7k6nD8BSjdBxWH8
/2BgDucvkNK/qyLm5ADTnzHxbY09q7sDzHwYH6YOxvcx73RMQBKH8WHmw/gw
+2HqYO5Ddz+MD6Ya3B0+XfJNEpihBudD5D/Yu3TnPP8d6QTnw+yD8euz9pRM
BuqD6YfIv4ebD+MnPL2gdBtoDoo80B6YfhgfxXwgH2Y/TD+q+xDuBwBXkKYL

             "]]}, {
            FaceForm[{
              RGBColor[
              0.2196078431372549, 0.5019607843137255, 0.7725490196078432], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{15., 9.625}, {15., 
             38.375}, {38., 24.}}}]}}, AspectRatio -> Automatic, ImageSize -> 
          Automatic, PlotRange -> {{0., 48.}, {0., 48.}}], ImageSize -> 40], 
        True, ""],
       ImageSizeCache->{36., {15.46484375, 20.53515625}}],
      Alignment->Center,
      ImageSize->{600, 329}]}],
    EventHandlerTag[{{"MouseClicked", 1} :> 
      FEPrivate`Set[Image`InteractiveDump`play$$, 
        Not[Image`InteractiveDump`play$$]], "MouseEntered" :> 
      FEPrivate`Set[Image`InteractiveDump`hover$$, True], "MouseExited" :> 
      FEPrivate`Set[Image`InteractiveDump`hover$$, False], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
   BaseStyle->{ContextMenu -> {
       MenuItem["Play/Pause", 
        KernelExecute[
        Image`InteractiveDump`play$$ = Not[Image`InteractiveDump`play$$]], 
        MenuEvaluator -> Automatic], 
       MenuItem["Stop", 
        KernelExecute[
        Image`InteractiveDump`play$$ = False; Image`Utilities`i$$ = 1], 
        MenuEvaluator -> Automatic], Delimiter, 
       Menu["Frame Rate", {
         MenuItem["8", 
          KernelExecute[Image`InteractiveDump`rate$$ = 8], MenuEvaluator -> 
          Automatic], 
         MenuItem["16", 
          KernelExecute[Image`InteractiveDump`rate$$ = 16], MenuEvaluator -> 
          Automatic], 
         MenuItem["24", 
          KernelExecute[Image`InteractiveDump`rate$$ = 24], MenuEvaluator -> 
          Automatic], 
         MenuItem["30", 
          KernelExecute[Image`InteractiveDump`rate$$ = 30], MenuEvaluator -> 
          Automatic], 
         MenuItem["50", 
          KernelExecute[Image`InteractiveDump`rate$$ = 50], MenuEvaluator -> 
          Automatic], 
         MenuItem["60", 
          KernelExecute[Image`InteractiveDump`rate$$ = 60], MenuEvaluator -> 
          Automatic]}]}, Selectable -> False},
   DynamicModuleValues:>{}],
  BoxForm`AnimatedImageTag[
  FrameRate -> 2., AnimationRepetitions -> 1]]], "Output",
 CellChangeTimes->{{3.8837391180207043`*^9, 3.8837391623466053`*^9}, 
   3.883739224074245*^9},
 CellLabel->
  "Out[686]=",ExpressionUUID->"b7e811a8-08ed-4ffa-baa0-913a741abd0c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1296., 794.5},
WindowMargins->{{0, Automatic}, {0, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.8 Inherited,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e52760b8-8500-448b-90cc-ef24d0d0a26e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 233, 4, 116, "Title",ExpressionUUID->"a51a1c00-1c1e-4809-99a7-9b45151e9214"],
Cell[816, 28, 317, 5, 59, "Text",ExpressionUUID->"c34d2386-44e3-4d12-8bcd-6e0adf0c59d5"],
Cell[1136, 35, 360, 8, 61, "Input",ExpressionUUID->"4fb6ff86-df9c-4786-aab4-c5b29d03d1f8"],
Cell[1499, 45, 239, 4, 59, "Text",ExpressionUUID->"c91ba40d-3b6c-42cd-bdae-10c38124ceab"],
Cell[1741, 51, 1600, 27, 61, "Input",ExpressionUUID->"df0ec05c-7c65-422e-9507-d63ba1cb5d39"],
Cell[3344, 80, 513, 8, 59, "Text",ExpressionUUID->"5f37c9ba-3582-4916-b8a6-b00b0ad21432"],
Cell[3860, 90, 1226, 18, 35, "Input",ExpressionUUID->"fbda1cba-5510-430b-ae7f-72219c40e12c"],
Cell[5089, 110, 676, 13, 217, "Text",ExpressionUUID->"81bad29d-8522-4e31-bd45-0ec214a12116"],
Cell[5768, 125, 15754, 327, 1395, "Input",ExpressionUUID->"786b6905-0c83-4785-9309-62848193302e"],
Cell[21525, 454, 3258, 87, 378, "Text",ExpressionUUID->"5f86b73e-5906-4bd6-a372-9b5e7579b57a"],
Cell[24786, 543, 411, 8, 59, "Text",ExpressionUUID->"e1220042-e501-4a63-aad2-9ca6f469a27d"],
Cell[25200, 553, 8914, 242, 290, "Input",ExpressionUUID->"39334818-453d-4215-b01f-6ad2ed45ee64"],
Cell[34117, 797, 481, 10, 86, "Text",ExpressionUUID->"7dae8c7a-ebe8-4914-93d1-8e3024725605"],
Cell[34601, 809, 535, 10, 35, "Input",ExpressionUUID->"797106b3-7c71-46e2-9680-68c6566ce39f"],
Cell[35139, 821, 865, 18, 86, "Text",ExpressionUUID->"b8508c3c-e271-4c93-8030-70d503509a3f"],
Cell[36007, 841, 1324, 29, 114, "Input",ExpressionUUID->"d6f1e258-c049-4570-8952-bb2893609008"],
Cell[CellGroupData[{
Cell[37356, 874, 3573, 93, 314, "Input",ExpressionUUID->"b16782ff-ea3f-4153-83cb-c675797578e7"],
Cell[40932, 969, 3119, 45, 57, "Output",ExpressionUUID->"41fdd0b6-49f7-4b00-bcf4-adf62d0d303c"],
Cell[44054, 1016, 25367, 626, 171, "Output",ExpressionUUID->"0f9aa228-7cb5-4cda-a3e8-91770f66c23b"]
}, Open  ]],
Cell[69436, 1645, 481, 9, 59, "Text",ExpressionUUID->"153e59e0-45fd-472c-85cb-312dbaef9e54"],
Cell[CellGroupData[{
Cell[69942, 1658, 208, 4, 35, "Input",ExpressionUUID->"78aba0aa-fe82-48a6-bbd6-1efbf05626d6"],
Cell[70153, 1664, 7165, 152, 175, "Output",ExpressionUUID->"2a26573f-699a-420b-8c32-2c7d89cd5377"]
}, Open  ]],
Cell[77333, 1819, 2565, 38, 296, "Text",ExpressionUUID->"bb277a5a-5a35-4034-9157-64bf18989e78"],
Cell[CellGroupData[{
Cell[79923, 1861, 420, 6, 63, "Subtitle",ExpressionUUID->"b537fdb9-8ce6-4848-af9b-b8dda8bf18d3"],
Cell[80346, 1869, 2342, 68, 141, "Input",ExpressionUUID->"065d7afa-e2b8-4625-8d54-f6c53ef06fe3"],
Cell[82691, 1939, 336, 7, 59, "Text",ExpressionUUID->"a3da6556-c143-4f6a-a982-6f24d4bd76fe"],
Cell[83030, 1948, 5291, 146, 304, "Input",ExpressionUUID->"c55e2d23-0f8a-449c-8c9b-78b7eb08b4ea"],
Cell[88324, 2096, 7190, 163, 671, "Input",ExpressionUUID->"0a7225d4-f3e3-4f53-ae7e-0b8c52676e74"],
Cell[95517, 2261, 4788, 108, 515, "Input",ExpressionUUID->"148ece78-3408-4785-82fe-e9d700a8bfb2"],
Cell[CellGroupData[{
Cell[100330, 2373, 512, 9, 64, "Subsection",ExpressionUUID->"52f3a935-6289-4dc5-91d6-26daa61c56f2"],
Cell[100845, 2384, 805, 18, 64, "Input",ExpressionUUID->"0da992e8-3315-43a0-8d59-4b6929991a1d"],
Cell[101653, 2404, 2486, 48, 86, "Input",ExpressionUUID->"5ff0830e-ec66-4e68-ab7e-6625c80a74b6"],
Cell[CellGroupData[{
Cell[104164, 2456, 4219, 109, 261, "Input",ExpressionUUID->"2624b3bd-63bf-4ade-9776-6d103180a0ee"],
Cell[108386, 2567, 68503, 1543, 261, "Output",ExpressionUUID->"5963e557-46b1-41b2-811f-7bbb058994fc"]
}, Open  ]],
Cell[176904, 4113, 243, 4, 59, "Text",ExpressionUUID->"2cdcbd35-c15a-47d0-934d-3ac26b9a3ac0"],
Cell[177150, 4119, 4113, 93, 165, "Input",ExpressionUUID->"78a44d5b-d75d-4c68-96ab-221b2b7e5a73"],
Cell[181266, 4214, 8782, 181, 424, "Input",ExpressionUUID->"f60c26c3-9869-49be-9a0e-e82ee5d8c8a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190085, 4400, 306, 4, 79, "Section",ExpressionUUID->"803e1800-72f5-4633-89e2-a1051e58802e"],
Cell[190394, 4406, 209, 4, 40, "Text",ExpressionUUID->"5100e1ec-aa1b-4755-8651-38f0df16479e"],
Cell[190606, 4412, 1997, 50, 120, "Input",ExpressionUUID->"03e5b243-f124-4461-8871-1233f93d5b42"],
Cell[CellGroupData[{
Cell[192628, 4466, 260, 5, 35, "Input",ExpressionUUID->"b2885880-841b-44f4-a3b8-5ce6b7118820"],
Cell[192891, 4473, 19916, 454, 268, "Output",ExpressionUUID->"732737c3-1b28-47c5-abd3-9f5d249a5fbf"]
}, Open  ]],
Cell[212822, 4930, 746, 18, 111, "Input",ExpressionUUID->"78af2f09-6876-429d-af29-8eea1e55846f"],
Cell[213571, 4950, 759, 20, 108, "Input",ExpressionUUID->"08ebf0a3-cdb9-462f-96b8-98669c09e122"],
Cell[214333, 4972, 2660, 69, 211, "Input",ExpressionUUID->"4a2604f4-2a7c-4e87-bf6a-3f9e80b8ab32"],
Cell[CellGroupData[{
Cell[217018, 5045, 1745, 40, 86, "Input",ExpressionUUID->"dcb57be1-a4b6-4567-b7cd-a9ee55daccf1"],
Cell[218766, 5087, 16145, 329, 216, "Output",ExpressionUUID->"45d75440-c1be-4032-bb8a-1d9fff018ab1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234960, 5422, 450, 8, 84, "Section",ExpressionUUID->"2346cce6-bd8a-4ae4-88e1-f897966b2804"],
Cell[235413, 5432, 1838, 69, 160, "Text",ExpressionUUID->"3344957f-d006-4e7a-9d85-1d5d44480509"],
Cell[237254, 5503, 23272, 546, 1938, "Input",ExpressionUUID->"87274038-e121-4cf6-9854-097f3a94bf01"],
Cell[CellGroupData[{
Cell[260551, 6053, 387, 7, 64, "Subsection",ExpressionUUID->"b5ebd345-aa7c-4daf-9611-4bab62c48860"],
Cell[CellGroupData[{
Cell[260963, 6064, 215, 4, 35, "Input",ExpressionUUID->"f1e4b8ad-2e36-44bd-8945-04440a2f67e2"],
Cell[261181, 6070, 18935, 442, 244, "Output",ExpressionUUID->"f61f3d2d-5f28-4fe2-a263-8996727ab735"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280153, 6517, 202, 4, 35, "Input",ExpressionUUID->"aaaf115e-0ac4-4510-9389-779d35a60315"],
Cell[280358, 6523, 12882, 316, 107, "Output",ExpressionUUID->"f3837aac-c5b3-4a43-8bef-8a893525b9c2"]
}, Open  ]],
Cell[293255, 6842, 2282, 55, 220, "Input",ExpressionUUID->"b51ebd2d-ec91-4b53-a690-08d9582fcee9"],
Cell[CellGroupData[{
Cell[295562, 6901, 3383, 73, 261, "Input",ExpressionUUID->"f0cc4e96-9a39-48b4-b95c-b540a2ea63f5"],
Cell[298948, 6976, 61432, 1272, 258, "Output",ExpressionUUID->"ee77561a-6c5e-4a52-afee-f7a29ab8254f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[360441, 8255, 185, 3, 79, "Section",ExpressionUUID->"c3f2ea48-ae1d-4efa-8bf6-1368070e1557"],
Cell[360629, 8260, 5161, 128, 572, "Input",ExpressionUUID->"2dc02453-c30c-4171-84c2-3faa7e72a7d0"],
Cell[CellGroupData[{
Cell[365815, 8392, 2023, 42, 123, "Input",ExpressionUUID->"453edd7e-2e6c-43ba-9600-7935556a2771"],
Cell[367841, 8436, 703624, 11780, 436, "Output",ExpressionUUID->"b7e811a8-08ed-4ffa-baa0-913a741abd0c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


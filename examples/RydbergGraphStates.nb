(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    392556,       7586]
NotebookOptionsPosition[    385287,       7466]
NotebookOutlinePosition[    385803,       7485]
CellTagsIndexPosition[    385760,       7482]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Graph states on Rydberg neutral atoms", "Title",
 CellChangeTimes->{{3.873959477999319*^9, 3.873959498215823*^9}, {
  3.888054589033177*^9, 
  3.888054597287692*^9}},ExpressionUUID->"6a351531-7c2c-4dd5-99dc-\
e192acc1ba92"],

Cell[TextData[StyleBox["main ref : www.nature.com/articles/s41586-022-04592-6",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.877415349599188*^9, 3.877415384563923*^9}, {
  3.888054964906518*^9, 
  3.888054965897109*^9}},ExpressionUUID->"be34f21d-c417-40e0-b40e-\
fa5779bbaeee"],

Cell[TextData[StyleBox["Set environment, such as threads, gpu, etc.",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.8528844215679693`*^9, 3.8528844367050333`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e4b10c00-f68c-4cea-a90b-7f7d14525413"],

Cell[BoxData[{
 RowBox[{"SetEnvironment", "[", 
  RowBox[{"\"\<OMP_NUM_THREADS\>\"", "\[Rule]", "\"\<8\>\""}], "]"}], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.872921462633623*^9, {3.8774421651472178`*^9, 3.87744216588315*^9}, 
   3.8774422243067904`*^9, {3.877531885130476*^9, 3.877531890004857*^9}, 
   3.8776230873374023`*^9, {3.877624433710095*^9, 3.877624442034449*^9}, {
   3.877625365204*^9, 3.877625366808399*^9}, 3.877676401046671*^9, 
   3.8780187597833767`*^9, {3.87804560055737*^9, 3.8780456014059772`*^9}, 
   3.8780493572411823`*^9, {3.878993129216462*^9, 3.8789931374631567`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"63043d13-c631-4c64-a1f3-4d5e3d81cdba"],

Cell[TextData[StyleBox["Load the QuESTLink. Now it works as well directly \
using the default pre-compiled binary. But it usea only single core.",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.875092194364937*^9, 3.875092230493594*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"039c7b98-676e-46c5-b560-f214eeca441a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Import", "[", "\"\<~/programs/QuESTlink/Link/QuESTlink.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateLocalQuESTEnv", "[", "\"\<quest_link_cpu\>\"", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.82497505062926*^9, 3.8249750506297073`*^9}, 
   3.824994043627574*^9, 3.825001607792643*^9, {3.825001692867886*^9, 
   3.825001693910748*^9}, 3.825005541672139*^9, {3.8257703632332573`*^9, 
   3.8257703928999557`*^9}, {3.8257705549908867`*^9, 
   3.8257705572226887`*^9}, {3.827395402084569*^9, 3.827395414565299*^9}, 
   3.8273959879208593`*^9, {3.8273960394479303`*^9, 3.8273960853619223`*^9}, {
   3.8273961168062162`*^9, 3.827396123715522*^9}, {3.827396318549856*^9, 
   3.827396412632536*^9}, {3.8274045827011538`*^9, 3.82740458379325*^9}, {
   3.8278173564819393`*^9, 3.827817361228321*^9}, {3.830976734134877*^9, 
   3.8309767494625072`*^9}, {3.834480282684927*^9, 3.834480283538302*^9}, {
   3.834480426528635*^9, 3.834480438344689*^9}, {3.840643429673587*^9, 
   3.84064343214264*^9}, {3.840644090065632*^9, 3.840644110294639*^9}, {
   3.841376639126837*^9, 3.841376652890356*^9}, {3.852805051225027*^9, 
   3.852805051940732*^9}, 3.852866941489101*^9, 3.863433244574464*^9, {
   3.863444417946168*^9, 3.8634444207524557`*^9}, {3.863758485466724*^9, 
   3.8637585009226294`*^9}, {3.863763334072833*^9, 3.8637633356047773`*^9}, {
   3.875074076068241*^9, 3.875074077491503*^9}, 3.875092005077902*^9, {
   3.875092153636676*^9, 3.875092184432209*^9}, {3.877436122000495*^9, 
   3.877436140779965*^9}, {3.877442176611685*^9, 3.877442176932191*^9}, {
   3.877507643429213*^9, 3.877507644586557*^9}, 3.877510280438802*^9, {
   3.8776230805751247`*^9, 3.877623089713667*^9}, {3.877624445584865*^9, 
   3.87762444583115*^9}, {3.8776255187408524`*^9, 3.8776256064205093`*^9}, {
   3.877625709694113*^9, 3.877625724941338*^9}, {3.8776764037695436`*^9, 
   3.877676404005888*^9}, {3.878018764304141*^9, 3.87801876469773*^9}, {
   3.87804935910288*^9, 3.878049359856716*^9}, {3.878993125059167*^9, 
   3.8789931252424803`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"ab24de79-8a02-44ca-91e2-5817b79567a9"],

Cell[TextData[StyleBox["Virtual quantum devices, loaded after questlink",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8344802680745296`*^9, 3.83448027667835*^9}, {
  3.8406416900502462`*^9, 3.840641698118609*^9}, {3.840641813367085*^9, 
  3.840641822804656*^9}, {3.853839759327433*^9, 3.853839762140107*^9}, {
  3.86344845184791*^9, 3.863448455324099*^9}, {3.8637680860803547`*^9, 
  3.863768086918572*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"c0d95ded-6f94-494d-abf7-99be52f06bb6"],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../vqd.wl\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.840641143565943*^9, 3.840641172251192*^9}, {
   3.852799583306651*^9, 3.85279959973236*^9}, 3.8626416092550993`*^9, {
   3.8634335183180933`*^9, 3.863433525482596*^9}, {3.863433568660131*^9, 
   3.863433569874107*^9}, {3.863433692497489*^9, 3.863433694465293*^9}, {
   3.863445057138888*^9, 3.86344507880478*^9}, {3.863445347209435*^9, 
   3.8634453507921267`*^9}, {3.863445650432852*^9, 3.863445652815689*^9}, {
   3.863445897019453*^9, 3.8634458974688377`*^9}, {3.86344607759472*^9, 
   3.863446078099331*^9}, {3.863446143635272*^9, 3.863446143966124*^9}, {
   3.863446177367778*^9, 3.86344617796842*^9}, {3.8634467623389387`*^9, 
   3.863446816486045*^9}, {3.863446923713131*^9, 3.863446924990855*^9}, {
   3.863447604132453*^9, 3.8634476320572042`*^9}, {3.863448157317191*^9, 
   3.863448185412036*^9}, {3.86344848550739*^9, 3.863448486307929*^9}, {
   3.863730635263914*^9, 3.863730645543404*^9}, {3.863730806825498*^9, 
   3.863730825085904*^9}, {3.864798306500605*^9, 3.864798308030095*^9}, {
   3.864808339041327*^9, 3.864808339281568*^9}, 3.875092849788855*^9, {
   3.877415512286059*^9, 3.877415512674021*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"2d0c6564-c1be-4d61-820b-80de067a82ea"],

Cell[TextData[{
 "Time unit : ",
 StyleBox["\[Mu]s",
  FontWeight->"Bold"],
 "\nFrequency unit: ",
 StyleBox["MHz",
  FontWeight->"Bold"],
 "\nLength unit: ",
 StyleBox["\[Mu]m",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.867237179837118*^9, 3.867237192179912*^9}, {
  3.873964800524826*^9, 3.873964804785742*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"4edce849-0a0d-4cf7-b454-20af9325cb40"],

Cell[CellGroupData[{

Cell["1D cluster state", "Chapter",
 CellChangeTimes->{{3.8774150116104107`*^9, 3.8774150183296127`*^9}, {
  3.888054664663628*^9, 3.888054666735416*^9}, {3.888054721056127*^9, 
  3.888054721886025*^9}},ExpressionUUID->"948a06c5-dcbd-4d6f-a2df-\
96568eee4c9e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"el", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[UndirectedEdge]", 
         RowBox[{"#", "+", "1"}]}], "->", "1"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "10", ",", "2"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[UndirectedEdge]", 
         RowBox[{"#", "+", "1"}]}], "->", "2"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "9", ",", "2"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"cluster", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"el", "//", "Keys"}], ",", 
    RowBox[{"VertexSize", "->", "0.5"}], ",", 
    RowBox[{"VertexStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{"White", ",", 
       RowBox[{"EdgeForm", "[", "Thick", "]"}]}], "]"}]}], ",", 
    RowBox[{"BaseStyle", "->", 
     RowBox[{"{", 
      RowBox[{"17", ",", 
       RowBox[{"FontFamily", "->", "\"\<Serif\>\""}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "900"}], ",", 
    RowBox[{"EdgeStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
    RowBox[{"VertexLabels", "->", 
     RowBox[{"Placed", "[", 
      RowBox[{"Automatic", ",", "Center"}], "]"}]}], ",", 
    RowBox[{"EdgeLabels", "->", "el"}], ",", 
    RowBox[{"EdgeLabelStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Background", "->", "White"}], ",", "Bold", ",", "Red"}], 
      "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.887953723159617*^9, 3.887953838875456*^9}, {
  3.887956781421236*^9, 3.887956782353072*^9}, {3.887957004662833*^9, 
  3.887957072339747*^9}, {3.887957108363415*^9, 3.887957111049486*^9}, {
  3.887959794402801*^9, 3.887959798169128*^9}, {3.887959858884741*^9, 
  3.8879598592141113`*^9}, {3.887960584738833*^9, 3.887960584918109*^9}, {
  3.888054769069099*^9, 3.888054794507201*^9}, {3.888070112168723*^9, 
  3.888070131491173*^9}},
 CellLabel->
  "In[274]:=",ExpressionUUID->"16d47ef8-8082-427b-8a1f-f8ea487010a3"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {
      Null, {{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}, {11, 12}, {2, 3}, {4, 
       5}, {6, 7}, {8, 9}, {10, 11}}}, {
      BaseStyle -> {17, FontFamily -> "Serif"}, 
       EdgeLabels -> {
        UndirectedEdge[0, 1] -> 1, UndirectedEdge[3, 4] -> 2, 
         UndirectedEdge[5, 6] -> 2, UndirectedEdge[10, 11] -> 1, 
         UndirectedEdge[9, 10] -> 2, UndirectedEdge[1, 2] -> 2, 
         UndirectedEdge[7, 8] -> 2, UndirectedEdge[4, 5] -> 1, 
         UndirectedEdge[2, 3] -> 1, UndirectedEdge[6, 7] -> 1, 
         UndirectedEdge[8, 9] -> 1}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1], Bold, 
          RGBColor[1, 0, 0]]}, EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large]]}, ImageSize -> 900, VertexLabels -> {
         Placed[Automatic, Center]}, VertexSize -> {0.5}, VertexStyle -> {
         Directive[
          GrayLevel[1], 
          EdgeForm[
           Thickness[Large]]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[0.7], 
        StyleBox[{{
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$1"], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$1", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            
            BaseStyle->"Graphics"]}, {
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$2"], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$2", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            
            BaseStyle->"Graphics"]}, {
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$3"], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$3", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            
            BaseStyle->"Graphics"]}, {
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$4"], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$4", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            
            BaseStyle->"Graphics"]}, {
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$5"], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$5", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            
            BaseStyle->"Graphics"]}, {
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$6"], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$6", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            
            BaseStyle->"Graphics"]}, {
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$7"], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$7", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            
            BaseStyle->"Graphics"]}, {
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$8"], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$8", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            
            BaseStyle->"Graphics"]}, {
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$9"], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$9", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            
            BaseStyle->"Graphics"]}, {
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$10"], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$10", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, {
           
           TagBox[LineBox[{
             DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}],
            "DynamicName",
            BoxID -> "EdgeLabelID$11"], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontFamily->"Serif",
             FontSize->17,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0],
             Background->GrayLevel[1]], DynamicLocation[
            "EdgeLabelID$11", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}},
         FontFamily->"Serif"]}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7], Thickness[
        Large]}], 
        StyleBox[{
          TagBox[{
            TagBox[DiskBox[{0., 2.0818995585505003*^-15}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$1"], InsetBox[
             StyleBox["0",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$1", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$1"], 
          TagBox[{
            TagBox[DiskBox[{1., 1.959434878635765*^-15}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$2"], InsetBox[
             StyleBox["1",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$2", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$2"], 
          TagBox[{
            TagBox[DiskBox[{2., 1.8369701987210296*^-15}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$3"], InsetBox[
             StyleBox["2",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$3", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$3"], 
          TagBox[{
            TagBox[DiskBox[{3., 1.7145055188062944*^-15}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$4"], InsetBox[
             StyleBox["3",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$4", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$4"], 
          TagBox[{
            TagBox[DiskBox[{4., 1.592040838891559*^-15}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$5"], InsetBox[
             StyleBox["4",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$5", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$5"], 
          TagBox[{
            TagBox[DiskBox[{5., 1.4695761589768238*^-15}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$6"], InsetBox[
             StyleBox["5",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$6", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$6"], 
          TagBox[{
            TagBox[DiskBox[{6., 1.224646799147353*^-15}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$7"], InsetBox[
             StyleBox["6",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$7", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$7"], 
          TagBox[{
            TagBox[DiskBox[{7., 9.797174393178824*^-16}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$8"], InsetBox[
             StyleBox["7",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$8", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$8"], 
          TagBox[{
            TagBox[DiskBox[{8., 7.347880794884119*^-16}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$9"], InsetBox[
             StyleBox["8",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$9", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$9"], 
          TagBox[{
            TagBox[DiskBox[{9., 4.898587196589412*^-16}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$10"], InsetBox[
             StyleBox["9",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$10", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$10"], 
          TagBox[{
            TagBox[DiskBox[{10., 2.449293598294705*^-16}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$11"], InsetBox[
             StyleBox["10",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$11", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$11"], 
          TagBox[{
            TagBox[DiskBox[{11., 0.}, 0.25],
             "DynamicName",
             BoxID -> "VertexID$12"], InsetBox[
             StyleBox["11",
              StripOnInput->False,
              FontFamily->"Serif",
              FontSize->17], DynamicLocation["VertexID$12", None, Center],
             BaseStyle->"Graphics"]},
           "DynamicName",
           BoxID -> "VertexLabelID$12"]},
         FontFamily->"Serif"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  BaseStyle->{17, FontFamily -> "Serif"},
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->900]], "Output",
 CellChangeTimes->{3.888070131864987*^9},
 CellLabel->
  "Out[275]=",ExpressionUUID->"69450f79-344d-4788-b6a1-3d270e3c78df"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQmYVNWZ/9/GgOw7LlEggJpE5UHEMYsDAgGTyaNAJC5JFH6gmfwmAbrp
bnqh2ZeJyU/UwWRM4jKI8XlmRv27ZGaMNHvQ6AjCg8lvflGWbtCZRBwFnARQ
4Pzv99x6b506dW/VreqqurV8vzyH6qq6dZdz7z2f+57zvu8ZOqv6pr/+RFVV
VV0X57+bZjaOr62d2Tytj/Pm5rl1f/Pdud+566/m1n/nu9+p/cKss50PhzrL
vnhWVdUnnb8VRVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVFUheujjz7y
/fz06dP69dTHp9SZM2cKuUtFJdSDHD/qotSE8yvnMpPziGOV45XfnTx5Mqvf
ZyrZXtC1SVEUFVbS/kHSJpmfQX5tvNn2U8WtTM6TLGu+ZsIa+/eZyryu7OuQ
oigqG9ns+uCDD9TmzZvV4sWL1dKlS9WSJUvUc889p3bu3Jlg31WS0O6WMtOz
eSbp6PF2pM5Kua4piipOHTx4UM2YMUN16tRJnXXWWfr17LPPVp/4xCdUVVWV
/uyKK65QTz75ZEkyDvuO48ik4JhRHn300ZI85qlTp3rHsm3btrTLg4WjRo3S
y+O8P/HEExkdt/37TOv78ccfp/1GUVTO9ctf/lINHDhQt+fS3kycOFGNGzdO
lyFDhmjeSdsFFopKYfykra3N41WqIseOY5Tj7dy5s/59KdoWe/fu9Y7p2muv
1ccAhviNs+I9zivqAce/Zs2ajLfX3t4emmdSxyiyzT/84Q+5OnSKoigttN/9
+/fXbQxe77vvPnX06NGk5+nt27eryy+/3GufnnrqqZIZP8HxbNy4UffBpipb
tmzRr1deeaXHPJPnpahZs2Z55wx1EORDs3r1ao8/2R7z4cOHdf1JXW/atCmh
bN26Vb388su6nlHE5kNd33XXXR09VIqiqATB9po+fbrXr4S2CTKf8+XZH2X/
/v2qd+/eetmhQ4d66yl2GyeT/bvjjju8tn7ChAl53Kv8C+ds37592hbF8aDv
0mSbnGecd3wPm+rqq6/O2fZlTM4em8N1B6ZJPaOvgKIoKtdCu9O3b1/dzowY
MSIpZsD2AcdnN9xwg/fsfejQoaK23+QYwmrmzJleuwsb4/333/f69kpxPE72
W2w5nDP0X5o+tK+//rrq1auX/m7QoEHa56gjkmeioOcKfI79ETt55MiR6r33
3uvQNikqVzLbs2J/dqfSC+cQz+54zsf4m80zv/Yd/pa2H0OxXgth9wvHKXyD
TQv/FLS75RAfiP2HLSfn7Nvf/rb3+bFjx/SzDXiDZx3wDhK7Pdf7gfpEv4GM
daKe8RxR6nVMlY/Er8BuC3mNlq7Q5yhtu7TrpvzsuRMnTiTFHJSi5Lp9+OGH
Pb+H0aNHa1umHPgmwvkBW6Q/EsyDpkyZ4tl3zzzzTF62bfZ5r1271tveVVdd
pflmLkNRhZaZIwHXI8aN4W+FZ3nETT377LO6v4rXaOkK/UZo21HQ7vz+979P
eo4Xm858L6+l4HOSSuvWrfNiJWBXHDlypKxi3OW8YCxVxl1hy9XW1uq/cdz3
3HNPwrJQrp5d5Vp66KGHPL7hOQLPU7KNUr12qPIQ4qbMcQrTx1oKfMt/8Ytf
RL2rVIZC+4K2RvxIcG7xnP+Nb3xDP3P/13/9V8KyYrvZth7eh2mncsmNXKzr
scce89p96Z9EX0U5tbvmuRJ/mp49e3rHDftOZD7TwlbPxbaxLsQXStwlfFbl
OYKiopDZR4N2zo4dkiJ96tLPhSLj9FRpSMbbdu3apcf+zfMpz/hok2bPnq2X
6eh4rPl7PNcvW7Ys44I+hGy3b+47+CbX9jXXXKP93stdsOXMexj3q2mH+9nn
mcpml9mG4BrDGCBFFYMQJyVskzhNv1hOk3Uow4YN67BvFlU4Sd5eFLRHN954
Y1Ksrth48D3HucVvsvEzNNvQSZMmhYrLtmO0sT/mujIV9tvkG2xYGZ8qR5l1
jnFHiWvHK3LWQGKHB/n6ZyLYf+Yzslw/sB0RI45tmbmiKaqQkrYO4264NqXv
ysxrJMXO1SOfYXmz/4MqftntDdogxEzV1NToZxbzPGMsBX1N2bSBdh8BbLJM
SktLi1q0aFGHjnXPnj0eL/v06eP5EpbL+Jst1DnmDEDMtd0ng7g0s1+2o4wz
n3t2797tbQu5Bd544w1vG+QbFZVw/eF+uPjii5P4Jc/QaGvAwEceeUT3Y6E/
y7T1hHXskygNyXONnZNLPkdB+zh8+HDvPIMz2dpxHWnfzHiGbIR2F1wTvu3Y
sSMvfvLFImGVHDfOHfon0Ucj9zbykUC5suMgbE9i7mC/gW9Sx+Va11TpCOMu
5hib2WeFPh5I7gHkSDIZZy6bL19kKj/ya9eEd3jFWI7kacazjd9vU/lrmOvP
RU76ML83x5rAM8SA4drEK+ZRyFZRtNNh6sz8Xp4D0LeMGDjcl+iXBX+w/4MH
D07K5WIzzsxB6nfMsg0sJ8ui/ZC8AuAqthf0+1SKOuaeMVHlq+XLl3vcMsdi
8FwG2ecducLxXI9YAhT8Xmw9qjiFZ3c5tzhXYdpOlOuuu877XRBr0s3J2VE7
Dgo7niPLS7sr17G0u9mqUO1vR+xeGWMbP3681w+DHKNSJw888ID3ueRw87Pj
gvJbmvsoPpgm3/CaaT1HzRT2o5a/cI4lLtScVwVl7NixaWOk7LmDqeIUGCfn
dc6cOaHnDMA1IH3RYrNBcg1gvWjX0p1/XEfz5s3T7W8mBYyVMaQwwnJod2G/
4HrGuJDYMdkIY3dR5HbBPsNfI4zMY7vzzjs9jtnjmBhLgJ0F/xMzX6Qf4/C8
inpMtT30R5p8C1o+nbA91DPyN0elTOqbKj2h70J8TYRx+BttTNh+Itr5xa13
333Xa/uQ5yToXJl5DeFnIuOtYJ2dtxltEtZXXV0d+MxvxtGhXZX+8LBFuBxW
iGORORVgv4l/SbbCsUvO4kI876NeEdOA+6+5uTnt8uaYF8YVpC8GcXGQnbsF
PjxgHI5r/fr13jZlbA7L4/NzzjlHn9egbWIfUc8m3+w2IIztK7/B8SIfQaGV
aX1TpSm0PX7+JniGtmVew+Y9X055kMpJZh8fnmWEG/fee6+3jJ+tjvM5efJk
z69IxmVNBiJ2Ld04rNl+4lk53Vw3doE9Af+XMNcWxqEQjyXHCL/5dAq6niHY
b1gX7M98PcPZHMBzBfIvoM5Rv+kk9jjqyPSDDYpZRcy7sMm05Ux/I9h/OO6n
n37adx3meJ/MJxtWfvUoz0roXwiroPHfdOpofVOlJ1wXGFOTdsF8dsbzvl9f
JK59/EbG5OQVeb6o4pXkmxc7/aav36T5ZLYX8CmC/6zED+B6COor9BvD8ZPJ
uUyK6f+Ybv0Q2nYzx3KY2AS0a7h28QpO+CnMPnRUS5cu1TnW4JMo9x8+SyeZ
R0C4hddUsX84BqxX7GTMEei3TlnWTzIHHMbwwTrUI8bksV4Zo7frWT5HMft+
s6lTc66MbHPUZFvfVGkKbPKL78Y1LH3kci2iDcR8HH7x4ZhzkSpuoT2UPF7m
OZc+SfE9koK4Rzy3+/mB49qQMZh0+R47agel+y2Oy+8aThdjbi4r8dGyLdid
+fajknoz51yXV/AgnWCHgDlyP6Ie0rX3OJ9gIc415p6wx2ZxzFiPX53jc4mj
Ncfw7Zhau20wP3/uuecSnmGwTvGBCVNf5qv0r0Jh+kY7Wt9U6UmuFVzz9rWJ
6wC2nFx/yMWMvBfmcua1C19zqviF/iqMy6BtNNt4+RvjK+i/kTgqkdmfBVsB
bSSuh0z8QfJhx0HgE+xN9MdiHBl/o69dfFaCypgxYzz/FuRpNdtJ2LLnnXde
qO13RLYdgmcH3FOSwyyV0L8nx2L3GabaZ/hYSh1JTAWOHXPEY9vwQ/NjJZ6H
8RuwEXUt9YfxWvyNz+QcmEU+R0E9m0JMA3xhwkrOEfLmYH2mL1QYdaS+qdIV
rnlzLC5VMePDhXEyxk2VnnCPt7a26ud3PKeYsU+2pC1Bf7Udh1BO47EYz5Ix
aTMmTJQJp2X5INnf4dkiqjZXzmuhbBrYlDhWcDBIQWNv4CpYC4X1E5bfmoqy
vqn8y7x+ZL4pYVhQn4MZ9433sAGzzfVEFYcyHc9AGwi7z+7LLnXJcYgfhLT1
5vFle6xh+2slziOKvjOMSWHbQWOTuRbG5rC9IJ/GVLFJsBvNsWLbfyhsTGOU
9U0VRnJtoA8LfVSSvzUoR65Z0McgYzLl0s5VksLOkWMKud/w/IxnnHKMnxW/
DGnr/fiW6fhiJstG2eai/09iNQoR9w5fFWwvVWyc39gbBMbBzjZzjEOZxuyS
cZUjXBO4XtCvD78Sv35KM24Jcy4i7sr0maNKR3a/mh3/5id5Pobtjvxe5ZZP
XvoXMZ8enunEB9/uczTjA9MV3C9oR0vBrsAzq8QDFuJ+hm8vxnXTzVuC8V9z
riW8oo1CTlVwEnWFMWY8m2BMMRORcZUlc+wBvia4nnAdok8A9z3e/8u//Iv2
r7TbtqgYZ7bNHfXzNn9vPx/6bbfShHoRH0bY/OVaB4ixgC9E0DiP+GeYPvF+
BW0uiu1nkUqFbHPNa1vmDUCulGz88bPZNuoZ8y3b+2ILY8WmL2eqMRTxlSqF
ZwoqGmXKB9MWiFL58H1IxfGojzcqIR4c7cw999xTVjacCDYD2kw80/lJbNmw
eTwynecgijYX+4k8tDju+++/3/ssH9sRiQ8ncg2E2Z4dnwKfE4lj78izFhlX
WfIbtw2K383l3Bwd1d69e3VfRUfjmeRegT/1qlWrtL8X+v3xbIs+XM557vqr
o03INj9hMQvnH76F6F9cs2ZN4DLZsL0YfU5MNiCfC5gjeZXzzTjkH8CzEub9
kX6TVLLrHHEDX/nKVwK3w/E4yk/mdSR9dUHXih/3Ci3ZJub2xP2J67Sj+4E2
PCimFf0qQfGxlSLJO1mu/ZTibyL5ODqisPEDpqJqc+FHhGu9ELEgWPcPfvAD
vT2MiQTlArRjvs25DuFvIvMESfsDf6hM952Mo4pJfu0qbC6ZRwVj0Zlc36YP
FoqZ10xyXcG3Dv03GI/Hd8gTkm6MvJyFuoF9W46MQ9sJ30JcS1FtH9cbfJsL
kT/RPIc4r+BcIZ7fsA1cQ9imbC+T60l+j/3tSH95oeubosJIxjfw/AX7zRx7
BqMyveblHkOMn+RztPPD4v6TuY5h41VqvCjGUGDnBOXrLQfh+IL6KfMtXIuI
w8f1ZeeZyacwrwza+H/8x39M8t/Kl1DPMvYHhWGrmRP8F7/4hVq7dm1Gv7cV
VX1TVCrJPAlmzkHpW8yGcSL4UmB9yNOKcTe/fPwY88My8FsuR3+LTFSOx2/b
9YWWPR6eb6XaRq6P3xzDz2Zb9u/Nfc+2rgpd3xQVRojLQ1+8+IPAv0ryDGfL
OLRtyEMOfs2YMcMbAzf9C/CKZz7haaZxOFRpKQrGRTHnsMmMfG/XHJs0/84k
ViGXMUuc45kqdsn9IX37HbHjxJcCfTZBuYDwmczJ4OfDyXuGoqhcSp49aGdW
pkzGwQZDH3+2fDn//PM9Py9Zt59gN4Jz8HnOdn9ZWFhY0hWKgnAtdJRx+I3k
UIB9hvd+dhyepWQ8EGNzthA/jLFr5Hn61a9+pXlpFqybhYWFJUxBW8I5yyhh
HLiTKeMkngbskvlBX3zxxZT9AtgWWOg3bzD8s2Q95pzqQXNGsrCwsAQVtDOM
aaAgsa0yZdyf/vQn/Sp2HArsrVTrQEwOOOZ37cGXGfsic1sh5yHWiblmJWaV
hYWFxa9IzB/aELQd4JzfszRVecqWcaa9JraXzJ3ltx58hmsRyy5atChwvVgO
fpngoD0PGQsLC0tQEaEtE8aZn1OVqWwZB8nyAwYMSMhbHiTYY1jOjF/1E/gJ
DmJZ9jdQFJVOwjm0HRj3IOMoUbaMM5+fEGsHO27lypXed37LYzvI/RPEQvkd
rlPsD9aZyuajKIqCzH4lPBeTcZQoU8bJMiaPbr/9dn1NTZ8+3fvMjJPDspgH
DMuEjQGXvkr2qVMUlYlox1GmwjIuaP4O/AZz52AdyO/83nvveZ+bc4VhXA3L
YDw4TEwmGUdRVDYi4yhTYRm3bt06zR0UxLKZOnz4sOYb1oN8XiJZH+ZLGzhw
oJcLJUyedDKOoqhsRMZRpkzGhVkOZf369V58HITrCNeVxIJPnTpVPfvss3rc
DXNey/w9krM5zHVHxlEUlY3IOAoSW0rmdxSWBF0T119/vcc45BHwW191dbU3
5mYXxLllMv81GUdRVDYi4ygRzv/jjz+ux8qQQyuVEKON5ZYvX679R4LW99vf
/lb7QoKdiOe+88471cMPP+x9L6/prj0yjqKobETGUabE/zHIp0Qk34svSbp1
Qvb8OvJb9lVSFJUvkXGUKZtXfjZWUD4BU+acVn68NH9HxlEUlS+RcYWRbcPY
LJEYskoUGUdRVL4kOZI6MicmlV6mXZNqmULMIVyKIuMoispGZFzhZLIL/Xem
Lce6Ty0yjqKobETGFUZm3e7YsUPX+01fv0lNmjRJ7d69W3//zDPPqPb29gj3
snhFxlEUlY3IuPzI9CWU908++aQaPny4N2+fxIrJHDQSVz1v3jx15MiRUD71
lSIyjqKobETG5U8mnx577DGPa5gXdNSoUQlziUKTJ0/2PhsxYkRUu12UIuMo
ispGZFz+JH7zra2tOjcjGDd69Gi1d+9enfvKzhOC5ZHrCvmvsCzOCX5PW46M
oygqO5Fx+ZfMBTpy5MiE3B7gHj7ftm1bwvJoz8E55OQ/fvw4z4si4yiKyk5k
XH71wQcf6PoFz55++mn9mcQIiB0nc4TK+BtyY+Fz2HL79+/neVFkHEVR2YmM
y5/AK9hoMg5nymaczMsudp78Bt/xvJBxFEVlJzIuf4JPJcbi0O8IOw4yfSXF
vkP+Y+EbXjFWR8YlioyjKCobkXH5FfoaZdwNc4ma43Fm7IB8Dh8TzDlj9lXS
54SMoygqO5Fx+ZPkpbzmmmt869icY9S079CO4/MhQ4bwnMRExlEUlY3IuPwL
c7JJvyR4JvUs9h1iB2Q+G8TRyedoz9PNW1MpIuMoispGZFxhNGHCBM9umz59
unr++ee9MTfExGHOUXwucXSIET927Ji27U6cOBH17kcuMo6iqGxExhVG77//
vs5PKZwTuw6v4pOC/Cd4BQ+PHj2qf8dz4oqMoygqG5FxhZGMt/3yl79UU6ZM
8dgmryjI5YV+TZkbO908pJUkMo6iqGxExkUjjL1hHA4+la+//rr3ucQQkHGJ
IuMoispGZFz0MuMJzM/IuLjIOIqishEZVxj51a3JLtt/koxLFBlHUVQ2IuPy
IxlTg8aPH6/nhkNuZryaf+M7/A0/E7yfOHGi+uIXv6i+9KUv6b/NHF+VzLxK
ZJz93CP3J+9TqlyFMZxcX99kXH4FHnXu3NmLCcCr+bfMo4Mi/pV4hY8lzgvH
51xVGuNsnsk5Z7wkVY6SecjEDy+XIuPyI2mL8BrGjsO8O8I6zI+K84JzApFx
lcc4SM4zcsAhbyle09+jp2OFoqKQff2Fvx7N/IbZbtVva2RcfiTz58jfYYS5
UyWu4I477vB+K/OkknHlyrigu9O973HsZ32iSr+GX1dpqxKv8fJQxxgnMcPZ
bpWMK37B7kOcHM7JypUrPXuw0hhnX4stLS3e3Oi5UqT16G0ax/mxUdy71Ny3
ZYude/Rsh+/Ll1i/9buvU93tpSM/X+NikXkPFuP+2TLH9NGe5Ledd687+RfM
PFlOvnX/r6r6hC7uNW5fy0bB9z73wSlFxpWCEC+H9nzAgAH6PebaqVTGwW5b
vHix9r/JpR0n9Yj4RJmjtqDy7lF/xqnTJuOWqCrHjlu8YomxAn+yJb4r7P2M
esxVXeLcINcP1mfGjxaLhBvme1GxtaM2kwuxf+mvvtO+yyX0VZ4JUaztnVLJ
6yTjikP2tSc2u9zflcY4c449KWLH5dLvwm/+2oIogXE+z6inEhmH/Vy63O2r
PO2zfDFYbeJPlSvh+QM+CBizLjbJ9Slzi9ifF6MKum8Gg1JemxarshmPC7L2
RGRccUoYh/scqjTGiWC3YRwKfjlyneZKaJuy7f/vsKx7O+m7lIyLLXM6vp5i
6J3M1l/AT7jGYcPhuMeOHZuTdeZDuIauv/56HftTzHrooYd0XwhyvxdEFuPw
FHDSKX9yyjGj/E+s4O/jTkF/BYq9nFn+pBLtNTIuGsFPRJRJveLehv+c5GiW
ueUqXeivzDXjOuLHlSuhH9rdGZXEvFMnXftg5fLleh8XLV3ifi58gwkXK6KP
Twv4Ck+8XDNu48aNen3wPy5GyX0pz0kduU/NNgL525Hnb/fu3Qnb6Yhw32A/
C+azZVzPuIrBr8NO2e+UN53yllP2xV5Rfu+Ug06pOqezqup0tnrH+M4uh5TL
uVRcM0XG5V7Z2lr4zZEjR/S8OmYfGhkXZxxec6UoGXfKaQAw+ibPtvIseyRW
3lfx59a6pStUVZdzVNPK5fr9fxvfyfJHY+twn6wKzzizLnN1vVYS40xt27ZN
rxN9tLlaZ9SMwzX+41+tV5+b8301qHquGjx3rvr0nBo1eE6tGjS3Vg2Z26BG
zZ7n2HBnq6pPflKN+F61GlLT6Fvw3csHDuj7R5TqSifj8iOzLs24uKAyadIk
rz9O+DZz5swIj6C4VG6Mg+TZ9u82bFErN21XS7a8ohZvfUUt3PayWrT9JbV4
y1b1g41b1Of/1yzn+baTmuhcD3dv+rVasGmbWrR5s1uc927Zqn7Yul6z8VRg
J2j+RMZ1/Ljl9xifqDqrSo0d7x53Lsafo2Qcnrs+cMrqF1rVBd+fo/o2Nqt+
DSgtqm/DItW7cZHqU79YXTKv0bHhzlFVXbuoodXz9Xd+Bd9tbz/kdunb17pP
fwgZl3/JPZCuSIw/Cvr3Dx8+nNDnWcnKnHFx32Sz7/6UWc7E+9fM7+xl82ER
fXTqlH62bXfK5/5mtrqopkENqFug+tct1GXA/GZ17rxaNdR5xq36wrWqqmc3
1fcLX1CX1japCxoXqwH1DercOvc3KAPrm9XFc+ZqZn6cg/s4yOP7lE9xPz/j
5TDA30HL+vl2J25FeW2UL+NSjWMWWMKkT8LXJohxGe4vaqBVjnvCeKsNt/yS
MlDBGefptGYc+h7uad2iBjW1qK5Ni73SpdkpTUtVj4V/q4Y1LnH41lVVdeum
LqptVF2bl/kWfLep7aDuA0FtnPjoZHxzZFzBZD57pbPhJN8JXmtqatQzzzwT
4Z4XpzJjnNsOnDp13LkPTinMon4yVo6bxVnsbDw3fuIsr98QRbz4zfde65LD
VFroW8T4xGeqazWjejr3eI+mJe5rw2J1rvN8i/u5avxEVdWju+r5hS+qwc5y
fRYs08++KPKb3k47MaRmvnpXhbPjJBZDfJpM+fEddfBR7O//cdYvvgJ/Vm5d
nnSWcP0FzlInz7if/ylWPlRuf2p82eT9O6X/feRWcMzfZtOGjZodXx4X67ND
PAW+j5UzZ+IlzLjMiRMnfD/3s5O8MU5nm6diORRRPo4Vs7Y+ib4XMO7Ux94F
kuAXhFAQHZf2ceypy+xLlmex0zG75LR6cXNrjHHXObV6Kr78mY+NYnEujW+9
jOkuW7bCOd4zaX0eZZy34z5uLuNw/n/YukFdON9hXONSt2jGLVRdF+AaXqaG
VDc7jOuhqrp0T8m4TznfbWw/6F2P5rYSi7vfZFz+FbavgeNuwcqUceDbByf/
R21te1O90L5ftR48qFrb33ZfnbK+7R21ZV97zI77hNq8b6968UCbW9r2O2Wv
+3rgoNq076D6/bv/re+pUzk7Rac1IzCGPrymXvVtaNH3Ou7hbs793t1pA/o7
rxfUOff9+OsdxvXUjEMb0bNlheZat2Z3+XMc5nVbsFy3C39UHWecu3dxxoHz
ez/8s9p68B31qwP71AuHDqgXDrarX7WjHFIbDxxQ/+58XtX5bFXVqZPasb9d
bd5/SG048I5Tz4f0Ms8f2K9/s955ffPPf46xzh13/GOsgM943ke/FsYX//Xl
V/XYzF9+eZJ+/17seynvxcoHsXWF8S2VnEGioHtOH/+ZOOuE8x/rcdQzCTWM
evxkLGbixIk/69f09mqmjDOevEzGxXZEmIR9lv023y9Z4uYJWrh4acIefBQr
WM2J2DED0x1lnHfsZ5THuLs3GIzzbLmFznW8KM64LmBc11CMO6nIuKhkXxeZ
XiNkXbIyYZx7757WfLu8dra6qLFBfap+gbqwbqEaVLtAlwvmNanL5tQ77bLb
N3LF9+eoQfPqnDLfub/mqwvqnVLX6NxPzeozc+rUml9t0vepbvs+zsX5Ccc4
7HcmjHPtuPTPVOkYJ/WINYEvq1o3q4vn1qlPO3Vy4fxmrwxyyqVOnf3Fd/9G
VXV32qduPdTn//r76nPVjc6yLWqoU3+fdjg9uKFJXTivVl0yv1Et3rRV+819
d/VP1Aisc16DV/dDnXZu2JwWdUlNixo45VaHmd3VJ4cMd85PtV7morp5+hXt
4ZDqFjWoptn5bp7ex8R4Q3+98cYbOiYBvov6Jz73mvgDmfb8n1WibQpGix3h
5eawlj/hrBo27YlTbp9BYpssgIozzt22ybjx3jOVu4Ss/eMkO03sbOl7MO1v
lCUrV7qMW7FK75d8dyK2r/8TOybt/3TqpK6DjsQqpWScw7bujQtV96YF+rVH
U4xxNY0O37qpqnPIuFKUX15ls8DWM/N2mb+jMmMcahH3Luw38K3zgoXOvbFC
F/ADpUvTcs05Pcbd+Rw1xGk3ezS36PtNsyPGGxTYUvdu3K79GE8U0I7r55Qo
GaeUW5ewlRo2bNH9qb2bY+MoTUtV52aUxap/fZMaMbtGVfXsrcvI2XPVuc5z
RI+GpbrPVRenXvstWqJ9DeZtfUX7j9+x5mFdt50dbupneud4uzesVD3mr1R9
GleqrrfOdJjZS1V9+mL93IHn/a4LUE9Om9jo1EHjKqeuVmnO/XesTtMxDn5d
GDM0j9u+x6T9R3u/78/HHTu+TW1qe1ttbJN+gDa14VC7evH3/6Fe2bvXqUf4
iJ2t/97i2P7r2w+oX+0/oF7ch9KuWve2O89bb6vff/Chww+35UW7fyJWhC0n
Yq//umWzqkJc4IQve/3q0jcsfBU7WOzsbc42Nhz4L8dOdsvGA4d0gS292bGr
b6+eo23s2+bWqk1vHVAb9rt9Fi+0oRxUv3Ts641vH9L9GUdi68w343o0LIwx
zr2W8YxT1aWL9iEm44pPuA7WrVun8yoizyTiliUPFeo2TJFlcU5Q8HsyzlWm
dhyuf7RHn3LaX5cbK9zS7N5P3Ras1Pacvqe64p6q022n3Ee47+TeQzt8T+s2
/bybOw+g1IzDc63HuHETtY3U4/NfcGxR59nX4VlPhy/COP2bPNlxKODHwi0v
aT+XXk59ol0Cj4RxfeeDcXMdvvVUVb26q8vnztY8xDFgvBAFv+nZ1KJ5OP/l
13Q81Dcf+Jm6wDnuXhhfdJ45ejatVN2b/1aX3s7fXW6bqW3sqqGfjjFuieYc
XrFucM6fccESxqXLOQb7CeOIP9q4wbHjq7Uv36B5jbqOUQbVNWm79i/+5nvO
9ePsY69eavR3v6suqa7XbTAK+gFw7eB3n62pUz/ask33q2K98A36r1iBTXsw
9or3T/3mVX1d/sWXJ6k/xD4/FCv4/g+xv3HMuM6xzhHfmxeza92C+sI1jVfs
f5/Pf965hrqrzn85Vo//4pnuU3XOMvOadbmwpkENq65TI74/R+/Ln1LWjnGN
BDAjFePw/Ibnn17zl+q/3et9iRrq1FdV9266Pm3GybMpykVkXCRC3cn9g/qU
OeLC+FMGFfyecpUN4/DcDSa49tsK3S4GMQ73u8sYd1nx5QD3zqtvVD9y7Jh4
/FkuFMw4uaf7NixJyTjN4Kb8Mw5tKBh3bm2TZhzsMjAOtlwXz45LZNwApy0T
VmM/44xboBodxv0/Z523/vhn6vxGMG6Fx7huC1zGaTvuthke4z5ltHnx9bqc
Q79lrhmHsSjY7csdLuHagM+6PPfo43HqG8d4+RzHfu3h2Jp9+6nPfX+uGtiw
0LOtpWD5/rUNqnnTdvW2s877n/lXNfMnP1ff/OnDunzr7x/S5da/+3s148FH
1LjZtaqqcxfVY+hwNevvfqqmrfmp+vpPHlRf//ufqJt//KC6Zc3P9OuMv3tA
7Tp0SJ/zodWNqmfDCte+1de58yzg2Lwo6Hfv9sUvuudn/ET93IdzoZ8VGt3f
dIevrnM84Nxe5dqM6bRz5059/SCm1+/acSvSn3G96pc79vpyx25frs8nrmdw
tqprd6c+++hng0DGOUzGvZ18L5Jx+RT6GeEXKTEAMt+psCpMMWPjzLgtnpcs
Gec864Fj3Uy2xWwfMAHP4rr/37mv0IbqtrNxldNWrIrZCE4b1bJEDZzfqOPU
MObzkbeFjio943o7jEObEBXjlHL7KrUdt/lVh3EOp+qX6DbKLYt1Afs8xjnl
8jlzY4xbYTBusfYDHeCso/GlnZpxt/zEYZzDDvS94pik9Gxerm3Ynrc4jOvq
8GPopbrNO8dhIQqeQ1wb0S1o3zPtqwzLuGVbtutt43lDjsVjXP0i51gdHnXv
o6r6DFCf+16Nw7jFFuPcfT3f+X39llc0P2Y59iv2eWB9izqvzinz3LHic78P
u6pFDbxluju2OWiwunh2rV6uf+MCZ90L1Pn1ix3mLnWY2aQuratXWx3GwaYD
5+WaxXVkXu+wJ7sL466bqK8hnAu53lHwzIJrcGhNeMYhhxnauNbW1qTvwthx
3WP+lbKf8COumvBVXfrNX0TGFaH8cnoHzePtVwo3/0XpKdu+SnDMZJzZt+cx
LuarrJ8nG8C4H+j2WbdVLUt0v1u2jAsez0jPONiSYEDVl537vk8/VXXtWN0m
uixI7qvEc/AfVWLuFL+C78ZNul5VnfUJ9atfb0/47pi1HArW2bLlVc2n7vOd
bTYuT2LcSINx4B3af804z05YqpntMm6X+g9nnbc88KA6b/7CBL6hIA6iv8OK
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
48pTMlfO0aNHdbw32mkwToTPzz333ITcJygDBgxQu3fvznqu+Wz31exjzZXM
nPzZrjs/jAsuZs5BMG7Vixu0/fXVn/5UDWiYr/o1Nak+zQt07mD4kSGWGbmM
B091znH3nqpq2KfVZ6tnO/d+rerntK3wkdP5dpua9e8vqa1Tv/jDe7o9wVxi
ccYlzl+XrmTKOGkjPb4l8X5ZWp+TUmCcl2fEOPaeyC1y51+rc749Q/WuaXLz
uYgvvlE/sNvJuNwwDtcLGVf+MrkBuwzsMu0axM0hPhxzW8GWq6mpUe++62aZ
LdQ5wf4g/zNi06UvNRcC35BjGuOKL730ktq/f39WdmkhGaf9yFvieTXAuL91
7k/0t3zlkUdV9ybkvmrxvsdvujj33blza9Wnb/6W9qeuuuIKNXRetRqI+ZYb
Fhp5OZboOZgvrG9Qj71/TPtpm32VEp+WHMuQW8Z5tqDXFgYzDu1yw/Z/1+2y
5PLKL+Pi3M0V47D9Xgtczuk5DeYv9Gw4Mi5zxg2dK4zrk8y42PVjMw73kJen
MweMO455kxg7EKns/jlb4F0h7TRb2D/wFUxFLJ7Ykrge+vbtq+bMmaNzrWQ6
HijHtHXrVi+PmZmnc9CgQZ7/Tdhjj8qO0z4n9W4MOO5T3K99mhYn5LrQYzqN
bo7nC2662c3R+9nL1HDnXoSN12vBingeRodFfZw2BvNoPfru+0l2nB23kD3j
GpNyjyQVq01NOH6njQKPghgXdr86xrjkvtmwjDPnb9O/i83Fafru6O+8mOj4
9grRV4ltBMXoh2JASMZJ/Qnj5NyGZVyf2jjjpD5xrQ7WdtzlzvNcXzVo2rec
a3+Je8xGrAaudz/Ghbn/0jFufbs/4/xYR8blV6hTjLGtWbMmKf8k2BFVri7s
F/YHeZ/h2wL2DBkyRNuRgwcP9nKzYN/h9xJGZv7oxx9/PCG/9NixY/W6Bw4c
6PEO+TmhMAzNLeNCcE7uVYtxGD/vF7t/zXkr0Yaeqxk3Lca4K/Q4W3/kRFyw
yl2uyc2ti3xNaJ+EccPmNnrxcaYtlE/G2XlITJbofYgxblqxMc7a7yDGJXHc
h+t+9U3GJTPO8/ON1R+OB/6RVZdfpaoGXqT63jJDDajHdld52zYZN+nn/6D7
+fPNuFOKjItCaL9lvhzU84033qgee+yxyOf5xnbBC+HNM888k2BTrl271uMT
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
cRXGOMYO5Fdm7i7pX0zVFqebF1wkOZvtzytN2TOuAuZILQDjmMuLjCsmxm1o
858j1U+cIzU3Mtkm7/3ivTuyzmzXUw7qGONWlCXjTJaQcWRcpTEO97huC87E
73s/kXG5EXg0e/ZsNWnSJO0z8sorr3ifjx8/Xl133XU6Pg5/y6sUvEfBMlIm
TJigC2T7nVTieYqacXevb1UHnHV+7aF1Oj8RGUfGkXFkXCUJLAOTkDcYfb8Y
ZzNzT2ZbZN2Var+JyLjwjHuhzTnuWjKOjCPjIDIuNwKHampq1MSJE7UdtmfP
Hu+7r371q9peGzt2rLbXrr/++gQ7TsqXvvQl9cUvftFbDq+iSj83WTGu/W0f
xi0qC8bZLMk14+w5Uhsdxp1XR8aRccXCuAPOPX6GjItA9tyedk4qSPJ82b8z
fX78flfJIuPIODKOjCPjikf2XDmm0vU72qyjyLioGAcO2YzLZL/IODKOjCsv
ie0l+SchxL+99NJL6r333ktYxk8nT57UOVEw7xzG9LAs7TkyLkrGoV2W8TjG
x5Fx6RjXLca4vM2tE2PccQdujB0orNAHKXVo2mKSqwvMMmMKTJnLg4eS64ty
RcYVlnHic1J+jLOOU9Zn1AsZl+kcqcnby+scqc6xrm/3Z5wf68i43Mm04UzZ
c3qnq2fYfeJXaY/TVarIODKOjCsuxpnnIel9BIw7pci4fAv1197ervsZzTkF
YMOhPPDAA/o9CpYxC/J6Yc7wF198UU2fPt3LYUm5IuOiYdw0H8aF2T8yjowj
48pTaIuFT3aRuQX8vsd39pwEo0eP5jmJiYwj48g4Mo6Mi07i6798+XJvjlN5
Ba9MrnXt2jVt7Hf//v3Vv/3bv0V9WEUjxoAn71chGMe+SjKuOBmXnK+SjCuM
Dh06pPsp0f+Ivkr8Ldy699579Xv53q+/EkXG7YL8UypRZFx4xuUylxcZR8aR
cZTIjnsTXxFhHPiV7XorXVEzrlJzMpNxZBwZR0GSu0T8IM2YNuTpQi7LXbt2
hcpfwvOQLM6t49+WyvGAExc6/CDjyLhIGGddt2RcZcjP7z+oju1+yZUrV+p2
PdVvKkmcIzV125xrxtm5vMqHcYwBzz3jktebb8ZxHvDikN0WB80pZy/34Ycf
ev2bO3bsKNj+FrPIuCDGLfIYN8hh0juKjCPjCsS45uD1knHlL5tlzz77rJ5H
wPS1NIv5Gf6W94iZo6Jn3I82bNI593C/9nPaAzKOjCPjyLhKlsk4+FdKHLjN
MztGzowxGDlyZMRHUTwi48g4Mo6MI+OKR8itDKE9hr+JcOv2229XCxYsUEOG
DNHvp06dqhYvXqzb7pkzZ+p2HKy755571Pvvv5+3/TMZbPvL2GOD2czPmu5a
ynSd2TGuLZlxGZZKZ9xtax5UbyrOkUrGkXFUokyGiP123333ed9LTsopU6Yk
/A7jb1h+6NChHuPy7XOyd+9eHbuHfUF/Kl5//OMfq/379+vvOzLvAfb94Ycf
1vnJMO/rpEmTNNPNccYwx0fGkXFkHBmnGedc28hhRMZFK7GHzPzKR44cSfi+
d+/eavDgwfq9OYcOzoWcE3yWD8bJth555BHVt29f35xi+PzRRx/Nevu7d+9W
gwYNSlinuY05c+aEXhcZV1jGdfVh3ID5ZBwZR8ZRcaEtljwnaNfN/jkwZsyY
Md7nZt2DDfgNGAjl67xIvmiw46qrrlJr167Vcep4HTVqlN6HTp066Rws9nGl
E2zAgQMH6vVfdNFFavXq1Xp7Tz31lLr++uu9MUkw1G9edFtkXBDjluSNceCR
jMfVv0TGkXFFEjsQwLjTZFwkAjPEz8TWnXfeqT9/7bXX9Hupf7zKuNy+ffvy
tm/ol8S+gW+2MJ+rcA4x7KaC5jY3/wa/8dsrr7xSHT58OGl5jEPie9h5YUTG
+belhWZc6fucWMfJGPDSiwF3ru2Nbf6MS5xFjowrhDDXjvhKgldm+4z2Gu32
888/n/AbnAexoVpbW/OyX8irKfal5Mc0BdvKzLUpY3NBMnO7gOuSkxq/82MS
xgDDrhsi41IwrsnN5YU2iYwj4yJhXCFzecUYZ/f+kHGFleTswuvFF1+sWSLj
ayKwAJ/DHwOS+m9ra/PmKsB4Xkd8PoKEcTgwA74tQfsP4Xsst27duqTvTJk2
KMbZTH+aoOtKclEfPXo07f6ScYVlXJemZMb1ayDjyDgyjopLxt/QLoufRW1t
rc5bKd937txZf75nzx7vs1mzZnn9m++++646ceJEzvdN/Fquu+66lPs/ceJE
jy1QqrkQhOsjRozQ68a4nvzGT7KuTPwq8UrGkXFkXAUzzjnWje0HybiIZbIA
MQAytoWCcTDRjBkzvL5MjHuZy4Ev+YobuPHGGzV34cefiln4HvsyefJk77NU
kn5WFOlnRY6Xuro6zVPED1RXVyf5saRb57JlyzxbON11GmdcGceAs6+SjCPj
rPuejItSiBsQPwu08+JLCP716dMnwa8eBXOkwr8yH/2UEPiJ7Yl95ieTcYhr
SydcP+hnFZ9J+JqYzDaPDwV8R734cfOgwyeMB6I/F/6Yd9xxh2fHkXFkHBlH
xpFxxSNpw1G/YNvOnTsT2AUfRsSHgzuw5ebNmxdqjKojEr9H2Eep9lsYBxss
nQ2H719++WWvn/Waa67xmP7MM8/oscWnn35a3XzzzR7zMBbpx/GWlpaEvJ3S
15tqf0X5YFzR5WQm48g4Ms6678m4QsqM+UrFBmnfsby9XNC8BLmQxA3AjguK
T7MZJ0p1nZgx7yiIizNzvshvly9f7rHQz68SPjHYR+RBQ0GMgexvFHZcKTAu
H3OkknFkXBDjEtZvbY+MK0+ZeR/NV9Qt2mb045mfQ5IPRQqEGAPYK/mcPw7M
Al+wHeGrzVTxl8F4oTmGGCQz5h3rlhwuftcVlh02bJg3xpZOWCbssomMq4A5
UgvAOObyIuNMxsn6vfNjvc834za0tet7XLdVZ+L3vZ84R2ru5GeHoX2X8Sfx
s/BjnPle5ikAK/zWmwvd9PWbvGcbm2/m9vx8TvyYJZ9JjhYU+JakksQYoC8z
nTrGuBVlyTiTJWQcGUfG+YuMy42kz9EvZ7/ky4KNYzPEZhwEFgon8tVXKbED
GJfzs+PEJsX4oPh6yPH4MQ7HL+ON55xzjv5NKp9NCN+jbrAPYfY3Ssbdvb5V
HXDW+bWH1un7lowj48g4Mq4SBRsMdYq2GK/oC5S+O8ydg3Eo6bvEd2jnZW4d
KZg3TnwtTN7kUo899pjOo4L+QshmHGLypD8R+4LxsTBxAyjI3yU5l4P6v7Eu
2HlYDj6T6UTGhWfcC23OcdeScWQcGQeRcbmV2EdBc6Ha832b837bBbEGfnZe
LoRcWtIfKrm87DkOMAe55M185513kuzPoOulpqZG/0b4Cdm2LSR+JPfff3/a
/c2Kce1v+zBuUVkwzmZJrhlnz5Ha6DDuvDoyjowrFsYdcO7xM2RcBBIfno4W
jJchxiCf50Ty/yOGDfELph2HuL3LLrtM+5vYOZkhzAkH+xPMQU5Ocz6Ft956
y2P3d77znaTfgo933XWXXgZxgGHmgiXjyDgyjowj44pDdj3aPifoexTbLEyd
5ysOHPYb+ivBGnBO5tZ54okn9FwE2Gcwzi8vNGLCxd40czrLcc2ePdvjHHw4
f/azn6nt27fruXTgYyJ18otf/CLUvpJx0TAOHLIZl8l+kXFkHBlXHhL7x8xN
LPUJjqB9Bj/ku3SM8+vby4fAHMxTJzwz+0qRfyVofjfEEmB5FOQhgez8k8jf
FWSnwn7DusVXJZ3IuOgYh3ZZxuNKPz6OjCsXxh134HYqBrjTiozLt4L8H9F+
m316fsv7/db+Pp/6wx/+oGO1b731Vm1zTZs2Ta1ZsyZlHyJsPVw7OLZUc+Ng
3K+5uVnnx0SfJ/KaYPwNubqgsGONZFxhGSc+J+XHOOs4GQOeFeOijgFf3+7P
OD/WkXH5k9l+m/2NYfKX5MvXJJXEDrVt0qBlzdew6w1aTzqRcWQcGVdcjIsy
l5cf404pMi4KmaxCXyXm/oa/pM041P/VV1+tYwuQy7iQfEvF23QcTvd7e11g
vd33GXZuHTKu8Iyb5sO4MPtHxpFxZFz5y+SUzEmK8SvkX7S5gBzEMlaFHFiv
vPKK/hzLnDx5smD7DAbJfHVhtuuXZzPVus3xSvmMjCPjyDgyjowrLZntOfwO
zbg4zJNqCz6XGK8yfTIwzpUqDi2X8svnlapPNd33uRZjwJP3qxCMY18lGVec
jGt3GKfIuIgl/ZSIdUP7PHDgQB3zFpSjGIKPIvgmeVEKdU7IuPJhXC5zeZFx
ZBwZR/nJrEvxscccaunG2fC7Bx54wMtBUqhxOTIuNeMqNSczGUfGkXFUkDBW
BT8TiYW248dMmX6Xx44d8+YFzXeuE1F5M86/fS91xplxSuDEhQ4/yDgyLhLG
WdctGVf+Et9BmU9N5smB0tUzWCi/QY5nyp2jQOYySKdExpXpHKlW25xrxtm5
vMqHcYwBzz3jktebb8bh3j6p4jxzGXfa+8c5UvMvM15AeJUuL6Ppxyi/efnl
l/O6n6UiMi6IcYs8xg1ymPSOIuPIuAIxrjl4vWRc+cvMUQwfEtTxunXrQv0W
+Y5lzrl85aosNUXNuB9t2KT2OuvE/drPaQ/IODKOjCPjKllmf6TMuQ3W/eY3
vwnM+QW98cYb2v8Sy99www1kXExkHBlHxpFxZFzxyPTF+N3vfqfzHovvCeZX
QzycfI96x7gb5hRFHmSJpXvttdc4RhpTdoxrS2ZchqXSGXfbmgfVm4pzpJJx
ZBzlL2EU7LMBAwZ4/pL2/KkyF6m8xzzd4rfC80LGkXFkHBkXY5xzbSOHERlX
PBLO7du3T+ertPlmMg+5Tnbs2JHgf0JbjowrNOO6+jBuwHwyjowj46j0gn8l
+ioRr4H6X7ZsmXryySfVm2++GfWuFa3IuCDGLckb48AjGY+rf4mMI+OKJHYg
gHGnybjIlSpmOlV+L4qMC2pLC8240vc5sY6TMeClFwPuXNsb2/wZlziLHBkX
lXbv3q1tN8yxM27cOLVnzx79+bPPPpsw32ihcoiUgsi4FIxrcnN5oU0i48i4
SBhXyFxeMcZ9lHTfk3FRCjEATz/9tBo0aJDOXSk+Jijbtm3T348dO1a/r66u
1v2Zcj7s+dYqUWRcYRnXpSmZcf0ayDgyjoyj4jJtsEcffTTBb3LkyJHe35hr
AJo8ebL3GeZLtddRySLjyDgyjozTjHOOdWP7QTIuYplzhyL2rVOnTrqNHj16
tGpra9Ofiy8lclpCqP8HH3zQYyHmBOc5ccUY8MIyjn2VZBwZR4UV5v1GHY8a
NUq/l3q2GSeSPNnDhg1LWL6SRcaRcWQcGUfGFY8kB9fRo0d1/Xbu3FnPH2fK
ZJxZ9wedthnfocDmY39l9IwrupzMZBwZR8ZZ9z0ZF4XgTyJx3nbuSZNx+M78
XsblbBuvUkXGpWdcPuZIJePIuCDGJazf2h4ZVxmC/YVYb7TN8KXEe5Njkt8E
y6DupUDCRfij0I7rCOMqYI7UAjCOubzIOJNxsn7v/Fjv8824DW3t+h7XbeOZ
+H3vJ86Rmh+BZahP5C6RfJTiayL1bI/HyeeY+1vsuEOHDkVzAEWmjjFuRVky
zmQJGUfGkXH+IuPyK9TplVdeqXmFupbPID+fE3wn5+Siiy5K8M+sZAnj0N+Q
Tvlg3N3rW9UBZ51fe2idvm/JODKOjCPjKNcnErFx6KtE3yPmBReZfZVS97Ks
9B9XsszrkYwLz7gX2pzjriXjyDgyDiLjCqOJEyd6/Y+zZs3SPpYy5nbvvffq
ub+nT5/ufXbNNdfoXCeVKunrBdNaWlq8HDAZMa79bR/GLSoLxtksyTXj7DlS
Gx3GnVdHxpFxxcK4A849foaMKyKBV1OmTPEYZr5KkRxfmF/nvffe0+286YdS
iTLrRRiXbm50Mo6MI+PIOBEZV1jBfkPOLslVac6RetPXb1Jr1671lhW2VfJ5
wXWJ/NWwg1Ff+DudyLjcMQ4cshmXyX6RcWQcGVcZQt2CWRIHh7/ha4I8X5gT
FRKm4VWWl9dKlDnvAq5T2HO4TtOJjMst49Auy3hc6cfHkXHlwrjjDtxOxQB3
WpFxUcpsq4VbpuzPTKYJDytRZp2gjzKsHw4Zlzufk/JjnHWcjAHPinFRx4Cv
b/dnnB/ryLjCSDh38uRJPU/cypUr9bgbCvwpUP/4HDzDMhDn1ImLjCPjyLji
YlyUubz8GHdKkXFR6/nnn1eDBw/24uLE70TyoODvXr16qcceeywp70mli4yL
hnHTfBgXZv/IODKOjKssrVu3LsGHEmXSpEnahsNc4OJ3IrFxd955Z9S7XFQi
48g4Mo6MI+OKR2aOZfiWiM02dOhQbadJ36U5VvfEE09oO0/85TFvOM+Jq6wY
xxjwDjOOfZVkXHEyrt1hnCLjikCo06uuukq3zxdeeKGOk7P5JvWOcbg//vGP
Xu6vESNGJHxfySLjwjMul7m8yDgyjoyjUglMk/5H2G8iP8bJ2Ntzzz3nxc4h
FpyKnnGVmpOZjCPjyDjKT1KX6KcUv5IPPvhAfyaxAn6Mk79lzA7zz1EdZZx/
+17qjDPjlMCJCx1+kHFkXCSMs65bMq78JexCvmXhlSiIceb3mDccv8HvGUPQ
EcaV6RypVtuca8bZubzKh3GMAc8945LXm2/G4d4+qeI8cxl32vvHOVILI7AJ
c8YJ48wcy36Mw/LwUzl69Kjno3L48OGodr+oRMYFMW6Rx7hBDpPeUWQcGVcg
xjUHr5eMqywNGTJE1zHiB0Sp7LjVq1drvl199dWF3tWiVdSM+9GGTWqvs07c
r/2c9oCMI+PIODKukmX2L8LXBP3B/fv3V6+88oqvX6Vwbs+ePWrAgAGacU89
9VRUu190IuPIODKOjCPjik/Crurqau1fiTwmqOtDhw4l+Jq89dZb+vMePXro
8/Hzn/88cJ3p5pYpR2XHuLZkxmVYKp1xt615UL2pOEcqGUfGUYky+x/teeLM
+eLM9506dfJdzizwRRkzZkyERxaNyDgyjowj4zTjnGsbOYzIuGiFeG6pT8nT
lY5fKOecc47HRDOPpfkZ8jhXmsi4wjKuqw/jBswn48g4Mo5KFOy5xYsX67k9
MdcA/kad47WlpUV/hlfUP+I3UPD38uXL9av8prm52fvuoYceivqwCi4yLohx
S/LGOPBIxuPqXyLjyLgiiR0IYNxpMi5SYQzN7L/08zexX2VOVVOVmtuLjPNv
SwvNuNL3ObGOkzHgpRcD7lzbG9v8GZc4ixwZl0+ZOUvMmG9TQbEDIjOPV6pY
g0oQGZeCcU1uLi+0SWQcGRcJ4wqZyyvGODszBhkXjVCnGzdu9N6nihswhRiC
YcOGeesg48i4QjKuS1My4/o1kHFkHBlHJQp9jfAbueeee/R78MmPWabNh/E3
yXGZatlKEhlHxpFxZJxmnHOsG9sPknFFJPGZvPnmmxPyednau3evGjlypOeD
Cc5RrhgDXljGsa+SjCPjqLCaNm2axy30P+7cuVPXNXKhSJ0//vjjqk+fPl58
APJ/IR8z5YqMI+PIODKOjCs+iV8k+irFnkNOL5lLDnYdGGjGyM2bN0/PwyN+
lTwv0TOu6HIyk3FkHBln3fdkXKFlMgrl9ddf13ac2HTf+MY3VN++fT22DR06
VK1fvz7h9/lWqYztkXHpGZePOVLJODIuiHEJ67e2R8ZVnoQl7777rrrjjju8
8TYU+KQgRjyK/fFjXK7nq7NjAO15z8OIc6RGyzjm8iLjTMbJ+r3zY73PN+M2
tLXre1y3JWfi972fOEdq4STtO9ppyc0FvqHv8p/+6Z8i37dU3+Xj2hD7Nsy6
O8a4FWXJOJMlZBwZR8b5i4wrnPbt26dzTUpfJdiGvkq8R5k6dWpC3He+lIpZ
5ufCoFxvW9adiaJm3N3rW9UBZ51fe2idvm/JODKOjCPjqLgeeeQRPa+O8G3C
hAl6jm/4nEyePNnjHHwr77///oLu23PPPaduvPFGde655+p9A3dvueUW9eyz
z+rvc8m5I0eO6DFJzLGA2PiwPjVkXHjGvdDmHHctGUfGkXEQGZc/SX3e9PWb
vLlz0EeJdtqO6YafJRgjsd/XXXed2r9/f97nirv99tsT5vrBPppz/syaNcv3
mLIV1ieczyQ2IivGtb/tw7hFZcE4myW5Zpw9R2qjw7jz6sg4Mq5YGHfAucfP
kHERyrRNTBtt06ZNgXlL0Jc5evRojwGwp/Il4arwrK6uzmPqQcf+mTFjhjdm
iPla/XJHZ7q9f/7nf06IkZC6CCMyjowj48g4Mq54ZPIAbTPG4RDzZn5vFpOJ
yOUldl8+fV3RZygxDPY+QxgflJgG+7gyFY4dfbWIbReubt26NfTvybhoGAcO
2YzLZL/IODKOjCtvoU7vvffeJI4FMU7m4Pntb3+reZAvxr322mte/ALsRxHm
dhW1t7d7c5Pv3r3b2+9sNG7cOH2dYQyOfZWlxTi0yzIeV/rxcWRcuTDuuAO3
UzHAnVZkXDHInj/OfJXcXqbgY5kvxq1evVrzbcSIEb7fY7snTpzQ34Mt9913
n/7cngcvSOZ+S44XucakrzIs47AuuU7JuMIwTnxOyo9x1nEyBjwrxkUdA76+
3Z9xfqwj4wojs25hE6Gthi/jtddeq20qfP/UU0/pMbFCCPOMgzM33HBDyv2V
/krsb6b+L2DTrl279DikydKwjDPrTHIV4DpNtx9kHBlHxuWfcVHm8vJj3ClF
xkWtp59+Wg0fPlyPR4kfCtrt1tZWzQP050m+SsQViPLhWzl27Fi9LZz/IFsR
dqWwZdKkSfqzTO3KUaNG6d+DdSLJO71lyxbf39jxexI3j9+FyQdDxuWOcdN8
GBdm/8g4Mo6MqywhPk6YhjGuK6+80mvr4V8ITZkyxbNx4F8pykd/JeLzsB+w
5/wk+UfwPfYRPjMQPgtirh0/jmsK/aE2l8LYcagvxE9gP7FtyfMZJuccGUfG
kXFknIiMy4/Mdnjbtm1ebkrYNeLjIcwTxoEdDz74oOezH2bsKVuNGTNGbz+I
cSKZr1UYl8qmNK8f2KZg6FVXXeV9JtyUukC9BAnHDntX4gWFi7he08ljHGPA
O8w49lWSccXJuHaHcYqMKxJNnDhR17HZ3kM24yCcAzkngwYNytvcOtgnbBsM
CxL6KnFdYDnYVLJ/Qfsj18+xY8e0Tyj4hLny7O+FW6liB9ra2rSdhwJfTMlj
3dLSkvbYKp1xuczlRcaRcWQc5SfxkURcmPjoP//88wl+iSbjTG7AZ1/slrff
fjsv+yd5M4NsRemTXLBggd4PjBWGHRdE/Dh+g5gJWZfpP4rtwkYDv/xyMvvF
m8t4HJgcuq+SOZnJODKOjCPj8ia0xfCrEF7JZ9JGm4wDP0yG4Dtw0eZfriR2
0ezZs33ZJXFy8H/BcrfddluoHM3IfYl9R9w4jh22Gsr27du9Ise9Zs0afXx7
9uzxXZfsF15lrobm5ua0x5bMOP/2vdQZZ8YpgRMXOvwg48i4SBhnXbdkXGVI
GCfja8Ixu89OfC9MW0e4CD7kg3Gwh7Bt+FeKLWXbTthX097zm/vNvmbgXyK+
NGaB3Sb5Tcx5hcyxPltmjLwwDvud7jpNZFyZzpFqtc25Zpydy6t8GMcY8Nwz
Lnm9+WYc7u2TKs4zl3GnvX+cIzX/Ql8l2uK9e/d6vMLfpkzGmX12sGtk7lT0
W+YjdgBxDFg/cmKmykOJ2Dbs+y9/+cuU65PfPv7445pZdgFLMaaHV7Hj4FuK
9zU1NUnrsuMH8AyG/eU84DbjFnmMG+Qw6R1FxpFxBWJcc/B6ybjyl1mX8DVB
u46xLbP9FvbBB1HsO/E5wefwlzdza+VSiL+T7SM3s18OlnXr1nl9pmauTfMY
bS5Kf6ZdzHVLfKBtv9rbNxU14360YZPCEwru135Oe0DGkXFkHBlXyTLb6bVr
12pOwJce/vJ+43GyPHhj+snns/9YfEMwVytsR3Nbkp8E32M5sSVlGdhe8M2E
LwrytKQTjlnWIX2Ufn6VQcdLxpFxZBwZR8YVr9BfJ+NUM2fOVE8++aQ3VoVc
kOCgzK2Gthz9eMhXmcpXvyMCb+CfP2DAAL1f4Bn8UHAdgGnow8R+4Pu33nor
6fcSX2fHPgTJnodB7LhM5tbJfDyuLZlxGZZKZ9xtax5UbyrOkUrGkXFUamG+
b+R+lL4/cx41c45SfIdxK8nllS87TvpGYa8hp4q5H8JZ5Bh5/fXXfX8v8XUo
iF8LIzkWrLtz585eLq8wx0jGkXFkHBmnGedc28hhRMYVp+DrMXny5IR8lVKQ
oxljYFEIsdrIsQKG3H///V5+ySCegH1gGzjlN1Zny877gt8dOXIk9P6RcYVl
XFcfxg2YT8aRcWQcFSz4Woq/JeoabT04gbniUrXbto9hLiRjY6li3mQ//bYt
42v2fECp5OefElZkXBDjluSNceCRjMfVv0TGkXFFEjsQwLjTZBxlKR/szJfI
OP+2tNCMK32fE+s4GQNeejHgzrW9sc2fcYmzyJFxlKtS4BwZl4JxTW4uL7RJ
ZBwZFwnjCpnLK8Y4uweJjKNKWWRcYRnXpSmZcf0ayDgyjoyjqHyIjCPjyDgy
TjPOOdaN7QfJOKqsFHW+ykpjHPsqyTgyjqIKJzKOjCPjyDgyjipXRc24osvJ
TMaRcWScdd+TcVTpioxLz7h8zJFKxpFxQYxLWL+1PTKuMoQY6TfeeEPndkTu
K+RbprJT9oyrgDlSC8A45vIi40zGyfq982O9zzfjNrS163tctwVn4ve9nzhH
an6F3PoylwzmDy2luOtiUscYt6IsGWeyhIwj48g4f5Fx+RPqE7Yccvqjjm+4
4Yaod6lkFTXj7l7fqg446/zaQ+v0fUvGkXFkHBlXyTLzPMJ+k3z+yGXMes5c
ZFx4xr3Q5hx3LRlHxpFxEBlXGE2fPl1zbtSoUWr//v3e52BhqrzGHCN1lRXj
2t/2YdyismCczZJcM86eI7XRYdx5dWQcGVcsjDvg3ONnyLiIJfUpDHvggQf0
3KNgHZh377336rkHMFdoUAnK+19pIuPIODKOjCPjikdSl2AUfE5k/lOZfxSc
w/ug+VKlUK7IuGgYBw7ZjMtkv8g4Mo6MK09JHyPqVMbi5NWcC9xvrlRzPm6Z
563SRcZFxzi0yzIeV/rxcWRcuTDuuAO3UzHAnVZkXKElfYwomzZt0vNeo6D/
Uf5GXAGKfI7lMGcqCt6jH5NyRcYVlnHic1J+jLOOkzHgWTEu6hjw9e3+jPNj
HRmXPwnj/OoV9pnZn5luHvBKFxlHxpFxxcW4KHN5+THulCLjopDNOLMPc/fu
3aq1tVW9//773vfSN8lzkSgyLhrGTfNhXJj9I+PIODKuMmQyDnxDPq8pU6Z4
Pid4BefAtmnTpml/y0OHDiWto9JFxpFxZBwZR8YVn6ROYauNGDEiwZ9SfE8w
DgeNHTtWf4a8KA8//DBtOkOMAU/er0Iwjn2VZFxxMq7dYZwi4yKUOd529OhR
Hfst/pIzZsxQTz31lPd+/fr1erlnn31WDR482LPvdu3apT/neSHjMmFcLnN5
kXFkHBlHpdPy5cu9WICnn37aq2eJGYAdZ/Lwqquu0p9PnTo1yt0uKkXNuErN
yUzGkXFkHBUkqc/evXvrOgbrzLxdwjjECogwZgd7Dp936tSJ5yQmYRyu13RK
Zpx/+17qjDPjlMCJCx1+kHFkXCSMs65bMq4yJL6T0ie5b9++hJhuYRxi4exY
b2Hc9u3bK/K8mMeMv7NnXJnOkWq1zblmnJ3Lq3wYxxjw3DMueb35Zhzu7ZMq
zjOXcae9f5wjNf+SukQct/iZQOY4ndlXaUu4iBjxSmScLfRRynXKecBNxi3y
GDfIYdI7iowj4wrEuObg9ZJxlSOZI9Uv96T4lsCOg8SWw5icMA7fVTLjzLxm
KJmPx+WGcT/asEntddaJ+7Wf0x6QcWQcGUfGUa769++vOQdfStSx1LO03xiP
Q7stnz/33HOe7Vfp+SrtXJ5hrlMyjowj48g4Mq4wArtmzZql6xjxcTI3OOpa
7BMzLyVsuNGjR+vvvvGNb6ScW66SBPsNdZUZ49qSGZdhqXTG3bbmQfWm4hyp
ZBwZR/kLTNu7d6+25VDP1113nZfHRGwU9GeCe+3t7erqq6/2bDjpw6QSGRe+
r5KMI+PIuLJjnHNtI4cRGRet7BwlyOFlji1ddtll3nvYd0OHDk2YfwfLU3GR
cYVlXFcfxg2YT8aRcWQclSizTpG3ZOTIkZ7/hD3WhPeDBg3Sdp2poLkLKklk
XBDjluSNceCRjMfVv0TGkXFFEjsQwLjTZFxkMttkjK/t3LlTt9njxo1TEyZM
UJMnT9bx4YilE8l8O+nm3akUkXH+bWmhGVf6PifWcTIGvPRiwJ1re2ObP+MS
Z5Ej4/IpaYftV1NmfQfZarThXJFxKRjX5ObyQptExpFxkTCukLm8YoyzvfHI
uMLLrE9z3jjYcib77Db7rbfe0nlnJKcHGUfGFZpxXZqSGdevgYwj48g4ypX0
McL3BLFx8JNcu3at950pOwYOeU9kjO7kyZMF2+diFhlHxpFxZJxmnHOsG9sP
knERy6xL4RU4h3l1zGVshqH9RsyA+KBQrrJjXBnHgLOvkowj46z7nowrpMx2
2PSbhE137bXXqiNHjiT0X4rwmWnHsZ/SFRlHxpFxZBwZVzzyYxxsOIkXuPLK
KxP8KE0hdkB4SLmKmnFFl5OZjCPjyDjrvifjCimbcWif0QcJrvXt21e/79On
j28sHPsqk0XGpWdcPuZIJePIuCDGJazf2h4ZV/6yGYexOOHZQaftlVhwfPfo
o4/qzyVfs/RV4nv2VbrKnnEVMEdqARjHXF5knMk4Wb93fqz3+WbchrZ2fY/r
tuBM/L73E+dIzY/8+iplnjj4mWA8burUqR7LkLdZfgcWknGJ6hjjVpQl40yW
kHFkHBnnLzIuP7IZh7G1LVu2JC03Z84cb85vjNG9//77ZJyPombc3etb1QFn
nV97aJ2+b8k4Mo6MI+MqWWZstzmnt3xnCnFzsswll1yi7r33XjLOEhkXnnEv
tDnHXUvGkXFkHETG5U8m42CnCeMkPtwsO3bs8OZSNWMNmK/SVVaMa3/bh3GL
yoJxNktyzTh7jtRGh3Hn1ZFxZFyxMO6Ac4+fIeOKQKhT4ZbMB+dXz8h10tbW
pufZMecioFyRcWQcGUfGkXHFIzO+e9KkSWr8+PGB8XDm8h988IGe/1sYh8/t
XF+VKDIuGsaBQzbjMtkvMo6MI+PKT+ZYnN0nGVbwwVy/fr23jkoXGRcd49Au
y3hc6cfHkXHlwrjjDtxOxQB3WpFx+VZQ3fmxDnYZisTDyefme4j2W1xkXGEZ
Jz4n5cc46zgZA54V46KOAV/f7s84P9aRcbkR6m7Pnj3a/kKMwOHDh73+xxdf
fFGPxUnZuHGjLlgWRT6337e2turfk3VkHBlHxhUb46LM5eXHuFOKjMunUHfX
XXedFwu3bds27zvxkZRi+pSY35nvZT3MPeOKjIuGcdN8GBdm/8g4Mo6MKz/B
r0T4BFvOjo/LplCuyDgyjowj48i46IS6+93vfqdj4NDPiHwlYoOZ/ZAo6INE
sfss/d5TrhgDnrxfhWAc+yrJuOJkXLvDOEXGRajjx497f9v9jZn6WFJkXCaM
y2UuLzKOjCPjKFN2HZJnuVHUjKvUnMxkHBlHxlHQRx+5sxmZsQBBIvcyF+fW
8W9L5XjAiQsdfpBxZFwkjLOuWzKuPFVTU6PGjBmjfU8mTJigy7hx4xLey2fy
ufmd+R4+miiF0q5du9SaNWs0Q1avXq127typP8c1IfxOJSwjfbJmbhaZDw/X
17Jly9TDDz+sc5aZcYNhxDlSU7fNuWacncurfBjHGPDcMy55vf9/e2cCZVVx
r/uOSINM3c0gIjbYzWCMEgUTcxMjKhfN6BA1L8YBr0bvyo0MPY80IINJNBqi
Jt4shOWU9aLChXiTGBm6oYFoHihEE1cUaLqbUTTKoFESsV59tc9/d53qvc85
PXef8329ap0+e6hdVbtO/epfY0czDr/t46qJZx7jTvh/3CO1YwQ2YS/UoHkC
LZ07IN+hRBjTGoFDmNNnr5GJ+QrybOzjGmv9MVv22mWi+fPnq6FDh6r09PSo
+GJ96ltvvVUdO3Ys4bCScWGMq/IZl62ZtE+RcWRcJzGuPNxfMi45lZ+fb2yv
qVOn+jYZvts2mxyT4/Y5+7vYch1pW+/atUsNGjTIvH+wCNxBfsB+rRkZGYYp
OL5z586E/LPDOmvWLJ9t2BcPNhz8njhxojkOv/H/kSNHEvK7qxl379pqhVTA
73WwLg/IODKOjCPjKBW4N467hpcoaJ3Ljnon8Bssw7sHz2yO4ZlouwTfcP6O
O+6I658dzk2bNhl7Fk72N7dt0WXLlvn26k9/+tOEwkvGkXFkHBlHxnWd3P4o
KNYalonaZx1lx2F/AzAI7x7MCXru448/briC9kusTRYvnBLWadOmGb9zc3ND
1yG75ZZbfBsvEbWOcfXNGddCl+qMu+HBR9SbinukknFkHNUk1/5ymZaIHdfR
WrlypeFQVlZW6HsHn3Ae+QPXx1s3U/wZM2aM4RH2Mw/zG+vASL9jIiLjyDgy
jowzjNN5G2sYkXGdK6Qd7CEZPyhtfzgux8QhreFw3D5nf8f5hQsXdhjzKioq
zHtHv1+Y8Gz0DcKOA2MkLEFjYOxjGFMi65mF5Sms5yljXBKJIxnXuYw7JYBx
Q4vJODKOjEtVodzFeBHZ89tehytoLGU8h3tgZ4nf7S20FcJ/jA2J1aZaVFRk
woLxKImEA9fI3glYzwwKYiJsPDwfYzoTERkXxri5HcY48Ej644o2k3FkXDeZ
OxDCuBNkXIdL5g4gPWXfAaQpvssYDDlvzxGQ4/b3jl6TefLkyf57DxNYIvkD
/G6NgniEvsCBAweaeMKeDGIg5tChngBbEGt7grGwD217MkwpwTi5rpMZ1/PH
nDjx5BzwnjcHXOftdfXBjIveRY6Ma2+Flb1uP1ai/XEd2TfXGYwLCv8777xj
bDfYu0OGDDHfgyRrEwjrpQ6Adtx4+TTlGFfmreWFMomMI+O6hHGduZZXhHFu
zZiM61iFjcdoLaeC5hy0pzqacXbYkTb4/tprr6mcnByfW7DR3GtF6NtEX+Dl
l19uno0xmuAc+ivjiYxrO+P6ljVn3OASMo6MI+NSVbYNJmU61Nr5cfaxjlBn
tVUiLQ4fPmzWORO7DOMuX3nlFf+asHxnH6+srCTjyDgyjowzcV3X0EjGdRO5
3EKZj3H46FeS9VDwifTHcXeOAb4fP3683cOFdTXx3uMxQ8ZfIpwSpqB8EjQ/
EML4EzBN1gi7+uqr/bEoLRHCifuRbvHUxLgkngPOtkoyjoxzfvdkXGfLtdFW
rFihRo8e7Y83CRpHOWzYMLV06dKoOXYdYcvhfeO511xzTWjY4a6//nrDJ1mz
OywsbljBPPBI5hEg3qtXr466tiUi48g4Mo6MI+O6j9w1udC/JOMmZH4B2v+w
JqXYVMI9XHfnnXd2KOMeeugh86xJkyYF+i/HsKYkwrN48eK4fYT2uYKCAj+u
YivChrXbcVuirmZct1uTmYwj48g453dPxnWmbMZt2LDBnw8Ae0bsNLesBwcx
tkJYt2rVqii/2lNYj1JsyLq6usBrGhoajB2G8GzZsiVmm6m7XqXMg3jiiSei
2jdbm8fIuPiM64g9Usk4Mi6McVH+O88j41JDwibYSkhj8AvjL4KYJWmP87Cd
cH2i86NbIzxPxjhed911PnNtjqEdE4wDl11hTx7M8wa/Ze8AGVsq41kKCwub
2bNB4UhErWdcCuyR2gmM41peZJzNOPHffz/O945m3Nr6BvMbN2XKJ02/+yBx
j9SOFZgl7Y+waaB4fVrPPPOMb2NhvnRHCWsuS9iwPwDmXUOw37CuMviGtkbY
na6EY8g7GFcigk0ofsJ/zOMGC3ENHOYL4Lt8Yn+6eOtgQm1j3IKkZJzNEjKO
jCPjgkXGdYyEVyjjpR8O850TsVvwHqRtE1zoyPeCfXPc/VntOdeyN44rzFuT
e2DLiTA2NNbaZXJOPhPd67yrGfej1WvUbu3n15c8YX63ZBwZR8aRcZQ3dl7K
dChs3IZ73J0n3d6ScZv4RL8f2iWxjxyeiX1T8V34GsRljCmRfVzRtyfXPPbY
Y2YuBM7Ze77K/zgu3y+66KKY62XaIuMSZ9zz9TreBWQcGUfGQWRcx0ja3xp1
OYs2P9hFR48eTehe2HvCuEOHDgWu55hqahXjGvYGMK4qKRjnsqS9GefukVqq
GTe8kIwj47oL43br3/gnZFw3EOwbzIG29yKNl84Ypw8mXnDBBZ0RxB4hMo6M
I+PIODKu+8hOS7TfgXGZmZlq69atofeAh1jjCtfheswZpzyRcV3DOHDIZVxL
wkXGkXFkXHJK+qeknRH9TrDNwC/M08DYRVs7duwwa+pjLX7w7amnnjLH+U48
kXFdxziUy9If1/Pnx5FxycK4DzXcPo4A7oQi4zpDGEshYxLd9brs/ePgMCbf
dmHjEPlOPJFxncs4GXOSfIxz4sk54K1iXFfPAV/dEMy4INaRce0j2QccXJI1
Gluz/7c7xh7i3Hwyjowj47ob47pyLa8gxn2syLiOFMZRYq400hP7wKAsRpsk
vsv/tsOxoON4D3A4l8g+MqkiMq5rGHddAOMSCR8ZR8aRccmpRNbsaIlkDaxU
fzdkHBlHxpFxZFz3UdicNuGVrFMctB8bzstaV3wnnjgHvHm4OoNxbKsk47on
4xo04xQZ14WyuSW2HY7F2lsGx+Va6Y9zx1+mqsi4xBnXnmt5kXFkHBlHhcnm
HNY7Rhpj7SvZ/9t2OAaHveRk34H09HRjz/G9dD3jUnVNZjKOjCPjqHjCel5Y
AzLWHIGgMZWYS9eR+w70JHFvneCyVOIDTozU/CDjyLguYZyTb8m45Jedlli7
X/iFvdhgrwnLzjvvPH8/cFnzCy4vL8/sO0N54h6pscvm9macu5ZX8jCOc8Db
n3HN/e1oxuG3fVw18cxj3An/j3ukdrzs/UaFZ9jHRtgne7dhnzYR0l/WqgT3
5H2w7kHGhTOuymdctmbSPkXGkXGdxLjycH/JuOSXjB157bXXTNkMt3PnTv88
uIVj559/frN0v/766807efLJJzs1zN1ZXc24e9dWK7w9/F4H6/KAjCPjyDgy
LtUFjmGPVGGcCOmMuQVon3TX68L/mDOA4zk5OXwnEZFxZBwZR8aRcd1PGBcp
fWyQ8AxpfdVVV5njdXV1zdojZT0w7CVHtZZx9c0Z10KX6oy74cFH1JuKe6SS
cWQcFS1JS+yVI+MkDx8+bI4Jz1Bu4zhsPZdxso7zpk2bOjfg3VRkHBlHxpFx
hnE6b2MNIzKuayXMwqfsl4P1LOUY3KpVq8x8AoyhRNrLPbIPOBhXXV3dZXHo
TiLjOpdxpwQwbmgxGUfGkXGUJ7tNUuYOZGRkqOXLl/vHhWVZWVlRNt7DDz/s
j8XE3HG+FzIunHFzO4xx4JH0xxVtJuPIuG4ydyCEcSfIuE6VvZby66+/bvgm
/XJTpkwx1yC9r7jiCnMsOzvbvAPYdHIdjvGdeCLjgsvSzmZczx9z4sSTc8B7
3hxwnbfX1QczLnoXOTKuMyScQ7/c0KFDTVpj7pvo1VdfDd0rVWw+ioyLybgy
by0vlElkHBnXJYzrzLW8IoxzV70n47pO0m6JOXMYZ4n535D0wa1Zs8afEwc3
adIktWHDhnbfp6cni4zrXMb1LWvOuMElZBwZR8ZRwQKvJH2FXUH7wsmePPYY
FIqMI+PIODIuwjgd13UNjWRcN1BL1+Ky7T2bcWSdMvlT1lWNpybGJfEccLZV
knFknPO7J+O6QkhTlM2YB4D1S6B4bZCYLyB9c1DYfqvJKnu8juTJu+++26QJ
7Lh4zCfjyDgyjowj4zpeUhZjzRJwLlHG1dbWGiba63+luiorK00+nT9/fpcw
rtutyUzGkXFknPO7J+M6U7YNInPdhHFBZbS9P/iDDz7ozwFPZSE9YL8hb06e
PNlnXDylKuM6Yo9UMo6MC2NclP/O88i45JO7Phf4lMh+qEH7o8raX9hPLtX7
4mTdzj59+vj5tGV2XArskdoJjONaXmSczTjx338/zveOZtza+gbzGzdlwSdN
v/sgcY/U9tXChQuj+IY+JJtbcgzX2E6uEZeenm5smFQXmAZ3+eWX+4yLp+aM
W5CUjLNZQsaRcWRcsMi49hXmvyFNxYFTwrabb77ZtLVh3ASOx3Ivv/xyV0el
S4U2BbvfEmmGugD65WTv2dB7Vfsz7ker16jd2s+vL3nC/G7JODKOjCPjUlEy
BlL64/BdGNeS9ZXdMj7V5M4dlDEnLd8/LvUY93y9jncBGUfGkXEQGdcxQlqC
b/hEnxJsEIyXdNM4qA8U97FvNFpgG/Ip8mvC/XENewMYV5UUjHNZ0t6Mc/dI
LdWMG15IxpFx3YVxu/Vv/BMyrosVNoc7bL6bbbfxXUSLjCPjyDgyjozrOZK0
3rZtm7r//vtVRUWFWrZsmdq5cydtuAAJ41o0B5yMazPjwCGXcS0JFxlHxpFx
yanGxkb1wAMPqGuuucbsOWALDDty5IiaOnVqszkG+D5jxowuCnX3Fdgm/XFk
XOcyDuWy9Mf1/PlxZFyyMO5DDbePI4A7oci4jpb0vUGzZs3y5wqAWRhraa8/
iWsnTpwYc54c9lWlmoQ5A8K4eHYuGdd+Y06Sj3FOPDkHvFWM6+o54KsbghkX
xDoyrv0Edt16662GazIvLicnR/3lL38x54PmiWdmZqpHH33U7KWzdOlSdd55
5/lz5MBGe72UVBYZR8aRcd2LcV25llcQ4z5WZFxHa8WKFf7alBMmTIiy3+y0
BdfAwAEDBpj+OOGYjDnBPuEoz9GWSXkSxiWyHg8Z136Muy6AcYmEj4wj48i4
5BL4dMkll5hyePTo0eqdd94JTM+VK1f6a53Y61LZ+8tt3brVX9eroaEh7pzn
VBAZR8aRcWQcGdd1QtpJH9ySJUui9oex5xCgr04Yt2PHjlD/srOzTVsm9gjn
fqmtZBzngLeZcWyrJOO6J+MaNOMUGdeJEtsLXBIbzmUcJP1t6KeLJayzL7Ye
lOrvhoxLnHHtuZYXGUfGkXEUhH1zZB6Ayzc7XWXvU4ybjFVWX3bZZea68vJy
8z3V301XMy5V12Qm48g4Mo6CMC5Sxv3b40xsxq1bt87sJ4D0xnzvWGU1xpvA
L7wXKNXfTdsYF1y+93TG2fOUwImRmh9kHBnXJYxz8i0Zl3yqr6/3Gffuu+/6
Y0ikPManPWdg3759zfxA+st9WVlZ5trHH3+8s6PSLdV6xiXpHqlO2dzejHPX
8koexnEOePszrrm/Hc04/LaPqyaeeYw74f9xj9SOEeYEIC1howUJ4y2D+uLc
dS3FJsS17hopqSoyLoxxVT7jsjWTUHMi48i4TmFcebi/ZFxy6o477jA2Wm5u
rjp8+HBUemJ+t/TFYZ64yB13iXnk0heHsZV8J566mnH3rq1WO7Wf+L0O1uUB
GUfGkXFkXCoJfMJ8bmmvnDRpknrssceMTbZ48WLfxoPbvn27f4/NOHDxqquu
8q9DOyXbjz2RcWQcGUfGkXFdJ+l7w3rKaGN011qWtsf8/Hxjq8maJmAY2jan
TZumBg0aZO7DuBSsZ0k1qXWMq2/OuBa6VGfcDQ8+ot5U3COVjCPjqCbJPjA2
2/B52223qffeey/qWjBOxlDKtZgbhzl2EN+JJzKOjCPjyDjDOJ23sYYRGde1
Qrsj2horKyvVT3/6U1VXVxe1JpfdBon+t1GjRqlrv3WtWfMyaF5dqouM61zG
nRLAuKHFZBwZR8alqtw1JdEWKfMAYvFKxpnIusyyR7i9JzhFxoUzbm6HMQ48
kv64os1kHBnXTeYOhDDuBBnXrRW2LgrliYwLLks7m3E9f8yJE0/OAe95c8B1
3l5XH8y46F3kyDiq54iMi8G4Mm8tL5RJZBwZ1yWM68y1vCKM+2ez3z0ZR/Vc
kXGdy7i+Zc0ZN7iEjCPjyDiK6giRcWQcGUfGGcbpuK5raCTjqC5Xe/YrknFk
HBlHxpFxVHeTcK6teYuMI+PIODKOjKO6i2TOBOYGTpkyxZ8HP3bsWLNeJ9aa
bgn/yDgyjowj48g4qitlt00eOXJETZgwwV/XDJ/u2i9Yz1PmBcZTSxiHmYXY
WwqMG1lY5v/m7d9oM1bY3yuiy4YRBZWacetVnfIYl1k2r0U8cl1GyVyVrcu4
ZYcOm/IE5Uo8xtllPc73qdCuMnp+HPbWAeNW1zU2L/MCGNeUHuHjKmX/uNaN
q7TmT0UYN6SoQhUL4x76peaH9i/COD/ekfA145tVtjaxZIHKzitXh5QwrsSk
RXi4ov10mY9zwwsrTdgQ78JNW9SwkibGheWb8Ge1jHEDgsJYdrf1nhb419mM
Oz2McVY6CquCrkOdBozLjTDuCcO4CpWpOTfACYP/GykPcDbjyhaScVRSSRiH
+euw1ZCvMjIy1AMPPGD21IOwHvX555/vs27Hjh0J+d1Sxn2gPMaNLijxyqfy
Ks2EKsMF8EHKKPO9cq7zvSrCOV3PLV2kTs+vUj9ZvclnXIYuD/pULFC9KxeY
T/zupRwRuwjlCZx8t+v3uB97di9564jaov0clVdgyhe7PuyXIRF/B5Z6TtjU
OxJOb52TKsMJ7Ad7QPu3tq5eZecXR9kb0fxA/KqstSqsslSe7zPu502MK6pS
g4rnNStzJK5h3MAzUIYOKKtSWcVlqujFLeov2s/rHl6ihsG/ioXR6VQxt5m9
5NoPcHiPvSv0+9F1kIPKY9yomRXGpnXtM4mnpKP4b55R3sTigSULNOOqDOP+
qv3L37xFDSmZE/Vu4UyescLSlI5eXsgo8eoyyHuZZXM0JytUwcbNJt6oNwwr
Knc47qUhni/OS1PvechriOsp5YtMnsT5HB3v1cK4wuJIPCJ5z8StyjiEQeLt
xT0678Oll88ze0aNnVGq/qw8xo3O14zTecB7DwiL93w4ec/2cySdTRqVLtSM
u8fklyt++YTarf2894UmxvnxdhhpMz7sfHZ+GOOCRcZR7a2GhgZ/L1jwzbbv
kMewFif20MM1WIs6EbWWcWfml5nfOMp0j3FVThtL5JhlG8l3+V2fnj83mnHl
c7zyNcK4pjafaMahHApaVwOMO71IM+7Qe+pPCozLM4wLKsfld+2VT032l5RN
spZX30qPcbDjwLjRecVN11v+RtlwFdF1b/v4Kbpc9vYd+Hlk34GtUYyLao+z
GBdoa1WgDJ3jM67JjluihhfN00y6xy/Lpf5h8yc0/OadLdCMK1f7tX+w5UbN
LAtknMQzNuPEjqvS/PUY59lxc8w9Ur7HYpy8K/Ato8TzH/mlOeMqA8t0795o
xkl9ymXcmYXRjGuqlzUxzuPb3Ci+SV1G6ntw6eXzDeNgx6H9PJpxd5tn9iv9
oefKFln25NyAd+UxLqP0Hm3HeYyz7bh4DCPjqO4oWYMMAtfAt3HjxvltkdI/
J2uePfnkkybfDRkyJCH/W9dW2aiy0VZZPjdit1h2j/+7aap/oixpsvGkzF1g
yqN719RGtVWKHeG3L5U27/ex7S8ps+DQnwceLTn0d2PHjZ5VEGGclE9N9ezA
NiHXtkH5GrHjvH3A600fFco209dSEc1FP44Bfsu1fcvBuDL13Z89Ysqn0o1b
dTro+npJ7HZa3x6OlJ2ef1Xav9lqQHmlaass3fyysQ1v+NkSNbJgnsosucev
D8h9zezB8rlWeWqXg3N1mVdo7DjDuFlFfv+e2/YZ5Jcbd6TP4JJyY8cZttf+
SZ2m6yPgVVN9ZUGz+DfVRyJM8W2bKs242eo0sL12s2E7+vrQHuqyLYpHJV4b
guTBpn7TpudnF5erF+rr/LbKqH62SF5z2ea/F8vuNPaZZhIYl5NX6PXH/f1w
U1sl/Cr5oXEDjVvkhyGofdX8XzxfZcLPQo9xWPN00do1zRnntglEcTP4PBlH
dYXs9TWxBx7622bNmmW+g2uSt+Tz7bff9tsrX3755bj+t3TMCRiH30G21R8X
y9l9DU2/fa/MHWbGnNj9cXOi2r/ssRVBjEO7ld0GBcahnxCM26r9zJlRpAYX
z/XbyoRxQS76N2/ZiaY/rizCuEbTRyX2is0uu4zzx6w0SwevbRF23E2LLcZh
/IFhXPgYDuGcX1+IlP1gHMp9Ydwb2s8bdFk/smCOKQszrHj7jLPeWzO+Sfmt
/Rydn28Y95byxpz0r5gXl8FBtkIU4x6O7Ju38UXNpwp/7/eYY42iwtnkJ+w4
m3FmrE0U4+Y28S1ie9ntlIH9pcI4vz+u3Gegz7coe9Cpe0TZ4ItM/xnqWUhL
5EnDOJ2fBun3JRwcEOGbVx+JzodSNxOHfSvQXoH+uCv0b8ZnXEGln8fbxrj6
VjOOayVSrZWstXnRRReZPHX//fc3OycOTMzKyjLX1dTUxPUb+xX17t1bzZs3
z3zH/fbanmIrmnNK24va1TQ2qDN1vTGzfEFTP4T+Lfcta3Lp+jgc6v62G1g+
T/9O55j/zyiZbRiHsv4rS5Zqxs025wbNXmjYAh70n73A/+xTXKUGoQ1Tc6t/
ZAym/O4x1mywvhf1bow5QXkydka5OjV/jhpSfo/Kqlho7oXDPX217YS++z6F
c8y9CE9G1SJTjvcz573yEN9P1zYM2uyqGw6adiZzfYm+vvIe1VdzFg73D6ha
qE4unh2x/xaq/pW63JrzI/O/lFl9iu5WI/W9Nz78qLG5Smq3qNMMqxepdF03
RzriOrQLZs75sfnf+K+/m2dF0hdxGDznh5F2wrmmvbPkxVc8O+7BR1Q2wlDs
2S79ESZdf5D+QIQf8YNDPPoVe+E35yqlnKxSI+6aYfgGN1rbnrgmvXSub9/2
1mU3ynUTJvST6fQwZXKx5//ACs9ekvxwmubZjb9Y4jHupf9n6jiZOmwoswdW
Ih3nNssv3jgX/d5m3+OlDdKywssfmfrZI3Seyaup9ey4/15iuAn/xCG/ZVUt
MGN6kLfwjk27tv7sF6n/wF8v3e9WWbMXmfE11fV7TbzR9t1bh71vcZP9hvqI
5BmES94J0mPgHP3uZt9txqCaT31NVgUYV2jaFp5695jpy84qqTTXeFz0wjBI
pxf8R16F/wgf0gTvBA6/i/5z9HNKtc1WWqG+svQx875/VLNBDUe+1PkZ4Td5
UeoDGNej00DS1uRt+KmP4ZypB+A3qc/lllap53fsUB+pxHh19913+4zjesBU
a2XvlyDjJ9etW+efD1pzGvvm9erVy+eWLdsuxP+4Bn5iryKRMM1uJ/WPabdh
d50aN6tE2yOztV1TaWwbjE9AfwvsJm9cgP6t6romfnun62vhTtNlxwhdlx+q
68kZun48pnC2+snvV5uy5NuP/LcaVVRq6uG4D2PmMkorTRk2bFaxGpFfoobM
KDT+DdFuWCX8rzDzD+Dv8BkFKnt6vhp310z17FuHTf/Muf9VqnJnlpv+ldPu
yjf1Z9TRRxZXmr6gwTr8YCDGvgyfWWzsNcyJGKHLH4zZQHsSxv6N0X6jP656
R4OakFeqTs0rU5n5lSozr0qdquvOIzQjTptVpkbq4/AHbXADdBhNGugyFP6M
1OXriPwyNVrHbZy+dtrihwzbK6s3q9GzytUobcuNyJutTp9ZpkYVe2Ebgnp8
vv7UHB6RV6GvqTLjzjGuZoRO5yH6E+M2hupwo59w9poa1aD9vPVnPzdti5m6
Xn6qTscR+tnDdPohHfEeztBhP61onhqcr/3QjMM7G6IZNjSv0NQRkJbDdTk8
/gczzdyBv2t3Dt6drmOgTWzIjHzDErNfgk6fYZohCO+IgioTRtQDEN6hOl6D
EEZdZmfoNM6eUab+48FfmHjPXr/RhHmodrBBkc4IJ96l5BekM9gN+xxj7ZEv
hml/kdZIpzP0Z05hqSrRdTkw7pZfPKJyps9UI2fpvDCzwNRN0F83SL9TzM9A
epxeXqnfeZGZA3LqjBLffzi8czzzrLsKVPUb9R7bZxapgTrOw3TdCO8Bdh38
HT5du5mlOh11+mueD8V4fs3rwYXaT22zDS8o8pzO08jXZ+k0Q55c/ta76hyd
vmMKinVeLNX5osKEC7+HQXnI25KOlWaco3kfOo8P0yxCWqN9dnBJqRpdVqqu
+8UvzZiT+/6wRse3yNjEQ1D3KdB5RYdlpE5LjBFFvkM8B+rfKPIl8g2O4Ryu
Ga3zCO4Zg3GVu3erf0nZ8nG0BWe38+B/KTuEcWyvpForaQdAfgK71qxZY47Z
Npdtx2HfPFy7cOHCZn4tXbpUXXLJJerSSy81DvvrgZ0Yq5KXl+dfB3+wTx/8
wvUXX3yxmj5zhmbcJ6q2boc65/vT1Rm33KnSxp6j0nLOUmm541Ta+LPVOM0h
tHnA4f+0sZ9WaWeO9dyY8WrkLTer3Fn56vS7itQ500vUp6d8TX1+6ldVv3Fn
6/vPVQOuvF6NBYt0vffMGdNV2oVf0H5ov3NztRuj0r5wqTr7rmLTvzGuIF8N
+trX9fmx3vkzR+uw5Ko/1DWYNpwL7/wvNfbb39XPHRM5P0pfm6POuPE7avT0
Gab8Ov+uUn3+sypt3Gf0NWONG3nDjWrUD/JMuXHWzBJ10ucvVp//+rfU2V/8
sr52nMr6+jfUZ3R5MPquQjNeLuPK/+OlgYmnfs6FX1Rj8oo8nuq4ZE27TT93
vEobnaPv19fljFF33fdDVa/D+KM11WrU9Tfp5+v45+h4jkJYx6tTb7pN5Zh6
QIUuHyPpOAr+jzef/b9+rRqreZpTWKw+nT9L9f3ihWrEFy5QF15xuRo4Tl97
4UXqLF0W5+ryfHx+sep/+ZXa33O189I57ctTVY4u4zF2KEfzYNS0W0zapOXq
NBw7xoTzov/8vjqmvPbpC//jP3UYz/XewTjtxo9T2TfdaNrgzsgrUGN1mZ92
oc53Y8720lHHN+ObV5n3BLtozPQylfb5y1TG2Z9Vn//GlSrjgi+ok//tYhNG
lK1I5wFfvdrE3UtHHYcx56qzNZtzdb0IPBty4+1WfhpvnnXmd29QC9a9YNq7
p/9ssU7DM00eMNfoa4dNm+blJc3CsTrfpX3h8ybsJt+Om6DSv3mtsavAZbzL
zK9eY97luRddoiZ+5RvqU//2JXMf8jPeaebXvqrvzfXiiHc+9rNqgr4P/bTg
7ahbbvXSB26MDsuYXDX+xlvUF78/w8wDhX34qTPxns/08vW4cfqZ31Rn6TCc
8YMCdc6sCh3Gqdrvs733rdMj62tXmjRCPQ9jhfvo9EMcMyZ8Vk2a+hU1bsoV
asJM73cHe/vUm76n79PplD3G82PcOerT+l2jTgl31vRi/ezPeOfgdDrins/q
fFaza6epx2I/6X+/9DJTRkzRdeZly5aZckHKGPSXYE4u7TiqvQSbCnwDj6qr
q/3jLuPAPuRP5D20l7uqqKgwbZMyPlPm2eE72kIhYar01cn5L18yWR1XH6v9
/zqufrerXi1a8ZxKS++v0nr1UWknaz/7nqJ+17hPrdj3lnH4P+2Ufiqtd7rn
+vZVC599Rv32wH71mwPvqj80HlKf/gLaX09WaZ/S5/sMUNfo+vbT2u8V+/ep
3+1rVDkXa66ka79P1mHo01uNuugytbrhoHpu/371v/sb1bWFutzqpc/16+td
k56uDnz0L4Vd4Wt21anFzz6rj/XS12gb+OQ0HYaT1L0rfq1WNTaoFQ171drd
B3QYB+vw9THhT9Npc+8zz6pVDfvUsw371fN7D6ncy67Q9+pzadqf3ierG0oK
1P/WN5hrVu3eq67VLEs7ScchzXt+7uQvq1X19eoZHcan9+5TVSuWq7T+CB/i
2cuk5at7dhn7aPvR99WPn9bn++p0QjrjGp1m855drpbv2aeee+tt9cLe/Tru
+v6TennP6DtAXafr/7/dc0D95uBB9fz+BvXpS7+kz+v4nfQp8y7GXDpVvbD/
LbVyz171+30H1Q3atkxLH6Sf39s86/SLLzPhxzN+s6dR3fP0U/oZ+t70k7y0
0mmx8Q20W3nz/je+sUuHS9+frsPXW1/Tu5e67390Ou1r8N5V4wF1xpemaD/6
mTRIGzhQXVtUpFbubVTL9+1Xv60/pEZ+UTOwl5f30k7uq8ZdMlXHYZ8O4361
cmeD+o62U0w8kVdO7mfi+fuGRvVM417tDqp5z6wyecg739ec//HTv1avfnhM
YQbNK3vq9f0nm3dkrtHpOH/V/6hn9+5RTzfsUSt13SdH5+G0vune++w3SF1V
XqFW7T+oVun8+JzOVzeWVHl+n5xuwpqt63a/37tXx/GAek6/y+vyZ3r5qF8/
77r+WToP7dN58R0Tj4W//r/6nL43Xafhp/R1/furB55+WtXu2m3e94F//FOH
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
FHAOdTOpp7XFwS86OrrkdCgjYMPhE9/tfZhpy1HJIsnLiexrQFFU95X8hqW/
zV4/IpH96CkqWSV7s1IU1fNls62t6wNSVE9XY2Ojqq2tNZ8URfVcST11+/bt
qrq6Wh0+fNg/xz42KlWF8ZPob0Z7PEVRPV+XXnqpGUdSU1PjH6M9R6WqMLYE
vwf0O1MU1fNFxlFUk8g4ikoukXEU1SQyjqKSS2QcRTWJjKOo5JIwbv369f4x
jpumUlWYL37SSScFjjnp6vX06OjoEndiq02dOpWMoyjltV9gXCV+D2QcHV3P
djI/4LLLLmNbJUVFJG2VN998s6n32Q6/ETo6up7hNmzYYNzZZ59NO46iIkI/
nKzRijZL27V1TWc6OrrOc7K2svyeyTgq1YV8//jjj5u2jUsuucR82g5913R0
dN3f2b9b+S2//vrr/m+dbZVUKkra8ZH/udYPRSWHXJuNfKNSVS7X3D5s/Dbo
6Oi6v3PHnrBtkqLYRk9RySj+rimKoiiKoiiKoiiKoiiKoiiKoiiKoiiKorq3
3PEdMraRoiiKonqyhGXyyTmmFEVRVDLJtdnAuX/+859mzhpFURTVcrEtrPtI
3sX27dvVmjVrzJrIdXV1XRwqiqK6WigbnnrqKbOnT2NjY9x2HtSLcc2qVavM
nndYo2/KlCkqLy9PrVixwl/rwb6+o2WH2W23ag8hDtu2bTPrD2JPsJdfftl/
RqLxk+uQVpMnTzbrk9patmyZuvjii016upJ7cA256knSE7YamHbNNdeoXr16
GYd1kOUTayPffvvtqqamxlwLxzSkqNTR0aNHVWZmptnfwF4fPUyvvvqqGjNm
jL+meu/evf3/4SZOnGh4IEKZ0tFCmbVnzx6zPxH24du5c6d/vD0EhqKMlLXk
N23a1Gq/kc7wo7Ky0nyXshphl3Nh98yfP7/1kUhCvfPOO+q2224z70X257Dz
ojg5X1hYGDg2haKo5JJte0ybNs2v94JxsX7z69atU0OGDPHLDtSdsScQ3Nix
Y/26c1ZWlnrjjTc6IypGwiAp56qrq9t9/EFtba1fXsL/1tinCBPqBAgn0gxh
E39gE0tZ7EqOg4Msk5vqTch/knfPP/98Y+ceOXLET6PDhw+bYzk5OX6eXbx4
se+P2OFMU4pKPsEeu/rqq035KWwCJ8J0/PhxNW7cOHNdRkaGuRbH7LL+/vvv
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
    "], {{0, 130.8}, {105.84, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{300, 300}],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJx9kT9IHEEUhz/vIooYVHJFCBYbMAFBG5VgqZeACAaOVUGjhfvv1oPbvWN2
RQIpA2kFC02aXJIiTeqkTZFWEAKJgtjaWCnaiKxv9g7uEM+BmfnmN+/3mPfm
qV0xixkg6pbFtDanlbLezvfLYTGMSn7oubNh7PmemrQ7RKzpWDK1shNED6Yg
CGNlzuSNpeU3RtcJWQboZ5Bhy4mq04XCHG3H5T90Qv6O6lzt4+4cD10vcqDD
EJ5yqioWXhN+sRlXNe8K55x1yxX+ITyi5IHCB1q363yq2U85LSqnFsyXwjlh
w29hu4WddRUITwgPuUEo+TNLdXY1v9MclDecxjt1hb1euDivdZmDzDDLawoY
2GxQokzMqOyhKBGm3Ofb+J+k/oK4bHGVcMTxigoBVupH/8Ht3kbF8bF6pt48
dB4nyfkz6NqG660kufqSJNdfIXsEv8Omv1KDyQvRt5ra0Gfoew8//zQ1ewd+
fYDHh1VLWamUlZkpFuHsu3zTMjzah56Vet8a93z7DwvSq7k9+PgJnvuSe7VN
3d2tfbs3ptG/Gwrhf7Q=
      "], "RGB", "XYZ"], Interleaving -> True, 
    MetaInformation -> <|"Comments" -> <|"Comment" -> "Created with GIMP"|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{276.951111111111, Automatic},
  ImageSizeRaw->{105.84, 130.8},
  PlotRange->{{0, 105.84}, {0, 130.8}}]], "Text",
 CellChangeTimes->{
  3.888063843845471*^9},ExpressionUUID->"b5ed7ab4-1dc0-4d76-97c7-\
874dba83b9fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Expected", " ", "value", " ", "of", " ", "each", " ", "stabiliser", " ", 
    "S_j"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"stabcluster", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.8772585669781932`", ",", "0.8274143302180685`", ",", 
       "0.887227414330218`", ",", "0.8598130841121496`", ",", 
       "0.8772585669781932`", ",", "0.8772585669781932`", ",", 
       "0.852336448598131`", ",", "0.8722741433021808`", ",", 
       "0.8697819314641745`", ",", "0.8722741433021808`", ",", 
       "0.8423676012461061`", ",", "0.8897196261682243`"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"<", "S_j", ">", " ", 
     RowBox[{"on", " ", "the", " ", "noisy", " ", "one"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meancluster", "=", "0.87"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "  ", 
    RowBox[{"<", "S_j", ">", " ", 
     RowBox[{"on", " ", "ideal", " ", "SPAM"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sideal", "=", "0.91"}], ";"}], " "}]}]], "Input",
 CellChangeTimes->{{3.888060677759933*^9, 3.8880606873585243`*^9}, {
  3.888069256396455*^9, 3.888069388534855*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"49d992af-44c2-4b2e-a479-ca9b55a0a68a"],

Cell[CellGroupData[{

Cell["The virtual device specification", "Section",
 CellChangeTimes->{{3.888054677513302*^9, 
  3.8880546863990393`*^9}},ExpressionUUID->"0062020b-5bee-472e-b8da-\
0f35cf8c78e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RydbergHub", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "The", " ", "total", " ", "number", " ", "of", " ", "physical", " ", 
      "qubits"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"qubitsNum", "\[Rule]", " ", "12"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Physical", " ", "location", " ", "on", " ", "each", " ", "qubit", " ",
         "described", " ", "with", " ", "2", "D"}], "-", "vector"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"AtomLocations", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "->", 
          RowBox[{"{", 
           RowBox[{"#", ",", "0"}], "}"}]}], "&"}], "/@", 
        RowBox[{"VertexList", "@", "cluster"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"It", "'"}], "s", " ", "presumed", " ", "that", " ", 
       SuperscriptBox[
        SubscriptBox["T", "2"], "*"], " ", "has", " ", "been", " ", "echoed", 
       " ", "out", " ", "to", " ", 
       SubscriptBox["T", "2"]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"T2", "\[Rule]", 
      RowBox[{"1.5", "*", 
       SuperscriptBox["10", "6"]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"vacuum", " ", "life", " ", "time"}], ",", " ", 
       RowBox[{
        RowBox[{"where", " ", "T1"}], "=", 
        RowBox[{
         RowBox[{"\[Tau]vac", "/", "N"}], " ", "in", " ", "\[Mu]s"}]}]}], " ",
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"VacLifeTime", "\[Rule]", 
      RowBox[{"48", "*", 
       SuperscriptBox["10", "6"]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Rabi", " ", "frequency", " ", "MHz"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"RabiFreq", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Asymmetric", " ", "Bit"}], "-", 
       RowBox[{
       "flip", " ", "probability", " ", "during", " ", "single", " ", "qubit",
         " ", "operation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ProbBFRot", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"10", "->", "0.02"}], ",", " ", 
        RowBox[{"01", "->", "0.03"}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"(*", " ", 
      RowBox[{"Unit", " ", "lattice", " ", "in", " ", 
       RowBox[{"\[Mu]m", ".", " ", "This"}], " ", "will", " ", "be", " ", 
       "the", " ", "unit", " ", "of", " ", "the", " ", 
       RowBox[{"lattice", "/", "locations"}], " ", "given", " ", "in", " ", 
       "qubitLocations"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"UnitLattice", "\[Rule]", "3"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"blockade", " ", "radius", " ", "in", " ", "\[Mu]m"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"BlockadeRadius", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Leakage", " ", "probability", " ", "in", " ", "the", " ", 
       "initalisation"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ProbLeakInit", "\[Rule]", "0.001"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Leakage", " ", "induced", " ", "by", " ", "movements"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ProbLeakMove", "->", "0.01"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"duration", " ", "on", " ", "the", " ", "initialization"}], " ",
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DurInit", "\[Rule]", 
      RowBox[{"5", "*", 
       SuperscriptBox["10", "5"]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "measurement", " ", "induces", " ", "atom", " ", "loss", " ", 
       "afterward"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FidMeas", "\[Rule]", " ", "0.98"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"DurMeas", "\[Rule]", " ", "10"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "The", " ", "increasing", " ", "probability", " ", "of", " ", "atom", 
       " ", "loss", " ", "on", " ", "each", " ", 
       RowBox[{"measurement", ".", " ", "The"}], " ", "value", " ", "keeps", 
       " ", "increasing", " ", "until", " ", "being", " ", "initialised"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ProbLossMeas", "\[Rule]", " ", "0.01"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "leak", " ", "probability", " ", "of", " ", "implementing", " ", 
        "multi"}], "-", 
       RowBox[{"qubit", " ", "gates"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"ProbLeakCZ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"01", "\[Rule]", " ", "0.006"}], ",", 
        RowBox[{"11", "\[Rule]", "0.001"}]}], " ", "|>"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.87395970046132*^9, 3.8739597765926437`*^9}, {
   3.87395983396854*^9, 3.8739598643548183`*^9}, {3.8739599225834007`*^9, 
   3.873959948849865*^9}, {3.8739643319976187`*^9, 3.873964333586166*^9}, {
   3.873964682580612*^9, 3.8739648798571167`*^9}, {3.8739649964261227`*^9, 
   3.873965003862817*^9}, 3.873965111915971*^9, {3.873965297887433*^9, 
   3.873965303077281*^9}, {3.8739658285537157`*^9, 3.8739658521720743`*^9}, {
   3.873966269425777*^9, 3.8739662871789837`*^9}, {3.873966448159465*^9, 
   3.873966448521295*^9}, {3.8739686192554007`*^9, 3.873968624327818*^9}, {
   3.873969160332736*^9, 3.873969179514022*^9}, 3.87396961059334*^9, {
   3.8739787636533546`*^9, 3.8739787866269608`*^9}, {3.873981819182678*^9, 
   3.87398187396535*^9}, {3.874039310578515*^9, 3.874039312989271*^9}, {
   3.874053790767583*^9, 3.874053797604027*^9}, {3.874053956547969*^9, 
   3.874053956968968*^9}, {3.874054038067327*^9, 3.8740540385731916`*^9}, {
   3.874054964450295*^9, 3.874054966165256*^9}, {3.874057309152809*^9, 
   3.874057311968091*^9}, {3.874062442162765*^9, 3.87406245017236*^9}, {
   3.874069036779791*^9, 3.874069041090473*^9}, {3.877533134551693*^9, 
   3.8775331348469763`*^9}, {3.8775338106183233`*^9, 3.877533811210651*^9}, {
   3.880198213552842*^9, 3.8801982359633636`*^9}, {3.8801990239425573`*^9, 
   3.880199036392467*^9}, {3.888054809753001*^9, 3.888054873131946*^9}, {
   3.888054920479391*^9, 3.888054942628058*^9}, {3.888055132407847*^9, 
   3.8880552156045227`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"ec269090-f4a9-4be6-a341-ab4f93be2dc2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Drawing", "Section",
 CellChangeTimes->{{3.87741532770829*^9, 3.877415345531413*^9}, 
   3.8776090683417177`*^9, {3.888055076100401*^9, 3.8880550775546083`*^9}, {
   3.888059103517335*^9, 3.8880591046907043`*^9}, {3.888060796146265*^9, 
   3.888060796971694*^9}},ExpressionUUID->"20e3737a-32fd-4976-883e-\
9229a78cfdf9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "returns", " ", "graph", " ", "state", " ", "stabilizer", " ", "of", " ", 
    "a", " ", "node"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"stabgs", "[", 
    RowBox[{"graph_", ",", "node_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"neig", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"VertexList", "@", 
          RowBox[{"NeighborhoodGraph", "[", 
           RowBox[{"graph", ",", "node"}], "]"}]}], ",", 
         RowBox[{"{", "node", "}"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringRiffle", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["X", "node"], "}"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["Z", "#"], "&"}], "/@", "neig"}]}], "]"}], "]"}], 
      "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.877516694523677*^9, 3.877516696263376*^9}, {
  3.877516767352138*^9, 3.877516769646146*^9}, {3.877516807751876*^9, 
  3.8775168481025333`*^9}, {3.877516926161119*^9, 3.877516927653281*^9}, {
  3.877522399474094*^9, 3.877522400215951*^9}, {3.877531825428565*^9, 
  3.8775318270834303`*^9}, {3.877532294788477*^9, 3.877532303638097*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"82236c1e-d368-4e6b-b8fd-29507f029625"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"showgs", "[", 
    RowBox[{
     RowBox[{"title_", ":", "\"\<\>\""}], ",", 
     RowBox[{"opt_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"PlotAtoms", "[", 
    RowBox[{"devGS", ",", 
     RowBox[{"Sequence", "@@", "opt"}], ",", 
     RowBox[{"ImageSize", "->", "900"}], ",", 
     RowBox[{"ShowBlockade", "->", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "11"}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"17", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{"16", ",", 
        RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "37"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.3"}], ",", "1.3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"title", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Bold"}], "}"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.97", ",", "0.15"}], "}"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"Axes", "->", "False"}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", "None"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQLfx474XZj984Pt9RdxFEc/DesJgDpP/teGQNou2T
YxxBNIu1sxuIDkjQ8gHR75Z8igbRSyQbr4Dowl0LroHotEWKzn+A9PfnRu4g
OmTt+eKkL28c/y86UgqiS+ZW1ILoD1XP60D0g3LjyyVA2lMoHkxPWbPgLoh+
5X8ITK/jcXwEok/dCXwMov+LqHGVAunwN6u5QfSz2N2cr4H08+Xs3CB6wUN3
aRCtL74PTMfeXagCou/N4jcH0cccViWBaF7nE2C6b+lKvjdA+k3NUQkQXRVu
KQuiM//fVwDR55aFa4Fo3nfXdUC0zvug8g3f3zhOy/hdDaIBTcnC5Q==
  "],
 CellLabel->"In[13]:=",ExpressionUUID->"16dcfbba-7107-45cf-b930-8c097cc217ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"circ1", "=", 
   RowBox[{"CircRydbergHub", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["Init", "#"], ",", 
           RowBox[{
            SubscriptBox["Ry", "#"], "[", 
            RowBox[{"\[Pi]", "/", "2"}], "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "11"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"RydbergHub", "[", "]"}], ",", 
     RowBox[{"Parallel", "->", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circ2", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ShiftLoc", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "11", ",", "2"}], "]"}]], "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.75"}], ",", "0"}], "}"}], "]"}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circ3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["C", "#"], "[", 
       SubscriptBox["Z", 
        RowBox[{"#", "+", "1"}]], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "10", ",", "2"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circ4", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ShiftLoc", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "11", ",", "2"}], "]"}]], "[", 
      RowBox[{"{", 
       RowBox[{"1.5", ",", "0"}], "}"}], "]"}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circ5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["C", "#"], "[", 
       SubscriptBox["Z", 
        RowBox[{"#", "+", "1"}]], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "9", ",", "2"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.877415473162753*^9, 3.877415478419385*^9}, 
   3.877415554114987*^9, {3.87742876188439*^9, 3.877428761970037*^9}, 
   3.877429762722687*^9, {3.886224321924305*^9, 3.886224322142355*^9}, {
   3.886504252805035*^9, 3.8865042549410667`*^9}, {3.887956932971402*^9, 
   3.8879569333237534`*^9}, {3.888055256428894*^9, 3.888055291224862*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2176bd4e-a658-4633-b6ec-1def23f73b18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"devGS", "=", 
   RowBox[{"RydbergHub", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   RowBox[{"showgs", "[", 
    RowBox[{"\"\<initial\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"ImagePadding", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"30", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisycirc1", "=", 
   RowBox[{"InsertCircuitNoise", "[", 
    RowBox[{"circ1", ",", "devGS"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisycirc2", "=", 
   RowBox[{"InsertCircuitNoise", "[", 
    RowBox[{"circ2", ",", "devGS"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   RowBox[{"showgs", "[", 
    RowBox[{"\"\<       1\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"ImagePadding", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"30", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisycirc3", "=", 
   RowBox[{"InsertCircuitNoise", "[", 
    RowBox[{"circ3", ",", "devGS"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisycirc4", "=", 
   RowBox[{"InsertCircuitNoise", "[", 
    RowBox[{"circ4", ",", "devGS"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   RowBox[{"showgs", "[", 
    RowBox[{"\"\<       2\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"ImagePadding", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"30", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"20", ",", "0"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisycirc5", "=", 
   RowBox[{"InsertCircuitNoise", "[", 
    RowBox[{"circ5", ",", "devGS"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8774287512271223`*^9, 3.8774287836881037`*^9}, {
  3.877429077956936*^9, 3.8774290934906797`*^9}, {3.8774294646494293`*^9, 
  3.877429469733148*^9}, {3.877429573306376*^9, 3.8774296037337008`*^9}, {
  3.8774300144438047`*^9, 3.877430015018586*^9}, {3.87743016983591*^9, 
  3.8774301744758463`*^9}, {3.8774309222549562`*^9, 3.877430930316986*^9}, {
  3.8774311657530937`*^9, 3.8774311659183207`*^9}, {3.87743168305928*^9, 
  3.8774317067971153`*^9}, {3.877507686301998*^9, 3.8775076864748287`*^9}, {
  3.886224382811605*^9, 3.88622438494735*^9}, {3.886261835165481*^9, 
  3.886261966573258*^9}, {3.88626223257143*^9, 3.886262233955304*^9}, {
  3.886504400848811*^9, 3.88650447725037*^9}, {3.887956939351487*^9, 
  3.887956941581642*^9}, {3.887956972496557*^9, 3.887956988724299*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4d2f8a74-1a96-48a6-af1e-c9362da879e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"cluster", ",", "f1", ",", "f2", ",", "f3"}], "}"}], ",", 
   "Center", ",", 
   RowBox[{"Spacings", "->", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/vqd/img/rydberg_graph.pdf\>\"", ",", "%"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8862619702897997`*^9, 3.886261980158579*^9}, {
   3.886262227699687*^9, 3.886262228552188*^9}, 3.886262378242466*^9, {
   3.887959803669766*^9, 3.8879598295448647`*^9}, 3.88805522995452*^9, {
   3.8880607844640636`*^9, 3.888060785299336*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"88959e64-6c55-4eb9-998a-d10e6f703937"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, {
          Null, {{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}, {11, 12}, {2, 3}, {
           4, 5}, {6, 7}, {8, 9}, {10, 11}}}, {
          BaseStyle -> {17, FontFamily -> "Serif"}, 
           EdgeLabels -> {
            UndirectedEdge[0, 1] -> 1, UndirectedEdge[3, 4] -> 2, 
             UndirectedEdge[5, 6] -> 2, UndirectedEdge[10, 11] -> 1, 
             UndirectedEdge[9, 10] -> 2, UndirectedEdge[1, 2] -> 2, 
             UndirectedEdge[7, 8] -> 2, UndirectedEdge[4, 5] -> 1, 
             UndirectedEdge[2, 3] -> 1, UndirectedEdge[6, 7] -> 1, 
             UndirectedEdge[8, 9] -> 1}, EdgeLabelStyle -> {
             Directive[Background -> GrayLevel[1], Bold, 
              RGBColor[1, 0, 0]]}, EdgeStyle -> {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, ImageSize -> 900, VertexLabels -> {
             Placed[Automatic, Center]}, VertexSize -> {0.5}, 
           VertexStyle -> {
             Directive[
              GrayLevel[1], 
              EdgeForm[
               Thickness[Large]]]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {GrayLevel[0], Thickness[Large], Opacity[0.7], 
            StyleBox[{{
               {Arrowheads[0.], 
                ArrowBox[{{0., 2.0818995585505003`*^-15}, {1., 
                 1.959434878635765*^-15}}, 0.25]}, InsetBox[
                StyleBox["1",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {0.5, 2.0206672185931327*^-15}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}, {
               {Arrowheads[0.], 
                ArrowBox[{{1., 1.959434878635765*^-15}, {2., 
                 1.8369701987210296`*^-15}}, 0.25]}, InsetBox[
                StyleBox["2",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {1.5, 1.898202538678397*^-15}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}, {
               {Arrowheads[0.], 
                ArrowBox[{{2., 1.8369701987210296`*^-15}, {3., 
                 1.7145055188062944`*^-15}}, 0.25]}, InsetBox[
                StyleBox["1",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {2.5, 1.775737858763662*^-15}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}, {
               {Arrowheads[0.], 
                ArrowBox[{{3., 1.7145055188062944`*^-15}, {4., 
                 1.592040838891559*^-15}}, 0.25]}, InsetBox[
                StyleBox["2",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {3.5, 1.6532731788489269*^-15}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}, {
               {Arrowheads[0.], 
                ArrowBox[{{4., 1.592040838891559*^-15}, {5., 
                 1.4695761589768238`*^-15}}, 0.25]}, InsetBox[
                StyleBox["1",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {4.5, 1.5308084989341913*^-15}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}, {
               {Arrowheads[0.], 
                ArrowBox[{{5., 1.4695761589768238`*^-15}, {6., 
                 1.224646799147353*^-15}}, 0.25]}, InsetBox[
                StyleBox["2",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {5.5, 1.3471114790620884*^-15}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}, {
               {Arrowheads[0.], 
                ArrowBox[{{6., 1.224646799147353*^-15}, {7., 
                 9.797174393178824*^-16}}, 0.25]}, InsetBox[
                StyleBox["1",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {6.5, 1.1021821192326177*^-15}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}, {
               {Arrowheads[0.], 
                ArrowBox[{{7., 9.797174393178824*^-16}, {8., 
                 7.347880794884119*^-16}}, 0.25]}, InsetBox[
                StyleBox["2",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {7.5, 8.572527594031471*^-16}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}, {
               {Arrowheads[0.], 
                ArrowBox[{{8., 7.347880794884119*^-16}, {9., 
                 4.898587196589412*^-16}}, 0.25]}, InsetBox[
                StyleBox["1",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {8.5, 6.123233995736765*^-16}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}, {
               {Arrowheads[0.], 
                ArrowBox[{{9., 4.898587196589412*^-16}, {10., 
                 2.449293598294705*^-16}}, 0.25]}, InsetBox[
                StyleBox["2",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {9.5, 3.6739403974420584*^-16}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}, {
               {Arrowheads[0.], 
                ArrowBox[{{10., 2.449293598294705*^-16}, {11., 0.}}, 0.25]}, 
               InsetBox[
                StyleBox["1",
                 StripOnInput->False,
                 LineColor->RGBColor[1, 0, 0],
                 FrontFaceColor->RGBColor[1, 0, 0],
                 BackFaceColor->RGBColor[1, 0, 0],
                 GraphicsColor->RGBColor[1, 0, 0],
                 FontFamily->"Serif",
                 FontSize->17,
                 FontWeight->Bold,
                 FontColor->RGBColor[1, 0, 0],
                 Background->GrayLevel[1]], {10.5, 1.2246467991473525*^-16}, 
                ImageScaled[{0.5, 0.5}],
                BaseStyle->"Graphics"]}},
             FontFamily->"Serif"]}, 
           {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7], Thickness[
            Large]}], 
            
            StyleBox[{{DiskBox[{0., 2.0818995585505003*^-15}, 0.25], 
               InsetBox[
                StyleBox["0",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {0., 2.0818995585505003*^-15},
                BaseStyle->"Graphics"]}, {
               DiskBox[{1., 1.959434878635765*^-15}, 0.25], InsetBox[
                StyleBox["1",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {1., 1.959434878635765*^-15},
                BaseStyle->"Graphics"]}, {
               DiskBox[{2., 1.8369701987210296*^-15}, 0.25], InsetBox[
                StyleBox["2",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {2., 1.8369701987210296*^-15},
                BaseStyle->"Graphics"]}, {
               DiskBox[{3., 1.7145055188062944*^-15}, 0.25], InsetBox[
                StyleBox["3",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {3., 1.7145055188062944*^-15},
                BaseStyle->"Graphics"]}, {
               DiskBox[{4., 1.592040838891559*^-15}, 0.25], InsetBox[
                StyleBox["4",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {4., 1.592040838891559*^-15},
                BaseStyle->"Graphics"]}, {
               DiskBox[{5., 1.4695761589768238*^-15}, 0.25], InsetBox[
                StyleBox["5",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {5., 1.4695761589768238*^-15},
                BaseStyle->"Graphics"]}, {
               DiskBox[{6., 1.224646799147353*^-15}, 0.25], InsetBox[
                StyleBox["6",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {6., 1.224646799147353*^-15},
                BaseStyle->"Graphics"]}, {
               DiskBox[{7., 9.797174393178824*^-16}, 0.25], InsetBox[
                StyleBox["7",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {7., 9.797174393178824*^-16},
                BaseStyle->"Graphics"]}, {
               DiskBox[{8., 7.347880794884119*^-16}, 0.25], InsetBox[
                StyleBox["8",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {8., 7.347880794884119*^-16},
                BaseStyle->"Graphics"]}, {
               DiskBox[{9., 4.898587196589412*^-16}, 0.25], InsetBox[
                StyleBox["9",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {9., 4.898587196589412*^-16},
                BaseStyle->"Graphics"]}, {
               DiskBox[{10., 2.449293598294705*^-16}, 0.25], InsetBox[
                StyleBox["10",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {10., 2.449293598294705*^-16},
                BaseStyle->"Graphics"]}, {DiskBox[{11., 0.}, 0.25], InsetBox[
                StyleBox["11",
                 StripOnInput->False,
                 FontFamily->"Serif",
                 FontSize->17], {11., 0.},
                BaseStyle->"Graphics"]}},
             FontFamily->"Serif"]}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      BaseStyle->{17, FontFamily -> "Serif"},
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->900]},
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{0, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{3, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{6, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{9, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{12, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{15, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{18, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{21, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{24, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{27, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{30, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{33, 0}, 1]}, 
       {RGBColor[1, 0, 0], DiskBox[{0, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{3, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{6, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{9, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{12, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{15, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{18, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{21, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{24, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{27, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{30, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{33, 0}, 0.15]}, 
       InsetBox["0", {0.30000000000000004, 0.30000000000000004}], 
       InsetBox["1", {3.3000000000000003, 0.30000000000000004}], 
       InsetBox["2", {6.300000000000001, 0.30000000000000004}], 
       InsetBox["3", {9.3, 0.30000000000000004}], 
       InsetBox["4", {12.299999999999999, 0.30000000000000004}], 
       InsetBox["5", {15.299999999999999, 0.30000000000000004}], 
       InsetBox["6", {18.299999999999997, 0.30000000000000004}], 
       InsetBox["7", {21.299999999999997, 0.30000000000000004}], 
       InsetBox["8", {24.299999999999997, 0.30000000000000004}], 
       InsetBox["9", {27.299999999999997, 0.30000000000000004}], 
       InsetBox["10", {30.299999999999997, 0.30000000000000004}], 
       InsetBox["11", {33.3, 0.30000000000000004}]},
      Axes->False,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      BaseStyle->{16, FontFamily -> "Times"},
      Epilog->InsetBox[
        BoxData[
         FormBox[
          StyleBox["\"initial\"", {
            RGBColor[1, 0, 0], Bold}, StripOnInput -> False], 
          TraditionalForm]], 
        Scaled[{0.97, 0.15}]],
      Frame->True,
      FrameStyle->Directive[
        GrayLevel[0], 
        Thickness[Large]],
      FrameTicks->{{{{-1, 
           FormBox[
            RowBox[{"-", "1"}], TraditionalForm]}, {0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}}, None}, {Automatic, None}},
      ImagePadding->{{30, 20}, {0, 0}},
      ImageSize->900,
      LabelStyle->Directive[17, 
        GrayLevel[0]],
      PlotRange->{{-1, 37}, {-1.3, 1.3}}]},
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{0, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{0.75, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{6, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{6.75, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{12, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{12.75, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{18, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{18.75, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{24, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{24.75, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{30, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{30.75, 0}, 1]}, 
       {RGBColor[1, 0, 0], DiskBox[{0, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{0.75, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{6, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{6.75, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{12, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{12.75, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{18, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{18.75, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{24, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{24.75, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{30, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{30.75, 0}, 0.15]}, 
       InsetBox["0", {0.30000000000000004, 0.30000000000000004}], 
       InsetBox["1", {1.0499999999999998, 0.30000000000000004}], 
       InsetBox["2", {6.300000000000001, 0.30000000000000004}], 
       InsetBox["3", {7.050000000000001, 0.30000000000000004}], 
       InsetBox["4", {12.299999999999999, 0.30000000000000004}], 
       InsetBox["5", {13.049999999999999, 0.30000000000000004}], 
       InsetBox["6", {18.299999999999997, 0.30000000000000004}], 
       InsetBox["7", {19.049999999999997, 0.30000000000000004}], 
       InsetBox["8", {24.299999999999997, 0.30000000000000004}], 
       InsetBox["9", {25.049999999999997, 0.30000000000000004}], 
       InsetBox["10", {30.299999999999997, 0.30000000000000004}], 
       InsetBox["11", {31.049999999999997, 0.30000000000000004}]},
      Axes->False,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      BaseStyle->{16, FontFamily -> "Times"},
      Epilog->InsetBox[
        BoxData[
         FormBox[
          StyleBox["\"       1\"", {
            RGBColor[1, 0, 0], Bold}, StripOnInput -> False], 
          TraditionalForm]], 
        Scaled[{0.97, 0.15}]],
      Frame->True,
      FrameStyle->Directive[
        GrayLevel[0], 
        Thickness[Large]],
      FrameTicks->{{{{-1, 
           FormBox[
            RowBox[{"-", "1"}], TraditionalForm]}, {0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}}, None}, {Automatic, None}},
      ImagePadding->{{30, 20}, {0, 0}},
      ImageSize->900,
      LabelStyle->Directive[17, 
        GrayLevel[0]],
      PlotRange->{{-1, 37}, {-1.3, 1.3}}]},
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{0, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{5.25, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{6, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{11.25, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{12, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{17.25, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{18, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{23.25, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{24, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{29.25, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{30, 0}, 1]}, 
       {RGBColor[0, 1, 1], Opacity[0.15], EdgeForm[{RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]}], DiskBox[{35.25, 0}, 1]}, 
       {RGBColor[1, 0, 0], DiskBox[{0, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{5.25, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{6, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{11.25, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{12, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{17.25, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{18, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{23.25, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{24, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{29.25, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{30, 0}, 0.15]}, 
       {RGBColor[1, 0, 0], DiskBox[{35.25, 0}, 0.15]}, 
       InsetBox["0", {0.30000000000000004, 0.30000000000000004}], 
       InsetBox["1", {5.550000000000001, 0.30000000000000004}], 
       InsetBox["2", {6.300000000000001, 0.30000000000000004}], 
       InsetBox["3", {11.55, 0.30000000000000004}], 
       InsetBox["4", {12.299999999999999, 0.30000000000000004}], 
       InsetBox["5", {17.549999999999997, 0.30000000000000004}], 
       InsetBox["6", {18.299999999999997, 0.30000000000000004}], 
       InsetBox["7", {23.549999999999997, 0.30000000000000004}], 
       InsetBox["8", {24.299999999999997, 0.30000000000000004}], 
       InsetBox["9", {29.549999999999997, 0.30000000000000004}], 
       InsetBox["10", {30.299999999999997, 0.30000000000000004}], 
       InsetBox["11", {35.55, 0.30000000000000004}]},
      Axes->False,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      BaseStyle->{16, FontFamily -> "Times"},
      Epilog->InsetBox[
        BoxData[
         FormBox[
          StyleBox["\"       2\"", {
            RGBColor[1, 0, 0], Bold}, StripOnInput -> False], 
          TraditionalForm]], 
        Scaled[{0.97, 0.15}]],
      Frame->True,
      FrameStyle->Directive[
        GrayLevel[0], 
        Thickness[Large]],
      FrameTicks->{{{{-1, 
           FormBox[
            RowBox[{"-", "1"}], TraditionalForm]}, {0, 
           FormBox["0", TraditionalForm]}, {1, 
           FormBox["1", TraditionalForm]}}, None}, {Automatic, None}},
      ImagePadding->{{30, 20}, {20, 0}},
      ImageSize->900,
      LabelStyle->Directive[17, 
        GrayLevel[0]],
      PlotRange->{{-1, 37}, {-1.3, 1.3}}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.886261980602642*^9, 3.886262004321361*^9}, 
   3.886262050135632*^9, {3.886262210704077*^9, 3.886262235999771*^9}, 
   3.886262380979121*^9, 3.886504042284223*^9, 3.886504417559572*^9, {
   3.886504454220005*^9, 3.886504480553162*^9}, 3.886504749535509*^9, {
   3.886506207628127*^9, 3.886506224573472*^9}, 3.88650635629814*^9, {
   3.8879569432273397`*^9, 3.887956990335816*^9}, {3.887959810291271*^9, 
   3.8879598301544867`*^9}, 3.887959866538219*^9, 3.887960591059725*^9, 
   3.888055235267993*^9, 3.888055296140864*^9, {3.888060776024033*^9, 
   3.8880607855317183`*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"bd042273-be1a-4bbb-844e-e7a8ad558904"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Setups", "Section",
 CellChangeTimes->{{3.877502281189167*^9, 3.877502289362043*^9}, {
  3.8880608091302223`*^9, 
  3.888060814374415*^9}},ExpressionUUID->"05d3b36b-34a8-4083-9724-\
f75f2dce6fee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{"CreateDensityQureg", "[", "12", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]init", "=", 
   RowBox[{"CreateDensityQureg", "[", "12", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]work", "=", 
   RowBox[{"CreateDensityQureg", "[", "12", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.877428807146954*^9, 3.877428815082407*^9}, {
  3.8774422992527323`*^9, 3.8774423063194647`*^9}, {3.877520329918548*^9, 
  3.8775203306642714`*^9}, {3.877532979043289*^9, 3.877532980750142*^9}, {
  3.877533839071259*^9, 3.877533842489882*^9}, {3.8776183161351852`*^9, 
  3.877618323516966*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"711b5b2e-d87e-4f11-a17b-45b39380bf7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetQuregMatrix", "[", 
   RowBox[{"\[Rho]init", ",", 
    RowBox[{"RandomMixState", "[", "12", "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8780688830516777`*^9, 3.878068905928163*^9}, {
  3.878068941489832*^9, 3.8780689443753157`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"bd658945-6ec9-4d40-a233-f00e73f9643f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totalcirc", "=", 
  RowBox[{"Join", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<circ\>\"", "<>", 
        RowBox[{"ToString", "@", "#"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "5"}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.87743677523838*^9, 3.877436901601564*^9}, {
  3.877436991274638*^9, 3.8774370166358232`*^9}, {3.8774402273525887`*^9, 
  3.8774402275679197`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"1bd3b7b1-14f2-4604-9aca-d308ff29bec2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["Init", "0"], ",", 
     SubscriptBox["Init", "1"], ",", 
     SubscriptBox["Init", "2"], ",", 
     SubscriptBox["Init", "3"], ",", 
     SubscriptBox["Init", "4"], ",", 
     SubscriptBox["Init", "5"], ",", 
     SubscriptBox["Init", "6"], ",", 
     SubscriptBox["Init", "7"], ",", 
     SubscriptBox["Init", "8"], ",", 
     SubscriptBox["Init", "9"], ",", 
     SubscriptBox["Init", "10"], ",", 
     SubscriptBox["Init", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "0"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "2"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "3"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "4"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "5"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "6"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "7"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "8"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "9"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "10"], "[", 
      FractionBox["\[Pi]", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "11"], "[", 
      FractionBox["\[Pi]", "2"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["ShiftLoc", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9", ",", "11"}], 
       "}"}]], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.75`"}], ",", "0"}], "}"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["C", "0"], "[", 
      SubscriptBox["Z", "1"], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "2"], "[", 
      SubscriptBox["Z", "3"], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "4"], "[", 
      SubscriptBox["Z", "5"], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "6"], "[", 
      SubscriptBox["Z", "7"], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "8"], "[", 
      SubscriptBox["Z", "9"], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "10"], "[", 
      SubscriptBox["Z", "11"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["ShiftLoc", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9", ",", "11"}], 
       "}"}]], "[", 
     RowBox[{"{", 
      RowBox[{"1.5`", ",", "0"}], "}"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["C", "1"], "[", 
      SubscriptBox["Z", "2"], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "3"], "[", 
      SubscriptBox["Z", "4"], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "5"], "[", 
      SubscriptBox["Z", "6"], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "7"], "[", 
      SubscriptBox["Z", "8"], "]"}], ",", 
     RowBox[{
      SubscriptBox["C", "9"], "[", 
      SubscriptBox["Z", "10"], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8774370056109047`*^9, 3.877437017269388*^9}, {
   3.877439952347825*^9, 3.877439986053801*^9}, 3.8774402278187523`*^9, 
   3.877440372793627*^9, 3.8774422799289083`*^9, 3.8774597270604486`*^9, 
   3.877502279043047*^9, 3.877507663869295*^9, 3.877509245030797*^9, 
   3.877509650563333*^9, 3.877509865126069*^9, 3.877513444990377*^9, 
   3.877520691583823*^9, 3.8776164022739487`*^9, 3.8776183334684553`*^9, 
   3.87762312548024*^9, 3.877625783314456*^9, 3.87767641985802*^9, 
   3.877676625253401*^9, 3.877686391284225*^9, 3.878018904301795*^9, 
   3.878045883932865*^9, 3.878049398504674*^9, 3.8780680299178753`*^9, 
   3.878069043475368*^9, 3.878113461076098*^9, 3.878130388476706*^9, 
   3.8781307952456427`*^9, 3.8782330673711042`*^9, 3.8862244926904097`*^9, 
   3.888055346193493*^9, 3.888056345493104*^9, 3.888060886192514*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"7241a1e4-3672-47a7-8fc4-ebf7576c4575"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"noisycirc", "=", 
    RowBox[{"InsertCircuitNoise", "[", 
     RowBox[{"totalcirc", ",", 
      RowBox[{"RydbergHub", "[", "]"}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   StyleBox[
    RowBox[{"Simplify", ",", " ", 
     RowBox[{
      RowBox[{"remove", " ", "errors", " ", "with", " ", "zero"}], "-", 
      "parameters"}]}],
    FontSlant->"Italic"], 
   StyleBox[" ",
    FontSlant->"Italic"], 
   StyleBox["*)",
    FontSlant->"Italic"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enoisycirc", "=", 
   RowBox[{"DeleteElements", "[", 
    RowBox[{
     RowBox[{"ExtractCircuit", "[", "noisycirc", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Depol", "__"], "[", "0.", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "__"], "[", "0.", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.877438276317333*^9, 3.877438289596882*^9}, {
   3.8774398141622667`*^9, 3.87743981914758*^9}, {3.8774590814690733`*^9, 
   3.8774591170936823`*^9}, {3.877459154277067*^9, 3.877459182231336*^9}, {
   3.877459219133874*^9, 3.877459238819417*^9}, 3.877522279657042*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"6327bdce-c8ba-468b-947c-00ec39e62b43"],

Cell[TextData[StyleBox["Run the circuit without measurement. We start from an \
unknown mixed state",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.8776767010958*^9, 3.877676727238956*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"6b8e9bb8-490b-4f27-bf02-9d4e2f8d6546"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyCircuit", "[", 
  RowBox[{
   RowBox[{"CloneQureg", "[", 
    RowBox[{"\[Rho]", ",", "\[Rho]init"}], "]"}], ",", "enoisycirc"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8774398547466173`*^9, 3.877439877924464*^9}, {
  3.877440239370059*^9, 3.877440240037849*^9}, {3.877442322470854*^9, 
  3.87744232965641*^9}, {3.877520758978129*^9, 3.877520763448295*^9}, {
  3.877522010560048*^9, 3.877522012243132*^9}, {3.8780688204176683`*^9, 
  3.8780688214435472`*^9}, {3.87806891183976*^9, 3.8780689142007227`*^9}, {
  3.878069051673503*^9, 3.878069058975765*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"1fd6d43b-03b2-4128-8af2-12539c57124e"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.877439872116682*^9, 3.877439882891453*^9}, {
   3.877439975054674*^9, 3.877439994064925*^9}, 3.877440138872139*^9, 
   3.8774402420288773`*^9, 3.8774403785327463`*^9, 3.877442280465283*^9, 
   3.8774423599817657`*^9, 3.877460773652342*^9, 3.877460803806348*^9, 
   3.8775023672679462`*^9, 3.877507694111013*^9, 3.8775092792926207`*^9, 
   3.877509678826227*^9, 3.877509893753138*^9, 3.877513491851021*^9, 
   3.877520441475882*^9, 3.8775208044929113`*^9, 3.8775220527894287`*^9, 
   3.877522346159671*^9, 3.8775225246905127`*^9, 3.877522723319666*^9, 
   3.877523235136099*^9, 3.877530771224275*^9, 3.877616449046419*^9, 
   3.877618376450865*^9, 3.8776231553107986`*^9, 3.877625823692212*^9, 
   3.877676449187318*^9, 3.877676661275474*^9, 3.877676762435231*^9, 
   3.8776864285874434`*^9, 3.878018993362355*^9, 3.8780459186299553`*^9, 
   3.878049433194025*^9, 3.8780680672948914`*^9, {3.878068798141906*^9, 
   3.878068853692479*^9}, 3.878069060469919*^9, 3.878069153599265*^9, 
   3.878069298727502*^9, 3.878113461608343*^9, 3.878130390074979*^9, {
   3.878130452574054*^9, 3.878130481825849*^9}, 3.8781307988936157`*^9, 
   3.886224503276498*^9, 3.888056376499526*^9, 3.888060902522952*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"c61fafa7-57cd-4d87-813f-34aafbbd29c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["[Quoted values] SPAM removal: 0.91, noisy: 0.87",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Subsection",
 CellChangeTimes->{{3.8775168517606688`*^9, 3.877516876688257*^9}, {
  3.877523734963262*^9, 3.877523742522843*^9}, {3.8775323137204*^9, 
  3.877532316717395*^9}, {3.877532570164598*^9, 3.877532578812635*^9}, {
  3.877532834709062*^9, 3.87753284199183*^9}, {3.877676741546638*^9, 
  3.877676750247027*^9}, {3.878132574320867*^9, 3.878132579722949*^9}, {
  3.888056347643669*^9, 3.888056365074494*^9}, {3.88805657425228*^9, 
  3.888056575294778*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"9f7f34aa-d76b-405f-b3b9-543cafdae9c0"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Pulled from the density matrix",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Subsubsection",
 CellChangeTimes->{{3.888056455393622*^9, 
  3.888056465074829*^9}},ExpressionUUID->"5a1839d8-d8fe-446c-b866-\
acee0f68b45d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"stabdata", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"CalcExpecPauliString", "[", 
     RowBox[{"\[Rho]", ",", 
      RowBox[{"stabgs", "[", 
       RowBox[{"cluster", ",", "#"}], "]"}], ",", "\[Rho]work"}], "]"}], 
    "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "11"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "@", "stabdata"}]}], "Input",
 CellChangeTimes->{{3.877520147260651*^9, 3.877520151370102*^9}, {
   3.8775202164034567`*^9, 3.877520250565542*^9}, {3.877520317488533*^9, 
   3.877520344545491*^9}, {3.8775204171334467`*^9, 3.877520417561638*^9}, 
   3.877520676248447*^9, {3.877520854492476*^9, 3.877520889031063*^9}, {
   3.877520954468958*^9, 3.877520954805222*^9}, {3.877521002433235*^9, 
   3.877521004402403*^9}, {3.8775307518177233`*^9, 3.877530757947353*^9}, {
   3.888056422725583*^9, 3.8880564379916487`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"c382d244-5a5a-414f-b372-406726c54254"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9150195825957474`", ",", "0.9150660643262942`", ",", 
   "0.9150342634805423`", ",", "0.9150689390688986`", ",", 
   "0.9150342634805423`", ",", "0.9150689390688985`", ",", 
   "0.9150342634805423`", ",", "0.9150689390688986`", ",", 
   "0.9150342634805423`", ",", "0.9150689390688985`", ",", 
   "0.9150313888324212`", ",", "0.9150588581209058`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.877520156970817*^9, {3.877520237785482*^9, 3.8775202509328213`*^9}, {
   3.877520318652931*^9, 3.877520352341304*^9}, 3.877520676845399*^9, {
   3.877520815692543*^9, 3.8775208407398663`*^9}, 3.8775208929692917`*^9, 
   3.877520956264907*^9, 3.877521013246027*^9, 3.8775220574931383`*^9, 
   3.877522365232107*^9, 3.877522409825714*^9, 3.877522539437653*^9, 
   3.877522729131609*^9, 3.877526539168859*^9, 3.877530772427251*^9, 
   3.8775308072026157`*^9, 3.877532070803507*^9, {3.877532228308428*^9, 
   3.877532253075468*^9}, 3.877532340777944*^9, 3.877532534602335*^9, {
   3.877532827328326*^9, 3.8775328381084948`*^9}, 3.877532869328148*^9, {
   3.8775329153345013`*^9, 3.877532956545661*^9}, 3.877533055969751*^9, 
   3.877533087141253*^9, 3.877533120833194*^9, 3.877533167140396*^9, {
   3.87753322612854*^9, 3.877533242326964*^9}, {3.8775333010502253`*^9, 
   3.877533373531219*^9}, {3.877533449261195*^9, 3.87753352726553*^9}, 
   3.877533911862665*^9, 3.8776165100590353`*^9, 3.877618427979557*^9, 
   3.877623186465523*^9, 3.8776258715722437`*^9, 3.8776764799036617`*^9, 
   3.8776768259232807`*^9, {3.877684868869116*^9, 3.877684871169937*^9}, 
   3.877686442292327*^9, 3.8780255409160137`*^9, 3.878045920885446*^9, 
   3.87804943470761*^9, 3.8780680853235703`*^9, {3.878068798575264*^9, 
   3.878068855025578*^9}, 3.8780690754865723`*^9, 3.878069160909895*^9, 
   3.878069302130785*^9, 3.878113462061061*^9, 3.878113524298852*^9, 
   3.878130391713752*^9, {3.878130463351495*^9, 3.878130487450224*^9}, 
   3.878130800350168*^9, 3.886224507423938*^9, {3.888056426869947*^9, 
   3.888056439470304*^9}, 3.8880609073010263`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"a50c4655-da49-4a23-a8d2-f50b43cf7c66"],

Cell[BoxData["0.9150490586727611`"], "Output",
 CellChangeTimes->{
  3.877520156970817*^9, {3.877520237785482*^9, 3.8775202509328213`*^9}, {
   3.877520318652931*^9, 3.877520352341304*^9}, 3.877520676845399*^9, {
   3.877520815692543*^9, 3.8775208407398663`*^9}, 3.8775208929692917`*^9, 
   3.877520956264907*^9, 3.877521013246027*^9, 3.8775220574931383`*^9, 
   3.877522365232107*^9, 3.877522409825714*^9, 3.877522539437653*^9, 
   3.877522729131609*^9, 3.877526539168859*^9, 3.877530772427251*^9, 
   3.8775308072026157`*^9, 3.877532070803507*^9, {3.877532228308428*^9, 
   3.877532253075468*^9}, 3.877532340777944*^9, 3.877532534602335*^9, {
   3.877532827328326*^9, 3.8775328381084948`*^9}, 3.877532869328148*^9, {
   3.8775329153345013`*^9, 3.877532956545661*^9}, 3.877533055969751*^9, 
   3.877533087141253*^9, 3.877533120833194*^9, 3.877533167140396*^9, {
   3.87753322612854*^9, 3.877533242326964*^9}, {3.8775333010502253`*^9, 
   3.877533373531219*^9}, {3.877533449261195*^9, 3.87753352726553*^9}, 
   3.877533911862665*^9, 3.8776165100590353`*^9, 3.877618427979557*^9, 
   3.877623186465523*^9, 3.8776258715722437`*^9, 3.8776764799036617`*^9, 
   3.8776768259232807`*^9, {3.877684868869116*^9, 3.877684871169937*^9}, 
   3.877686442292327*^9, 3.8780255409160137`*^9, 3.878045920885446*^9, 
   3.87804943470761*^9, 3.8780680853235703`*^9, {3.878068798575264*^9, 
   3.878068855025578*^9}, 3.8780690754865723`*^9, 3.878069160909895*^9, 
   3.878069302130785*^9, 3.878113462061061*^9, 3.878113524298852*^9, 
   3.878130391713752*^9, {3.878130463351495*^9, 3.878130487450224*^9}, 
   3.878130800350168*^9, 3.886224507423938*^9, {3.888056426869947*^9, 
   3.888056439470304*^9}, 3.888060907303088*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"daf0f523-5f07-4853-8c91-0cfee1486f60"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Gather the statistics by shots",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Subsubsection",
 CellChangeTimes->{{3.8775168517606688`*^9, 3.877516876688257*^9}, {
  3.877523734963262*^9, 3.877523742522843*^9}, {3.8775323137204*^9, 
  3.877532316717395*^9}, {3.877532570164598*^9, 3.877532578812635*^9}, {
  3.877532834709062*^9, 3.87753284199183*^9}, {3.877676741546638*^9, 
  3.877676750247027*^9}, {3.877676838183424*^9, 3.877676861843279*^9}, {
  3.877676957784151*^9, 3.8776769665859537`*^9}, {3.8862245176675158`*^9, 
  3.886224519128223*^9}},ExpressionUUID->"282dbec4-7e65-4f88-9d32-\
05e607fd2abe"],

Cell[TextData[StyleBox["Note that the \[OpenCurlyDoubleQuote]X\
\[CloseCurlyDoubleQuote] measurement done in the circuit is flipped: H=Ry[\
\[Pi]/2]X",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.878025493345131*^9, 3.878025503378385*^9}, {
  3.878030179553873*^9, 3.878030197825786*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"18874d36-987b-4f08-acb4-48c920d8df27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcCircuitMatrix", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "0"], "[", 
      RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
     SubscriptBox["X", "0"]}], "}"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8780252678173428`*^9, 3.878025342613175*^9}, {
  3.878025404615859*^9, 3.87802541510714*^9}},
 CellLabel->
  "In[780]:=",ExpressionUUID->"cd519b71-3f30-4f04-ac09-1c1a07530394"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]]},
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.878025280831587*^9, 3.878025343241048*^9}, {
   3.87802540859226*^9, 3.8780254156298733`*^9}, 3.878030202196129*^9, 
   3.878113473794537*^9},
 CellLabel->
  "Out[780]//MatrixForm=",ExpressionUUID->"5eb7ac6d-e6d8-4c07-be32-\
9bf2907af10c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DrawCircuit", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["Ry", "0"], "[", 
     RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", 
    SubscriptBox["X", "0"]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.87805284311375*^9, 3.878052845184705*^9}},
 CellLabel->
  "In[781]:=",ExpressionUUID->"94b6295e-50e5-4756-af25-6204b118cfe3"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {LineBox[{{0, 0.5}, {1, 0.5}}], 
    LineBox[{{1, 0.5}, {2, 0.5}}]}, {{RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {0.5, 0.5}]}, {CircleBox[{1.5, 0.5}, 0.25], 
     LineBox[{{1.5, 0.25}, {1.5, 0.75}}]}}},
  ImageSize->90,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.878052848067824*^9, 3.8781134750374317`*^9},
 CellLabel->
  "Out[781]=",ExpressionUUID->"d4615c21-008e-4f7c-ba40-4c0166ee5a7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcCircuitMatrix", "[", 
   SubscriptBox["X", "0"], "]"}], ".", 
  RowBox[{"CalcCircuitMatrix", "[", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", 
    RowBox[{"\[Pi]", "/", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878030142167624*^9, 3.878030167258078*^9}},
 CellLabel->
  "In[782]:=",ExpressionUUID->"7d1af2f6-ba1b-4f97-8f72-f8915e0423e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.878030150427616*^9, 3.8780301678510017`*^9}, 
   3.878030203285228*^9, 3.8781134767413273`*^9},
 CellLabel->
  "Out[782]=",ExpressionUUID->"96204a9e-5d54-408a-a6c1-e1b08c31c642"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["Two",
        FontSlant->"Italic"], 
       StyleBox[" ",
        FontSlant->"Italic"], 
       StyleBox["measurement",
        FontSlant->"Italic"], 
       StyleBox[" ",
        FontSlant->"Italic"], 
       RowBox[{
        StyleBox["settings",
         FontSlant->"Italic"], 
        StyleBox[":",
         FontSlant->"Italic"], 
        StyleBox[" ",
         FontSlant->"Italic"], 
        FormBox[
         RowBox[{"{", 
          SubscriptBox["S", "j"]}],
         TraditionalForm]}]}], 
      StyleBox["}",
       FontSlant->"Italic"]}], 
     StyleBox[" ",
      FontSlant->"Italic"], 
     StyleBox["where",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], 
     StyleBox[
      RowBox[{"(", "1", ")"}],
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], 
     StyleBox["j",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], 
     StyleBox["are",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], 
     StyleBox["even",
      FontSlant->"Italic"]}], 
    StyleBox[",",
     FontSlant->"Italic"], 
    StyleBox[" ",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", "2", ")"}], " ", "j", " ", "are", " ", "odd"}], "  ", 
      "\[IndentingNewLine]", 
      RowBox[{
      "Put", " ", "measurements", " ", "at", " ", "the", " ", "very", " ", 
       RowBox[{"last", "!"}]}]}],
     FontSlant->"Italic"]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"evensm", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["Ry", "#"], "[", 
          RowBox[{"\[Pi]", "/", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "11", ",", "2"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["M", "#"], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "11"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"oddsm", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["Ry", "#"], "[", 
          RowBox[{"\[Pi]", "/", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "11", ",", "2"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["M", "#"], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "11"}], "]"}]}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8781510817191687`*^9, 3.878151096792289*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"325c7388-02f2-4c2d-ba35-bed3f789c701"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "SimulateGraphState", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SimulateGraphState", "[", 
   RowBox[{
   "\[Rho]_", ",", "\[Rho]init_", ",", "\[Rho]work_", ",", "\[Rho]store_", 
    ",", "nshots_", ",", 
    RowBox[{"options_", ":", 
     RowBox[{"{", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "noisycirc", ",", "enoisycirc", ",", "emeasnoisy", ",", "omeasnoisy", 
      ",", 
      RowBox[{"statevenmeas", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"statoddmeas", "=", 
       RowBox[{"{", "}"}]}], ",", "scount", ",", "outeig", ",", "stabideal", 
      ",", "totalcirc", ",", "chart", ",", "mean", ",", "ideal", ",", 
      "cluster"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"totalcirc", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["Init", "0"], ",", 
          SubscriptBox["Init", "1"], ",", 
          SubscriptBox["Init", "2"], ",", 
          SubscriptBox["Init", "3"], ",", 
          SubscriptBox["Init", "4"], ",", 
          SubscriptBox["Init", "5"], ",", 
          SubscriptBox["Init", "6"], ",", 
          SubscriptBox["Init", "7"], ",", 
          SubscriptBox["Init", "8"], ",", 
          SubscriptBox["Init", "9"], ",", 
          SubscriptBox["Init", "10"], ",", 
          SubscriptBox["Init", "11"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["Ry", "0"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "1"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "2"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "3"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "4"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "5"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "6"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "7"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "8"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "9"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "10"], "[", 
           FractionBox["\[Pi]", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["Ry", "11"], "[", 
           FractionBox["\[Pi]", "2"], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["ShiftLoc", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9", ",", "11"}], 
            "}"}]], "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.75`"}], ",", "0"}], "}"}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["C", "0"], "[", 
           SubscriptBox["Z", "1"], "]"}], ",", 
          RowBox[{
           SubscriptBox["C", "2"], "[", 
           SubscriptBox["Z", "3"], "]"}], ",", 
          RowBox[{
           SubscriptBox["C", "4"], "[", 
           SubscriptBox["Z", "5"], "]"}], ",", 
          RowBox[{
           SubscriptBox["C", "6"], "[", 
           SubscriptBox["Z", "7"], "]"}], ",", 
          RowBox[{
           SubscriptBox["C", "8"], "[", 
           SubscriptBox["Z", "9"], "]"}], ",", 
          RowBox[{
           SubscriptBox["C", "10"], "[", 
           SubscriptBox["Z", "11"], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["ShiftLoc", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9", ",", "11"}], 
            "}"}]], "[", 
          RowBox[{"{", 
           RowBox[{"1.5`", ",", "0"}], "}"}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["C", "1"], "[", 
           SubscriptBox["Z", "2"], "]"}], ",", 
          RowBox[{
           SubscriptBox["C", "3"], "[", 
           SubscriptBox["Z", "4"], "]"}], ",", 
          RowBox[{
           SubscriptBox["C", "5"], "[", 
           SubscriptBox["Z", "6"], "]"}], ",", 
          RowBox[{
           SubscriptBox["C", "7"], "[", 
           SubscriptBox["Z", "8"], "]"}], ",", 
          RowBox[{
           SubscriptBox["C", "9"], "[", 
           SubscriptBox["Z", "10"], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cluster", "=", 
      RowBox[{"Keys", "@", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[UndirectedEdge]", 
             RowBox[{"#", "+", "1"}]}], "->", "1"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "10", ",", "2"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[UndirectedEdge]", 
             RowBox[{"#", "+", "1"}]}], "->", "2"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "9", ",", "2"}], "]"}]}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"noisycirc", "=", 
      RowBox[{"InsertCircuitNoise", "[", 
       RowBox[{"totalcirc", ",", 
        RowBox[{"RydbergHub", "[", 
         RowBox[{"Sequence", "@@", "options"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"Simplify", ",", " ", 
        RowBox[{
         RowBox[{"remove", " ", "errors", " ", "with", " ", "zero"}], "-", 
         "parameters"}]}],
       FontSlant->"Italic"], 
      StyleBox[" ",
       FontSlant->"Italic"], 
      StyleBox["*)",
       FontSlant->"Italic"]}], "\n", "     ", 
     RowBox[{"enoisycirc", "=", 
      RowBox[{"DeleteElements", "[", 
       RowBox[{
        RowBox[{"ExtractCircuit", "[", "noisycirc", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["Depol", "__"], "[", "0.", "]"}], ",", 
          RowBox[{
           SubscriptBox["Deph", "__"], "[", "0.", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{
       RowBox[{"CloneQureg", "[", 
        RowBox[{"\[Rho]", ",", "\[Rho]init"}], "]"}], ",", "enoisycirc"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"CloneQureg", "[", 
      RowBox[{"\[Rho]store", ",", "\[Rho]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"emeasnoisy", "=", 
      RowBox[{"ExtractCircuit", "@", 
       RowBox[{"InsertCircuitNoise", "[", 
        RowBox[{"evensm", ",", 
         RowBox[{"RydbergHub", "[", 
          RowBox[{"Sequence", "@@", "options"}], "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"omeasnoisy", "=", 
      RowBox[{"ExtractCircuit", "@", 
       RowBox[{"InsertCircuitNoise", "[", 
        RowBox[{"oddsm", ",", 
         RowBox[{"RydbergHub", "[", 
          RowBox[{"Sequence", "@@", "options"}], "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Note", " ", "that", " ", "this", " ", "is", " ", "okay", " ", 
          "because", " ", "we", " ", 
          RowBox[{"don", "'"}], "t", " ", "have", " ", "any", " ", "function",
           " ", "that", " ", "depends", " ", "on", " ", "the", " ", 
          "absolute", " ", 
          RowBox[{"time", "."}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"even", " ", "measurements"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"CloneQureg", "[", 
           RowBox[{"\[Rho]", ",", "\[Rho]store"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"statevenmeas", ",", 
            RowBox[{"Flatten", "@", 
             RowBox[{"ApplyCircuit", "[", 
              RowBox[{"\[Rho]", ",", "emeasnoisy"}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"odd", " ", "measurements"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"CloneQureg", "[", 
           RowBox[{"\[Rho]", ",", "\[Rho]store"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"statoddmeas", ",", 
            RowBox[{"Flatten", "@", 
             RowBox[{"ApplyCircuit", "[", 
              RowBox[{"\[Rho]", ",", "omeasnoisy"}], "]"}]}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", "nshots", "}"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"stabilizer", " ", "count"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"scount", "=", 
      RowBox[{"Association", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"j", "->", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"VertexList", "@", "cluster"}]}], "}"}]}], "]"}]}]}], ";", 
     "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"First", " ", "measurement", " ", 
        RowBox[{"setting", ":", " ", "X"}]}], ",", "Z", ",", "X", ",", 
       RowBox[{"Z", "..."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"outeig", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"EvenQ", "[", 
                RowBox[{"k", "-", "1"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"out", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"0", ":>", 
                  RowBox[{"-", "1"}]}], "}"}]}], ",", 
               RowBox[{"(*", "flip", "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"out", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", ":>", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{"0", ":>", "1"}]}], "}"}]}]}], 
              "\[IndentingNewLine]", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"Length", "@", "out"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"+", "1"}], " ", "-", " ", 
             RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"scount", "[", "node", "]"}], "+=", 
              RowBox[{"Times", "@@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"outeig", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", "+", "1"}], "]"}], "]"}], "&"}], "/@", 
                 RowBox[{"VertexList", "[", 
                  RowBox[{"NeighborhoodGraph", "[", 
                   RowBox[{"cluster", ",", "node"}], "]"}], "]"}]}], 
                ")"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"node", ",", "0", ",", "11", ",", "2"}], "}"}]}], "]"}], 
          ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"out", ",", "statevenmeas"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Second", " ", "measurement", " ", 
          RowBox[{"setting", ":", " ", "Z"}]}], ",", "X", ",", "Z", ",", 
         RowBox[{"X", "..."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"outeig", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OddQ", "[", 
                RowBox[{"k", "-", "1"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"out", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"0", ":>", 
                  RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
               RowBox[{"(*", "flip", "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"out", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", ":>", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{"0", ":>", "1"}]}], "}"}]}]}], 
              "\[IndentingNewLine]", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"Length", "@", "out"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"scount", "[", "node", "]"}], "+=", 
              RowBox[{"Times", "@@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"outeig", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", "+", "1"}], "]"}], "]"}], "&"}], "/@", 
                 RowBox[{"VertexList", "[", 
                  RowBox[{"NeighborhoodGraph", "[", 
                   RowBox[{"cluster", ",", "node"}], "]"}], "]"}]}], 
                ")"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"node", ",", "1", ",", "11", ",", "2"}], "}"}]}], "]"}], 
          ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"out", ",", "statoddmeas"}], "}"}]}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"stabideal", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"CalcExpecPauliString", "[", 
         RowBox[{
          RowBox[{"CloneQureg", "[", 
           RowBox[{"\[Rho]", ",", "\[Rho]store"}], "]"}], ",", 
          RowBox[{"stabgs", "[", 
           RowBox[{"cluster", ",", "#"}], "]"}], ",", "\[Rho]work"}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "11"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mean", "=", 
      RowBox[{"N", "@", 
       RowBox[{"Mean", "@", 
        RowBox[{"Values", "[", 
         RowBox[{"scount", "/", "nshots"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ideal", "=", 
      RowBox[{"Mean", "[", "stabideal", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<options\>\"", "->", 
        RowBox[{
         RowBox[{"RydbergHub", "[", 
          RowBox[{"Sequence", "@@", "options"}], "]"}], "[", "OptionsUsed", 
         "]"}]}], ",", 
       RowBox[{"\"\<outeven\>\"", "->", "statevenmeas"}], ",", 
       RowBox[{"\"\<outodd\>\"", "->", "statoddmeas"}], ",", 
       RowBox[{"\"\<scount\>\"", "->", "scount"}], ",", 
       RowBox[{"\"\<sideal\>\"", "->", "stabideal"}], ",", 
       RowBox[{"\"\<smean\>\"", "->", "mean"}], ",", 
       RowBox[{"\"\<sidealmean\>\"", "->", "ideal"}], ",", 
       RowBox[{"\"\<nshots\>\"", "->", "nshots"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.878151350288493*^9, 3.878151443142488*^9}, {
   3.878151976415709*^9, 3.878152094557281*^9}, {3.878152140037305*^9, 
   3.8781521471912003`*^9}, {3.878152192247911*^9, 3.878152272969626*^9}, {
   3.8781525255641747`*^9, 3.878152579842228*^9}, {3.8781527971262913`*^9, 
   3.878152824654704*^9}, {3.878152877984029*^9, 3.8781529140339203`*^9}, {
   3.878153458580464*^9, 3.87815347056089*^9}, {3.8781535760940027`*^9, 
   3.878153599905727*^9}, {3.878153672913123*^9, 3.878153703009058*^9}, {
   3.87815378114353*^9, 3.878153793103977*^9}, {3.878153832914179*^9, 
   3.878153849719275*^9}, {3.878153892772481*^9, 3.8781539018387814`*^9}, {
   3.8781579342791348`*^9, 3.8781579489015837`*^9}, 3.878158007404312*^9, {
   3.878158119154377*^9, 3.878158121297265*^9}, {3.878158154372466*^9, 
   3.87815818715989*^9}, {3.87823309529037*^9, 3.878233102809184*^9}, {
   3.8782343527820377`*^9, 3.87823440517765*^9}, {3.878234516956335*^9, 
   3.878234520440667*^9}, {3.888056607013994*^9, 3.888056622504094*^9}, {
   3.8880609591063766`*^9, 3.888061193573039*^9}, {3.888061246303143*^9, 
   3.8880612468541517`*^9}, 3.888061277788671*^9, {3.888062014434626*^9, 
   3.888062074335182*^9}, {3.888063869976823*^9, 3.888063871578561*^9}, 
   3.8880691178235493`*^9, 3.888069914273862*^9, {3.888069971529426*^9, 
   3.888070028377178*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"c0e4ce01-252c-4974-ac55-eea003f4ee27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"drawChart", "[", 
   RowBox[{"res_", ",", "expresults_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"scount", "=", 
       RowBox[{"res", "[", "\"\<scount\>\"", "]"}]}], ",", 
      RowBox[{"nshots", "=", 
       RowBox[{"res", "[", "\"\<nshots\>\"", "]"}]}], ",", 
      RowBox[{"stabideal", "=", 
       RowBox[{"res", "[", "\"\<sideal\>\"", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BarChart", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Values", "@", "scount"}], "/", "nshots"}], ",", 
        RowBox[{"ChartLabels", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\"\<S\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"#", ",", "TraditionalForm"}], "]"}]}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "11"}], "]"}]}], ")"}]}], ",", 
        RowBox[{"Frame", "->", "True"}], ",", 
        RowBox[{"FrameStyle", "->", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
        RowBox[{"AspectRatio", "->", "1"}], ",", 
        RowBox[{"ChartStyle", "->", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.3", 
          "]"}]}], ",", 
        RowBox[{"PlotRange", "->", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BarChart", "[", 
       RowBox[{"expresults", ",", 
        RowBox[{"ChartStyle", "->", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Opacity", "[", "0", "]"}], ",", 
           RowBox[{"EdgeForm", "[", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "Thick"}], "}"}], "]"}]}], "]"}]}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"stabideal", ",", 
        RowBox[{"Joined", "->", "True"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Thick", ",", "Dotted"}], "}"}]}], ",", 
        RowBox[{"PlotMarkers", "->", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "7"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"ImageSize", "->", "500"}], ",", 
      RowBox[{"Background", "->", "White"}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"{", 
        RowBox[{"16", ",", 
         RowBox[{"FontFamily", "->", "\"\<Serif\>\""}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfXvL88TH3984st1MygLRXYK3CkD0jrONhSBa72ZM
5TMg7b6Low1ES2xo6QHRHi4TekH0IWbupSBapNp/FYje6Sy2AUR3+XRuBNFx
9SrbQLSCh9Z2EB2rxrcHRG/7vmAviBa4tvYgiLY5kXQYRP+Itj8FoguZF10C
0WWOtndAtJ9l1wMQnVZ65AlYXU3aMxDdwJv4CkRfmVAPpi81J78D0U+YpL6B
6CxV8V9gewJuSj8H0qmF6xRA9IL4BkUQrWBsqwaig942aIPoH0s99cF051lD
EB2rblcJokPSlSaDaAAGV75H
  "],
 CellLabel->
  "In[256]:=",ExpressionUUID->"071b52bd-ba4e-4753-aca6-9520003427a5"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optimisation on the error parameters", "Section",
 CellChangeTimes->{{3.888056503637361*^9, 3.8880565327607727`*^9}, {
  3.888059116394994*^9, 3.88805911893607*^9}, {3.888060726130328*^9, 
  3.888060744678855*^9}},ExpressionUUID->"d7b6c8d1-5e1c-45cd-be97-\
644113050a76"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "GradDescent", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"GradDescent", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GradDescent", "[", 
    RowBox[{"params_", ",", "objf_", ",", "conf_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cost", ",", "basecost", ",", "grad", ",", "paramst", ",", "paramst2"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"basecost", "=", 
       RowBox[{"objf", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"grad", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"paramst", "=", "params"}], ";", "\[IndentingNewLine]", 
          RowBox[{"paramst2", "=", "params"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"paramst", "[", "k", "]"}], "=", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"paramst", "[", "k", "]"}], "+", 
             RowBox[{"conf", "[", "\"\<d\[Theta]\>\"", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"paramst2", "[", "k", "]"}], "=", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"paramst", "[", "k", "]"}], "-", 
             RowBox[{"conf", "[", "\"\<d\[Theta]\>\"", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"objf", "[", "paramst", "]"}], "-", 
              RowBox[{"objf", "[", "paramst2", "]"}]}], ")"}], "*", 
            RowBox[{"0.5", "/", 
             RowBox[{"conf", "[", "\"\<d\[Theta]\>\"", "]"}]}]}], " ", 
           "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Keys", "@", "params"}]}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"UpdateCost", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UpdateCost", "[", 
    RowBox[{"params_", ",", "objf_", ",", "conf_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "grad", ",", " ", "beststep", ",", "gradstep", ",", "tparams", ",", 
       "cbest", ",", "cnew"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"beststep", "=", 
       RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gradstep", "=", "beststep"}], ";", "\[IndentingNewLine]", 
      RowBox[{"grad", "=", 
       RowBox[{"GradDescent", "[", 
        RowBox[{"params", ",", "objf", ",", "conf"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tparams", "=", 
       RowBox[{"Normal", "@", "params"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tparams", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "-=", 
       RowBox[{
        RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}], "*", "grad"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cbest", "=", 
       RowBox[{"objf", "[", "tparams", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", 
         RowBox[{"conf", "[", "\"\<gradstepmultiply\>\"", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"While", "[", 
          RowBox[{"True", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"gradstep", "*=", 
             RowBox[{"conf", "[", "\"\<gradstepmultiply\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"tparams", "=", 
             RowBox[{"Normal", "@", "params"}]}], ";", "\[IndentingNewLine]", 
            
            RowBox[{
             RowBox[{"tparams", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "-=", 
             RowBox[{"gradstep", "*", "grad"}]}], ";", "\[IndentingNewLine]", 
            
            RowBox[{"cnew", "=", 
             RowBox[{"objf", "[", "tparams", "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"cnew", ">=", "cbest"}], ",", " ", 
              RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"cbest", "=", "cnew"}], ";", "\[IndentingNewLine]", 
            RowBox[{"beststep", "=", "gradstep"}]}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tparams", "=", 
       RowBox[{"Normal", "@", "params"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tparams", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "-=", 
       RowBox[{"beststep", "*", "grad"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"params", "=", 
       RowBox[{"Association", "@", "tparams"}]}], ";", "\[IndentingNewLine]", 
      "cbest"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParamsFit", "::", "usage"}], "=", 
   "\"\<ParamsFit[device, conf]. Parameterisation fitting.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"ParamsFit", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParamsFit", "[", 
   RowBox[{"params_", ",", "objf_", ",", "conf_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "cost", ",", " ", "iter", ",", "dcost", ",", "oldcost", ",", "oldparams",
       ",", "paramsinit", ",", 
      RowBox[{"initgradstep", "=", 
       RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}]}], ",", 
      RowBox[{"converge", "=", "0"}], ",", 
      RowBox[{"costlist", "=", 
       RowBox[{"{", "}"}]}], ",", "costinit", ",", 
      RowBox[{"fail", "=", "0"}], ",", 
      RowBox[{"maxfail", "=", "10"}], ",", 
      RowBox[{"msg", "=", "\"\<\>\""}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"iter", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"objf", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"costinit", "=", "cost"}], ";", 
     RowBox[{"paramsinit", "=", "params"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"costlist", ",", "cost"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{"True", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"oldcost", "=", "cost"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldparams", "=", "params"}], ";", "\[IndentingNewLine]", 
           RowBox[{"cost", "=", 
            RowBox[{"UpdateCost", "[", 
             RowBox[{"params", ",", "objf", ",", "conf"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"dcost", "=", 
            RowBox[{"cost", "-", "oldcost"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dcost", ">=", "0"}], "&&", 
              RowBox[{"iter", ">", "1"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"revert", " ", "to", " ", "old", " ", "cond"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"cost", ",", "params"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"oldcost", ",", "oldparams"}], "}"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"fail", "++"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}], "*=", "0.5"}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"msg", "=", 
               RowBox[{"\"\<fail \>\"", "<>", 
                RowBox[{"ToString", "[", "fail", "]"}], "<>", 
                "\"\< times due to increasing cost. Set gradstep to \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                  RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}], ",", 
                  "FortranForm"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"fail", ">=", "maxfail"}], ",", " ", 
                RowBox[{"(*", 
                 RowBox[{"consecutive", " ", "maxfails"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                 "Print", "[", 
                  "\"\<Reach consecutive maxfails. Optimisation fails\>\"", 
                  "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"fail", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}], "=", 
               "initgradstep"}], ";", "\[IndentingNewLine]", 
              RowBox[{"msg", "=", 
               RowBox[{
               "\"\<Recovered from fail. Set gradstep to \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                  RowBox[{"conf", "[", "\"\<gradstep\>\"", "]"}], ",", 
                  "FortranForm"}], "]"}]}]}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"cost", "<=", 
              RowBox[{"conf", "[", "\"\<costfin\>\"", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<seems converged to dcost=\>\"", ",", "dcost"}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"++", "iter"}], ">", " ", 
                RowBox[{"conf", "[", "\"\<maxiter\>\"", "]"}]}], ")"}], "||", 
              
              RowBox[{"converge", ">=", 
               RowBox[{"conf", "[", "\"\<convergenum\>\"", "]"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Reach maxiter or too flat: dcost=\>\"", ",", "dcost"}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"costlist", ",", "cost"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Column", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<cost=\>\"", "<>", 
           RowBox[{"ToString", "@", "cost"}]}], ",", 
          RowBox[{"\"\<iter=\>\"", "<>", 
           RowBox[{"ToString", "@", "iter"}]}], ",", "msg"}], "}"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"cost", ">=", "costinit"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Optimisation have failed, use the initial parameter guess\>\"", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cost", ",", "params"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"costinit", ",", "paramsinit"}], "}"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"costlist", ",", "cost"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"ListPlot", "[", "costlist", "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"objf", "[", "params", "]"}], ",", "params"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0n00FXYYB3BdZFT35lZG8x4y2WWOmZOolNcubhImV+bl5ObOTbWcc+my
updcizQ2FFJRhCMjWXkX0WbmeNkuGpWXzOraWGfOzrXf9/fHcz7nef55zvc5
j1mUKDCWoaamFkEK1g1PBN0YXNy/sPDpZ7CjkhEJp46aRcHx29ua4b6IXKr/
30Ot0OKocw+szl3tg/mjngooFk9Ow2HdpVm4MX07o4zY3bpDHYZfiA6CNoob
IbAoQsWH7lfXxcHFO/EF0MO4qBBW7VGwbhLfOgv0IZPtZwRDDYKMYa9urz3s
4Vs5wdGgeC+oej/XG7bPHedCT/fAQGg9NBIM0zT6QmHkb6pwWNtYz4ch/gKN
SuKj7lTqaubgBpjflKUPY/ILzKCiOdkcKpsYH0Jv4b8cyDSXOsKMlEHqrkvf
7IZC/jFX2LB06QAcyfj5IHxRszL/gGiYWPQaBg/xluH5OncVPLn3jEYTMa9T
uh6eK1pnQftauTv07gjzhgO8FB/4vZUsAD6s0k6CbhmjYphWkPAVnFKzuwK7
OcXU0H88++Ew6+IzuJyUON9H3CxmL0CtcrZWP7FyPor64N1HBvBV23c76Dwu
1Q46KPUcoeKwwg3O64s84NgfX/vAiZZgHkyLLhVAfd9qqnJSNA3DZcFK2CSX
b3mGP7CY3QqrOC8/1v+F5DV3dICONuousDrb2APOGWRx4b6IH3nQTdshDLY5
86hCxZIAtssWhJBplC2BU7vWqMpVuQyyzVPTYWteVw7MZvkUQocv10rh8171
MvjeppQBqJd7h7p5awXTgBjsodoGJTU8Q/iqLYQaajucbEicLT+SCa29wkeN
iIqXZZNwu93dafifRLoALwdmnDIm7jz2Jgky00taYUJ9ThdkjBszTIjRdz+n
DmVyzeD9CudP4IGnFW7w4PgXe+FzFxeJKVGlI8qA8tZfC+HpgKvXoCTLpBtq
xst74ZvXdVcskOteO9V9TlkCJU5PaqHLkHM73OLV1QXDXuSMQT6viHpz1GCD
JXH32DK1PnyVBed1itnQlivmWBFvW0bbw5Mzp5yg4GHJHmh6etkfmpx9FwBt
fOtOwD8/iEmEnq5th3YSS3/w40LlObcpLu55oWsGmr4VJ/sR18tGZLBsjFUM
H3PElVB4JK8Gqmyt70Mbz4g2yJu83AnrROxDt4geM1mHYfOTb8/DCUEjNUHb
9SLUFfGlUMtKutxDHBAqVmBjxdk1GGQUr9dLbIiVWsIozUaqYJPR+FNiZ6Q1
NXCwYRFyRh5TmYZxI/YKsu9eJTWmRecvmHecRfVt6I+OJaatDJ6Apmd+ai//
fXH/rZZHHTBszeZ6BXGjumYp/B+fAzzy
  "],
 CellLabel->
  "In[278]:=",ExpressionUUID->"c4a3cb4a-a0d4-470b-87d0-e1b24e507352"],

Cell[BoxData[
 RowBox[{
  RowBox[{"objf", "[", "params_", "]"}], ":="}]], "Input",
 CellChangeTimes->{{3.888072973062593*^9, 
  3.888072985077754*^9}},ExpressionUUID->"bc6e865e-ed99-420e-977f-\
8a4eb3277fb6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"confinit", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<nqubits\>\"", "->", "6"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<maxiter\>\"", "->", "1000"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<gradstep\>\"", "->", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<gradstepmultiply\>\"", "->", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"delta", " ", "params"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<d\[Theta]\>\"", "->", 
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<convergenum\>\"", "->", "10"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"\"\<costfin\>\"", "->", 
      SuperscriptBox["10", 
       RowBox[{"-", "8"}]]}]}], "\[IndentingNewLine]", "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conf", "=", "confinit"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"cost", ",", "params"}], "}"}], "=", 
   RowBox[{"ParamsFit", "[", 
    RowBox[{"params", ",", "bellcost", ",", "conf"}], "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"82d3a5fa-5a53-4d7b-af03-70a66520c5e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Rho]", ",", "\[Rho]init", ",", "\[Rho]work", ",", "\[Rho]store"}], 
    "}"}], "=", 
   RowBox[{"CreateDensityQuregs", "[", 
    RowBox[{"12", ",", "4"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetQuregMatrix", "[", 
   RowBox[{"\[Rho]init", ",", 
    RowBox[{"RandomMixState", "[", "12", "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8781529370163317`*^9, 3.8781529534130297`*^9}, 
   3.888069223335059*^9},ExpressionUUID->"d21073f7-5819-46dc-ae81-\
5b6eaef908dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimulateGraphState", "[", 
  RowBox[{
  "\[Rho]", ",", "\[Rho]init", ",", "\[Rho]work", ",", "\[Rho]store", ",", 
   "5", ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.888061303572123*^9, 3.888061306683618*^9}, 
   3.8880690770513*^9},
 CellLabel->
  "In[266]:=",ExpressionUUID->"dfb750ad-82d2-4251-b672-2327eccf1ac2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"options\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"qubitsNum", "\[Rule]", "12"}], ",", 
      RowBox[{"AtomLocations", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"0", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"1", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}]}], ",", 
         RowBox[{"3", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"3", ",", "0"}], "}"}]}], ",", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"4", ",", "0"}], "}"}]}], ",", 
         RowBox[{"5", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"5", ",", "0"}], "}"}]}], ",", 
         RowBox[{"6", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"6", ",", "0"}], "}"}]}], ",", 
         RowBox[{"7", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"7", ",", "0"}], "}"}]}], ",", 
         RowBox[{"8", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"8", ",", "0"}], "}"}]}], ",", 
         RowBox[{"9", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"9", ",", "0"}], "}"}]}], ",", 
         RowBox[{"10", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"10", ",", "0"}], "}"}]}], ",", 
         RowBox[{"11", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"11", ",", "0"}], "}"}]}]}], "\[RightAssociation]"}]}], 
      ",", 
      RowBox[{"T2", "\[Rule]", "1.5`*^6"}], ",", 
      RowBox[{"VacLifeTime", "\[Rule]", "48000000"}], ",", 
      RowBox[{"RabiFreq", "\[Rule]", "1"}], ",", 
      RowBox[{"ProbBFRot", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"10", "\[Rule]", "0.02`"}], ",", 
         RowBox[{"1", "\[Rule]", "0.03`"}]}], "\[RightAssociation]"}]}], ",", 
      
      RowBox[{"UnitLattice", "\[Rule]", "3"}], ",", 
      RowBox[{"BlockadeRadius", "\[Rule]", "1"}], ",", 
      RowBox[{"ProbLeakInit", "\[Rule]", "0.001`"}], ",", 
      RowBox[{"ProbLeakMove", "\[Rule]", "0.01`"}], ",", 
      RowBox[{"DurInit", "\[Rule]", "500000"}], ",", 
      RowBox[{"FidMeas", "\[Rule]", "0.98`"}], ",", 
      RowBox[{"DurMeas", "\[Rule]", "10"}], ",", 
      RowBox[{"ProbLossMeas", "\[Rule]", "0.01`"}], ",", 
      RowBox[{"ProbLeakCZ", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "0.006`"}], ",", 
         RowBox[{"11", "\[Rule]", "0.001`"}]}], "\[RightAssociation]"}]}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"outeven\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"outodd\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"scount\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"0", "\[Rule]", "0"}], ",", 
      RowBox[{"1", "\[Rule]", "0"}], ",", 
      RowBox[{"2", "\[Rule]", "0"}], ",", 
      RowBox[{"3", "\[Rule]", "0"}], ",", 
      RowBox[{"4", "\[Rule]", "0"}], ",", 
      RowBox[{"5", "\[Rule]", "0"}], ",", 
      RowBox[{"6", "\[Rule]", "0"}], ",", 
      RowBox[{"7", "\[Rule]", "0"}], ",", 
      RowBox[{"8", "\[Rule]", "0"}], ",", 
      RowBox[{"9", "\[Rule]", "0"}], ",", 
      RowBox[{"10", "\[Rule]", "0"}], ",", 
      RowBox[{"11", "\[Rule]", "0"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"sideal\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.9150195825957494`", ",", "0.9150660643262962`", ",", 
      "0.9150342634805443`", ",", "0.9150689390689006`", ",", 
      "0.9150342634805441`", ",", "0.9150689390689005`", ",", 
      "0.9150342634805443`", ",", "0.9150689390689006`", ",", 
      "0.9150342634805443`", ",", "0.9150689390689006`", ",", 
      "0.9150313888324232`", ",", "0.9150588581209079`"}], "}"}]}], ",", 
   RowBox[{"\<\"smean\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"sidealmean\"\>", "\[Rule]", "0.915049058672763`"}], ",", 
   RowBox[{"\<\"nshots\"\>", "\[Rule]", "5"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.888061601893427*^9, {3.888061642909731*^9, 3.8880616471317577`*^9}, 
   3.888062380943623*^9, 3.888062702371825*^9, 3.8880691137149963`*^9, 
   3.8880699597658854`*^9, {3.888070043949752*^9, 3.88807005665738*^9}},
 CellLabel->
  "Out[266]=",ExpressionUUID->"9e8ceb3d-c726-459b-8696-1ca44641862a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Optimisation", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fbrot", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"10", "->", "i"}], ",", 
          RowBox[{"01", "->", "j"}]}], "|>"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.02"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"{", 
           RowBox[{"0.02", ",", "0.03"}], "}"}]}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probleakinit", "=", 
     RowBox[{"{", 
      RowBox[{"0.001", ",", "0.01"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probleakcz", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"10", "->", "i"}], ",", 
          RowBox[{"11", "->", "j"}]}], "|>"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.05"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"{", 
           RowBox[{"0.005", ",", "0.001"}], "}"}]}], "}"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fidmeas", "=", 
     RowBox[{"{", 
      RowBox[{"0.97", ",", "0.98", ",", "0.98", ",", "0.99"}], "}"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"res", "=", 
    RowBox[{"SimulateGraphState", "[", 
     RowBox[{
     "\[Rho]", ",", "\[Rho]init", ",", "\[Rho]work", ",", "\[Rho]store", ",", 
      "50", ",", 
      RowBox[{"{", "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8880600128277597`*^9, 3.888060015935163*^9}, 
   3.888060940392459*^9, {3.888069214273986*^9, 3.888069214439867*^9}, {
   3.8880698725621357`*^9, 
   3.88806989349592*^9}},ExpressionUUID->"2f7da0a9-248b-456b-96a7-\
63ac1450d32a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dev", "=", 
   RowBox[{"RydbergHub", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8880566964024477`*^9, 3.888056737474524*^9}, {
  3.888057802286941*^9, 3.8880578029092817`*^9}, {3.888058993232662*^9, 
  3.888058998336506*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"d354560e-cb6b-442b-932a-e6c80581d941"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dev", "[", "OptionsUsed", "]"}]], "Input",
 CellChangeTimes->{{3.888059047527028*^9, 3.888059051579726*^9}},
 CellLabel->
  "In[602]:=",ExpressionUUID->"cd4f7cdb-3f1a-47b1-8cf8-66db066eb228"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"qubitsNum", "\[Rule]", "12"}], ",", 
   RowBox[{"AtomLocations", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"0", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"1", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}]}], ",", 
      RowBox[{"3", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}]}], ",", 
      RowBox[{"4", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"4", ",", "0"}], "}"}]}], ",", 
      RowBox[{"5", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"5", ",", "0"}], "}"}]}], ",", 
      RowBox[{"6", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"6", ",", "0"}], "}"}]}], ",", 
      RowBox[{"7", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"7", ",", "0"}], "}"}]}], ",", 
      RowBox[{"8", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"8", ",", "0"}], "}"}]}], ",", 
      RowBox[{"9", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"9", ",", "0"}], "}"}]}], ",", 
      RowBox[{"10", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", "0"}], "}"}]}], ",", 
      RowBox[{"11", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"11", ",", "0"}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"T2", "\[Rule]", "1.5`*^6"}], ",", 
   RowBox[{"VacLifeTime", "\[Rule]", "48000000"}], ",", 
   RowBox[{"RabiFreq", "\[Rule]", "1"}], ",", 
   RowBox[{"ProbBFRot", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"10", "\[Rule]", "0.02`"}], ",", 
      RowBox[{"1", "\[Rule]", "0.03`"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"UnitLattice", "\[Rule]", "3"}], ",", 
   RowBox[{"BlockadeRadius", "\[Rule]", "1"}], ",", 
   RowBox[{"ProbLeakInit", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"ProbLeakMove", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"DurInit", "\[Rule]", "500000"}], ",", 
   RowBox[{"FidMeas", "\[Rule]", "0.98`"}], ",", 
   RowBox[{"DurMeas", "\[Rule]", "10"}], ",", 
   RowBox[{"ProbLossMeas", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"ProbLeakCZ", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0.006`"}], ",", 
      RowBox[{"11", "\[Rule]", "0.001`"}]}], "\[RightAssociation]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8880590548402767`*^9},
 CellLabel->
  "Out[602]=",ExpressionUUID->"061073b4-fb6c-4182-a7a1-f864df5e8acf"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fbrot", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"10", "->", "i"}], ",", 
        RowBox[{"01", "->", "j"}]}], "|>"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"0.01", ",", "0.02"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"{", 
         RowBox[{"0.02", ",", "0.03"}], "}"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probleakinit", "=", 
   RowBox[{"{", 
    RowBox[{"0.001", ",", "0.01"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probleakcz", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"10", "->", "i"}], ",", 
        RowBox[{"11", "->", "j"}]}], "|>"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"0.01", ",", "0.05"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"{", 
         RowBox[{"0.005", ",", "0.001"}], "}"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fidmeas", "=", 
   RowBox[{"{", 
    RowBox[{"0.97", ",", "0.98", ",", "0.98", ",", "0.99"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.878154317626651*^9, 3.878154361570455*^9}, {
  3.8781547252963123`*^9, 3.878154758636362*^9}, {3.87815513507719*^9, 
  3.8781551974395027`*^9}, {3.878155379961623*^9, 3.878155388611075*^9}, {
  3.878155718314144*^9, 3.878155720285844*^9}, {3.878156089106415*^9, 
  3.878156110866797*^9}, {3.878156536038*^9, 3.878156566681685*^9}, {
  3.878156613057662*^9, 3.878156621832225*^9}, {3.8781567910597973`*^9, 
  3.878156832158514*^9}, {3.878157001431444*^9, 3.8781570016812057`*^9}, {
  3.878157062229167*^9, 3.8781570648433313`*^9}, {3.878157276851058*^9, 
  3.8781572947661867`*^9}, {3.8781574756112823`*^9, 3.878157478963085*^9}},
 CellLabel->
  "In[1558]:=",ExpressionUUID->"7abd38d5-38fb-4f0b-af41-da92cd72926a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"options", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ProbBFRot", "->", "i"}], ",", 
         RowBox[{"ProbLeakInit", "->", "j"}], ",", 
         RowBox[{"ProbLeakCZ", "->", "k"}], ",", 
         RowBox[{"FidMeas", "->", "l"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "fbrot"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "probleakinit"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "probleakcz"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "fidmeas"}], "}"}]}], "]"}], ",", "3"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8781540819161654`*^9, 3.878154083411895*^9}, {
  3.878154310235363*^9, 3.878154312496283*^9}, {3.878157069918415*^9, 
  3.878157236101913*^9}, {3.878157305149556*^9, 3.878157307081806*^9}, {
  3.878157378371035*^9, 3.87815739436145*^9}},
 CellLabel->
  "In[1562]:=",ExpressionUUID->"1c277dbd-3726-4de6-a596-dda876c89355"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Steane code", "Chapter",
 CellChangeTimes->{{3.888063667813013*^9, 
  3.888063670568142*^9}},ExpressionUUID->"cd8db350-814d-43ed-aab0-\
4922f2a80307"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQd4XNW598s5uZCTfGDgg+TcGwI8tOf5Ljk8BJKbc064QODDyTk3CQZs
U4wLtklICMVgigumGFtdtrExzQVXXCTbKja25IZ7kWQJyxXcJDfcLWNbZcp7
93/tefesvWfPaCTNaKTR+/OzPKM9u6y9Z/ba67/esm7q9/Jjf/3nSy65ZOC/
GP891vfNB159te/grlcZf3R/aeDfn3vpL8/+90uv/eW5v7z6H/1+YCz0/tMl
l9QYb/4P4z0JgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIQgC/36+K831DQ4P13ufz
Wevr7wVBEARBEARBEARBiD+6Xgdej5fy8vLo2Wefpbvvvpv++Z//mR566CG1
zrZt22jAgAF04MABa1tBEARBEARBEARBEFoHXYdXVlbSTTfdRJdccgn90z/9
k3pF+d3vfqc+X7FihdL0P/jBD+jtt98WDS8IgiAIgiAIgiAIrQjb4aHfr732
WqXZodP/9Kc/0X333af+xiuA/f3mm29Wn2P5O++8k9jKC4IgCIIgCIIgCEIH
A7HtsL/D9o7X8vJytfzdd99VWv2BBx5Q67DdvVevXpaO37dvn1omNnlBEARB
EARBEARBiC/Q3lOnTlV6HD7y0O+IiYdmh7+8m4YHN954o1p/3Lhxot8FQRAE
QRAEQRAEoRWA/u7Zs6fS6t27d7fp8REjRoTV8C+88IL67JFHHrFy1EP7C4Ig
CIIgCIIgCIIQH6C7O3fuHBLfDr0eyQ4/bNgwK1Ze7PCCIAiCIAiCIAiC0DpA
o8MvHrocQNdjXvjhw4erGHnMLcewlsdn0PAPPvigzBUvCIIgCIIgCIIgCK0A
9Perr76q9Dhy0evADu/U8Bwrj/nmsM1rr72mlostXhAEQRAEQRAEQRDiC+zt
W7dutfLM4z3HtcO3Hsvha69TVlamtD3KggULrOUSDy8IgiAIgiAIgiAI8QU2
9N/+9rdKw991110R55YrLS2la665Ri3HXPE8vzzvRxAEQRAEQRAEQRCE+IJ5
3q+99lplW4c+//Of/6y0O97fcMMNyq8ePvX8eadOnaiioiLR1RYEQRAEQRAE
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
//nGULrpZdMO/73jqM7z0zU8fmN1dXWN1hy/O96uqqrK5nMPPd63b19bHjy8
XnbZZVYcfa9evejMmTNmfQL6nz975JFHQq+UsV88b3md22+/PeRz1ulcr5Ej
R0b3NQhCBBKu4f1hNCHrQE1H2jR8G3ZBiazfG2+F46fh3XW816nirfETPoDP
prlDz8JRY9bWmob32tYLra9NN0c7RuOi4Zs6x6ho+LZNfX29em3M58z5eUf0
URMNLyQbidTw4dC1faTCdJS2SDR88ml4PH1NDV8U0PDDo9bwl4eUd6zi1PCR
zoc1r57jBno43P0GOLYOc7TwZ+hLnDx5ku6++25Lu1999dXqeYlYvT/84Q82
Xa8fD/vo1q2b8vXr1KlT6JUyPh82bJjNN/DEiRPqM33cD3Z+9hcsLS1t6hci
CCG0hi99Y8rVTT812ka1YTt8kKB+di++KM+Dr4hj2ybVQ98+qLxxvRsCha9/
CA67ubuGt+9Xt8XrGj2S9rdpeLfz8zuK6y8r9DzDXw/n5633dHRDNLw7TfFl
Fb9X0fBC8pAoDR+LOeH1+NeOgGh40fDx1PAcD69qFuHe7NOnj7UN/OR5fRTE
2fFn48ePV/en7jMPjX/nnXdasXlnz561jjVlyhRlZ0e+HfjL266UsQ7GAbBf
rIO2Cnqd4baAj3/LLbdIX0WICYnKaYd7Fm0T2gjkpbwQeK2noJ5s70+/YIur
+7ITWa1wI/Zmp33Y1eYd8fhOGzeOGarhWcc7x1B4mSKshrdrZn2ffH76+Ix+
DL/feOfzBnwtXOzxTlw1vMtxrZo2dmVC/0KdEqXkO6qGd3uWNbUPzes7c8Z0
RETDC8lCW7HD5+fnKx9azHuBPjz7zEYq6FuJhhcNLxo+Nhr+uuuuU/Fy8EHH
K35jeoF//PXXX2/p6N69e6v7T481hz7H/fvwww+7Hgvrz5s3zzomnqEcxw49
zzZ6HF9dIc0nh9uol19+Wb0fMGCA9TnqgH2zf8DAgQM7dB9FiB2to+F9plbz
BedYhPI6Z5TTRjllFHidfEdmDsxzlu4znt9eU6PZ+/OJtZdGg117+2xjFsAT
pvr6Mx/b8vjG97x9E/LE4VgXjfXrAvvw+gPjgdo6zm0ajJVwXH9gm7rAcr/X
F7KNU8N7vfVqu9pAOesNjsvw2AyPC3iMNVEfv7ZDfUwnWk8D3ZegLrCtOveG
8BeKf0vq+IFjcmvqDfz2EhGu0ZE1/PDhw0OeyWiTsByvjZW3335b+bKlpKSo
95gnvqMiGl5IFhKt4XFsaAEcW9ftnC8rUkEbBjqKjhcNLxo+nho+2gL/eMxL
o4/p4xVx9NyvQO45t3gX6GrkueN9wd6u378Yx4N9/he/+IVtu+XLl6v1f/Ob
36h8dXh/ww032M4DcfnsR4/578QOL8SC+Gv4YKtzscGjNNZ5o2zYe4bGFmyi
QZOK6NmMHOo78gvq+/5USp21ij4q3ECVx+roIpltvfqtG/rfG5Ifre2ia3gU
tIVfbtpO89ZW0uLS3ardCjcKh3ah1me2nYu27KE563fSnNVf077j58kTuO0b
nYPSKBeNA5TsPkTz1+9W5dtjF1Q9PGSOjzjBuAK+n93HLlL+OqOuq8ppyYaK
0J2H+LKzHd7kVK2HCtaVUo5xvgVbvqWzZO7X1O+cd5Ss77PeZ269aNO3lL/h
W1q0poL2HTnd6Des+xngvIpL99C8NTtpweqddNrrfn3164Zjrt31HeWsqqT8
NV9T5a795tloPgetSUfT8Pp8LeGex9HYu/Tc9Lw+5pzrqIiGF5KFRGt49OHR
ruDY0Abw0x06dKiVyzpSgU7oSIiGFw0fTw0PHxjEqOP5xq96QZy7PsY2derU
EFs3a26nnx/eI988trnpppssezv0uA4+Rx8D+e+QG4+3HTt2rGV7B+xPj30y
GFfAsptvvrnDjOsJ8Se+Gj7Y4uBOgiavNt4Mzy2jx1Pn0ePp8+mp9AXUM20e
9UzJpV7Gsh5pC+jJ7IX0RFoupczbSId9ZnvPe9Nt222f4IgDbNofF5XRM5mz
6emUmbTxmKlrw4Fxjrlfn6Beo+dTn4wv1LbKFh9okryexjU82t+9ZzzUK30m
PZE+l4bPWqn0tHk9TSWvHg6BXeGvw8biFz/+kp7Jnk8DP5hFu09e1KcKNQnx
ZQ/60uN/fM+fLl5LT2XMoR7pObT+QK2m4T1GqVdrKj8nMv0w5pceoT7pudTf
qOeEBavU8sY1fDA6Aee6fNsZ6jdyDj2TnkczNxyyzVmiqq212eeNt6UnyTjm
XHomI5femriITnsCvzF/YuKqO5qGd/qhtVTDc4GvnJ6PpqMhGl5IFhKdl57j
V6+66qqQOS8ay2nX0XxlRcOLhm+5hg89M36uo18En3S+r5z3G/qTuEcvv/xy
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
T9ccpicz8+ixlDn0xZaj5jiH16wd9HtTNbw+fx2OO3ZpNT2VvVSNHWy/YOaS
221c2P4fLjGWL1ax5FUNgXnoojH0N3LmqPkeQzj3zFpMXVMXKT0P/wvk1fus
eIfysX8qq4DyKk4qfV0fVXxAmKP5fcpXHtcYuvyVj5dQt5EL6W8frVTnid9b
8b566p4ylx4fXURvL6hUYyZqjATPKr/HyvIXPIPWRTR8KHgmwgZ2xx13qDHt
cEXPR8vvOyqi4YVkIdF2eMD5rt3yXAtBRMMnn4a3ctoVraSfveam4d9RRc9X
x+XHg+3lR0OChTU84uFtGp5Yw4fGwzem4XVdft9991nb8TL+TaLo+Sn1uBg8
M6+55hqrT8HzwwN+xXGg3fH5Pffco/zy0TYh350+LsBjBpzLriPbFYT4EU8N
r/uQQ1fBLvpI1kp6YvQiWnsqdE4JNRe8z8yVDj9v5Hfjucb13GSx9KUHHl9Q
Z9vbyNAl0NGwEeM1uiPYbfHIp4Y28YPCr6lbehE9mrmUKowLNG9nHT2WuUjF
wH+wsEyto47Aeda4slqewKYA+/de47+nR84xdGwhpXxZRTuNfbw5aany2+81
aiFVnghkq/e33M7A5wttPurLXfTM2OXUKz2Pthh1mLOT6KkU45iZBTRu8Q6l
6S9S023gPv2dCgwwbfeIeS/ecUrFYcCnfsH2C1RqHKTvh8jXl09Dpn9FB/2h
Y0jBXImcoaF1dbxoeDt4ViIOVdflPIecnrNe1/D8/h//+Eeiq58wRMMLyUJb
0PDom7NNrW/fvlRaWmqrW7ii0xHydIiGTzYNDz9Nv+qLpixeSj9/4y3q9NZw
o4wwiqHjh75PnYaYBe+bUn4yCL70A5Uv/RnraNrZaXMD8b1///33R+WPB3Sb
O+aAw3aVlZXWsh/96EdKhy9dulTN7Y7xOY6b4fx0OOawYcPU/e68pw8ePGjr
kyAWvr6+3rYOnr963wW56wUh1sRLw5uayKdylyGLGbTc+KV76MmsJdR11BLq
8+Fimlt6mHaeNrU8ihUv7cfYWOBeDdGrsYiHN/fB7v5Qaxf9po48r5WLjsI5
93yBvxuvQ7A9YvS4+G4jC6hL5koalr+XuqfmU9f0hTTw8zVK06oYeC0ewdqH
WhbQrE3Q8Zwv/uOibfRo2iIVGz980R56YuRc6pGZS8uqPErn8zEay3vflONu
Qz7+jPn0SMpCGlx4hLqPXk1PZS6htz5fpWzhrKV1oo9UIPt1IvMaw/b+l4+W
0cNpRfTqtDL6x4T11D2ziP4ybglVnvZb3yNfw+DTw0fBkSPR8IkEOV6RAwa6
vFOnTmqeJ8zLgmW4TniPZyzaLu5jYwwd/vQdGdHwQrKQaA2PHNW4n6Af9D67
c1zRrUBHOM8jmRENn1wanvvG8GEctXQFXf/K63Tlm0OVDR3x7Fe/9lazy7++
Oohu+8dLyv+0zjqe1l/2B+3qfD/hPmxsLIw1PvzheUx/3rx5ajm2HThwoHX/
ckw7/v6Xf/kX9Td876HZdZsA+mNcF/0+hm8gtoFN4dVXX3WtzxVXXGHtB22J
IMSa+Gl46HePKphHDIrouFEGTSqiR9PnqRzp3bOLqXv6Inpp6ib6eO1Rlbsc
9nroq7rAXHJBse0lm79NpFYsCjs1KzWMLWAc8GSgfvBrPxoo3wWW6QU50qA7
oRHDzz7m7nfP7Q/mdq8xTufDov3UNW2JyhHwSGqBmnfvkPPMQs7DB4Ftlia0
5Cqfm3HMbww9jXxuf8peTv9taOqnjO9iXul+pe9xPn6ryrHpb+Aa4xnwQfFO
esQ45p9Hr6eu2SvoH+OL6DtvIHuJz+7P1NhZhTzHXKqK50L+9osqduCxrOX0
SNoi6pmWQ1+f5fz4wT2F+l4E57tvTUTD20FuV54jBvO54v5BQZuFZ+LYsWOt
dfFcHT9+vFq/a9euCax14hENLyQLidbw3D/i+aL5tTH9joLxRbdzSVZEwyeX
hufvCf2ljxYvo//7xZcNHT9Q+cDDhn7Ti6/Zyo0vRV9ufeFV+vcXX1H9adN7
UstGpZ0gflM8hvb88883Wl/+DSKOHeP68HWHbue+A8qUKVOUrz3H4WHOt//8
z/9Uy5kJEyYo/Y17Xdfnuo7H+p07d1b1Q+47NwYMGKDWQf1hkxCEWBN/O7xH
vfLcX4iHnrhmL/Udu0jZndU8YPB5Nt4jPvof4wrpw4IyOurRLKGs4a09N6Kx
otDwKm7a2PzFlA/puRGfUb/hk6l/2gx6Jv0L6pNhFrzvl8ZlBvVNnU79jeUo
qdMXa3n13c7e7hek+wYB5FlbtJeoS8oS+uOoNdQlYwltOGbmt/NYJxHu3Dhm
qDGCAeZYG7oWYxV/n7LROOYq+v+yV9I7+TvV2ISaLR7zzluJA/2q6HWO/PwI
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
Klh35vItEbUc266hE0tOEz03fpnS0s99sEj5d1+0VjQbL7TTn68/RI+nzqMn
U3Jo/XdBjem0w3sD+QU2HvHT39JmKL153m/fH7TyB0Xfqrx5T6UvoOmGVg/6
rQf3VW1ciN5jl1H37GIaPmeDygen62Mcp7CyhvqMnE1/GTmV0uZ8RUMmFVKf
1MnUO+ULWrT9tDWWgfPdfspvnGux8id4/oMc9R2dC+zLH1hHjR1sOqCO+Uhq
gYrVt3LUI++B8XLMqMRbnxfTM+mz6Y2PFtCIacX04gfz1fx/73xepPbhCfg4
HDR2/vqklWr8Az4Opd/5zZgHL2KoTW8G1GG5cZzumTn0RNZ8+mztfmueeI51
eCnlU+N6fq7Kc6lT6NmUqWpeQdRBlYxcGjFjufru4tGXFA1vh/vHFRUVyg7m
bKf4eunzNSNG/te//nVc5mLV+7YHDhxQ804h/t5po4p2XhunjQvboN6IG0BB
7C36z03NkSUaXkg2EmWH37p1q9W2QMsDzs2h57bje7hnz57W+pgDk4lFvvq2
3v6IhhcN3ywceaMEQYieeMfDqxxuszYYmq5A2UjT8rbSgTpTx+lzTECvYk74
6Wv2Us/sQuo1ZhG9OalIbc96t6HBfA6id/61oYvHFW2nvlk5ai73NdW1lpaM
po3jvPTQ8TWBfXI5pRV9Oftznw5sF2l0GvuHH/gBY6WBUzdS19RC6pk2j8pO
sB86G81Ndat8243//jZ2oRq/eGtOqToe25LZbx1rV52to7xNe+ivY/KpT3ou
zV+/W10/1si4DsU7TtGTGYvo0TRc8wo1bqB87huCEd34G+fx2fqj9Hj2l9Rt
RI6aox71w6WGr/4B4wvqmTKXnhm1SM0dgDx12Nemk0T9xiymv40ppD2nvWqb
/cauB09ZpvT701l5VH68QX13dY6uhMpdaCx79qOv6LGMIjV2wOcK8JuY8OVG
ejplJs3fVUfVFJwPYMzCcuoxcgbllH2n1sN245ftV+MjiBfILT9jxiioY/rN
nHc+rzomvsPh89bR46MXUc/Reer7radgXAU+xxgGz0lwyCg49jdGGb28mv72
Qb763YXMiRcjRMOHoud7Rkwq+pX6fLHwrX/55ZeVbkV+qVGjRsW1nz9mzBhl
/2d7P5fHHn2Mdu/erdZB3Xg+6EjofehVq1ZZc9vrBfn10UY35ZxEwwvJRqI0
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
Ca3i75ab1+BiFrbyZ3Ftaxxyl85hnwaud2+1yXyFUOeU/hmovoHslQtxetEc
GRfvatbmuJC2/6rbOLV2ifgOLEEN5zUU/aq9hapjB5G1LATXt8bIegVifFuP
H8TJJcE4tTgQt3amcC58nv8aYxGoje31yI1dw9+torWLgYY698cl5s7Ul/aK
UlZLeSms5VfYp4D8Dar2bkH6ikVozqU+dR23eS9iMnxnobxQ//qv/8rjQjYv
+pvE15xY2efpcSiyvMnwAyD0PSP2JP8lWjfsqBePSmu9tIH3Cw8JxOfE57M4
aAbQViPzxNBr4l7Jysdqlo+sjfK+o77TXZn773vfemB4we9si48mng9Es2D4
2/FLPRhe2eB7x/BqHXdwMDxdQ6iWJZ2XmFRtIyGfH2oTXavVNsXxtC/l4qQ8
HkOB3ZU8aAzP3K5x/NbsM5Lfz53kx635A8vvJsObYoopvZH+Y3jNx5DmNRXF
7L9M9s8zEUHIj16LhtPpsF3MRcdlqY6L2bicspE5N3fZbGQtngnrhWzBXW3Q
3eJtLcgQXM++6JSrjNjbqd3vm6uQu24BLsWu4PWBrvxtvcWh/Nn1eujunHae
fK58JY2P3eSYI34Uc5KyjP04t2Ie25zL9qTIuZrLIk5H3Kv8ECQrS9/2LTi7
ZDbOrwzhWncy1x7YNn15WyznFsCtS/I4JMSqrZU4v3E50tctl34ON8tw6qNV
7PPPceFk93e2iuFqNdR909pJPFp1DSdWLWBbfO3eNOlvT3F/5K8uxvJqwiaU
xm6Q22l/td7h0vz7ib3tbag6so9jIKivtftS5H5kUzcMDVusmK1dKN+RitzV
i9iuj9rrMrcBNczSgdJPdyFDsDoundXi5TW7lGjDxaT1OBYZyms4ztJinIwI
wTmxb2HCegF9lVr/XPp9T493F8zfXngW5xaTj8U8NOSc04M4uJafHg+v2cEs
Wt7ky3k4viKcv7MyX0Ln+pb3Q0yG95SrV69yvWWaDz722GM8NhSbSnNjqg9P
82ujErvSdnqcPHnyQDff72IyvB/FiGaVFbh1/DPcObwd1Ye2Ck1D1WHSFPHc
rTWHt6BM7DP+reH4qvh8Zr7xJ9zO2IHqI1tQd2Qr70/vqz1IulU71lb+++aR
Xe74IeNtqD+lG4Ynbid+Z40JZCWGr4xbit//8G/xbdG/T2ePcDN8lOT3B4nh
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
C/B+8m/xwdanMCHhT9iVFyPa1KC9rytWd3axvfve2rhy20XMSXofYxOHY1Ty
H8V5n8bklJfEGa+KPZo4f72Lc+BpDO/UtFt+cnb6S0UQ2F12jkvYdyUW05Je
wZi4pzF+y/OYkDIcaZfWM2ereH34YHgP8eqyEwbSN/g9uNjHoQlFrWcwIe4V
jEt7Bh+kPIVJSX/C2qPzuX4frWfIPP/eDK/YXcXHd/UtMxm+v4XukQ0NDThy
5Ahrb+bD9B0tKyvDqVOneN49VMVkeD+JHxheHedWvCfDl8dFivP5geEHpLZc
5+vrQNWWU9cdup58//vf98i9oR6VKvv7rl27uMacyfAmw983hofxV2Ey/ECI
yfCmDEbxiy+9Qei+5mDSIgssxWi3cQ10WeesEvuvJmLa9tcxJvlZTI55iX3v
XVyfDh6spgi5nWLM7Yq3lM25N1c5etXC8drErh1a7vvulPahNQW2lXOdu+7z
5Ht7YhOrNrhuIePOdsGXL3Is+sfZAYgtCMakqGHM17dx2bA2YOyP8u22dyJc
7rk6ictNoTaHSxtrC6pxHaG7xmFszDDMTRmNY/Vb8EHSHzmP3o6ijaI3lewj
wXZ45UvvwfAqll9rGW93MPPzXNbpgtVh0UjYyZ8vHS/r5gGMi39JsPQwbDq3
AOtOBfP6wZTU18QZb3BOAofDKo/RKZeh1gD9w3SDvJ3P4snwZH8lb4NL1vMI
SB3NPh7z9o/GrlsfYnLsi5iZ+DbyWtP5+2b8fNRYOz1s8O75F/XTePc0Gb5/
Rc3Ts7Ky9HlybxmeakBRXjuq6zRUxWR4P4lfGX6pZHh7q2D4QpTHR/Q/w9sk
w7uyD6CSODs6GO2a3d27fVJV34M8tKtz0HGoZn1TXJhg+ARxQ2/xyCNjlIFg
eF/niouLw/PPP888T236/Oc/j8cee4zzdqxZswb19fW831Cd45sMf//0K4Ge
Oe2M9hHf9ZxM6U8xGd6UwSj9l5de5XsnqqrzqONFYmROub+dX28SFHuoLpXz
ro1PHIYtBR+KYzT5jDFvd9ogvWZdhoO5PDLY99RKWXvNyv7VTn60sv+3S3tu
VFpzIB4mbrW42nq8jnryu5096Evaz2BGypuYkPQ8luybipvIRRlOITBhBCbF
vYq04g0aY3qvSbjpWPKxTcuQ77aZezM8PbaJf/ViTGNOrOS68x9sHob0a1Sn
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
WMaHFPtZxlaSr8l7p5nhzX9v3LiR3zN37twOa5N9DO3v/k0+pNKnPxiRL64c
Q1PeZ7vM604pHzXt99prr/k9ntyXxtKK4cOgsDJ8qs7wDYLhD6M8My30DO/Q
GN5VkouLcyfixuw4Pj9f7dO4Psb2emCG533MDN9yU15Y2Htg+TsJ9XydXS+/
/DLXS4922f3k5Db6LVN76bfannXwUtT/0fHovhDoWKHuf+Q5mfPT289dStrl
FcMrho8WKYZXikTd2QyvpBQ96uoMbx4LUqF7pXns3tpYmBhf9mcddQ2pTvI5
pbEx2aICieLmU90UFz5YSRsfzTv4qls+ynF8IFucYvgwKywMr/mbdxrDOwIz
fL1ul28vw9fmRh7D0++J+hGqV84jmuWLY+k9tC+9h3xi2usrRO8jezn1PxTb
M5DC0f9IXyRf/bFieMXw0SzF8EqRKMXwSkqRoa7O8CTzOFCOXYNleLqvSps5
jTXbK2lvKikpMdab+/M3JfXr14/9TV995dWgjk/HpphRMt6+vzaQZJznQMdW
DB9mKYaPaoYnyTyNvn6fXvFq9P6CuJXe06NHD8t+bZU8XmlpKZ8/xZajmCD+
FI7+h/wR/J2PYnjF8NEsxfBKkSjF8EpKkaGuzvAU3zkuLo5tPvRI8Z+Jm2lc
SnYi2kZjQvqbHqnvsv9N6zrbaosKJLnmXK4xpxjVdP/2FTOPxsPUVrKHtTZm
l69TPGg67i9/+cuA+9LrMmeev2PL7Sq3XJikGD7qGZ76lLvuuisoX/rm5mbe
TuxObaV+gORr/Xiwksem/oeugVwj1Fn9D/XB/s5HMbxi+GiWYnilSJRieCWl
yFBXZ3iKLS/H6r5yMcsiYynT6+a/za+npaV1WLtobPrBBx/wsR9//HG2xZvH
0PT6tGnTuF5qx7lz5yzvp+f02ZJPPq3xl+8h0ZpU2W7KwWwfG9B+lMdKnqM8
tq8xurLDh1mK4aOa4akuyplGv2uygZeVlVl85n39Vs1x4srLyy3tlfsHew5m
2z71P3RcihVHMebs8UAo71tH9z9yH9ou+x/7+/1J5YdXDB9tUgyvFIlSDK+k
FBnq6gwv75FUaMwsOV5yujkXvK+/qVAeKLLfX716tfUKW5HZZ5TG47IuyjFF
/q10H6dcSxSrWbbFHBtKjvPJlifPwZfP6h/+8Afj2OSDIMfg9GjO2TR8+PCA
frmK4cMsxfBRzfAksjkPGjTI6FuIg82vkaT9nWLKyTx0NO/mT23xrZf7EjvL
PuKZZ57BwYMHQ97/UJ2Sxek1yn/hK0eILymGVwwfbVIMrxSJUgyvpBQZ6soM
72tca7YRBSNftrGOEh1X2qNovGueO5D2r2effZbnDuxxrMj/1F/sKNqH7Prk
q0rHMR9bPpIvL43Npe3f33kqhg+zFMNHPcNv3bqVx0aPPvqo8TunObz4+Hjm
XbmOh7hatvFXv/oVb6P3UaG/5XMzI7cm+r2bz1f2P9IvwD7f2dH9j+T+u+++
m+dF5VxFMP2sYnjF8NEmxfBKkSjF8EpKkaGuzPBS5nsjXQ85rpR5mFvLLRcK
mevZt28f51mSsaCobcTMcp2qeV8peo32oTEAjcPNbTWfE+VYpn1oTT+Nf6kO
Woe7fPlyr2P6kmL4MKuzcsuVq9xy4ZKMTyf53bxmh9hZbpPbza/7WgtE/QX9
LtvCAOb888XFxdz/PPHEEyHvf6iOF198EStXrrTkmQtGiuEVw0ebFMMrRaIU
wyspRYYUw1t18uRJw5bla+2p/Xlb15tGmxTDh1lhZfhkjeFbbgmGP4jyuSmh
Z/gWjeHdxbmoypyIuow4NOh2d3v7tBJj+A6Yi7866DgWhm8WDM8/3chheOp7
JL/7i8thLmb7uK9tdJy2MvydKMXwiuGjTYrhlSJRiuGVlCJDiuGtklxuZnM5
hrfHRrb7nXZFKYYPs8LA8NJX/SIzfI3B8JWZKbiREVkML5+3heFpnUBdBDO8
WW1dw+7rPbLf8hVXPpqkGF4xfLRJMbxSJEoxvJJSZEgxvLekryflnXvppZd4
PalddL2okC8o6XbzMd/pUgwfZimGj2qGt+eeoOf0G7Ov6bEXKfN+8hhdRYrh
FcNHmxTDK0WiFMMrKUWGFMN7i8a9FM9Nxm2i+Ezm1yjOEl0v6atKf1Os5q40
XpZSDB9mKYaPaoYnmdeit7ZWxzx3WFFRwevIfeVSb+va8jtRiuEVw0ebFMMr
RaIUwyspRYYUw3tLxpSSuZ1k7CazKI/Tj3/8Y2O/X/ziF53Q0s6XYvgwSzF8
1DP8lClTOA6c8ZHbxu6+4myuXr0aDzzwAPsM+fOpj3YphlcMH21SDK8UiVIM
r6QUGVIMbxWNjylGssybVFtby9tpPGy3b9E2mSeZivSr70pSDB9mKYaPaoan
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
wQdTc7D3qjZ/0lEzFGaGZ5uFeH5ZnEdq9i68mboG70xaj8nZu7kt5lz0HSPt
nOm7RD70S/df5vmCN1OzMSJzG8obtVx0Tsns5gG+YviIEPE55WSmOPSS3Wlt
qnl9Nn2vKI+8jG9HcaG7ooJjeG0OzbzGxF+h/of6CepFulFOAFFkbNLW3ndL
f5+3v1TnMbzTVFpl+KAq9DD8ublpiuGjiOHNPCrbcObMGfTv3x+PPvqokSeD
fmvU/1DfTf1SRkaG9tXQ7fW+jhetUgyvGD6apRheKRIVjrj01O/Q2O6jqevZ
Fk+MurjsFnN8IF40RU0zjmc9ejuk327kfUfep7UcdqbihqWQOdxcc3ut8vQ+
8h//fMMhtg2/kZiNaWuK2U+hWbYzWLuQn3OU41byM6ZlsE1ujWl3ipvDe1PW
441JuczvJZUNHv95V/vGHIavIR1Kt7/TZ0nrAr7IO4J3P1+LV8cvxJcbj/A2
+3Vsfw+pHY0YneYH1h+5wexO8ejj5m5Chbi4DWZ7o70oho8IybEgXZf3338f
N27cMK4TFbqX0ve6vr4eH3zwgbGd7rNdTd4Mv9nG8NrvkMbPe6prkF15icfR
gcrKiovYdOYcut19N7rddRfyz57HivILWHKxCllVV/yWNRcu4ljtLaMPtyo0
vvQ032Nem2zld60/p9icssj9iDPoelGMRPu1DCjaxdnEDH82M7XDmVoxfGTY
4UmZmZlcv8xvSY9UXnjhBW4fxUWU84y///3v2U7f1aQYXjF8NEsxvFIkKly5
5cies+rAVc5xxrHqUtYgbuF25By5ikqnFt+M/cZhXrnNg6QAR79N6bca4nG2
Sbu8Y6HZ46Ld0tsn47SZfQhuZyQq30MsPSX3kODLFXgjaQUmrT1oYVpf72nr
eRr2J/05ncd+UfH70zbi5cTV7D9P9vdm8xvbyfCyvfVNjbwGnq4bla/W7mOO
7jklB9NyD7N/e5PNv6BjYh1o9kI6/vojdeiZuIz9QPp/m4sLbu01n7Z35Usf
MaI4UpTPicaCgwYN4m00TpTXyTyml76stE6eXqM8c11NvhleysW/afqNE128
P+1L/MOAoXh0SGzA8uSAYfiXjz5Bt3vuR7f7HsT/9Zd+eGrgcH7t7wYN91t+
1n8gvszN4zm0Zq/fUmgY3swQsh9p1tdymYucF250toi/3RgxOhbd/qobP9Jz
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
R+J7w+JwT8xnvgu3c4Jg89G451//J7rd+xC6/fYPvE6A1hDc68O3wGAMUYjj
c8+eA/cqgqmtDB/XYQxfr9u9LxJTN3kYvjIzBTcywsDwjsAML9vXXoavzY08
hqfv3G9/+1uLTV1ul+MmM8PLWPSxsbE8h0jvlWN9FZfeKsXwiuHvNCmGV4pE
hZLhJcvROE6yL3GUA1Z7K8WWa9J5n7jv26IKvJa6Ct1TspFRVMlcJo/akXxF
HN/s0too6ZT+btCLebtcAylZvMnZtjbI/HGrD11npn09aTXiBNPK2PyeNfBm
P3nz+RpXS+d323p4+1pu/XZKY1qyv4+Yt51juvVOX81zCDeMXfxNApjPTq/X
+PRge00rTsqJ69L2oHNddbQJ3SdQLLlViJlXxLnYjXfb5lm8PlPT+fiyy9v9
7Z16nbsuOtH383V4K20t/vz5KoPf67nlMjq+Z14lsL3de2soe27F8FZdvnyZ
Wc4eZ37jxo1ednjJeDKmXZ8+fcLe3s6Wv9xy5vUqt8PwP/+4H7rdfz+6Pfgg
fvFJ/zYw/JY2Mzztl5eXZ/FT9m/D7ECGv+dBxfCK4b30/PPPB83wUgMHDuyS
/bhieMXw0SzF8EqRqFAyPHHu7iOVmDg/D+PnbcTx6gbc0rt5ivvb4nRb3+Fu
Qa1bG4P1SMrC65Nz8NnSvZqPuW649cVcHjt18PHQ5HulH8ANtyf+vMxzLOPP
m+PT39QfG+E/Yr69Hrn+fa0eH534ffDMLahs0eYK5JyAJjMru7Q16paz9dig
5Xn78kGQ8ydkfyd+f+fzDZwTYNXBGmMuxfMm85t9zZBoz80+AfJ6W0hfP4ca
cZiNx+q0uYrEtYiZswNnWjQ/V95HvK753fujaJfRJGn9bzTVaa+fCn0++8TN
jrid/AyI4/fp/vP1MFvtfc2PwLieXnGrfJRQ9d6K4b1FLE42rZ/97GeorKzk
bXSdzPnhSTR+pH0l25OtvqspJAw/bBT+kezwDz6Mbg8/wj7ktC0UDM+5L8V2
GiPR3I35d+B7zKQYXjF86ETfufT0dK732WefNbYHYnh6z9NPP83tJZ/6rmB/
l1IMrxg+mqUYXikSFWo7/ModRzhnWo+EpdhbWc8c1yj6eofuM25/D40xy0V5
KyWL1zLHLdrN28xrre38Xu3SGdul87DbFivNhyRXL915Agt2V2JmkV52lWtF
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
nHycEzsyw7s63kdSMbxvyfulzMFMeZrpWlHss3PnzvE4uyveU32dMzFOR62H
f2B0vMbzMRNw1/AJuG90kigJvC0YX/q0/EJjPo3m6mQ8EXN+Dxl3RMYhof4l
p1DLD/g///f/Nu4h5v19vY8e5b7M8IOGB8Xwfzt0NP76f4jrdf8j6Pa//h0/
GqIx/P2j/PN7OBnekluu6YbKLdeJtuz+/fszv8u5Qxlvk9hdto/8gGpra433
RLvt3SxzDH5a16MYXjF8NEkxvFIkKpT54UlyHfWX6/ZzrLFXUnPxctI69J6W
j9jFxRi+YDdiVxzGhzN3oMek9XgtdQ16pq/B5HWHDHu9YXl3NcHtakZTSzOP
1bL2XUDfz9dg4UngtQkLkLXjlClHW+u/MTlSsOc2s+dl91Vai5tH7UjPOY5X
Jm3Gf6RtwZ+m7MCLaQXi/PN4XQHZqu2FtsvyVvJyDJ62lDlS2vSvi2vZL3EG
+ibM49h4Lyes5TXnK3Zq6w0aRINOiYtNa8L/mLoF/5G6VTxuxkspG9A9eS26
J67h0iOZ6svBKynr8UryBr09Oegu2tY7dRW2HCjnOQGaI5m3uRR9U7OQV+42
Pg9qy1VRV87pZl5XsPxADZ/rS2m5+I9JBfj/BFP/Z3oeP381PVfUv54fu0/a
aPxNdZOfQM+pG/F68gr0m7bSWAdRLir/c8J0fJ69je9fdG4yrh214c2JCzF4
SRkWHhefe/Jq/DElT1zfIrw4qRAvp+ejh/iOvaFfY+OapuTy+XUXbaLyZmo2
+iZm4ky99h2Fj8+e6iU+mJxzFB9NWobj11yG74WMT9CRUgzvX5LTg7l3dqVx
sy/J2PwdEdPOUyboJbj9NYYvMHJ2XoQ27yd+sjiiF/qbePu0Xk7o+yzeuQ3d
vvPf8My//7/8vlO2/U7qj2f0Qs/PQ5tzq9aP+5N+g5jh7xNt8VWojXeNGI2H
ho3GX/3pNXT7+TPo9kZPPDR0OP5m0Ag8EDtOn7+IFIZP1Rje0SDqO4zyzLTQ
M3yLxvDu4lxUZU5EXYY4L93ubm+fVmL0baMsxV8ddBwLwzff1N2bIpPhyceH
7OszZ87k+JnUT1OhOPS0DpzmFqUfEMVnJHXFvoj6aBXTTjF8tEkxvFIkKtQM
T6JvO3F89qGb+OibzXg1IVsw1jq8kbISb0/WWO7FpLUcw25AxlasO97A/Rbf
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
zs0mm76d4b0/Y889Tb++zkbPd8vvtfXRFqcvVm+N4TtWiuGtojXtlF+O8sTT
WJAeqb+ix9jYWO6zRo0axdvodXpOj/SafG4utI3uv9FsH/PH8PLb6skt93V4
c8v5Ynhi8REeW7z0j5esbo9BL4/dtRg+RmdqlVuuMxie+gvZz1COS7P/D+XL
oHU+v/vd7/g3R6+bC6376WpSDB8ihoe3zUopvFIMrxSJCiXDe8jawcUtGZZ4
/VgJqlbNx5nZU7AnaQT2pcSiODUOZ+ZMw5U1S8W46LQYszTqbOXm97fm4Ryp
Yup0i/O+ch5Xt21EzZYc3NyyHnUFa7jUbxYlfx2atmzEzc05qN20GjfyVvH2
xq1iv605qCzcIK6dNWpdUGpuQdPBYlzfTPWJejevQ92WVVopWMfPb+ptuLVl
LZpFXS1bNnA7ruzIQ3PlcWb4ZmJdHXucovYWaLncW2BaN07B39geL/6+dg1X
C/O5zprCNaJQnStFXav0816HBnEd6DwbCtZyG+iaXC3MxdltmzQOdzt82NtN
9y+Trz9f35ZbqNqWh5ui3ca56edHpXbjKlFWommrOE9x/jc3ZuFW3go0iGtT
vT0faKiF09lsmyoJ5EvfsVIM71vku9rRcaC7AsNv2rzF+JbKR5qNu4TIYHg7
SzOPx/geu3vy0Jm2tduX/vZL+Bk+WWf4W4LhD6J8bkroGb5FY3h3cS6qMiei
LkOcl253t7dPKzGG74C5+KuDjmNheBoXWOaCO5/hJYu2tkbHV6GxlVS09jd2
KYbvuHJvrMbwV/Vr5m2tUgqnFMMrRaLCwfBO6P7YgrFQexmHF3yL3aljsDc5
BvuTR6I4cRiKU0Zy2Zs4gll+d3o8zq5eDtRRErEb4ghNEWxnDyxuq6sZV/Zt
RcHnE7E15TMUpY0VZQyXPSlUxooyHkUJ4rqkjkNx8mgcSBiBUnE9diTF4uhS
McZxWLPHtSrCnqYmFH6Rjm2izp0p47BLPO5KGaWXz/Qirrd4XpwcixJR59HE
GJSIsmVqPBrPlInKKOq928LwzTrDW+PLQed4oPrwEWxOTxR1foZt6aNEicGu
VL2I+rgkjeLP+lD6GBxIGolS0Qa6LnsXzxYHbdDs8T693X0zvPv8SWyemobt
afEoSh3Px9qdOpa/a1R2JI5GcfpY/t4VJw5BafynKJs4CPsmDsfWyRPFtaoV
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
a4WVfmm9Qt1llM79CvtT4jg+fMN+D78HbWv3x/l2ezg9kr96Sw0aS7ZwnL5d
CbE4Pvsb4LoYmzY0cW3NTm3NgIvXGLTG8N73Muteuv8+5cW7dgGlU+JRnDAC
e6eK79/ZY1rOeq8z7DwbimJ4/5o3bx4zOl2fu+++m7lejqWpUD5mioHX1dV1
GL4L+tLL3HLlkcnw0ZhbjuqmMRLVTeUnP/kJZsyYgfPnzxv7nDhxgvunJ554
wuiPQh5fKEKlGF4xfLRKMbxSJCqUDO8QzO0UPEiFxgNV65fgQHocDqTGomzK
eDRRzvOzJ4F6ce9ubNQ6qGY9Fqz8ibj1deNkn3U5NZu1qRdr9y/JJdeYBzqe
x6BM+cNdLofPvbzeQ3MObml794xJ6PdPx+H4b8SXpUXYmz6WbfBH530J3KzW
4sG5WnzH5A7apd5tab1TPqM487WXcHBWOorTR2ObYPj6vVu13H+W6xzE4e3t
sPjQay+2tEgf+lu4tX8r53crTR2Pw5kZgt+vazHo6K1OB0csdFps8P6kzQ25
4D2vY4mzRzEXKo5i31cJ2JMUgz2fJwAXKjS7vMs+x9K5UgzvX/SbId/6Z555
xmL7evjhh7Fy5cpOaY89TlVH39fl8drqm0trCaKB4Y1cczF+csZ3KYZP1Ri+
RfRn5YdRnpkWeoZ3aAzvKsnFxbkTcWN2HHO6r/ZpXB9jez0ww/M+Zoan+Kra
Nx/2Pl3+5sPtp06s/sgjj3Ddv/jFLzhupi9Ru8hn6Nlnn+W2/uhHPwrpep5I
7X8UwyuGj1YphleKRIWS4TUa0xneKfjw+kXOJ7cnfRT2JY/AzviRnMf74NyZ
qNi4Hjh9SoxTmjWbfH299shyMFtKftfih7eT4WUS8Po6LW57k3hs1kuTn0J2
AuLcxlrNBzsgy5sZXpuHsIaGE9ubb6GxbA92JsRg98Rhmv2dYsTr/vZ0vlqR
HN9W5tR2NFk1wGPOuis4uuAb7EkYzjn+GvYVaucnrrGDYsvTdb5d47+Z4WUj
qe2OJjQd3I2dk+OxJ3EUTs2ZDtTQ+neXHu/ObZmjCeaTddnvZvp1Mc6VfPPP
HRPcPp7j9O2mHPA0Z0TzKBEYc0gxfGBdvnwZL774omF/p8enn34axcXFlnsq
/d1McRU6WOaxrH1uLVRsIfPlteX4UcnwPji+KzC8PN7FTCvDV85Jw42MMDC8
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
C8uTZOx0Y9k61daR99YN2j9rAjkP7ZHx7F2GfzN4ELZgp1yv3ixfegh+2XWC
J+uq5RjCaS019gLurK+WhWOkBakF/v6VJXQqYQHlTP6Czk4fTXR4l2D620Tl
98X5l4sb2cPGC2LO4RrVylgAVFdFlVk76dDcyfTweBbntuf47k6x3fXTtO+7
SXQoZZHk14ITdHLm13Rh2ii6v3SauN5XBcM/4PYQ1t5Xl/iVIlmwTR3sl4bN
GlDtqqcba5Lo2NxJYptKyfew5zvKDbu/+LtefA4V9+li0vd0aupoujBjJNGh
TUTFYkRdVSpjHNSKx9qH7EdAVSWy4G987rXF8hgO9ZnUUUn+EdobO5XubFsv
zqnK+B6Iz6rsAR1bMIv9Gqj8Ft3dliG+W8O4zrr14rtVIsbV5XfE8Yzj1xhF
nSvqR0Gb+HNVsfS90k9Vfb71tT4f+gc36ULqUjqevlReI5670b70nSXcL5Gv
CeNjZQtTY2gIY0c8hw1p3rx5LbbhBxOOpfpIxKj292G1Cn7/ql3NtcGpuQr0
v9jPOuZtqR1e1enLLacZXjO8Zvj20vXr1znuO/zlrTne0CeB75GLDXE321uq
/4F/TSj3P+p4YHi0WTO8ZvhwkmZ4rVBUh+aHV6NHwUwXk5dQ3uxvOMZZ1sxJ
dH5FKhUfyKSSw3vZN75wcxodXzSVTsZOoJwZX9Pp72OJbt+Qtmh123a7qfa8
4NUZE4kuFkh+J8t6bOtgtbnifYw4dc3ZPFBc/UByOeiBGEMfnTGBuRb58pCH
fv/sSVyyYqfRwTnT6EDMFNovrgcerWWPeG/novnSxs3Hc1Je4gI6ulCMrWrL
yOuoFdfX8ImveUDnV8bTjthJzJs5MRMpf8poOjNlFJ2bNY6yp4+lvTPGU3bM
ZMqaPZUOzJnMfvj7YuVj1pyvZZk1nnbNmURFZ3MNTnXzGO5y2iK6JY5PyB2H
68vr+NV6difnHbixdzPlzP6K8iZFUf7UKF43gPNFnUfmTqPD301j+/nBWZOM
dkym/XMn8dwDynbB5ebQTZzb/vgFdDJpMdHDImP9Ocl4eK56qjy6n+3jZfs2
0eG539LZOV/SmWkjKW/mePYX2D/nGz723pgJfK6Zs74V13uKee1RcH23zZ1N
VFTk92WwfLbM9fV0bdNaOrBAbFty11gr7zByJravNMPbpX5nH3zwgc3mpfLN
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
f0RDUnsGLEPT3uIyJPUN+iz1FVFeogHLX6EhSW/Tgi3T2E/ATUFy3HvVf3Lt
Qb1oZWFdLo2O/5iGJYprGP8SHxvXUJWBfE3flI8ZPWjgcnG+6a/Rp4mvirb2
EXVW2WLYNZ/INcNrhY5Mht+3NwjDL9EMrxleM3wTeuGFF7he5Im3xoNbv349
vz5u3DjezhpXE7kz8J41p3okSTO8ZvhwlGZ4rVBU59jh5drq+4Lfxy0fRAPS
XqfPl78qWH4o7bieTHlVe+hk+W46WbWLNlxJoDGr+9Cg+NdpVNrbNG+HGBOw
77O081pjv4W8LAyP9QErcpfS9F2jaNqekTRjbzTN3PcFl1n7RnCZuW8kzcr6
gqZmR9GErE/ps1Uv0pBVL1N0+tu083KauIbVLYz57qWbFYX03dZvKWZPNM3e
M5zLzMzhov7hNGvvSPE8muuOyRpGEw72o+jtPanvij/TgPS/09iU/lRJt3kG
QsbVIzKhgAIRq5fXwWP7zOMbad728VyvtczeLQs/3z+cpu4bQN9kf0z91/4/
+jj9zzQ4vQdtv7yqBQzvNRn+8NWdNH/H1zRn50iavXeYOC9Z8Hz23hF8rjMO
RNP0g1H07YG+NGjT36nPiv9Lg1e8QUsOTmGGb4zGNcNrdRdphtcMrxm+ffTc
c8+xHz3GRyreO8bvmZmZ3CbY42GfVzZ6SNnoMbaCumtMu9ZKM7xm+HCUZnit
UFRnMTzWfSccnck24MGCSTdfSxLMVMwe0FiX7eR10ViP/VDQWDEt3T2NhqS9
RkMF0+2/uUW8W872eJMl23Bb7HwffI9lPXyl+L9MnLtcl17La8GLueB5FT0Q
494CWpL3DQ1c/lcamvoKrTg8R7x/n4/S8pxtXj6ui9d/PxD1PxB1lHCR68Cx
Lr9EXPWrdJK20cC1PejTVS/TqFUf0tXqPLFfje08rKHlrbTKaxs8LlFkjDzi
VRNqDXqpWeqMUi1eL6W7ojWXaPGZcTxfMSD9ZYo7PlXU+FB8H5zN/IyULd7J
1wfXFOdWw+d6n79jWJPh4DgEpeKdm4JhLtG24iQauPpvNHDl32n65mHi9Wti
mzpbnZrhtbqjNMNrhtcM33ah3j//+c9ct2JRNXavr6/n9qCvVq8pjse2iEuv
+vFIG+9rhtcMH47SDK8ViurYmHZGjHlCRLbb7CcNn+kZu0dyDDsn+XKeeVyW
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
XVxM6859TxsufE+bLyyj9ScSBHMWMdvW1gdYf9ccH3qziS6OGXjHeYnGpn3K
edeSc2fRiarNdOjhWlq8/2u2S09dO4p9Hlw8ayB9z/3nH1p6vTxGjHtZ4GtR
w776uTW7KTqxN208lcG52q1+FlaGb24eH4+xn5xvwIzIZZq9/gsavuyftPT4
BDpas5H2PVxJiw6NpdFJH9CybdN43T9mSOo7IHmhZviGgg+q1Q9148aNvM4U
nIrSr18/+v777+ny5cv8PtadRuL6UyUrw+/Zu9/8DZr9iSj3qJswfIMyybav
neHH2Rl+WHSYMfwMg+GrBcOfppspMzue4Z2S4b05O6koeQpVJojzMuzu/u2T
ZYzpO2AtjdWB49gY3lFlzC+HBsOruUPMGT711FNmfkuM3zFuQnteeOGFBvuo
ucb58+dHJL9DmuHbXv7PWMnwxcY187f6aHWuNMNrhaJCmeF9d3KM4WUce6yD
v+A8TAv2CoZc3ItGLfuIopZ9QF+vGkrbLq8SbPeAqrwVnFOs69U2hndxTHUx
hqF6On/7BH0R35eGJL0jzvc9Gh73AQ1f8j4NW/wux/kbvaQ3fbN0iKDdYsMW
34iazfBMuOJY1XTBdYJmbhtNQ5a+K+p9j3O0Yx388tz5VETXxDWvNg4u1+S3
nuEbvxJucddHLL/o7wfQtpMbxPeg1nYfay3D+554uI5i7yVKzJ5OI5PF9U38
gKKTetHXK/vQmrz5nKMekRkQA68jenDN8IHl/1ni/glGV2xvvZ9abWWRqEAM
r37WUPgw/KQADL8nvBneURrSDK/+bgnDY51AZYgyPFReXk6PPvqo6U+v+ho1
blIMr/qb/v37m35BN2/eNI8Taf2RZvj2YfgnR9gZXo6rNMN3hTTDa4WiugPD
e4yc8pKzpD3ezdbfe3S5OI/u1F0RY9NyjtnuNHPKdd/fmKfBcw/7mCNPOvKc
wa9e+rRXGOvQS8X76m/4I7plrhtqxeyB6Wuv2BnR36tE3VWiliI6e+8kXSjO
5bhvuOaco910zpf7ULvdY1SrHYZvf4U4/wrOF+fitRKWZreC4RtUI4Q8hR5R
B6zyF4tP0dXyc+JcS/naNpyZaElgwqalGb5x+X+m/p+zsrvv3LmT+zTYzyJR
muE1w2uGb1/Bnv7DH/6Q2/DPf/6TTp8+zWve8RricUCIqYl49Irfhw0bZrYf
0jHt7NIMrxm+u0kzvFYoKpQZHpJ8qBjeJ5mHXPqZy3zk9eSy/K6682/Mv+V2
HvXa8dCGil4zTpvb5W5yNXjT8prx8uAT4DD928HUMg98w5a3rIbgUnMCLsO/
3jdb4PZj5DYxvIHcboc4V4/8A2vzYW9veI5k5KRrVnD/FkkzvF24HhgH/vSn
P+W8cdbPFN9v6/hY5YdHPwbfVzW2jjRphtcMrxm+fYV+5csvv+R+RcXSVPnP
/WNyoGA9vCdMxiKtlWZ4zfDhJs3wWqGo0GZ4xUL+uebUay6y51STCp+IHy1k
Qb9N28Lw6n6hLM/yrgGbew3zO19zm83ecsTWIWyANlij3vl4nmcUvO1n11D1
uPmf1yzmfdKo3r5GoDkc3zJphrcrMzOTx4EYO+O6JCUl2dhdyfr3xIkTeXv/
daqRIhvD79sbhOGXaIbXDK8ZvplCGzZs2GDmmrMW1T89++yznAuTzyDCx/ia
4TXDh5s0w2uForoHw/vG6L718T66tOdFDxeGt1J0oHe9Dc9RnbjX97Qtdnj7
dorhQQHG9W6M4dtJtnsV1+VjeLextqI9jh+I4W2caHzVfFEZyGiXZviOFPxT
1ThZ2bzgo6o4HjGmlI+q+rxUf6bt8JrhNcNrhm9PqT7n1q1bPJ84fvx4mjJl
CsfZvH79OtXV1ZnbRWpMTSXN8Jrhw02a4bVCUaHN8Hb5+NM/AJtfaSc7cFfJ
Z/dGbDqMBQL5ICjfBEvx+vZ3m8VjluZleQtA+cZxndwa392j4ZZqPgW+9q42
3WlsNm/LXIEvr3zb7mLyOC4uPnu71yyBfPHt91AXaYbvWMEOr+xcn3zyiTmO
R76nsrIy3gafk3WtKcaMgXI+RYo0w2uG1wzfcVL3BbV2R+XBUH/790eRKs3w
muHDTZrhtUJRoczwgX4lgRi+AYN6VenExrajfGflbBnDk88Pweep0Px/jc6F
mAxPpvXb39fe1/LOYPi2x70PzvA+f22PbR/7N04zfMdKXQ8UaNmyZTwu/MEP
fkDPPPMMFRYWmrYxJfRjmuEjgeEjMLecYvibocnw4ZZbLpAwdkdMu7S0NO5r
UFJTUzleh5ZPmuE1w4ebNMNrhaK6J8M3oW5uh1dqvK9u+ip0hHe7/zED19ES
b/2m62tOO1p//NC6F2qGt8vqS69sXVlZWfTzn/+cbfN4LCgosO0zbtw4zfDh
wvBjvvGVAO/bGX68neGjRoUnwzs7keFdkuE9uTvpbsoUKk8cz5weqH2S68f4
vR+c4XkbK8M7q4xvacMeXq2l6YocbarOhIQEevLJJ21r4a3xOvDevHnzIt6P
HtIMrxk+3KQZXisUFcoMr6UVSdIMb5c/w0N4hM0L8aNUbGjY59U9Vdvhw5Th
A3C8HPPjOFPCluFrDLv3XTB1vY/hbyfPpPKETmB4V3CGV+1rK8NX7Aw9hlfz
hnjs168f169yzCl2V+1SHI/y29/+lkpKSjqtnaEozfCa4cNNmuG1QlGa4bW0
QkOa4e0KxPAQfOdLS0s59rwaP3/00Uf8nho7gmMjUZrhNcNrhm9fIY6mqh+2
dsSzu337ttmWK1eusG/9E088YfZHb735VkSvi9cMrxk+3KQZXisUpRleSys0
pBnersYY3qoPPvjAHDf/5S9/4fG2tsNrhtcMrxm+rQKD5+XlmX1Qnz59GtTv
P5bv3bu3aa8/ceJEp7U11KQZXjN8uEkzvFYoSjO8llZoSDO8XYrhMRZUeZv8
hTE1bGD+61P/+Mc/dnJrQ0N2ht/DY73ADB+nGV4zvGb4IEJdKs8FYm8o//jG
1rvjdYztf/GLX/A+GFtZjxVJ0gyvGT7cpBleKxSlGV5LKzSkGd6uXbt22eLS
NybYyw4dOkSPPvqouT1s8pEozfCa4TXDt49QF8btqPvDDz+0vW4t/vtERUVx
WyN1PQ+kGV4zfLhJM7xWKEozvJZWaEgzvF1nzpyh559/vlk8jrHzyZMn6Xe/
+532pdcMrxleM3ybhXG6GrdjnKTs7MEYHu9jW/gCqX480mzwkGZ4zfDhJs3w
WqEozfBaWqEhzfA+WcfHjY2BYX/392stKyujAwcOROxa1LBl+ADvR1xuufpy
nVuuk+3wb7zxhm18hLF7sPE73lO5MVSczUiUZnjN8OEmzfBaoSjN8FpaoaFI
Y3hr3GbrPTES7VbtpbBi+AZlkm1fO8OPszP8sOgwY/hZkuFdtaK+s3QzOabj
Gd4pGd6bs5OKkqdQZYI4L8Pu7t8+WcYYr42zlcbqwHFsDO+okgEYQ4ThoTlz
5nDdv/nNb8zXkBdD9VfowxTXq+dPP/00txX55K2KpH5NM7xm+HCTZnitUJRm
eC2t0FCkMbxVsJ3j3oiixroVFRWUmZnJ7+ER18e/IO4dHrOysngbdQxthw93
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
66c//an2ZRONw2MdnO1YwOOhXx6Lc8dDIhw+COOP31or11k4vHD4sEA4vCCI
qG8Ob/Pye++91/0+Y4v4YvWp4w7+btrU1iYlC9ifm/du8tpU3LeZB+T/+Bt+
80w5PGLfmhwoVfzdBOwG2M8B3+vatWtTWkYYkGscPh7seHN4j37/8u8pLy9P
z2fRTphnIs4Dr0PxXDOVa2F4LnhvYfthf7vNuTRiQprPz+7HHAvC7l/4G+Mv
68CjT3IcKz+fWfGAuQbm8gsXL4rB4ccLhxcOLxw+AfAcCb5ZIZdGzAvwcx4L
wPNfeeUVHWud+zDH10jFt5R91WXL+AMIhxcOHzYIhxcEEZmQw/O3hO2xMdYz
r8T3A0hm/bo2gN0X1p+R8N2qTUoG+N7yN5Ptw6F/lq77BR+Cj1mOAc9x5pDY
diHV/J151O233+6uGfBz5rj3pu5+rsvkhcPXBL8TiDGHd9bU2bF91cMnJL6v
qeTvbBvK5bHNib3ehd+9e/fW53Tv3t13nuz3fqOuuI7jQmDOa66pCYcXDi8c
PrMcHoCNO/dRv8TjEr7ppi5hssBYgHX3bBp/AOHwwuHDBuHwgiAiE3J44I03
3nD1yMHxwImZ02Kdm+OhhYnX8b0gjivfK9+7Gdst1f7ouVzEl2Xes2bNGs0V
IVuA/hz72k0lkGevXr1cP1tjxozR/g+Yg0F+Af0APjfXIRzeC55LYk7M/uY5
vgFsvyGLh34Hz515Lj1jxoyUfmORF6+zwcbVb34MtG/fXp/z7LPP1jhm/2b9
0yVLlrg8AOOefb5weOHwwuEzy+HZD/trr72mZQw8bzF191j+MHfuXH0Nz19S
BV77zobxBxAOLxw+bBAOLwgiMhEfHrGQEBse5YJXwiYegF47+1Gxr0lnfeqr
P6K8Tz75xOUD4B+4d+zn8QF8OpX26JwP5N78rWZfO1g74HmI7X8nFeVjPYJt
/WEzAcCeELaCKPe+++6TsdCAcPia4BiMaBfEW2YdTwbm1tAvwXnwk8gcH+tD
qQDPX3/zm9/ovKEvC1kYH+P397nnnnPXEGAnwusPOL5582Ydcwnf/k2bNrl5
Y92Kxzz4qLD7vd8cOlF7+PBz+ByOLVceTA4ftthyuiY+3yfEvAXfxZiDNWl8
Oz/77DOPX/dUzVt4HGG7u2wYfwDh8MLhwwbh8IIgor44PI/9mG9jvRry38aN
G3tiwMPWFXWBvM20DbdltNG+NXWtUyq/uSbYBp37O/g67p15Bvg8lws/APwN
BveNV2+kaDrDnCcfHzt2rMulbT0/XrtnGwbAlsn7tY05htnjGf6GfTLLR6Hj
bMaAx3oCyy+Ya/mVYdpD28dTLecIAoTDe8H+LvEO3XrrrXHPh84peDzeK9jM
pxJffvmlHrNYZx96LADGM+iXsFyObUTMPsjxHNlOlvsl5tqmHxDMDWIljJV2
3zbBx9jHR9Zz+MIh1cnnuJfDl3g5fO/+IePwTzkc/tghVd5nVF46Ov0c/rjD
4atWzaOt00ZR5ZQSzdP96ufw+kLreGwOr88xOfwxjjNaZbyxDrifhEkvL1Hg
njH+8BjTsWNH1/9HpsafeHpzwuGFw4cNwuEFQUQ6ObwtLwNYnxtp9uzZHn6G
LWTwOAZ5tJ2HybXxbcAaeLJAvzR142qTagPU+9JLL3X1yqFPb/J7vncch816
rHxMQG/OtM232wttzPWFz1zz24vjHDsHx6dPn16jPHOswrwB8wH4EHv99ddd
HQJTnwG/169f7+pZQAcQf5v1Am9HmWgH2BnGg1kHzFcgAwkjhMN7gT7C7y58
SCUC2HbyPDfVgI4+18eOg8z9C3omgPnOwpafxxf0HQb6pulPM954Ey8WRqg5
vA+Pd+b8yGdUaDk857e11MvhK6aOpsrJ9cDhj8fm8AcjcvlkOfzeecLhYwH3
zev89rjDY0umxx8TwuGFw4cNwuEFQUS65fAmvzP1ueHTje3MAHBL/P3SSy+5
tq34ZgG2n+l9+/bpbxJ00jnvuiKdHN6cb0BvnPn7008/7TmP6w/fclwXvne/
/Jg3gwsjT3yj7eNoL3BucGjkCTk76+BxmcznsV6Cepk2DGZ+X3/9tRvfne+d
2x96hGb779ixQ/MnPg+6Bva9om7cHpBtRuNn7PuQwfoEN910k+/52Q7h8F7g
vca7mygfx/vKPpyhy5MOQP7+0EMPUcuWLd25L+a27BeSYa7NYc0J/QfJtDlF
32H/+rATwFgUK/Xt27dG/vb9A8LhhcMLhw8nePyB/9tMjT+xdAAZwuGFw4cN
wuEFQUQ6ObypCw17Lf4Osz63/T1mOS7rm7M8mvsLy+zRh5AXvjvJIN269Jwn
uCdzc1vubOum4Z6jyeLN+sIXDcdrYw7PQDthnQPcvFGjRprHw7e2mQfA7QpZ
PPNy/La/z6bNHPLFcazhN2nSRO8348sj1hfzd7aH4Odmjnu8/oAyH3zwQd/2
N/dVVFToNQOsNST73IMK4fBeYP6H9sC3Mxrs92b+/Pl10pNJBNHi0Ju2J7xG
Fc8XVDxbldqUb+cjHF44vHD4cCHWWFLf408i/nqEwwuHDxuEwwuCiPrQpTf1
uTt16qT1vWJ9W2APzmvMvG5s9hm278I2FfVLF5A/9IHBo8E9oUvPduHRyob8
necr7GeO172xxfycde65jWDjxt9V3kKvjuWR0JHn77zftx15c2xbrO+bAD9H
Pn68mX3iQX8ZAMdnWT3Waezy7HLvuece164Ctnl2ncy/L7vsMurRo4fOG20Q
RgiH9wKyJbY/57lptPjI/JvHGowzYUXiHH6hnuv5c/gJwuGFwwuHF9QaiTwD
4fDC4cMG4fCCICKdHB7vOeS/8N+GMs4//3zXB300gGsiMU/F1lxXBu666y59
zLQDD2JsMuiRw8cW652Dv5vx0KMBfBr3B30EU/aOazp37qz13ziulp8cHnrq
POdhnwGxuDRg+tQDd+K1ANifYz/i6tjAOTgfdWEf9Di3a9euUcs0E/zlcj3Z
F48NPHvMA6BLgLUfrDNcc801oRxDhcN7gfeD7WrY96GpI2L2DQbWebBu1a9f
v/qtbAAgHF44vHB4QRAgHF44fNggHF4QRKTbHh469EVFRTp/1ueOp4uFY+Az
kC/jupUrV3qOY00A3wfTvjuIAP/FPeA7xveeCKAnj+eCa/k6W48WW8SLsb+T
8M2Na7EPOvwMbvNYOnZcV9SbywC3Byfwqz984sKeHfbpHGcHCfv5+lgJgL49
ykSdoadvj41YB8H7+cYbb+i/cb8ih88N4B3BehQ4OfRK4GvBhmn3Cb0VcH6s
95gxlHIFwuGFwwuHFwQBwuGFw4cNwuEFQUR9xJZj/ol4YLH8odi61H79pLy8
XH8bLrzwwrj2oZmG333G8wXjd8/mfZr3yrrs/Oz8dNGRH9rdj8Mn227wcQsO
b/q1s+Wk8Ti8aWNnXoe/OQ7hLbfc4p7v5x83qM+/thAOXxMHDx6kbt266XaB
fgrWfLB2xz4ZkbBuxT4Soe+CWM25+I0NNYf3OS6x5SS2nCCYEA4vHD5sEA4v
CCLqKz58KmDau3bv3j3T1ak3RJu3gMPH+k4mwqETgd94NWHCBP0cYD+fSn0I
c60BdvaQqUI+z8D9gtMBQV/DqS1ylcPj+dkxk8wEGw2/ZJ+H9SQ+FlZdjVgI
HYevkUZ4rvVy+GIvh+/TN2Qc/kmHwx8/oMsrn/a79HP4Yw6HP7lyHm0rHUX7
Jqv7isjd7fo5qTCyr9iTopWBfDwc/uh+xwFjPXF4tr8z/cikMpnItTm/cHjh
8GGDcHhBEJFNHB79huM/2zbgYUZQODzmPPBnkJ+f7/J32DnE0q2oK2B/Dx1q
8FqzHrhf2MMzwsLfgVzj8KbuBp61zcnjJTvWI/Jgnw5XXXVVhu+u/pFbHH6E
D4dfGG4Of3S3w+E3B5PD89+14fAHFYfflyEO7+dPI5Uw47fmGoTDC4cPG4TD
C4KIbOLwAMdzN/3ZhR3xODyeYbTrUsHhAejjz5071/VFAL+C0HU37ZFTAcx5
4PuvadOm9PDDD7v7eY3A1KUPE38Hco3DM/Ac2YcD+0YwE8Ymv2Sfxz4ksOW4
hrkE4fDC4YXD1w27du3S428q08aNG9NS12yAcHjh8GGDcHhBEJFtHJ51bdlv
Wi4gFodHe6SLw5s+9BHDHWUh5vyCBQs8x1M1r2KdRtjZQ5YKv/sYNyF3B2/n
MRT69fDPzzHtzLpkM3KZw7OvjEQTnjfHm+Nk68bmGoTDC4cXDp84TN0xzMtr
qwcUL0FXMNX6adkC4fDC4cMG4fCCICKbODxilcPvNOJFA7Hm6mGT0foBY0ks
Dp8KYA6Sl5en2/3ee++lbdu26f3MoQDWpU+2zfn6qVOnah6CMdNOzOHB6RGP
3r42m5HLHN4G8/PaArYe8+fPpxUrVqSialmFmhx+kZ7p+XP48cLhhcPnNIdn
YKxZunRpDduc2iaOrcpbzKmEwwuHFw4fDgiHFwQR2cThn3nmGV3X+++/393n
901Phc/1bEC6OTzGKcSUg53xnXfc6dkPoI3r294P94uxNIzIVQ6fCOw+bcvj
+Z3kPgEf9rkG4fDC4YXD163PQK8PY0eyCTpqti59OvzFBB3C4YXDhw3C4QVB
RDZxeHB3rHH37NlT65GjL/EWCd9NrKfDti0XwHwlXc8Oc4++ffvqNh83bpxu
X8xREL8e7Y62xt+I95eq8mKNjTgmHD53wPrxaBfogkD3ghPrZYCvcsJ++Flk
WViuQTi8cHjh8LUH2+Iki2h1M/3e5wqEwwuHDxuEwwuCiGzi8J06dXLn59Dt
9tNlQ4K+dy70sXRzeLQheJEZ7wu/ue25vVMZI8D05WvKWHkOhPhhqFMY50PC
4WvilVdecX3W+8WV89Npxf4uXbpkuur1jmgcHggfh8/B2HIB5/DZFluO80q1
jBzfZfjWxDaM36lEIBw+NRz+4jwvh3eScPhMQDi8IIjIJg4P+a+ZIAfmLf9e
tmxZpqtZb4C+AcaT9evXp60MtCnrBkL2jq2pN4h237RpU0rKSsQGoqysTNs6
h1E3UTi8F/hOtmrVyl0v6tixo/aFwbHg4esQ31Ws6TRp0kSvLcFXAsay3bt3
Z7r69Q6bw3viMka2inHSdsoSDl84pDr5HPdy+BIvh+/dXzh8shz+uMPhq1bN
o63TRlHllBLN0/3q5/D6Qut4bA6vzzE5/LH9xttaba+FxGtz9Qm/2HN+Njzm
cfjmZN21Hj16uPtzbc4vHD751KTQ4fCsVVrdK2qucQnSD+HwgiAimzi8wB/p
HE9MmXi6kQiHD/PYKRzeC6wfsWx92rRp7pwZvhUhm584caLrS3Hv3r103333
6XOjzRvDjlgcnsEc/t/GjacL+mYRh/fh8c6cH/mMEg6fLg5/PDaHPxiRyyfL
4ffOCx6HZ2CtHGNL27Zto+r/2XpASLk8jguHTzGHj0yLhMNnDsLhBUFEtnF4
Ozaauc1VvbV0wJY1sLwhnWNXos8wrM9ZOLwXY8eO1e0BWbwZN47bqV+/fh59
DMy1W7ZsqefZX375ZaaqnTEIhxcOLxw+tcD4cvPNN2ueDt0fP+6O8QZ14y0f
f+2119x8cm3OLxxeOHzYIBxeEEQIh89u1DUGVyLw8wVujl2pLjeRZxhGHXqG
cHgv4GcB8+Ru3bp5bFfB5yGHhw69qcuK/bBDRRtCVp9rEA4vHF44fOqA8QT2
YxhreC0R4wv71m3cuDEVFxdrnlpUVKTXD3HuFVdcQStXrnTzycV5iXB44fBh
g3B4QRARdA4fpr5i8m1zLSJa4vOS8WnLusaJtqPN2TmPdDwH+55M/8Bh5urR
IBzei8LCQi3bAlcHzHfi3HPPpdatW+vf5rvJbXjllVfWa12DgBocvuzdGue4
HP65F4TDC4cXDh8HI0eO1LwcYw185TIwn8fYtGrVKreeAGzgsf/pp592x6Uw
zWEShXB44fBhg3B4QRBR3xx+8+bNei0bY3siCfXCFjI59n+ereva69at0/eA
+0G7x0toJ9w/tnX1/Y62gi0x8uE2jJbMc7j9YZPM6wCJgMc2xJuLd3/8XPEb
2+HDh+s6BHU9Kd0QDu8F4hlC3gU/dgD8RTHAUzG3Nnk93lGO1YCUaxAOLxxe
OHzqgLEF8S0wBuXn5zs1i3zfxowZo8efSZMmedbdEWce64stWrRwY9zW5vsZ
FgiHFw4fNgiHFwQR9cnh8R3D+rSfXxi/ZNqbYYvvaTZ/C5966ilPfKx4ybS1
Y1lkXdC8eXNPPK5oya/toUuYKHhcwzN69tln496fGaPOLD+ssePiQTi8F6tX
r9bvRaNGjWjjxo16H78XmFOjrV599VX3fMyVZ86c6b5XuQbh8MLhhcOnDtCl
53k7c1H+xuG7aM+beD3xtttu08fA83NVr0w4vHD4sEE4vCCIqG8Oj7l3165d
9TwzXurcubPL6zAvh1wOyNb+k5eXp/kZ1iIwHsRLJqeGf6/aAvMG6PrBnhjl
xisPsbpg88f2f+edd16d25rvNVbi2GAsU2Uej3Ue9mGWSxAO7wXGC44t99Of
/lTbmPKcftasWW58ORN33nGnPv/CCy/MUK0zh1gcvmZsuRcktly2cfgjlRJb
rh6BctGXsMZsz48QzxX1uf32291vJPN08FYcgy/7XPXTIxw+xRyeJLZcpiEc
XhBE1DeHjwfze8ixopB+8YtfpLt6GQe3D9qA/eak0z+XbfsOuSfL7KEPiDjs
gGmnnqoyzfzwnCFrRbn4zX7wcw3C4Wtizpw5nthNGKfwbkBnFbHgMU/EmiDs
Tbp37+7qdaD/5BpsDr9w0bvuTI+3h1X6mrKEw9dIIzzXejl8sZfD9+kbMg7/
VITDH1Ic/jMqLx2dfg5/zOHwJ1fOo22lo2jfZHVfEbm7XT8nFUb2FXtStDKQ
j4fDH90fkTcGg8MDDz30kC4b3yUzzirqZNr5mPvh345jy+UifweEwyefzipy
OPzOSJtVucn5J6hfCIcXBBFB8mln+nF74IEH9DeAv5OYs+cCcO89e/Z0771T
p05pu3eUxVwaMk7wdp4rTZ48OS1lmmVjHDTXaeDPd/fu3fp4Lo6RwuG9YF+K
U6dO1Xo46A+YE+LdwXwauqpsk2Hag5x//vlaTpZriMbhsTd8HH6ED4dfGEIO
j98lWcHh+e/acHjc276AcniMPxh7UHbTpk1p7969nmPQp8MxHmu4rvxNQz/M
VQiHTw2Hb53v5fAnSDh8piAcXhBEBInD85wdMjTmdbnE33Hv4O8sS8S979mz
J6VycD9A3x7yd+ZApaWlen8qy/TTKTT5O+6VfQDlKoTDe4H+wLIvrO0g3jK+
nwy8T3hXL7/8ct1u0K2HX2j4jsxFCIcXDi8cPnVAuRh3sCbIa8wzZsxwuTzP
naD/w8C3FGvh+H736dOnRgzcXIFweOHwYYNweEEQESQODyDeKn+vwetySS4L
v+zs3w28BPw93UD7sk6yyd8Bs81TMQfhNQHky88Z94t7Zf6eq/aDgHD4anAc
xnj93owNb55r+rDPFQiHFw4vHD71mDhxoqsXB78t7Od106ZNru+YDh06aLk8
5PX4G/vnz5+fkfpmCuZ3Wzi8cPiwQTi8IIjIJIe35cvQ3zb1qo8cOVJv/lwT
iddux7FKFTAeTJ8+3dUHZk6brnvne0EZiKONMqGPbMrfUzFGIQ8/LoV4PH76
87kO4fBe8LtTm37A3D8X1oH8/D7i/sHh8R4tXLwoBocfLxxeOLxw+Bgwxx3w
+JYtW2oeb8ZqwbzJjOWCOoK/p8uHTZAhHF44fJghHF4QRGSSw7PsDMnk76b8
HTB5dCph5sf1iJXM61LZh9nmjnUP0iV/53qzjiD4O/sLA68G+HgqyuJktpW9
TmPaGOY6hMN7gW8l27sn+k7Ctx2uwfc27DD7lck38P5oObxweOHwwuHrDHv9
Gf2tvLy8xtxk2bJl9OCDD+q1s7vuukv74cxlYCxi3/zC4YXDhwXC4QVBRKZ1
6dEXpk2b5s7VwSt37txZ45x06cbWJoaZaZ+bCrC/Lp6fQP7Otv/pkCPyfOjg
wYO6LNafnzBhglsfP/2DVAB5Q5aBZ4wEX33mXEjGROHwNjgGc21ivcMnNM7P
BQ4P+OkoIN6eyOGFwwuHrz/Y/TAX9IBs8DccW8wnhcMLhw8ThMMLgohMc3jI
ZVkWjFjQ+/bt0/vtuGfp+CaiHzKnNGOxx0v4NqWCI0B/nnXwoKfHnDZd33/c
L8pg/o6EWOyAqX+cqvLNeQ3k/Pyc27Zt61mnkfHQgXB4L5jDJzp3x/uGeM24
BrapuQTIBzGWDxs2TI8l4ZfD50psOR8OXx5MDh+22HIsN7B9bQD8bfOLlQob
wFz8pqEtIJMYOXKkjvcpHF44fJggHF4QRGQyPjz8TDMvhl81xDezz023jzOW
RSfK3fl3XeLGmOvUs2fPdvOCH1vcezrt33kLPQcuF/7//do2lf7rMP+ZNWuW
5znDd28uyiniIdc5PPtiM/tZbdfX+HzEpswF8JiydOnSGmNZ1nP4wiHVyee4
l8OXeDl87/7h5PDH6pHDH3c4fNWqebR12iiqnFKiebotd6+WqRdax2NzeH2O
yeGP7ee32nhjHfC7XZ/fDdZL47XvsWPHalu3JUuW6OMmj8c3HOuHbCufKz45
bLAvDo73KRxeOHxYIBxeEETUN4fn7yJ4XIsWLXQ8KJu/87n14aPcXiuIl4Bk
fL6B065evdqNxY6Ybvg7lTr6dnlsAwCbPZ7fw+eOn6++VJeN54zni2/6Oeec
o+9V4A/h8A6Hx5jAtjWsp8L+nxPl8eC0uYTNmze7cvg2bdqEj8P78Hhnzo98
RoWWw3N+W0u9HL5i6miqnFwPHP54bA5/MCKXT5bD750XPA7PgH+ajh07uuOL
6dMOQJ3Mtcd+/frp/bk4z4ccHj5JoAclHF44fJggHF4QRNS3Lj2+d3/5y180
n2O57Jo1a2p8m+srxlhd+Gtd+y/uBxwW9wxeAh6fTk5r+pND3HmOj2P6zE2n
7B/8nWPtYL3mo48+0sdk/PNHrnN4xEXAnA9jEbb33XefO29GLELsj5eeeeYZ
rVeea++YqeNz/fXXC4cXDi8cPkXo1q2bOw4hhpwpb+D1fMSCx7eOuXzfvn1T
5h82m8D+f8WnnXD4sEE4vCCIqG8OD17H/B28DvwdSJcvtXioS1+sa//FvYK3
49uGNsBcINXyd7vdkD/4O8snoWOcTnt73prrNHjO+DvV9vZhQ65zeBvLly93
586JxImvz3EjKLD9hqCdeK4hHF44vHD45IA1dtYFwncU4Ji4Zl3w9/bt2911
R9R37dq1OTvXhyxeOLxw+DBBOLwgiKhPDv/JJ59o3XGTwwJ++ux+MH3L2DHL
6iJPRh6wbQN3QkLfjJVwbllZmT4XaxGJAvUEf2dOe95559VZ/m7HuPPTXzDP
BWfnOQXs3+tiB2Bzb/t6W96A5wrezrYCK1asqFV50coH8A6ElaflOoc3+zDe
KfQ3nrvzPob9DsD/lLkvXXEssgF4fxwOv1DP9fw5/ATh8MLhhcPHATgoyoUd
fCLYtWuX9tmKa8BjzXXtsMO8R4kPLxw+bBAOLwgi6ovDg9eBu6Ks888/36OP
ZvLyRL7R4L/Qb8vPz0/qm87+bnmdPRE7Wz4P8Zvige/rT3/6k9afN+3f6wLb
Fy7Qo0cP7d+eyzOPgbObMgQ/+UGiWLduHfXq1UvbLENXF+/L+vXrPfcJsK0A
20lg3Yb16+oKri/WTcBPEIswjMh1Du8HW87M7y+v4Zl+p8zzcvkbKxxeOLxw
+NQA33mUjXlSImC9etT17rvvTvrbl00QDi8cPswQDi8IItLJ4fk9h09XxANn
X6Xs19Weh5vw+1Yzh4XdLHgp9NaSWedGGeiXSOCl4KexEs7B/BjfdfZbEw9Y
l+dYbrh/9P9kbNDN9Q5wPuSLmNgmIKtGzD5ec0CdzXZOtHx+BuPHj3fnUIgZ
c9lll+m84WcMzwKA3BNxAS+99FL33AULFtT5Pm3gniALwf3gXQ3jGCocvhqm
zgf/tmXraC+8C3j/58yZo31PhVVHozYQDi8cXjh8aoBvvt83NhYwp8J3iuNb
5sqYJBxeOHyYIRxeEESkm8ODv4N78TcYMmN802w7cFMGH08ez+vco0ePTnmd
E0GiHHjv3r0ef7bw2cqoqz47APk3/E9DXx3tOnz4cE+dwN+5THBqxGKv65gD
+TvKgP4AykU5eHaQr0OvArL2TZs2UWVlJf34xz92nzPu1ZT5I2ZuMsD9Yl6E
BB3FMM6Lcp3Ds50EdHTwTmP+zO+1+S7hOPRVeU2QbUXga4LXlHL5GxtKDu9z
PDdiyxVGOLXElqtvDo+yWA4PHbR44DFq1KhRuq6Y83M+uTAeCYcXDh9mCIcX
BBHp5vDQd4+mq84+XM24xnaMY9iQ299t9ruMuXyQ7c3w3ffTyTfvm33FI9n7
wY9t+bmdD9vdMbBmUpuY9351GzdunM4Lck+8F9jH3Ajg54F9ODZp0iR6+OGH
Y+YZr07w6WuDnyn0NsDXUBeci3c2iM87WeQqh+f3CXJ07tvcLwA8a+byGzdu
1GtHfNweW7A/rLYWiSI0HL5GGuG51svhi70cvk/fkHH4Jx0Of/yALq982u/S
z+GPORz+5Mp5tK10FO2brO4rIne36+ekQjemvZmilYF8PBz+6H7HAWNAODwA
OQHKveiii9x9sXzS4DdiO2JMGjlypLsvFyAcXjh8mCEcXhBEpJPDY94NGXw8
bheNw+M7iH5jfwP5nKD3I5bBJ8Jh/ZIfl8NzAmfHFjHimNNyG0GnmNcD6srh
wSU5P+ZUDPNZwL8fuDW+01dccUXU5xttjcLkYJ07d65xr3i+kO9D5vrII4/o
8vhdDeO8KFc5PAD+DpsTk5PjnWL+znNljiGP4zh/9uzZtGzZMnr66addP4pY
+4INS64iNzj8CB8OvzDcHP7obofDbw4mh+e/a8PhDyoOvy+gHB7jDnywNGrU
SJd/zz336P3sP9P0T8N2Pvgmc11xbTQ/sGGEcHjh8GGGcHhBEJFODo/v1+LF
i/U7j3k25KlmWrp0qZvMffwb10FPm7+Xpq9qzOWDDr4HbNEO7P8ev83Efu/t
/ZA52jD1DnAO2oLl8NBFRmxsv7xs3/v2ca4H6mraIEMvH3rNtq0DyoK+PN4d
yD2j5elXB07z5s3T18Funv3jmUA58HkADg+Oh3OxZoBY4WFELnJ4fqf+8z//
0137uf32231jvCM+IZ8DnwyI5QTwXBrvCMdojjZ3zAUIhxcOLxw+NTB91CFB
JoHvHmzMeHxCDDnoosHPLtYf4Sfmzjvu1MdSHTs2yBAOLxw+zBAOLwgi0s3h
eZvst4zzgrwN9c3Ly/PYgAdRLmveP6/dJ1tP07aOfdoxhzd1jm2b/UTKNtcH
zPPx7Mznh9/gSxxDB7Jy2z+hX5xAez+XF+3dYJ0C8H+A5fCmj+AgPve6Itc4
PL8H8BvBcRcx9zV9OZvfSviR5Lm07S8R7zt8LjzxxBN6nadVq1b1ei9BgnB4
4fDC4VMHjEEc99223TETxh1soX9n6wHlQqxL4fDC4cMM4fCCIKI+48OnAqw/
DvmwiTBxuUQBbmvbw6cSfrwfYxf8z0OPGfIGyOjt8+u6VmGOi+B18KPXu3dv
Ny++X9Me3i4zm9+DXOPwHOuQ7xsJ8ne/Z4h9bJvSrl27qOs+FRUVbl7mtbmE
ag6/SM/0/Dn8eOHwwuGFw9cCkL936NAhKo+Hnw5w1lwbbxjC4YXDhxnC4QVB
RDZxeHwbW7durb+fZnz5XAVz2nTpDfNcxPZ537hxYy1zMPk7n58MlzZl89BL
hL4070cdWA7P92vK88Mwb8o1Ds/PbOzYsfp9QvxJhv1MsabDPhWwjucHfnd4
jm3GsMwlCIcXDi8cPj2Arg/mHtCdh886rJ8/++yz2i4s1yEcXjh8mCEcXhBE
ZBOHh/62LWPLZaSbw7MPAsybIB9lbtC+fXvtt4DhJwuvqxweZT733HO6nDVr
1nh4PTgZ9iPOHJ+f6TldKpFrHB7A88b7a9+3/VyxfmPGLYyFhg0buvr2uWSP
yhAOLxxeOHz6gO8OxhVzHs/jDO/PxXFHOLxw+DBDOLwgiMgmDs8cJxF/dkH4
1qcb9SGHR1q9erXWa4fuPOQOHCPePM+0909Wp5194du+7O24Bezbzrb9z1bk
Gofn7yCPQbhv06eDCYxPeP9wHvwf+s2RzfiLHF/BtLnIFdgcHggfh8/h2HIB
5fDZGluuNnnGWzdmXx65OMcXDp96Dn9xnpfDO0k4fCYgHF4QRASZw9vzdHC2
ePbffE0uzNnrg8PDNw/8jSFul2m/YLYv2jwV7c3cbfr06fq9RMK9cYJfIcwL
MJZCj3/58uVJlxkk5BqH574KuTqeK2wnzDhyJnhdB7Y0tp9EBr6reEchh0d+
bFvPdve5AubweJ8YPOOAZy14888KDl84pDr5HPdy+BIvh+/dP2Qc/qkIhz+k
OPxnVF46Ov0c/rjD4atWzaOt00ZR5ZQSzdP96ufw+kLreGwOr88xOfyx/cbb
6vV3wuty6QDyR/wb6HcVFRVRaWmpO66gD2FuhLkHf4fwXTL38XcKW477igTd
Ic4/F+TywuFTm5oUOhyevSNW94qaa1yC9EM4vCCICDKHN/sJ5uDch1599VW9
z8/PeS5wd0Z96NLD/z/k4ea4lc7xi5+lH+dCHVAXzLN4TmT70M9m5BqHZ3zy
ySeubgXiNAH8DuA5I8Yi+3x+8MEH9XHm+nwuA+MZ5PXQGzHfkVz65vpxeAZz
+H8bN54u6JtFHN6HxztzfuQzKsQc3tE3zxiHPx6bwx+MyOWT5fB759U/hze/
M+xrBd8X6PnxmIK1Yh57OJl6YX6Jj+O7nEt6QMLh08jhI6+PcPjMQTi8IIgI
MocHTC7HsZ979uyp62vKaHkdnG2lcwHp5vAA5J5oc7QryxmwZRkEngM4VqrG
NJ7r+OVn3i+/F2GaG+Uih+c5OnzN4z3juMoMvAe/+tWv9DHMr6dNm+bRt7f9
3p177rmu3zs+L5dk8IBweOHwwuETB/KHfxe21WGbHuzHt45tumrL4XkuEqZv
VCwIhxcOH2YIhxcEEUHn8AzoxfK31LSTtr+f6Ge50r/SzeERQ85uX57nmLFy
2f93KhArpjz7tMM6gs31wzBPykUOzxgzZowbY/nWW2+lmTNnatkY9ED4XYM9
B2D2b37u8H94xRVXuOdiXck+J1cgHF44vHD4+DDt7nidz/Tjap9nw2+eYV7H
MeFzZfwRDi8cPswQDi8IIrKFwwsEYUcuc3gA9vC8RuQXfxk2NLZMHXYVt99+
u8v/sQXvz+VvrMvhy96tcczl8M+9IBxeOHxOc3gb0WKr+NnsAH72PNHGnVzQ
BRIOLxw+zBAOLwgihMMLBMFArnP4nTt3Uvfu3V3+jjkgeDkS5PT2PJh90Jv8
PT8/35V/5SqEwwuHFw6fPPx0wkwkwuFzgbszhMMLhw8zhMMLggjh8AJBMJDr
HJ6xYcMGevbZZ/X8Dz6iERvBhDmXRntBhx4xCz766CPfc3INwuGFwwuHTx2S
lcPnynxfOLxw+DBDOLwgiBAOLxAEA8Lh/WHLssz5snmM95tz61yEH4evGVvu
BYktlxUcXmLLZVIOD98rKBvxKrkO0BMybX3YLw9vzePoi7179/b45wgrhMOn
kcOTxJbLNITDC4II4fACQTAgHF6QCjCHX7joXXemx9vDKn1NWcLha6QRnmu9
HL7Yy+H79A0Zh38ywuEPKA7/Fyqf9rv0c/hjDoc/uXIebSsdRfsmq/uKyN3t
+jmp0NUdMFO0MpCPh8Mf3R+RNwaDwwPM4RNNph2QzfcnT54c6rVF4fCpTWcV
ORx+J7evm5x/gvqFcHhBECEcXiAIBoTDC1IBm8ODNYSPw4/w4fALw83hj+4O
NIfnv2vD4WEnsC/AHH7dunU6PoYZ8wLxLzFvgp3P2LFjNc/v1KmTe7xHjx60
YMECmjp1qpbBI94l++r088sZFgiHTz2Hb53v5fAnSDh8piAcXhBECIcXCIIB
4fCCVEA4vHB44fCpA3xtoPzLL7+c1q9fr/dhDm/HoMP43aRJEy13f/jhh939
u3fv1tei/q1atRIOT8LhhcNnH4TDC4II4fACQTAgHF6QCgiHFw4vHD55IC48
5Okou3nz5i5/1zU05vBm/Pg//elPrjzePB8xN5AH9q9Zs6Z+bqCeIRxeOHyY
IRxeEEQIhxcIggHh8LmJaPMB5ga2Da0dv9qGcHjh8MLhU4M+ffrocu+///6E
r0F8TNQXcysGZO8sz3/uuefSUNO6I1Xjj3B44fBhhnB4QRAhHF4gCAaEw+cW
MK835wJjxoyha6+91rWdbdOmjZ73Q7ZnI5ZvLOHwwuGFwycP9M8uXbrU4OOx
gLoOHz5cX4NrzbzAZ6FnP2zYsED4tkv1+CMcXjh8mCEcXhBECIcXCIIB4fC5
B8wFdu3aRT/5yU98/Vtzgv+sRCEcPswcfp9w+HoCyr3qqqt0X0xkfsS8FrzV
HMfZ/p33J7oeUB9I5fgjHD6dHL4qSQ6fQc550koW4kbKi3N9wvkkCeHwgiBC
OLxAEAwIh889YC7w0EMPuTa3o0ePpsrKSn1s5cqVHn/YW7ZsSSjPhDj888/T
Bf0K0zb/RN5PLFjk5fD9SiIcnvl47DwaG7+Zq3v4e2Suj9/g8ChvE9kcfoSb
V+OB0WPN2+U29tnv1KGaw893OfyfFYf/XQ0OXzcuX+LLkR1OrTj8iWoOXzl5
mMuFq6+JtSZg8+qSSIrB4Y/vj8nh900xOXthDB5fXVb1Puc8cPgDbweTw7Mu
fceOHeOez/P6rl276vpChm0C/uqxf9KkSemobp2QyvEnaQ7P/bmI+6l3ra96
zc4/2ccaW6m+uHddy+Lr+D4dDl9gcfgqnRLi8B7OW0WpYLlVPinWOZ56JMzh
rVyT5PDx62wdiVKOcHhB0IBvFMZarLlia9o5SZIkqX4TYhhh3oNvBf4WhB+b
Nm1y58jQZeXnjjkC5Hfwad22bVs9Rj/wwAMJ5RkrPrxinLRdpX977nktK6+e
N47QyZ1TFnr5buMBI3Ry58ueuXbNefIFfYvpsYVLNKf24/D2fNzOH/k2GTBE
n4/zGhVx/ar5e6NiJ+FvLm9jpLy2vRWH74e8Ruk8kFeTgSi/xMMVzHvgdYIm
A4bp5HL+wiFuedgiv4v6FNL8DeVOi1aspk0vP6E5PPjtkQklkTREJ+a8Dp8v
qea5+K15bWEkKY6srynWyeHmzr4t057ycPiKUofD6/ImFupUzamd/Gxuj2Oc
NIeeOEQnXQ+Xgzt8e2upKu8o5PD7qWr127R1+giqnFLi4f5c3r4pxR4ez/eD
Y5VTiiP3OSSSSvS+yqnq2NQBentg6jA6/Jbi8Ef2Vy84RYY/HhszZQ/P66ro
f9OmTaPDhw+7x7ivmmM15NXcn2fNmuXuh387voeNGzfW3w3EQSrHn9pz+O2K
ww+g5v2LFF8d7PbnMwtLIn1yFH174ONunzf7uzkG8VhijhFOn4/0+0iyuX3N
NYHItQNGVB8vstf9qo/z2IBxorExjjljR80x0lPGQO/4cmakvrge99GoSJ1b
PNTD4VkCfyyS4squmZZG1sWq6HgkGV8Fmx+fJGMdzcgrkqAHcDSS4C3hhPdM
V1fAc8xYRD4Z2R474e07R44dd35Xqauqjumt7zoAWTy8qvpYNRPnNQ5ne8Ko
k1mv6jOcdiGdqqx2q4ZweEHQgPcQtlmnnnqqHm9N3SlJkiTVb0IfRLr++uuF
w+cAMP4+88wz+tm3a9fOc8zkB9OnT9fntGjRIqG4VJrDf6sBLVj8Ltln2xwe
80aTw/vJuRobHNvl4Ia+q5+8C5z6iQVLXDl8q17g8GouXTCiBof3y9+d0xoc
3pbJYZ6LZHN4yOFtDo/5ssnhXT5QVHOtIhaH13NryOHzwOEr1ANS877NDof/
ZirL4YtdDu+VwzP3Lda8F3Lt/REu7HL4iSUOhwcvn1DN4TdPZw5/wCOHR1nH
IufXlsObvNqUz6M8zeEjcviaHN6rJ6DvZYpXvu7K2C0Oj3tGPrunOjwexw9M
HVHN4W2RWIY5PIC5O+ZISJgvgYNzbDkA2w0bNrh28EiIJYe+irpjzg9dddT/
sssuy8g9+CHV40+dOHzf/tS8YKDm8NWcN8LhBzzupCgc3pbBV69DjqhetzM5
vMW5a8vheY0vYQ5vjXH2GoBzXU0Oj3vAOAM5/MV5BbTLaV1KDYc3rjOPx5pu
GBw5UQ7v2W9V1DnnpPuOcT+xObznUj85fNT612TzJ8hbL+HwgrBg5MiR7vcx
0xxGkqRcTuxLCN8KQW4APqwx9ubl5UU9B7IwyMFw3urVq/W+WHMI5vBvL3lX
z7VMmPbw38svpmYFNXU4eT7s1UOPrpPq8m+Dg2N94Kn5Cwnat5rDP9pHy+HB
4e08/POvlstznTzn6WOjHFmdqivr7oPDf0qOLj3WDJw58bCI/NxJmo8Xxda9
9dMt4HWD04sdW4G3v6pwBEubHHv4b6YOq8FnPZw2InevkSy7cq2vbnBw5LF5
+pOK41a6Pu02RuzhnfUCZ83A1Ffnazkvpw6GTr2n/GLjGpb7j3Fs708oDr9q
Hm2dNkpx7yHVdfPo1NfU069pT1BdHng8kq7rxCHVHP7QQXcaHQQOjz4GuTvs
xTt16uTaiGPbunVruuaaa/RYjZjv5jjerFkz+vzzz936Q7ce12ANYPHixfV6
D/GQyvGnthz+D9u2q3HCkcM3URye+ey3ixwO36RglE627Qz3Tb3WVlBz7DG5
N/f56lTirhFU835rPdFnnZDHi1jpTM/Y5E322GVyfXv84fGvycDHqG3vQbQb
DaYF2MepVrbw0WTsNRTLTb4bPfeaOulOnWoiwoc9ZZ50ks21q064v0+ePGEk
48Ro9+G39mDeX7y28NzZcSNVeY4whMMLggpzzVWSJEmZS6Z8RxBu4DmDb2N+
DHmY/dzxPvB5kIFh/oB41bzfPMeEyeGPWccUS9K8GvbwsCF355GF1Xqp5py1
hm69Ry80eoKO7Oj58y0OPyTC4X3yiZG3roch73LnwQXVcjpH7u/Yw4PDt86r
9mmn76e4pvzNj8N7yx7hzsdZxgd9gNOKR1gc/jPaPONp2lk6rKas2+Xw1dz5
oJFcWbXBox2u7eXcLoc/dqgGh7f5spOq1w68qSaPr/YxF+HbEyO6+y6HX0Db
Sh9XvJs5/ABjjcHPnp71CZzE53CZrH/A6wUHpoyig2+9RHT4YLWgLKJ0y+Ni
Jji82bfA43v27Onh6ian533g9ZDTIy4b92fsg605dPF5jA8CUjH+2Pkx2M9S
fHt4h8M3GzjUMxY5tjTDXL0dP90gHG+mjuMckw+bdi9eWXmJweFLaqxb+o07
fhy++vcI8tdfqsnhPTzeXPP08H0vz282wODwVM3hXR34RBGPy/tw+MTeUJPz
msnYb5RXxTocireXFBfSaeq9GzVipD54/OjhGnOhuNzd5uI17ivKflt279oO
VPlcXA3h8AKBQCAQCBjMTWLJ5zCfgX2F6bfEPGZuAc3hT/kWLXx3SWSKpuZE
J5w5h2Jlmlf/8oUX6IKCgdSk2NHZ1HNQtdU6nIPV3yXD6JSCIpfX41iTwaP0
luVhDQcM0jabvHX3qXPO71NAo+ctJMVyNYdv03sAndN3MDUZOJKaDBpCZxQW
qTRIpcE6/2ZDHtfXcf6nFxTrbZPBI5z6DRhKZw0aQWcMdMo7vUDNxwc9puXw
ZxQMo+/1G0S/K1uuOTwkhRfn96MWRSWu/vupiuOfptKZ/VXZBWo+XzJc5TdM
54+Espy81fmK+6NMPY9X5eJ8lH1a4XCdTlX7L+xfTAs3orTD2i/9xhljaHfp
UMVHi7RM/cDEIg8n1px9wiA6NnUwHZk6lPaON+TYES59aHwxHZs0hI6WjqS9
E7z+6bbCx9yBb1RS7GfdaqqY8TTtmTSUjkwa7MjiJw2i/eMHuPL3I6WD6NDk
omp990kD6eBUlVepKnfKQEfXfvIgnQ5MGazL3zO+QP0epM4toq0vq/JO7HXk
/orD75z2mKpTiS5n34QCXafDU0rowIuFDk9XdT/4/EC9Pfxika4DjuF+D6j7
xv2iDJTl6imo+qJt9k4ZSfvfmqHKitiaa+VX73vNcuD6hM0pjhw5Qnv27KGx
Y8dSr169dBw2xI+7++67tS15RUWFZw2W6w6b82i8N9NIZvzx8K0I+P7hIxl5
2z74eW1DvVX0h/JtdFF+EZ1fOJQaFwzW3PUs1d+aqL/PGjCYmg5S/Q0yetXn
cKxR30H6OFKLQaOoueLOzQaqYwXO37qvRvow+iuPSRhnGg8eqsca7MOYd2bB
IGqm8m9WPJLOiPjp4D7fdNBInZfJ75Ev0ukDh+j8dRkYEwurE/5uVuLUg6/3
rglgrHlCj3GcH/Lh8poUOWMZkubwqm6t+wygPbqxj9GJE0dV2x2PtHNN+bcZ
K9DkmCcMost7jx0/YjxgIw/1++jxY+410decquXmTgZcH+dv1A/XHj16tLo/
GLo1zhrPt2hwideXdtWxk778HPeGd8cXxvcNZR2viugSWF2Odfa1PQiKOVF9
X6jbieMn3d9YbzhhlId82Vdl0HRpBAKBQCAQ1D9YflebOTQD8wqbG2CewzGt
4dOuOhNnAzn8DpUefP45avXoo3Ref8WtC0vonCI1Dy4cQucNLKHzFP/9Xv8C
Oq9PHn2n/0A6K68/NRtQoo837zuQLlQc+rt5BXRR/0I6v28BnV1QSI37DaAz
1e8W6vzz8wfSD3v3pefema/9MX2lUtvf9qEL+w1RPH4QtRwwUF3bX/1doPNH
mfBNjTKa5jn7LuidRxep/L7Tpx+dreaxzfsWOXVQvPwcdd0Fqrzv9SuiC/IU
B8gfRK0fHUhPvb1Y2wmsVemH//lfjiy+dz6dq649W3EF5HGemoPjb+j6X6ju
5fxH+6j6qHwKFFdQ5Z6r5vfN84pVvoPoon7F6hx1TN1P87wBiisMohYlI6hp
3yHUplcBLV6/gfScdeuXtP61/9E247sUBwaX/2bKCNo55XHaVvqkti3H9ptJ
wzXvxnbHlOG0bepI2lL6mPYBDzn3nokjFX9Webw4jLZPHqF9wW+d9rjm72tf
ep7oiGI+J9Tce+sXtG7GWO3XbtuUx2j79Mfoa3X+PsWzYSP/zeTBqh5DaUfp
CJX/SNo6Q5UxQ/2epsp+aTjtUvwb/vd2qbJR7rbpKp/pT+hzvy4dTrunD6O1
qlw6Drn/ATq8ahGtLR2tz9uh6vfN5KG0c2IJ7Zqm7kPV8evJo2jP9NFq/5NU
OeUJqpw0ig6qOu0uxT2qc6Y/SZvVOdtnPKV/71LlVE5XSR3bOXUUfTVZ1X/+
q869uS+3973mflKfXDianpSuXoSrMq/gv/36JAAuE0QkO/6Y/M68b/gNsM83
bemxWvPW5m30w0f60sWqL56f7/TN8xWnRZ/+Tp8CulCNL9C1Rx/EGh3GjgsU
74XODfbhOsRew1h0bp/+Wp6v+29fZ0xw+q8aS/LVGKXGgjP79tN9HPo5Fw4Y
rI9fpPp1a5TXe6DO/2y1v0l+MbVQ5SHPC9Q4dsGj/fXvsweqMapwsE7nqDEQ
65QXPtpPJ9QX+5qoOrQoKKFm+YV0Xu/+9J1HnXTBowN0uc0Khuh0TsFgPeac
q66Fbw0cP1fVublK5xWNUOUP1m3yIzU+feN9GprL84DOvgdN2H8fqToR8Yty
Uq8FnDyyV12oxpKqI47t+XEm1+q/o+rvE8ecP3CcjpGHDB9D2Sq3E4edpI8d
rU4njyATpy8fP6x+HnLy5b5T5QjEhxYNoNMUh39s5OPOcX6NwKOxvoC8Dx+I
1OWEXnPQ6wWq/jr/Y/vVeYec845X9y1nTQF6/Icc3yEUqa/ZPseOOPmiHPgz
OVl9/KQhp9cc37h1rNlhvQu6KAKBQCAQCHIbycyhGQUFBZq3Q/6OeQbscTHX
uPTvOtKkKVMjmTibR/r2p7+/ths1veRH1KB9O2r8TzdTh/y+2v9xWzUXbtL9
bmrQ4fvqWAdq0Ko1nfr3P6XvKx58sZpL45xz77mPGrRrr481aH0xNbjk+/p4
GzU3RurwaJ66/hJq0LIVXfx3f0dX3tiN3lm3kTr+x6PU+uE8uiSvPzVo006l
ttSgrUoXt6WGt3Sn1mqO3EaV8YNH83WZDVpd7JzXQdXz/11H33+0QM23+1O7
vn11nRv8QJXxgx9Qg+/j+LV0xW/z6Pl5Zdr/08JPPqVTLmyl8lDXt/uhupcf
04975av760dtVP6XPZLv7G+rjrdV99LuEmr9b/dQu7x8atW7H/3w4UJq8Pc3
qmM/cOrQ9vvU9J9v17L9lvn9qX2vQlXHG+hHP7uOuql2v+nKjvTbf7yKvnj5
aSr//Rja8NIYeuGhO+iWdudRtw7fpa6XfJd+3v482vCHcVrnHsf/OPJRurnD
eXTD97+rE46XjcqnzdPGaBn736Y/Qz9vey7d2P57dH2HlnT1JW3ps1WrHFn1
rrW0ataL1Oufu9DPv/896tbuHLq1w9k0/sE7aPPvn6Xyl5+h9S89Q//9m3+l
f+rwHera4Vz6+Q/Oofx/vpK++MMztO33Y6m89Gl64de/oNvat6Sb2n1H5/Pz
dmfT56qO62eMpi9+P47WfryU/un6a6jblT+iGy65UNXxAvrjqP5UofKHLv9f
1X38c7umev9NbdQ9tP4uPXv/L2jTjP+hDVOepi9njKG+N19B/3jJ+dS1/Xfo
5vbfpWce/Bfa+NJz6vhoWj99LD3/m7t0/W7o2I66XXsV9Xr0YUO2R9r+mt/9
TMvhTfl6eXk5LVmyRPfbDRs2uPuBbNKzTXb84XaZOnWqHnuQYDsAfwF4Xm3a
tKHevXt7+D1sCrp0vYkuufo61f/VOPP9H9OlffKpfb9+ug+2vfcB1e9/rPqe
6pvtMRb9iNr2/DV1UP0fvir/rldfZ1xA38QY1LYDNf35Lap/56sxoi916DVA
jQk3ONdijGl/CTW79RY1hmEdUZWh+PqZ/3iH6veqf7dUeVz8Azq90zX0Y8XD
2/Qropbg879UdbjkEud6jBHqd9s+vel7avyBH762vdU4d4mqe7t2unyMg+f1
7KnLb9VvgKqDqmN7lf/F6tqLVT7tfkRndr9Lj5FYM2j3sBqDOv19ZAxS9Wz3
Yz3OdejVX8e8aKd4fTM1LmIc/n9d1TjTFb4XukRa0PHOtnrNSi0bRpvz1gPF
l/Fd6HLj9dS5S2e68bqr6MuV76n98FW5m+jgDhr06K/p5yrfm6+7gW7ufC29
+sJ4xZ33Ozo/h3ZSySMP0E3XdVb530A3qPMKVf+ko3vV8a/V8W00e8IY6nr1
lXTjDZ3pumt/Rv90w8/U9dsVx96ly9iwcjndcPX/o27dblR1uZq6dvmZHlfG
lvSlM9R7N7KkhLpco/K+4Sa6+Yau9M/q+KaPy1TeFSqPHVoXqN8jv6ZuN16r
yr+abunaheZO/G/nGMrZ9zW9NuF5uqnLVXTTDWosvuFqGtDn1+rYNiePQ1t1
ebeoNux63fV0Y5fr6BY1pmnuv3+nuo/t9LePltDPVf7X3XAtdbn+Ov0d/fiD
Dz3vLPTomzZtqvsKYlUk4ltWIBAIBAJBeJHMHJq5BcvdzQT/WdBVLBk6xCM7
vKHrP9K3TjmDGjQ8kxo0Op3+dWA/+uOWCpq95Wt6ffPXdGfhIGpwekN9Lbbf
v/pqemPDRvq/iq302uYtNHTma9TgDHX9qac4qWFDmlexjV7f9o1O+I19DdT8
/ZTTVB1OOY3+b9mH9M6GTTSn4mt6U+XR4NSGen+DBur6M8+k2wqL9DEklIUy
dR1OQz3PoIuuvl7L7OZs3UZ/3PY1/UuBmv82RPmqjg0b0fcUFyj7ajOt3bef
9qr2WLh8mXP96ainSt9uquPAzd1cQW9s2UoL15erctV87DSUoepx2un09Guz
VN026zq889VOuuhnXdW1jVQ91T2c2YS698mj17dW0KytX9Nb5buo1VXdVP0b
UsNvnULfVu19Y8cfEG37G9H6FUSbPqWn8/+Dmqr9OIa5amOVaPNftf872vwp
fTBzMp2l9p32rQbUMHL8wz9MVMc+I/pqDdHWtfr6hpEEmdWiMuhVqLnj0Z10
ZNuXdN2Vl9GZ6hjyaaLSmN5q7rpJlbHxE6ItX9Kwh/9DHzvrW7i+Af38H35A
VV99outHG/9Kj//nb3UZuPZ0lfCbdm0kqvhCX//Rwrf1u4Q6fjtSztI/lKpj
n6vrVR23faHr3ThyDNsn8/oQrVPHy1UeW/9Kt/30R/r+GyF/lc/jeYoDrFVt
8NWn+h6fyvutPn4KyjmlgeIh12g93OMnHd1czJfZ3jzTHB5c/cEHH9Q+7Gxb
eNi7w15+7dq1nutZ/h5UXp8sh2e9A+jOs19kbhOOdwR+ye2Ac+FH+VunnuaM
AQ2/TQ2aNqe3vvqK5mzZTG9+vZWenDlLjU1n6b7d4NTT9Vj15Kuz6fWKLfSm
GgMWqr7eoHEz1b/VMeRzVmO6M7+v6tsYx7bQO+U76KLONzpjQOT4HYrfz966
mV5Vffi19ZvprgGDdb/W5Zx2Jl3ys+vorY0VNHPTVnq1fBsNnjlHjRuq/Ian
OuWo33/cUk6ztm2lmdu36TGzwZkq/4anOePdt8+g4XP+j2ZWbKZXNm2muWq8
a9Do2079MY6ocjDOvfKVGge37KK3K3bQxZ07q2tPd8apM5pRq87Xq7orXlyx
k17fso3uKhio9uMeVFuqvvMt1T8cOPbm7y5ZVGPc5zZm/qn3n3YKnaquPVv9
nja4N33x8gv0t5efp89f+V+9dnie2s+puMct9Pn08bTuD+Ppiz/8D/28XXP6
rtp/jkrnq3TzDy+iT3//P/TFS8/S314dR4Pvuo5aRMYO5H+BSp/84Tn668vP
0mcvP0czBvfS12KMaa7Sd1QqHdKb+vbopv9+6F976DGsaSShjFdLfkvrZ46l
dTOfpc9nvkDXX/Idfaw517H7NbTulXG07vdj9Vpj/zuu1/vPjpzTtcPZtGbm
OFW/Z1T6b12H8yP3gOPnqvT57FJ1jy/QulfH6zY5OzJGnRYZi+bNm+e+30hm
G4suvUAgEAgEAp4XlJWV+R7nuRhkLJgTFxUVeWPxKKxZs0bPK+BrZ+nSpW4c
q3Hj1Dxn3TqPfPDTTz+nBQvK6N2l71HZe+/Rpxs30B46qXVbobX4xdat9O4H
H1DZ4iX6nI9U3tBIhE1mpUpbDxzQ1y1e8q46vkT/xrX7VYLvJdjbL1B10MfU
PS15bxntqNyvNRrhxwp5LX7/fXpv+Qc0f2GZPvfTTZv0dSgDeX2wapUuf/GS
pdqm/8/r1uvrcM4h1HFzOc17dxHNW1RG85c4x3HdoRMn9Ox2x66dun4oe5Gq
33y1PRwp+2CkjHmLVR2Xv6+Pv7VwIe06eEgf2xs5/vFfPtdlIy1avow+Ly/X
x/ZH0odrPnXqWLaIlr+3lD7500eqAQ86rXh4H23buI6WL1pI7y1eREtVXd9b
vNDRW4Ue6HFV1jfbaemiBbRkcZlO+H1413Z9rdYXPXqQ3ls43zm2+F2ddn9T
ScePRHRDVVl/XvkxfaDab0nZfH3ulr8p/n5E1eHQXv28Kzas08eRN9Lna1ao
S486fvGOH6Ut6/5GH6h3ZknZQnW8jJaVLXDK1nqyR2nfbtWOqvz3liyO1LGM
9m3/OqK/Cl3VQ7R88Xx9j0goq/zLv6mG3ufoqKo6fvnnlVQ27y19fNm7i2nj
l391dGQjdrNff7WWPnjvXdWOC3VZq6BrEAHeV9if473OhC49wHJmxFeDXzcz
Dq/JWU0uD5m0bSceVNRm/ME9wkedbRfA6xvQS1i2bJkegxBLHvnee++9ri97
Phf+AbA2A1ufd9S49fa7S3XfQ//Htvyb3bp/IjYm+mfZe8tp5+HDevzh/lv2
/of0jqozjr+t3sv127frfonjGCfeW/lnKlPjBxLGmy82V7jH8PZ9vqlCl40x
COPc+ytWu+MY6lGx/yDNU2PYQvXuYwzAb75+X6QcjH2L3lsSqeN7tPXQQT0G
HiJzHHwvMtYup8/UGIK8d1apbqq2H/55jR6DcB/vLFxMqz7/wq0DEsYcjD0L
Vd9ZpMaSBe/MizSik9A3MO6zPghzS35mx6qOqrIXU9nSRbRyyXz6v5KH6a/P
DqJd056inVOepK+nPkYfP9aL5hXcR/MK76d3S35Da57qT1smjKSdpU/Q1imj
6IPh/0Fv9P03envgv9P8ogdoYdG/O/Yw0x+nPdOfoDVPPkpvD7iX3hx4H70x
oCf9sf8vtX3OjikjacvE4bT+f4fSO0X309yCe3R6Q13/+eQnqOjWqzWX7tXj
n+iVIQ/T64MfojeL71f1uI/KJ5bQ9slDaM+Mx6hi8jBaPuphmj/ofpXPfaoO
/06fPNVb2yJtV8dgj/SXp/vSH1Ud56vy3+5/j7qnh1XdR2hboq+nDKNNE4fR
W/1+Se+oe0CaV3Av7Xjpd/oetk4aRl9NGkGz+t9HpcW96L2Z0/U4uHfvfo/e
DcYgxIvEO432FggEAoFAkLvAHAEyPXCBOXPm1Dhu8gDElcb8AVzCtrs1ZXz4
jfk2+5A27XX98rZ5ht/fzGNsneJEYMsibftZP3vaaNyH9RdTocdotqHr54gS
l5ceOnTIPZ/XVMxro/pfqgeY7We2lZ8vxFhtCZ129p1lthH7l7J9t5nvU7T3
yK5DNPtxLofLYO6cCcyePdvjex7y9pdeeknzXnDRSZMm0UMPPeRyesQIff31
1wOvb1uX8ae0tNS91j7X3I+1Rub88AXIvgPM87jv2GOA+a4xEmlLc3wx/RPE
QybWhRIt3zO2cxsY/t6i5aXdQuqo5/i/2ndkj7bjOaw4L9J+xV0PTB5K+ybC
n+UQ/ZvTQcV7D08dro/hN5J5LnxbIh1WHBp/V04aTHunDtWxJ/Eb++CrEufv
UefBB8iuCcW0e1Ix7VDcHD4+Rt52lZbZ973jRvqb4tvbp5RoHx17p6oyp5Zo
f5mH1d9IeyYWq3wH0f4pg/Vv+Mfc92Kx9pV5aPJgfQ5+w1co/tb7SofSkWm4
h0H6N7bwp8n+Ow9OdfLWvkZLhys+/yRt+MPzRBs/03byfu/gz372M1cOH1S9
GoFAIBAIBOkH5rQs3youLo56HuYSmGeDx0DGxeB5hM0hOU/wC0aNuD0UnUPx
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
7Rj199p2nKMrx6qxwf16kguQPPvElD0nu46fvyf2vrm5+bNN2j1GGcde/cR5
JI9h9rokJ7yv0V2P6+vrXd9pXxu3S997zrP6rfu2uYbkTaevoq9/FBXDVw5A
vS7fJeeVMq08jpxTHyMQW+dXZZwxGsnn4FUfW5B7su6zevR8l/FR74/+SJtK
b3+CS1Zziea+yD2T+Ukrp6XyWLKOeXKLxJjHq8+z1D/yXTFbtyV1kNkcsgDw
v9taO6f3waVekvpJrUU/rq+bueXzfI8/xzXUE2s/Pj7u6jzJg+/fu6vx8GOe
YvqYq860mq9tX/0p+fm1j/S7V12h1ufr1/4R47x/W/vIc4lja5z6y8vLu/3M
1Ov09PS0O/+Hh4ddWVY59zWN+9wBq/18pX7M3lZS576vzLf6YdSZ34xzcY/l
tlqDctzHIa8JXJLcExl7NcsJq5/JKxNTnkbqFZV3NbYxprwT2wPAuRtj22Pz
+MY50Vb/0+v9o54rPp7LuP503358btYPn778Hkes6kWzudpX11LH3hdf1//N
znsVG1fuwZjHn3X9ZuU8jufelyc4lu04t8/susZyrv18R2x2iuPK7Z6bxepb
76NZfA+sjWuAztqazdFxerOcuqKcAfgpTvn91eOhf/1u7P+3Wud8n2yzWluu
5+R3qzaFfedace4qbl7FwL2Pfmv/s330v4/zp9fvh5T/2GazisG2tj20veMr
/Euedr3HUm697Hh1yHjRQ2P4MVcCLtn4mTm2Jx7SfsbpbOXrAQCfp+fr1hxt
yaX/zvjyXOoBx5zHIduey3V+1Gr8BK+UBQAA8Jkqhq85tzIHffr/xCIAAABw
Pnr+293d3a/b29vdfEHidwAAADhP4xh1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4L3fRZtCfA==
    "], {{0, 254.05786873676783`}, {504.6149400696826, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9672, 143.9672},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{504.6149400696826, 254.05786873676783`},
  PlotRange->{{0, 504.6149400696826}, {0, 254.05786873676783`}}]], "Input",Exp\
ressionUUID->"3509fc6a-b147-4128-9da5-6236f0c3c644"],

Cell[BoxData[{
 RowBox[{"Bar0", ",", "0.5205479452054794"}], "\n", 
 RowBox[{"Bar1", ",", "0.4904109589041096"}], "\n", 
 RowBox[{"Bar2", ",", "0.5136986301369864"}], "\n", 
 RowBox[{"Bar3", ",", "0.7315068493150686"}], "\n", 
 RowBox[{"Bar4", ",", "0.7027397260273974"}], "\n", 
 RowBox[{"Bar5", ",", "0.7452054794520548"}]}], "Input",
 CellChangeTimes->{{3.888063641575199*^9, 
  3.888063641576591*^9}},ExpressionUUID->"35407e4d-9e4a-47cf-995d-\
7331c97daf00"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1919., 1070.5},
WindowMargins->{{Automatic, 1296.5}, {Automatic, 9}},
DockedCells->{},
Magnification:>0.6 Inherited,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"c8f39338-3cc0-4b8f-b215-ea4a2e54ef0b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 229, 4, 85, "Title",ExpressionUUID->"6a351531-7c2c-4dd5-99dc-e192acc1ba92"],
Cell[812, 28, 286, 5, 29, "Text",ExpressionUUID->"be34f21d-c417-40e0-b40e-fa5779bbaeee"],
Cell[1101, 35, 317, 5, 43, "Text",ExpressionUUID->"e4b10c00-f68c-4cea-a90b-7f7d14525413"],
Cell[1421, 42, 774, 13, 56, "Input",ExpressionUUID->"63043d13-c631-4c64-a1f3-4d5e3d81cdba"],
Cell[2198, 57, 390, 6, 43, "Text",ExpressionUUID->"039c7b98-676e-46c5-b560-f214eeca441a"],
Cell[2591, 65, 2171, 34, 56, "Input",ExpressionUUID->"ab24de79-8a02-44ca-91e2-5817b79567a9"],
Cell[4765, 101, 513, 8, 43, "Text",ExpressionUUID->"c0d95ded-6f94-494d-abf7-99be52f06bb6"],
Cell[5281, 111, 1294, 18, 36, "Input",ExpressionUUID->"2d0c6564-c1be-4d61-820b-80de067a82ea"],
Cell[6578, 131, 423, 14, 83, "Text",ExpressionUUID->"4edce849-0a0d-4cf7-b454-20af9325cb40"],
Cell[CellGroupData[{
Cell[7026, 149, 260, 4, 62, "Chapter",ExpressionUUID->"948a06c5-dcbd-4d6f-a2df-96568eee4c9e"],
Cell[CellGroupData[{
Cell[7311, 157, 2101, 53, 87, "Input",ExpressionUUID->"16d47ef8-8082-427b-8a1f-f8ea487010a3"],
Cell[9415, 212, 15976, 393, 99, "Output",ExpressionUUID->"69450f79-344d-4788-b6a1-3d270e3c78df"]
}, Open  ]],
Cell[25406, 608, 62295, 1027, 320, "Text",ExpressionUUID->"b5ed7ab4-1dc0-4d76-97c7-874dba83b9fd"],
Cell[87704, 1637, 1366, 33, 168, "Input",ExpressionUUID->"49d992af-44c2-4b2e-a479-ca9b55a0a68a"],
Cell[CellGroupData[{
Cell[89095, 1674, 179, 3, 61, "Section",ExpressionUUID->"0062020b-5bee-472e-b8da-0f35cf8c78e5"],
Cell[89277, 1679, 6695, 140, 628, "Input",ExpressionUUID->"ec269090-f4a9-4be6-a341-ab4f93be2dc2"]
}, Closed]],
Cell[CellGroupData[{
Cell[96009, 1824, 326, 5, 49, "Section",ExpressionUUID->"20e3737a-32fd-4976-883e-9229a78cfdf9"],
Cell[96338, 1831, 1418, 35, 77, "Input",ExpressionUUID->"82236c1e-d368-4e6b-b8fd-29507f029625"],
Cell[97759, 1868, 2465, 66, 112, "Input",ExpressionUUID->"16dcfbba-7107-45cf-b930-8c097cc217ab"],
Cell[100227, 1936, 2379, 71, 113, "Input",ExpressionUUID->"2176bd4e-a658-4633-b6ec-1def23f73b18"],
Cell[102609, 2009, 2946, 74, 192, "Input",ExpressionUUID->"4d2f8a74-1a96-48a6-af1e-c9362da879e0"],
Cell[CellGroupData[{
Cell[105580, 2087, 719, 16, 56, "Input",ExpressionUUID->"88959e64-6c55-4eb9-998a-d10e6f703937"],
Cell[106302, 2105, 26007, 536, 278, "Output",ExpressionUUID->"bd042273-be1a-4bbb-844e-e7a8ad558904"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[132358, 2647, 202, 4, 49, "Section",ExpressionUUID->"05d3b36b-34a8-4083-9724-f75f2dce6fee"],
Cell[132563, 2653, 853, 19, 93, "Input",ExpressionUUID->"711b5b2e-d87e-4f11-a17b-45b39380bf7f"],
Cell[133419, 2674, 360, 7, 36, "Input",ExpressionUUID->"bd658945-6ec9-4d40-a233-f00e73f9643f"],
Cell[CellGroupData[{
Cell[133804, 2685, 584, 14, 36, "Input",ExpressionUUID->"1bd3b7b1-14f2-4604-9aca-d308ff29bec2"],
Cell[134391, 2701, 4330, 121, 85, "Output",ExpressionUUID->"7241a1e4-3672-47a7-8fc4-ebf7576c4575"]
}, Open  ]],
Cell[138736, 2825, 1261, 34, 78, "Input",ExpressionUUID->"6327bdce-c8ba-468b-947c-00ec39e62b43"],
Cell[140000, 2861, 293, 5, 43, "Text",ExpressionUUID->"6b8e9bb8-490b-4f27-bf02-9d4e2f8d6546"],
Cell[CellGroupData[{
Cell[140318, 2870, 665, 12, 36, "Input",ExpressionUUID->"1fd6d43b-03b2-4128-8af2-12539c57124e"],
Cell[140986, 2884, 1342, 19, 49, "Output",ExpressionUUID->"c61fafa7-57cd-4d87-813f-34aafbbd29c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142365, 2908, 674, 11, 44, "Subsection",ExpressionUUID->"9f7f34aa-d76b-405f-b3b9-543cafdae9c0"],
Cell[CellGroupData[{
Cell[143064, 2923, 244, 5, 29, "Subsubsection",ExpressionUUID->"5a1839d8-d8fe-446c-b866-acee0f68b45d"],
Cell[CellGroupData[{
Cell[143333, 2932, 962, 19, 56, "Input",ExpressionUUID->"c382d244-5a5a-414f-b372-406726c54254"],
Cell[144298, 2953, 2153, 33, 49, "Output",ExpressionUUID->"a50c4655-da49-4a23-a8d2-f50b43cf7c66"],
Cell[146454, 2988, 1785, 25, 49, "Output",ExpressionUUID->"daf0f523-5f07-4853-8c91-0cfee1486f60"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[148288, 3019, 630, 10, 29, "Subsubsection",ExpressionUUID->"282dbec4-7e65-4f88-9d32-05e607fd2abe"],
Cell[148921, 3031, 394, 7, 43, "Text",ExpressionUUID->"18874d36-987b-4f08-acb4-48c920d8df27"],
Cell[CellGroupData[{
Cell[149340, 3042, 465, 12, 36, "Input",ExpressionUUID->"cd519b71-3f30-4f04-ac09-1c1a07530394"],
Cell[149808, 3056, 936, 30, 79, "Output",ExpressionUUID->"5eb7ac6d-e6d8-4c07-be32-9bf2907af10c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150781, 3091, 364, 10, 36, "Input",ExpressionUUID->"94b6295e-50e5-4756-af25-6204b118cfe3"],
Cell[151148, 3103, 514, 11, 54, "Output",ExpressionUUID->"d4615c21-008e-4f7c-ba40-4c0166ee5a7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151699, 3119, 392, 10, 36, "Input",ExpressionUUID->"7d1af2f6-ba1b-4f97-8f72-f8915e0423e5"],
Cell[152094, 3131, 555, 19, 54, "Output",ExpressionUUID->"96204a9e-5d54-408a-a6c1-e1b08c31c642"]
}, Open  ]],
Cell[152664, 3153, 2782, 97, 98, "Input",ExpressionUUID->"325c7388-02f2-4c2d-ba35-bed3f789c701"],
Cell[155449, 3252, 17457, 427, 1141, "Input",ExpressionUUID->"c0e4ce01-252c-4974-ac55-eea003f4ee27"],
Cell[172909, 3681, 3184, 81, 162, "Input",ExpressionUUID->"071b52bd-ba4e-4753-aca6-9520003427a5"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176154, 3769, 277, 4, 61, "Section",ExpressionUUID->"d7b6c8d1-5e1c-45cd-be97-644113050a76"],
Cell[176434, 3775, 14166, 316, 1867, "Input",ExpressionUUID->"c4a3cb4a-a0d4-470b-87d0-e1b24e507352"],
Cell[190603, 4093, 208, 5, 36, "Input",ExpressionUUID->"bc6e865e-ed99-420e-977f-8a4eb3277fb6"],
Cell[190814, 4100, 1293, 31, 245, "Input",ExpressionUUID->"82d3a5fa-5a53-4d7b-af03-70a66520c5e5"],
Cell[192110, 4133, 636, 17, 75, "Input",ExpressionUUID->"d21073f7-5819-46dc-ae81-5b6eaef908dc"],
Cell[CellGroupData[{
Cell[192771, 4154, 366, 9, 49, "Input",ExpressionUUID->"dfb750ad-82d2-4251-b672-2327eccf1ac2"],
Cell[193140, 4165, 4486, 107, 91, "Output",ExpressionUUID->"9e8ceb3d-c726-459b-8696-1ca44641862a"]
}, Open  ]],
Cell[197641, 4275, 2170, 61, 208, "Input",ExpressionUUID->"2f7da0a9-248b-456b-96a7-63ac1450d32a"],
Cell[199814, 4338, 353, 8, 36, "Input",ExpressionUUID->"d354560e-cb6b-442b-932a-e6c80581d941"],
Cell[CellGroupData[{
Cell[200192, 4350, 215, 4, 36, "Input",ExpressionUUID->"cd4f7cdb-3f1a-47b1-8cf8-66db066eb228"],
Cell[200410, 4356, 2543, 67, 59, "Output",ExpressionUUID->"061073b4-fb6c-4182-a7a1-f864df5e8acf"]
}, Open  ]],
Cell[202968, 4426, 2105, 56, 93, "Input",ExpressionUUID->"7abd38d5-38fb-4f0b-af41-da92cd72926a"],
Cell[205076, 4484, 1065, 27, 36, "Input",ExpressionUUID->"1c277dbd-3726-4de6-a596-dda876c89355"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206190, 4517, 156, 3, 62, "Chapter",ExpressionUUID->"cd8db350-814d-43ed-aab0-4922f2a80307"],
Cell[206349, 4522, 178445, 2929, 250, "Input",ExpressionUUID->"3509fc6a-b147-4128-9da5-6236f0c3c644"],
Cell[384797, 7453, 462, 9, 131, "Input",ExpressionUUID->"35407e4d-9e4a-47cf-995d-7331c97daf00"]
}, Open  ]]
}, Open  ]]
}
]
*)

